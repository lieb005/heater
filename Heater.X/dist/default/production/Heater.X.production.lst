

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Oct 24 08:24:42 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           	psect	idataCOMRAM
    65  0024D8                     __pidataCOMRAM:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _cur_number
    69  0024D8  DB                 	db	low _temp_want
    70  0024D9  00                 	db	high _temp_want
    71                           
    72                           	psect	idataBANK0
    73  0024DA                     __pidataBANK0:
    74                           	opt stack 0
    75                           
    76                           ;initializer for _climate_control
    77  0024DA  02                 	db	2
    78                           
    79                           ;initializer for _heat_mode
    80  0024DB  03                 	db	3
    81                           
    82                           	psect	smallconst
    83  000800                     __psmallconst:
    84                           	opt stack 0
    85  000800  00                 	db	0
    86  000801                     _font:
    87                           	opt stack 0
    88  000801  3F                 	db	63
    89  000802  06                 	db	6
    90  000803  5B                 	db	91
    91  000804  4F                 	db	79
    92  000805  66                 	db	102
    93  000806  6D                 	db	109
    94  000807  7D                 	db	125
    95  000808  07                 	db	7
    96  000809  7F                 	db	127
    97  00080A  67                 	db	103
    98  00080B                     __end_of_font:
    99                           	opt stack 0
   100  00080B                     log@coeff:
   101                           	opt stack 0
   102  00080B  00                 	db	0
   103  00080C  00                 	db	0
   104  00080D  00                 	db	0
   105  00080E  00                 	db	0
   106  00080F  80                 	db	128
   107  000810  3F                 	db	63
   108  000811  F0                 	db	240
   109  000812  FF                 	db	255
   110  000813  BE                 	db	190
   111  000814  E2                 	db	226
   112  000815  A9                 	db	169
   113  000816  3E                 	db	62
   114  000817  83                 	db	131
   115  000818  76                 	db	118
   116  000819  BE                 	db	190
   117  00081A  AE                 	db	174
   118  00081B  2B                 	db	43
   119  00081C  3E                 	db	62
   120  00081D  3C                 	db	60
   121  00081E  C3                 	db	195
   122  00081F  BD                 	db	189
   123  000820  D2                 	db	210
   124  000821  13                 	db	19
   125  000822  3D                 	db	61
   126  000823  78                 	db	120
   127  000824  D3                 	db	211
   128  000825  BB                 	db	187
   129  000826                     __end_oflog@coeff:
   130                           	opt stack 0
   131  000826  00                 	db	0	; dummy byte at the end
   132  0000                     
   133                           	psect	nvBANK0
   134  0000D7                     __pnvBANK0:
   135                           	opt stack 0
   136  0000D7                     _time:
   137                           	opt stack 0
   138  0000D7                     	ds	4
   139  0000DB                     _temp_want:
   140                           	opt stack 0
   141  0000DB                     	ds	1
   142  0000                     _ADRES	set	4035
   143  0000                     _TMR0	set	4054
   144  0000                     _TMR1	set	4046
   145  0000                     _EEADR	set	4009
   146  0000                     _EECON2	set	4007
   147  0000                     _EEDATA	set	4008
   148  0000                     _PORTBbits	set	3969
   149  0000                     _PR2	set	4043
   150  0000                     _TMR2	set	4044
   151  0000                     _ACQT0	set	32259
   152  0000                     _ACQT1	set	32260
   153  0000                     _ACQT2	set	32261
   154  0000                     _ADCS0	set	32256
   155  0000                     _ADCS1	set	32257
   156  0000                     _ADCS2	set	32258
   157  0000                     _ADIE	set	31982
   158  0000                     _ADIF	set	31990
   159  0000                     _ADIP	set	31998
   160  0000                     _ADON	set	32272
   161  0000                     _CFGS	set	32054
   162  0000                     _CHS0	set	32274
   163  0000                     _CHS1	set	32275
   164  0000                     _CHS2	set	32276
   165  0000                     _CHS3	set	32277
   166  0000                     _EEIE	set	32004
   167  0000                     _EEIF	set	32012
   168  0000                     _EEIP	set	32020
   169  0000                     _EEPGD	set	32055
   170  0000                     _FREE	set	32052
   171  0000                     _GIE	set	32663
   172  0000                     _GIEH	set	32663
   173  0000                     _GIEL	set	32662
   174  0000                     _GO	set	32273
   175  0000                     _INTSRC	set	31967
   176  0000                     _IPEN	set	32391
   177  0000                     _IRCF0	set	32412
   178  0000                     _IRCF1	set	32413
   179  0000                     _IRCF2	set	32414
   180  0000                     _LATA2	set	31818
   181  0000                     _LATA3	set	31819
   182  0000                     _LATA4	set	31820
   183  0000                     _LATA5	set	31821
   184  0000                     _LATA6	set	31822
   185  0000                     _LATB0	set	31824
   186  0000                     _LATB1	set	31825
   187  0000                     _LATB2	set	31826
   188  0000                     _LATB3	set	31827
   189  0000                     _LATB4	set	31828
   190  0000                     _LATB5	set	31829
   191  0000                     _LATC0	set	31832
   192  0000                     _LATC1	set	31833
   193  0000                     _LATC2	set	31834
   194  0000                     _PCFG0	set	32264
   195  0000                     _PCFG1	set	32265
   196  0000                     _PCFG2	set	32266
   197  0000                     _PCFG3	set	32267
   198  0000                     _PSA	set	32427
   199  0000                     _RD	set	32048
   200  0000                     _SCS0	set	32408
   201  0000                     _SCS1	set	32409
   202  0000                     _SWDTEN	set	32392
   203  0000                     _T08BIT	set	32430
   204  0000                     _T0CS	set	32429
   205  0000                     _T0IE	set	32661
   206  0000                     _T0IF	set	32658
   207  0000                     _T0IP	set	32650
   208  0000                     _T0PS0	set	32424
   209  0000                     _T0PS1	set	32425
   210  0000                     _T0PS2	set	32426
   211  0000                     _T1CKPS0	set	32364
   212  0000                     _T1CKPS1	set	32365
   213  0000                     _T1RD16	set	32367
   214  0000                     _T1RUN	set	32366
   215  0000                     _T2CKPS0	set	32336
   216  0000                     _T2CKPS1	set	32337
   217  0000                     _T2OUTPS0	set	32339
   218  0000                     _T2OUTPS1	set	32340
   219  0000                     _T2OUTPS2	set	32341
   220  0000                     _T2OUTPS3	set	32342
   221  0000                     _TMR0IE	set	32661
   222  0000                     _TMR0IF	set	32658
   223  0000                     _TMR0ON	set	32431
   224  0000                     _TMR1CS	set	32361
   225  0000                     _TMR1IE	set	31976
   226  0000                     _TMR1IF	set	31984
   227  0000                     _TMR1IP	set	31992
   228  0000                     _TMR1ON	set	32360
   229  0000                     _TMR2IE	set	31977
   230  0000                     _TMR2IF	set	31985
   231  0000                     _TMR2IP	set	31993
   232  0000                     _TMR2ON	set	32338
   233  0000                     _TRISA0	set	31888
   234  0000                     _TRISA2	set	31890
   235  0000                     _TRISA3	set	31891
   236  0000                     _TRISA4	set	31892
   237  0000                     _TRISA5	set	31893
   238  0000                     _TRISA6	set	31894
   239  0000                     _TRISB0	set	31896
   240  0000                     _TRISB1	set	31897
   241  0000                     _TRISB2	set	31898
   242  0000                     _TRISB3	set	31899
   243  0000                     _TRISB4	set	31900
   244  0000                     _TRISB5	set	31901
   245  0000                     _TRISC0	set	31904
   246  0000                     _TRISC1	set	31905
   247  0000                     _TRISC2	set	31906
   248  0000                     _WR	set	32049
   249  0000                     _WREN	set	32050
   250  0000                     _WRERR	set	32051
   251  0000                     _nRBPU	set	32655
   252                           
   253                           ; #config settings
   254  0000                     
   255                           	psect	cinit
   256  002222                     __pcinit:
   257                           	opt stack 0
   258  002222                     start_initialization:
   259                           	opt stack 0
   260  002222                     __initialization:
   261                           	opt stack 0
   262                           
   263                           ; Initialize objects allocated to BANK0 (2 bytes)
   264                           ; load TBLPTR registers with __pidataBANK0
   265  002222  0EDA               	movlw	low __pidataBANK0
   266  002224  6EF6               	movwf	tblptrl,c
   267  002226  0E24               	movlw	high __pidataBANK0
   268  002228  6EF7               	movwf	tblptrh,c
   269  00222A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   270  00222C  6EF8               	movwf	tblptru,c
   271  00222E  0009               	tblrd		*+	;fetch initializer
   272  002230  CFF5 F0DC          	movff	tablat,__pdataBANK0
   273  002234  0009               	tblrd		*+	;fetch initializer
   274  002236  CFF5 F0DD          	movff	tablat,__pdataBANK0+1
   275                           
   276                           ; Initialize objects allocated to COMRAM (2 bytes)
   277                           ; load TBLPTR registers with __pidataCOMRAM
   278  00223A  0ED8               	movlw	low __pidataCOMRAM
   279  00223C  6EF6               	movwf	tblptrl,c
   280  00223E  0E24               	movlw	high __pidataCOMRAM
   281  002240  6EF7               	movwf	tblptrh,c
   282  002242  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   283  002244  6EF8               	movwf	tblptru,c
   284  002246  0009               	tblrd		*+	;fetch initializer
   285  002248  CFF5 F03B          	movff	tablat,__pdataCOMRAM
   286  00224C  0009               	tblrd		*+	;fetch initializer
   287  00224E  CFF5 F03C          	movff	tablat,__pdataCOMRAM+1
   288                           
   289                           ; Clear objects allocated to BANK0 (15 bytes)
   290  002252  EE00  F0C8         	lfsr	0,__pbssBANK0
   291  002256  0E0F               	movlw	15
   292  002258                     clear_0:
   293  002258  6AEE               	clrf	postinc0,c
   294  00225A  06E8               	decf	wreg,f,c
   295  00225C  E1FD               	bnz	clear_0
   296                           
   297                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   298  00225E  6A37               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   299                           
   300                           ; Clear objects allocated to COMRAM (3 bytes)
   301  002260  6A3A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   302  002262  6A39               	clrf	(__pbssCOMRAM+1)& (0+255),c
   303  002264  6A38               	clrf	__pbssCOMRAM& (0+255),c
   304  002266                     end_of_initialization:
   305                           	opt stack 0
   306  002266                     __end_of__initialization:
   307                           	opt stack 0
   308  002266  903D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   309  002268  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   310  00226A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   311  00226C  6EF8               	movwf	tblptru,c
   312  00226E  0100               	movlb	0
   313  002270  EF14  F004         	goto	_main	;jump to C main() function
   314                           tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           tblptrl	equ	0xFF6
   317                           tablat	equ	0xFF5
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           
   321                           	psect	bitbssCOMRAM
   322  0001B8                     __pbitbssCOMRAM:
   323                           	opt stack 0
   324  0001B8                     _power_led:
   325                           	opt stack 0
   326  0001B8                     	ds	1
   327  0001B9                     _timer_led:
   328                           	opt stack 0
   329  0001B9                     	ds	1
   330  0001BA                     _timer:
   331                           	opt stack 0
   332  0001BA                     	ds	1
   333  0001BB                     _unit:
   334                           	opt stack 0
   335  0001BB                     	ds	1
   336                           tblptru	equ	0xFF8
   337                           tblptrh	equ	0xFF7
   338                           tblptrl	equ	0xFF6
   339                           tablat	equ	0xFF5
   340                           postinc0	equ	0xFEE
   341                           wreg	equ	0xFE8
   342                           
   343                           	psect	bssCOMRAM
   344  000038                     __pbssCOMRAM:
   345                           	opt stack 0
   346  000038                     ISR_low@cur:
   347                           	opt stack 0
   348  000038                     	ds	1
   349  000039                     ISR_low@ins_prev:
   350                           	opt stack 0
   351  000039                     	ds	1
   352  00003A                     _buzz:
   353                           	opt stack 0
   354  00003A                     	ds	1
   355                           tblptru	equ	0xFF8
   356                           tblptrh	equ	0xFF7
   357                           tblptrl	equ	0xFF6
   358                           tablat	equ	0xFF5
   359                           postinc0	equ	0xFEE
   360                           wreg	equ	0xFE8
   361                           
   362                           	psect	dataCOMRAM
   363  00003B                     __pdataCOMRAM:
   364                           	opt stack 0
   365  00003B                     _cur_number:
   366                           	opt stack 0
   367  00003B                     	ds	2
   368                           tblptru	equ	0xFF8
   369                           tblptrh	equ	0xFF7
   370                           tblptrl	equ	0xFF6
   371                           tablat	equ	0xFF5
   372                           postinc0	equ	0xFEE
   373                           wreg	equ	0xFE8
   374                           
   375                           	psect	bssBANK0
   376  0000C8                     __pbssBANK0:
   377                           	opt stack 0
   378  0000C8                     _temp_cur:
   379                           	opt stack 0
   380  0000C8                     	ds	3
   381  0000CB                     _disp:
   382                           	opt stack 0
   383  0000CB                     	ds	2
   384  0000CD                     _errno:
   385                           	opt stack 0
   386  0000CD                     	ds	2
   387  0000CF                     _blink:
   388                           	opt stack 0
   389  0000CF                     	ds	1
   390  0000D0                     _day_hour:
   391                           	opt stack 0
   392  0000D0                     	ds	1
   393  0000D1                     _day_temp:
   394                           	opt stack 0
   395  0000D1                     	ds	1
   396  0000D2                     _fan_timeout:
   397                           	opt stack 0
   398  0000D2                     	ds	1
   399  0000D3                     _heat_cur:
   400                           	opt stack 0
   401  0000D3                     	ds	1
   402  0000D4                     _night_hour:
   403                           	opt stack 0
   404  0000D4                     	ds	1
   405  0000D5                     _night_temp:
   406                           	opt stack 0
   407  0000D5                     	ds	1
   408  0000D6                     _state:
   409                           	opt stack 0
   410  0000D6                     	ds	1
   411                           tblptru	equ	0xFF8
   412                           tblptrh	equ	0xFF7
   413                           tblptrl	equ	0xFF6
   414                           tablat	equ	0xFF5
   415                           postinc0	equ	0xFEE
   416                           wreg	equ	0xFE8
   417                           
   418                           	psect	dataBANK0
   419  0000DC                     __pdataBANK0:
   420                           	opt stack 0
   421  0000DC                     _climate_control:
   422                           	opt stack 0
   423  0000DC                     	ds	1
   424  0000DD                     _heat_mode:
   425                           	opt stack 0
   426  0000DD                     	ds	1
   427                           tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           tblptrl	equ	0xFF6
   430                           tablat	equ	0xFF5
   431                           postinc0	equ	0xFEE
   432                           wreg	equ	0xFE8
   433                           
   434                           	psect	cstackBANK0
   435  000060                     __pcstackBANK0:
   436                           	opt stack 0
   437  000060                     ??_ISR_low:
   438                           
   439                           ; 1 bytes @ 0x0
   440  000060                     	ds	22
   441  000076                     ??_setup_timer1:
   442  000076                     ?___wmul:
   443                           	opt stack 0
   444  000076                     ?___awdiv:
   445                           	opt stack 0
   446  000076                     ?___ftpack:
   447                           	opt stack 0
   448  000076                     ?_frexp:
   449                           	opt stack 0
   450  000076                     ?___ftneg:
   451                           	opt stack 0
   452  000076                     ?___aldiv:
   453                           	opt stack 0
   454  000076                     set_key_led_disp_tris@dir:
   455                           	opt stack 0
   456  000076                     ee_read_byte@addr:
   457                           	opt stack 0
   458  000076                     num_to_disp@ret:
   459                           	opt stack 0
   460  000076                     ___wmul@multiplier:
   461                           	opt stack 0
   462  000076                     ___awdiv@dividend:
   463                           	opt stack 0
   464  000076                     ___ftpack@arg:
   465                           	opt stack 0
   466  000076                     ___ftneg@f1:
   467                           	opt stack 0
   468  000076                     frexp@value:
   469                           	opt stack 0
   470  000076                     ___aldiv@dividend:
   471                           	opt stack 0
   472                           
   473                           ; 4 bytes @ 0x16
   474  000076                     	ds	1
   475  000077                     ??_ee_read_state:
   476  000077                     num_to_disp@num:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0x17
   480  000077                     	ds	1
   481  000078                     setup_timer1@tmp:
   482                           	opt stack 0
   483  000078                     _ee_read_state$335:
   484                           	opt stack 0
   485  000078                     ___wmul@multiplicand:
   486                           	opt stack 0
   487  000078                     ___awdiv@divisor:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x18
   491  000078                     	ds	1
   492  000079                     ___ftpack@exp:
   493                           	opt stack 0
   494  000079                     frexp@eptr:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x19
   498  000079                     	ds	1
   499  00007A                     ___awdiv@counter:
   500                           	opt stack 0
   501  00007A                     ___ftpack@sign:
   502                           	opt stack 0
   503  00007A                     _ee_read_state$336:
   504                           	opt stack 0
   505  00007A                     ___wmul@product:
   506                           	opt stack 0
   507  00007A                     ___aldiv@divisor:
   508                           	opt stack 0
   509                           
   510                           ; 4 bytes @ 0x1A
   511  00007A                     	ds	1
   512  00007B                     ??___ftpack:
   513  00007B                     ??_frexp:
   514  00007B                     ___awdiv@sign:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x1B
   518  00007B                     	ds	1
   519  00007C                     _ee_read_state$337:
   520                           	opt stack 0
   521  00007C                     ___awdiv@quotient:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x1C
   525  00007C                     	ds	2
   526  00007E                     ?___awtoft:
   527                           	opt stack 0
   528  00007E                     ?___lwtoft:
   529                           	opt stack 0
   530  00007E                     set_LEDs@mask:
   531                           	opt stack 0
   532  00007E                     set_digit@dig:
   533                           	opt stack 0
   534  00007E                     ___aldiv@counter:
   535                           	opt stack 0
   536  00007E                     _ee_read_state$339:
   537                           	opt stack 0
   538  00007E                     ___awtoft@c:
   539                           	opt stack 0
   540  00007E                     ___lwtoft@c:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x1E
   544  00007E                     	ds	1
   545  00007F                     error@code:
   546                           	opt stack 0
   547  00007F                     ___aldiv@sign:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0x1F
   551  00007F                     	ds	1
   552  000080                     error@i:
   553                           	opt stack 0
   554  000080                     _ee_read_state$340:
   555                           	opt stack 0
   556  000080                     ___aldiv@quotient:
   557                           	opt stack 0
   558                           
   559                           ; 4 bytes @ 0x20
   560  000080                     	ds	1
   561  000081                     ___awtoft@sign:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x21
   565  000081                     	ds	1
   566  000082                     ?___ftadd:
   567                           	opt stack 0
   568  000082                     ee_read_state@mode:
   569                           	opt stack 0
   570  000082                     ___ftadd@f1:
   571                           	opt stack 0
   572  000082                     ___ftge@ff1:
   573                           	opt stack 0
   574                           
   575                           ; 3 bytes @ 0x22
   576  000082                     	ds	3
   577  000085                     ___ftadd@f2:
   578                           	opt stack 0
   579  000085                     ___ftge@ff2:
   580                           	opt stack 0
   581                           
   582                           ; 3 bytes @ 0x25
   583  000085                     	ds	3
   584  000088                     ??___ftadd:
   585  000088                     ??___ftge:
   586                           
   587                           ; 1 bytes @ 0x28
   588  000088                     	ds	3
   589  00008B                     ___ftadd@sign:
   590                           	opt stack 0
   591                           
   592                           ; 1 bytes @ 0x2B
   593  00008B                     	ds	1
   594  00008C                     ___ftadd@exp2:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0x2C
   598  00008C                     	ds	1
   599  00008D                     ___ftadd@exp1:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x2D
   603  00008D                     	ds	1
   604  00008E                     ?___ftmul:
   605                           	opt stack 0
   606  00008E                     ___ftmul@f1:
   607                           	opt stack 0
   608                           
   609                           ; 3 bytes @ 0x2E
   610  00008E                     	ds	3
   611  000091                     ___ftmul@f2:
   612                           	opt stack 0
   613                           
   614                           ; 3 bytes @ 0x31
   615  000091                     	ds	3
   616  000094                     ??___ftmul:
   617                           
   618                           ; 1 bytes @ 0x34
   619  000094                     	ds	3
   620  000097                     ___ftmul@exp:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0x37
   624  000097                     	ds	1
   625  000098                     ___ftmul@f3_as_product:
   626                           	opt stack 0
   627                           
   628                           ; 3 bytes @ 0x38
   629  000098                     	ds	3
   630  00009B                     ___ftmul@cntr:
   631                           	opt stack 0
   632                           
   633                           ; 1 bytes @ 0x3B
   634  00009B                     	ds	1
   635  00009C                     ___ftmul@sign:
   636                           	opt stack 0
   637                           
   638                           ; 1 bytes @ 0x3C
   639  00009C                     	ds	1
   640  00009D                     ?___ftdiv:
   641                           	opt stack 0
   642  00009D                     ?_eval_poly:
   643                           	opt stack 0
   644  00009D                     ___ftdiv@f1:
   645                           	opt stack 0
   646  00009D                     eval_poly@x:
   647                           	opt stack 0
   648                           
   649                           ; 3 bytes @ 0x3D
   650  00009D                     	ds	3
   651  0000A0                     eval_poly@d:
   652                           	opt stack 0
   653  0000A0                     ___ftdiv@f2:
   654                           	opt stack 0
   655                           
   656                           ; 3 bytes @ 0x40
   657  0000A0                     	ds	2
   658  0000A2                     eval_poly@n:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x42
   662  0000A2                     	ds	1
   663  0000A3                     ??___ftdiv:
   664                           
   665                           ; 1 bytes @ 0x43
   666  0000A3                     	ds	1
   667  0000A4                     ??_eval_poly:
   668                           
   669                           ; 1 bytes @ 0x44
   670  0000A4                     	ds	2
   671  0000A6                     ___ftdiv@cntr:
   672                           	opt stack 0
   673  0000A6                     eval_poly@res:
   674                           	opt stack 0
   675                           
   676                           ; 3 bytes @ 0x46
   677  0000A6                     	ds	1
   678  0000A7                     ___ftdiv@f3:
   679                           	opt stack 0
   680                           
   681                           ; 3 bytes @ 0x47
   682  0000A7                     	ds	2
   683  0000A9                     ?_log:
   684                           	opt stack 0
   685  0000A9                     log@x:
   686                           	opt stack 0
   687                           
   688                           ; 3 bytes @ 0x49
   689  0000A9                     	ds	1
   690  0000AA                     ___ftdiv@exp:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x4A
   694  0000AA                     	ds	1
   695  0000AB                     ___ftdiv@sign:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0x4B
   699  0000AB                     	ds	1
   700  0000AC                     log@exponent:
   701                           	opt stack 0
   702                           
   703                           ; 2 bytes @ 0x4C
   704  0000AC                     	ds	2
   705  0000AE                     ?_get_temp:
   706                           	opt stack 0
   707                           
   708                           ; 3 bytes @ 0x4E
   709  0000AE                     	ds	3
   710  0000B1                     get_temp@temp:
   711                           	opt stack 0
   712                           
   713                           ; 3 bytes @ 0x51
   714  0000B1                     	ds	3
   715  0000B4                     _get_temp$969:
   716                           	opt stack 0
   717                           
   718                           ; 3 bytes @ 0x54
   719  0000B4                     	ds	3
   720  0000B7                     _get_temp$970:
   721                           	opt stack 0
   722                           
   723                           ; 3 bytes @ 0x57
   724  0000B7                     	ds	3
   725  0000BA                     _get_temp$971:
   726                           	opt stack 0
   727                           
   728                           ; 3 bytes @ 0x5A
   729  0000BA                     	ds	3
   730  0000BD                     get_temp@voltage:
   731                           	opt stack 0
   732                           
   733                           ; 3 bytes @ 0x5D
   734  0000BD                     	ds	3
   735  0000C0                     get_temp@resistance:
   736                           	opt stack 0
   737                           
   738                           ; 3 bytes @ 0x60
   739  0000C0                     	ds	3
   740  0000C3                     ??_main:
   741                           
   742                           ; 1 bytes @ 0x63
   743  0000C3                     	ds	5
   744                           tblptru	equ	0xFF8
   745                           tblptrh	equ	0xFF7
   746                           tblptrl	equ	0xFF6
   747                           tablat	equ	0xFF5
   748                           postinc0	equ	0xFEE
   749                           wreg	equ	0xFE8
   750                           
   751                           	psect	cstackCOMRAM
   752  000001                     __pcstackCOMRAM:
   753                           	opt stack 0
   754  000001                     ?___almod:
   755                           	opt stack 0
   756  000001                     ee_write_byte@data:
   757                           	opt stack 0
   758  000001                     ___almod@dividend:
   759                           	opt stack 0
   760                           
   761                           ; 4 bytes @ 0x0
   762  000001                     	ds	1
   763  000002                     ee_write_byte@addr:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x1
   767  000002                     	ds	3
   768  000005                     ___almod@divisor:
   769                           	opt stack 0
   770                           
   771                           ; 4 bytes @ 0x4
   772  000005                     	ds	4
   773  000009                     ___almod@counter:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0x8
   777  000009                     	ds	1
   778  00000A                     ___almod@sign:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x9
   782  00000A                     	ds	1
   783  00000B                     ??_ISR_high:
   784                           
   785                           ; 1 bytes @ 0xA
   786  00000B                     	ds	18
   787  00001D                     ISR_high@tmp:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x1C
   791  00001D                     	ds	2
   792  00001F                     ?i1___awdiv:
   793                           	opt stack 0
   794  00001F                     ?i1___aldiv:
   795                           	opt stack 0
   796  00001F                     buzzer@duration:
   797                           	opt stack 0
   798  00001F                     i1set_key_led_disp_tris@dir:
   799                           	opt stack 0
   800  00001F                     i1___awdiv@dividend:
   801                           	opt stack 0
   802  00001F                     i1___aldiv@dividend:
   803                           	opt stack 0
   804                           
   805                           ; 4 bytes @ 0x1E
   806  00001F                     	ds	1
   807  000020                     sample_inputs@ret:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x1F
   811  000020                     	ds	1
   812  000021                     i1___awdiv@divisor:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x20
   816  000021                     	ds	2
   817  000023                     i1___awdiv@counter:
   818                           	opt stack 0
   819  000023                     i1___aldiv@divisor:
   820                           	opt stack 0
   821                           
   822                           ; 4 bytes @ 0x22
   823  000023                     	ds	1
   824  000024                     i1___awdiv@sign:
   825                           	opt stack 0
   826                           
   827                           ; 1 bytes @ 0x23
   828  000024                     	ds	1
   829  000025                     i1___awdiv@quotient:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x24
   833  000025                     	ds	2
   834  000027                     i1set_LEDs@mask:
   835                           	opt stack 0
   836  000027                     i1set_digit@dig:
   837                           	opt stack 0
   838  000027                     i1___aldiv@counter:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0x26
   842  000027                     	ds	1
   843  000028                     i1___aldiv@sign:
   844                           	opt stack 0
   845                           
   846                           ; 1 bytes @ 0x27
   847  000028                     	ds	1
   848  000029                     i1___aldiv@quotient:
   849                           	opt stack 0
   850                           
   851                           ; 4 bytes @ 0x28
   852  000029                     	ds	4
   853  00002D                     _ISR_low$356:
   854                           	opt stack 0
   855                           
   856                           ; 2 bytes @ 0x2C
   857  00002D                     	ds	2
   858  00002F                     ISR_low@mask_leds:
   859                           	opt stack 0
   860                           
   861                           ; 1 bytes @ 0x2E
   862  00002F                     	ds	1
   863  000030                     _ISR_low$357:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0x2F
   867  000030                     	ds	1
   868  000031                     ISR_low@ins:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0x30
   872  000031                     	ds	1
   873  000032                     ISR_low@i:
   874                           	opt stack 0
   875                           
   876                           ; 1 bytes @ 0x31
   877  000032                     	ds	1
   878  000033                     _ISR_low$354:
   879                           	opt stack 0
   880                           
   881                           ; 2 bytes @ 0x32
   882  000033                     	ds	2
   883  000035                     _ISR_low$355:
   884                           	opt stack 0
   885                           
   886                           ; 2 bytes @ 0x34
   887  000035                     	ds	2
   888                           tblptru	equ	0xFF8
   889                           tblptrh	equ	0xFF7
   890                           tblptrl	equ	0xFF6
   891                           tablat	equ	0xFF5
   892                           postinc0	equ	0xFEE
   893                           wreg	equ	0xFE8
   894                           
   895 ;;
   896 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   897 ;;
   898 ;; *************** function _main *****************
   899 ;; Defined at:
   900 ;;		line 81 in file "main.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   914 ;;      Params:         0       0       0       0       0       0       0       0       0
   915 ;;      Locals:         0       0       0       0       0       0       0       0       0
   916 ;;      Temps:          0       5       0       0       0       0       0       0       0
   917 ;;      Totals:         0       5       0       0       0       0       0       0       0
   918 ;;Total ram usage:        5 bytes
   919 ;; Hardware stack levels required when called:   10
   920 ;; This function calls:
   921 ;;		___aldiv
   922 ;;		___awtoft
   923 ;;		___ftge
   924 ;;		_ee_read_state
   925 ;;		_error
   926 ;;		_get_temp
   927 ;;		_setup
   928 ;; This function is called by:
   929 ;;		Startup code after reset
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text0
   934  000828                     __ptext0:
   935                           	opt stack 0
   936  000828                     _main:
   937                           	opt stack 21
   938                           
   939                           ;main.c: 83: setup();
   940                           
   941                           ;incstack = 0
   942  000828  ECBD  F011         	call	_setup	;wreg free
   943                           
   944                           ;main.c: 84: ee_read_state();
   945  00082C  ECB1  F00A         	call	_ee_read_state	;wreg free
   946  000830                     l297:
   947  000830  0004               	clrwdt		;# 
   948                           
   949                           ;main.c: 89: temp_cur = get_temp();
   950  000832  ECB1  F006         	call	_get_temp	;wreg free
   951  000836  C0AE  F0C8         	movff	?_get_temp,_temp_cur
   952  00083A  C0AF  F0C9         	movff	?_get_temp+1,_temp_cur+1
   953  00083E  C0B0  F0CA         	movff	?_get_temp+2,_temp_cur+2
   954                           
   955                           ;main.c: 90: if (temp_cur > 40)
   956  000842  0E00               	movlw	0
   957  000844  0100               	movlb	0	; () banked
   958  000846  6F82               	movwf	___ftge@ff1& (0+255),b
   959  000848  0E20               	movlw	32
   960  00084A  0100               	movlb	0	; () banked
   961  00084C  6F83               	movwf	(___ftge@ff1+1)& (0+255),b
   962  00084E  0E42               	movlw	66
   963  000850  0100               	movlb	0	; () banked
   964  000852  6F84               	movwf	(___ftge@ff1+2)& (0+255),b
   965  000854  C0C8  F085         	movff	_temp_cur,___ftge@ff2
   966  000858  C0C9  F086         	movff	_temp_cur+1,___ftge@ff2+1
   967  00085C  C0CA  F087         	movff	_temp_cur+2,___ftge@ff2+2
   968  000860  EC5A  F00E         	call	___ftge	;wreg free
   969  000864  0100               	movlb	0	; () banked
   970  000866  B0D8               	btfsc	status,0,c
   971  000868  D004               	goto	l3491
   972                           
   973                           ; BSR set to: 0
   974                           ;main.c: 91: {
   975                           ;main.c: 96: error(1);
   976  00086A  0E01               	movlw	1
   977  00086C  ECBE  F00E         	call	_error
   978                           
   979                           ;main.c: 97: continue;
   980  000870  D7DF               	goto	l297
   981  000872                     l3491:
   982                           
   983                           ;main.c: 98: }
   984                           ;main.c: 99: if (state != _OFF) continue;
   985  000872  0100               	movlb	0	; () banked
   986  000874  51D6               	movf	_state& (0+255),w,b
   987  000876  A4D8               	btfss	status,2,c
   988  000878  D7DB               	goto	l297
   989                           
   990                           ; BSR set to: 0
   991                           ;main.c: 100: if (timer)
   992                           
   993                           ; BSR set to: 0
   994  00087A  A437               	btfss	_timer/(0+8),_timer& (0+7),c
   995  00087C  D0E5               	goto	l3523
   996                           
   997                           ; BSR set to: 0
   998                           ;main.c: 101: {
   999                           ;main.c: 103: if (time / 3600 >= day_hour && time / 3600 < night_hour)
  1000  00087E  C0D0  F0C3         	movff	_day_hour,??_main
  1001  000882  0100               	movlb	0	; () banked
  1002  000884  6BC4               	clrf	(??_main+1)& (0+255),b
  1003  000886  6BC5               	clrf	(??_main+2)& (0+255),b
  1004  000888  6BC6               	clrf	(??_main+3)& (0+255),b
  1005  00088A  C0D7  F076         	movff	_time,___aldiv@dividend
  1006  00088E  C0D8  F077         	movff	_time+1,___aldiv@dividend+1
  1007  000892  C0D9  F078         	movff	_time+2,___aldiv@dividend+2
  1008  000896  C0DA  F079         	movff	_time+3,___aldiv@dividend+3
  1009  00089A  0E10               	movlw	16
  1010  00089C  0100               	movlb	0	; () banked
  1011  00089E  6F7A               	movwf	___aldiv@divisor& (0+255),b
  1012  0008A0  0E0E               	movlw	14
  1013  0008A2  6F7B               	movwf	(___aldiv@divisor+1)& (0+255),b
  1014  0008A4  0E00               	movlw	0
  1015  0008A6  6F7C               	movwf	(___aldiv@divisor+2)& (0+255),b
  1016  0008A8  0E00               	movlw	0
  1017  0008AA  6F7D               	movwf	(___aldiv@divisor+3)& (0+255),b
  1018  0008AC  EC9E  F009         	call	___aldiv	;wreg free
  1019  0008B0  0100               	movlb	0	; () banked
  1020  0008B2  51C3               	movf	??_main& (0+255),w,b
  1021  0008B4  0100               	movlb	0	; () banked
  1022  0008B6  5D76               	subwf	?___aldiv& (0+255),w,b
  1023  0008B8  0100               	movlb	0	; () banked
  1024  0008BA  51C4               	movf	(??_main+1)& (0+255),w,b
  1025  0008BC  0100               	movlb	0	; () banked
  1026  0008BE  5977               	subwfb	(?___aldiv+1)& (0+255),w,b
  1027  0008C0  0100               	movlb	0	; () banked
  1028  0008C2  51C5               	movf	(??_main+2)& (0+255),w,b
  1029  0008C4  0100               	movlb	0	; () banked
  1030  0008C6  5978               	subwfb	(?___aldiv+2)& (0+255),w,b
  1031  0008C8  0100               	movlb	0	; () banked
  1032  0008CA  5179               	movf	(?___aldiv+3)& (0+255),w,b
  1033  0008CC  0A80               	xorlw	128
  1034  0008CE  0100               	movlb	0	; () banked
  1035  0008D0  6FC7               	movwf	(??_main+4)& (0+255),b
  1036  0008D2  0100               	movlb	0	; () banked
  1037  0008D4  51C6               	movf	(??_main+3)& (0+255),w,b
  1038  0008D6  0A80               	xorlw	128
  1039  0008D8  0100               	movlb	0	; () banked
  1040  0008DA  59C7               	subwfb	(??_main+4)& (0+255),w,b
  1041  0008DC  A0D8               	btfss	status,0,c
  1042  0008DE  D076               	goto	l3511
  1043                           
  1044                           ; BSR set to: 0
  1045  0008E0  C0D4  F0C3         	movff	_night_hour,??_main
  1046  0008E4  0100               	movlb	0	; () banked
  1047  0008E6  6BC4               	clrf	(??_main+1)& (0+255),b
  1048  0008E8  6BC5               	clrf	(??_main+2)& (0+255),b
  1049  0008EA  6BC6               	clrf	(??_main+3)& (0+255),b
  1050  0008EC  C0D7  F076         	movff	_time,___aldiv@dividend
  1051  0008F0  C0D8  F077         	movff	_time+1,___aldiv@dividend+1
  1052  0008F4  C0D9  F078         	movff	_time+2,___aldiv@dividend+2
  1053  0008F8  C0DA  F079         	movff	_time+3,___aldiv@dividend+3
  1054  0008FC  0E10               	movlw	16
  1055  0008FE  0100               	movlb	0	; () banked
  1056  000900  6F7A               	movwf	___aldiv@divisor& (0+255),b
  1057  000902  0E0E               	movlw	14
  1058  000904  6F7B               	movwf	(___aldiv@divisor+1)& (0+255),b
  1059  000906  0E00               	movlw	0
  1060  000908  6F7C               	movwf	(___aldiv@divisor+2)& (0+255),b
  1061  00090A  0E00               	movlw	0
  1062  00090C  6F7D               	movwf	(___aldiv@divisor+3)& (0+255),b
  1063  00090E  EC9E  F009         	call	___aldiv	;wreg free
  1064  000912  0100               	movlb	0	; () banked
  1065  000914  51C3               	movf	??_main& (0+255),w,b
  1066  000916  0100               	movlb	0	; () banked
  1067  000918  5D76               	subwf	?___aldiv& (0+255),w,b
  1068  00091A  0100               	movlb	0	; () banked
  1069  00091C  51C4               	movf	(??_main+1)& (0+255),w,b
  1070  00091E  0100               	movlb	0	; () banked
  1071  000920  5977               	subwfb	(?___aldiv+1)& (0+255),w,b
  1072  000922  0100               	movlb	0	; () banked
  1073  000924  51C5               	movf	(??_main+2)& (0+255),w,b
  1074  000926  0100               	movlb	0	; () banked
  1075  000928  5978               	subwfb	(?___aldiv+2)& (0+255),w,b
  1076  00092A  0100               	movlb	0	; () banked
  1077  00092C  5179               	movf	(?___aldiv+3)& (0+255),w,b
  1078  00092E  0A80               	xorlw	128
  1079  000930  0100               	movlb	0	; () banked
  1080  000932  6FC7               	movwf	(??_main+4)& (0+255),b
  1081  000934  0100               	movlb	0	; () banked
  1082  000936  51C6               	movf	(??_main+3)& (0+255),w,b
  1083  000938  0A80               	xorlw	128
  1084  00093A  0100               	movlb	0	; () banked
  1085  00093C  59C7               	subwfb	(??_main+4)& (0+255),w,b
  1086  00093E  B0D8               	btfsc	status,0,c
  1087  000940  D045               	goto	l3511
  1088                           
  1089                           ; BSR set to: 0
  1090                           ;main.c: 104: {
  1091                           ;main.c: 106: if (temp_cur > (day_temp + 3))
  1092  000942  0E03               	movlw	3
  1093  000944  0100               	movlb	0	; () banked
  1094  000946  25D1               	addwf	_day_temp& (0+255),w,b
  1095  000948  0100               	movlb	0	; () banked
  1096  00094A  6F7E               	movwf	___awtoft@c& (0+255),b
  1097  00094C  0100               	movlb	0	; () banked
  1098  00094E  6B7F               	clrf	(___awtoft@c+1)& (0+255),b
  1099  000950  0E00               	movlw	0
  1100  000952  237F               	addwfc	(___awtoft@c+1)& (0+255),f,b
  1101  000954  EC5F  F011         	call	___awtoft	;wreg free
  1102  000958  C07E  F082         	movff	?___awtoft,___ftge@ff1
  1103  00095C  C07F  F083         	movff	?___awtoft+1,___ftge@ff1+1
  1104  000960  C080  F084         	movff	?___awtoft+2,___ftge@ff1+2
  1105  000964  C0C8  F085         	movff	_temp_cur,___ftge@ff2
  1106  000968  C0C9  F086         	movff	_temp_cur+1,___ftge@ff2+1
  1107  00096C  C0CA  F087         	movff	_temp_cur+2,___ftge@ff2+2
  1108  000970  EC5A  F00E         	call	___ftge	;wreg free
  1109  000974  0100               	movlb	0	; () banked
  1110  000976  B0D8               	btfsc	status,0,c
  1111  000978  D007               	goto	l3505
  1112  00097A                     l3501:
  1113                           
  1114                           ; BSR set to: 0
  1115                           ;main.c: 107: {
  1116                           ;main.c: 110: if (climate_control & _COOL)
  1117  00097A  0100               	movlb	0	; () banked
  1118  00097C  A1DC               	btfss	_climate_control& (0+255),0,b
  1119  00097E  D0AA               	goto	l3543
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;main.c: 111: {
  1123                           ;main.c: 112: heat_cur = _FAN;
  1124  000980  0E01               	movlw	1
  1125  000982  0100               	movlb	0	; () banked
  1126  000984  6FD3               	movwf	_heat_cur& (0+255),b
  1127                           
  1128                           ; BSR set to: 0
  1129                           ;main.c: 113: }
  1130                           ;main.c: 114: }
  1131  000986  D0A6               	goto	l3543
  1132  000988                     l3505:
  1133                           
  1134                           ; BSR set to: 0
  1135                           ;main.c: 115: else if (temp_cur <= (day_temp + 3))
  1136  000988  0E03               	movlw	3
  1137  00098A  0100               	movlb	0	; () banked
  1138  00098C  25D1               	addwf	_day_temp& (0+255),w,b
  1139  00098E  0100               	movlb	0	; () banked
  1140  000990  6F7E               	movwf	___awtoft@c& (0+255),b
  1141  000992  0100               	movlb	0	; () banked
  1142  000994  6B7F               	clrf	(___awtoft@c+1)& (0+255),b
  1143  000996  0E00               	movlw	0
  1144  000998  237F               	addwfc	(___awtoft@c+1)& (0+255),f,b
  1145  00099A  EC5F  F011         	call	___awtoft	;wreg free
  1146  00099E  C07E  F082         	movff	?___awtoft,___ftge@ff1
  1147  0009A2  C07F  F083         	movff	?___awtoft+1,___ftge@ff1+1
  1148  0009A6  C080  F084         	movff	?___awtoft+2,___ftge@ff1+2
  1149  0009AA  C0C8  F085         	movff	_temp_cur,___ftge@ff2
  1150  0009AE  C0C9  F086         	movff	_temp_cur+1,___ftge@ff2+1
  1151  0009B2  C0CA  F087         	movff	_temp_cur+2,___ftge@ff2+2
  1152  0009B6  EC5A  F00E         	call	___ftge	;wreg free
  1153  0009BA  0100               	movlb	0	; () banked
  1154  0009BC  A0D8               	btfss	status,0,c
  1155  0009BE  D08A               	goto	l3543
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;main.c: 116: {
  1159                           ;main.c: 119: if (climate_control & _HEAT)
  1160  0009C0  0100               	movlb	0	; () banked
  1161  0009C2  A3DC               	btfss	_climate_control& (0+255),1,b
  1162  0009C4  D087               	goto	l3543
  1163                           
  1164                           ; BSR set to: 0
  1165                           ;main.c: 120: {
  1166                           ;main.c: 122: heat_cur = heat_mode;
  1167  0009C6  C0DD  F0D3         	movff	_heat_mode,_heat_cur
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;main.c: 123: }
  1171                           ;main.c: 124: }
  1172                           ;main.c: 125: }
  1173                           
  1174                           ; BSR set to: 0
  1175                           
  1176                           ; BSR set to: 0
  1177  0009CA  D084               	goto	l3543
  1178  0009CC                     l3511:
  1179                           
  1180                           ; BSR set to: 0
  1181                           ;main.c: 127: else
  1182                           ;main.c: 128: {
  1183                           ;main.c: 130: if (temp_cur > (night_temp + 3))
  1184  0009CC  0E03               	movlw	3
  1185  0009CE  0100               	movlb	0	; () banked
  1186  0009D0  25D5               	addwf	_night_temp& (0+255),w,b
  1187  0009D2  0100               	movlb	0	; () banked
  1188  0009D4  6F7E               	movwf	___awtoft@c& (0+255),b
  1189  0009D6  0100               	movlb	0	; () banked
  1190  0009D8  6B7F               	clrf	(___awtoft@c+1)& (0+255),b
  1191  0009DA  0E00               	movlw	0
  1192  0009DC  237F               	addwfc	(___awtoft@c+1)& (0+255),f,b
  1193  0009DE  EC5F  F011         	call	___awtoft	;wreg free
  1194  0009E2  C07E  F082         	movff	?___awtoft,___ftge@ff1
  1195  0009E6  C07F  F083         	movff	?___awtoft+1,___ftge@ff1+1
  1196  0009EA  C080  F084         	movff	?___awtoft+2,___ftge@ff1+2
  1197  0009EE  C0C8  F085         	movff	_temp_cur,___ftge@ff2
  1198  0009F2  C0C9  F086         	movff	_temp_cur+1,___ftge@ff2+1
  1199  0009F6  C0CA  F087         	movff	_temp_cur+2,___ftge@ff2+2
  1200  0009FA  EC5A  F00E         	call	___ftge	;wreg free
  1201  0009FE  0100               	movlb	0	; () banked
  1202  000A00  A0D8               	btfss	status,0,c
  1203  000A02  D7BB               	goto	l3501
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;main.c: 138: else if (temp_cur < (night_temp + 3))
  1207                           
  1208                           ; BSR set to: 0
  1209                           
  1210                           ; BSR set to: 0
  1211                           ;main.c: 136: }
  1212                           ;main.c: 137: }
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;main.c: 134: {
  1216                           ;main.c: 135: heat_cur = _FAN;
  1217                           
  1218                           ; BSR set to: 0
  1219                           ;main.c: 131: {
  1220                           ;main.c: 133: if (climate_control & _COOL)
  1221  000A04  C0C8  F082         	movff	_temp_cur,___ftge@ff1
  1222  000A08  C0C9  F083         	movff	_temp_cur+1,___ftge@ff1+1
  1223  000A0C  C0CA  F084         	movff	_temp_cur+2,___ftge@ff1+2
  1224  000A10  0E03               	movlw	3
  1225  000A12  0100               	movlb	0	; () banked
  1226  000A14  25D5               	addwf	_night_temp& (0+255),w,b
  1227  000A16  0100               	movlb	0	; () banked
  1228  000A18  6F7E               	movwf	___awtoft@c& (0+255),b
  1229  000A1A  0100               	movlb	0	; () banked
  1230  000A1C  6B7F               	clrf	(___awtoft@c+1)& (0+255),b
  1231  000A1E  0E00               	movlw	0
  1232  000A20  237F               	addwfc	(___awtoft@c+1)& (0+255),f,b
  1233  000A22  EC5F  F011         	call	___awtoft	;wreg free
  1234  000A26  C07E  F085         	movff	?___awtoft,___ftge@ff2
  1235  000A2A  C07F  F086         	movff	?___awtoft+1,___ftge@ff2+1
  1236  000A2E  C080  F087         	movff	?___awtoft+2,___ftge@ff2+2
  1237  000A32  EC5A  F00E         	call	___ftge	;wreg free
  1238  000A36  0100               	movlb	0	; () banked
  1239  000A38  B0D8               	btfsc	status,0,c
  1240  000A3A  D04C               	goto	l3543
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;main.c: 139: {
  1244                           ;main.c: 141: if (climate_control & _HEAT)
  1245  000A3C  0100               	movlb	0	; () banked
  1246  000A3E  A3DC               	btfss	_climate_control& (0+255),1,b
  1247  000A40  D049               	goto	l3543
  1248                           
  1249                           ; BSR set to: 0
  1250                           ;main.c: 142: {
  1251                           ;main.c: 143: heat_cur = heat_mode;
  1252  000A42  C0DD  F0D3         	movff	_heat_mode,_heat_cur
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;main.c: 144: }
  1256                           ;main.c: 145: }
  1257                           ;main.c: 146: }
  1258                           ;main.c: 147: }
  1259                           
  1260                           ; BSR set to: 0
  1261                           
  1262                           ; BSR set to: 0
  1263                           
  1264                           ; BSR set to: 0
  1265  000A46  D046               	goto	l3543
  1266  000A48                     l3523:
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;main.c: 149: else
  1270                           ;main.c: 150: {
  1271                           ;main.c: 152: if (temp_cur > (temp_want + 3))
  1272  000A48  0E03               	movlw	3
  1273  000A4A  0100               	movlb	0	; () banked
  1274  000A4C  25DB               	addwf	_temp_want& (0+255),w,b
  1275  000A4E  0100               	movlb	0	; () banked
  1276  000A50  6F7E               	movwf	___awtoft@c& (0+255),b
  1277  000A52  0100               	movlb	0	; () banked
  1278  000A54  6B7F               	clrf	(___awtoft@c+1)& (0+255),b
  1279  000A56  0E00               	movlw	0
  1280  000A58  237F               	addwfc	(___awtoft@c+1)& (0+255),f,b
  1281  000A5A  EC5F  F011         	call	___awtoft	;wreg free
  1282  000A5E  C07E  F082         	movff	?___awtoft,___ftge@ff1
  1283  000A62  C07F  F083         	movff	?___awtoft+1,___ftge@ff1+1
  1284  000A66  C080  F084         	movff	?___awtoft+2,___ftge@ff1+2
  1285  000A6A  C0C8  F085         	movff	_temp_cur,___ftge@ff2
  1286  000A6E  C0C9  F086         	movff	_temp_cur+1,___ftge@ff2+1
  1287  000A72  C0CA  F087         	movff	_temp_cur+2,___ftge@ff2+2
  1288  000A76  EC5A  F00E         	call	___ftge	;wreg free
  1289  000A7A  0100               	movlb	0	; () banked
  1290  000A7C  A0D8               	btfss	status,0,c
  1291  000A7E  D77D               	goto	l3501
  1292                           
  1293                           ; BSR set to: 0
  1294                           ;main.c: 160: else if (temp_cur < (temp_want + 3))
  1295                           
  1296                           ; BSR set to: 0
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;main.c: 158: }
  1300                           ;main.c: 159: }
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;main.c: 156: {
  1304                           ;main.c: 157: heat_cur = _FAN;
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;main.c: 153: {
  1308                           ;main.c: 155: if (climate_control & _COOL)
  1309  000A80  C0C8  F082         	movff	_temp_cur,___ftge@ff1
  1310  000A84  C0C9  F083         	movff	_temp_cur+1,___ftge@ff1+1
  1311  000A88  C0CA  F084         	movff	_temp_cur+2,___ftge@ff1+2
  1312  000A8C  0E03               	movlw	3
  1313  000A8E  0100               	movlb	0	; () banked
  1314  000A90  25DB               	addwf	_temp_want& (0+255),w,b
  1315  000A92  0100               	movlb	0	; () banked
  1316  000A94  6F7E               	movwf	___awtoft@c& (0+255),b
  1317  000A96  0100               	movlb	0	; () banked
  1318  000A98  6B7F               	clrf	(___awtoft@c+1)& (0+255),b
  1319  000A9A  0E00               	movlw	0
  1320  000A9C  237F               	addwfc	(___awtoft@c+1)& (0+255),f,b
  1321  000A9E  EC5F  F011         	call	___awtoft	;wreg free
  1322  000AA2  C07E  F085         	movff	?___awtoft,___ftge@ff2
  1323  000AA6  C07F  F086         	movff	?___awtoft+1,___ftge@ff2+1
  1324  000AAA  C080  F087         	movff	?___awtoft+2,___ftge@ff2+2
  1325  000AAE  EC5A  F00E         	call	___ftge	;wreg free
  1326  000AB2  D7C1               	goto	L2
  1327  000AB4                     l321:
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;main.c: 177: if (time % 2) LATC1 = 1, LATC2 = 0;
  1331  000AB4  0100               	movlb	0	; () banked
  1332  000AB6  A1D7               	btfss	_time& (0+255),0,b
  1333  000AB8  D003               	goto	l322
  1334                           
  1335                           ; BSR set to: 0
  1336  000ABA  828B               	bsf	3979,1,c	;volatile
  1337  000ABC  948B               	bcf	3979,2,c	;volatile
  1338  000ABE  D004               	goto	l3539
  1339  000AC0                     l322:
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;main.c: 178: else LATC1 = 0, LATC2 = 1;
  1343  000AC0  928B               	bcf	3979,1,c	;volatile
  1344  000AC2  D001               	goto	L3
  1345  000AC4                     l325:
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;main.c: 182: LATC1 = 1;
  1349  000AC4  828B               	bsf	3979,1,c	;volatile
  1350  000AC6                     L3:
  1351                           
  1352                           ;main.c: 183: LATC2 = 1;
  1353  000AC6  848B               	bsf	3979,2,c	;volatile
  1354  000AC8                     l3539:
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;main.c: 184: fan_timeout = 30;
  1358  000AC8  0E1E               	movlw	30
  1359  000ACA  D001               	goto	L1
  1360  000ACC                     l3541:
  1361                           
  1362                           ; BSR set to: 0
  1363                           ;main.c: 187: fan_timeout = 1;
  1364  000ACC  0E01               	movlw	1
  1365  000ACE                     L1:
  1366  000ACE  0100               	movlb	0	; () banked
  1367  000AD0  6FD2               	movwf	_fan_timeout& (0+255),b
  1368                           
  1369                           ;main.c: 188: }
  1370  000AD2  D00B               	goto	l3545
  1371  000AD4                     l3543:
  1372                           
  1373                           ; BSR set to: 0
  1374  000AD4  0100               	movlb	0	; () banked
  1375  000AD6  51D3               	movf	_heat_cur& (0+255),w,b
  1376                           
  1377                           ; Switch size 1, requested type "space"
  1378                           ; Number of cases is 3, Range of values is 1 to 3
  1379                           ; switch strategies available:
  1380                           ; Name         Instructions Cycles
  1381                           ; simple_byte           10     6 (average)
  1382                           ;	Chosen strategy is simple_byte
  1383  000AD8  0A01               	xorlw	1	; case 1
  1384  000ADA  B4D8               	btfsc	status,2,c
  1385  000ADC  D7F7               	goto	l3541
  1386  000ADE  0A03               	xorlw	3	; case 2
  1387  000AE0  B4D8               	btfsc	status,2,c
  1388  000AE2  D7E8               	goto	l321
  1389  000AE4  0A01               	xorlw	1	; case 3
  1390  000AE6  B4D8               	btfsc	status,2,c
  1391  000AE8  D7ED               	goto	l325
  1392  000AEA                     l3545:
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;main.c: 190: if (fan_timeout) LATC0 = 1;
  1396  000AEA  0100               	movlb	0	; () banked
  1397  000AEC  51D2               	movf	_fan_timeout& (0+255),w,b
  1398  000AEE  B4D8               	btfsc	status,2,c
  1399  000AF0  D002               	goto	l327
  1400                           
  1401                           ; BSR set to: 0
  1402  000AF2  808B               	bsf	3979,0,c	;volatile
  1403  000AF4  D69D               	goto	l297
  1404  000AF6                     l327:
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;main.c: 191: else LATC0 = 0;
  1408  000AF6  908B               	bcf	3979,0,c	;volatile
  1409                           
  1410                           ; BSR set to: 0
  1411                           
  1412                           ; BSR set to: 0
  1413  000AF8  D69B               	goto	l297
  1414  000AFA                     __end_of_main:
  1415                           	opt stack 0
  1416                           tblptru	equ	0xFF8
  1417                           tblptrh	equ	0xFF7
  1418                           tblptrl	equ	0xFF6
  1419                           tablat	equ	0xFF5
  1420                           postinc0	equ	0xFEE
  1421                           wreg	equ	0xFE8
  1422                           status	equ	0xFD8
  1423                           
  1424 ;; *************** function _setup *****************
  1425 ;; Defined at:
  1426 ;;		line 204 in file "main.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, status,2, status,0, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1440 ;;      Params:         0       0       0       0       0       0       0       0       0
  1441 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1443 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1444 ;;Total ram usage:        0 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    6
  1447 ;; This function calls:
  1448 ;;		_setup_eeprom
  1449 ;;		_setup_io
  1450 ;;		_setup_therm
  1451 ;;		_setup_timer0
  1452 ;;		_setup_timer1
  1453 ;;		_setup_timer2
  1454 ;;		_setup_watchdog
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text1
  1461  00237A                     __ptext1:
  1462                           	opt stack 0
  1463  00237A                     _setup:
  1464                           	opt stack 24
  1465                           
  1466                           ;main.c: 208: SCS0 = 1;
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;incstack = 0
  1470  00237A  80D3               	bsf	4051,0,c	;volatile
  1471                           
  1472                           ;main.c: 209: SCS1 = 1;
  1473  00237C  82D3               	bsf	4051,1,c	;volatile
  1474                           
  1475                           ;main.c: 210: INTSRC = 1;
  1476  00237E  8E9B               	bsf	3995,7,c	;volatile
  1477                           
  1478                           ;main.c: 213: IRCF2 = 0;
  1479  002380  9CD3               	bcf	4051,6,c	;volatile
  1480                           
  1481                           ;main.c: 214: IRCF1 = 1;
  1482  002382  8AD3               	bsf	4051,5,c	;volatile
  1483                           
  1484                           ;main.c: 215: IRCF0 = 1;
  1485  002384  88D3               	bsf	4051,4,c	;volatile
  1486                           
  1487                           ;main.c: 218: setup_therm();
  1488  002386  EC02  F012         	call	_setup_therm	;wreg free
  1489                           
  1490                           ;main.c: 220: setup_io();
  1491  00238A  EC42  F012         	call	_setup_io	;wreg free
  1492                           
  1493                           ;main.c: 223: setup_timer0();
  1494  00238E  EC25  F012         	call	_setup_timer0	;wreg free
  1495                           
  1496                           ;main.c: 225: setup_timer1();
  1497  002392  EC81  F011         	call	_setup_timer1	;wreg free
  1498                           
  1499                           ;main.c: 227: setup_timer2();
  1500  002396  EC16  F012         	call	_setup_timer2	;wreg free
  1501                           
  1502                           ;main.c: 230: setup_eeprom();
  1503  00239A  EC59  F012         	call	_setup_eeprom	;wreg free
  1504                           
  1505                           ;main.c: 233: IPEN = 1;
  1506  00239E  8ED0               	bsf	4048,7,c	;volatile
  1507                           
  1508                           ;main.c: 234: GIEH = 1;
  1509  0023A0  8EF2               	bsf	intcon,7,c	;volatile
  1510                           
  1511                           ;main.c: 235: GIEL = 0;
  1512  0023A2  9CF2               	bcf	intcon,6,c	;volatile
  1513                           
  1514                           ;main.c: 238: setup_watchdog();
  1515  0023A4  EC69  F012         	call	_setup_watchdog	;wreg free
  1516  0023A8  0012               	return		;funcret
  1517  0023AA                     __end_of_setup:
  1518                           	opt stack 0
  1519                           tblptru	equ	0xFF8
  1520                           tblptrh	equ	0xFF7
  1521                           tblptrl	equ	0xFF6
  1522                           tablat	equ	0xFF5
  1523                           intcon	equ	0xFF2
  1524                           postinc0	equ	0xFEE
  1525                           wreg	equ	0xFE8
  1526                           status	equ	0xFD8
  1527                           
  1528 ;; *************** function _setup_watchdog *****************
  1529 ;; Defined at:
  1530 ;;		line 376 in file "main.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		None
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1544 ;;      Params:         0       0       0       0       0       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1546 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1547 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1548 ;;Total ram usage:        0 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    5
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_setup
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text2
  1559  0024D2                     __ptext2:
  1560                           	opt stack 0
  1561  0024D2                     _setup_watchdog:
  1562                           	opt stack 24
  1563                           
  1564                           ;main.c: 379: SWDTEN = 1;
  1565                           
  1566                           ;incstack = 0
  1567  0024D2  80D1               	bsf	4049,0,c	;volatile
  1568  0024D4  0004               	clrwdt		;# 
  1569  0024D6  0012               	return		;funcret
  1570  0024D8                     __end_of_setup_watchdog:
  1571                           	opt stack 0
  1572                           tblptru	equ	0xFF8
  1573                           tblptrh	equ	0xFF7
  1574                           tblptrl	equ	0xFF6
  1575                           tablat	equ	0xFF5
  1576                           intcon	equ	0xFF2
  1577                           postinc0	equ	0xFEE
  1578                           wreg	equ	0xFE8
  1579                           status	equ	0xFD8
  1580                           
  1581 ;; *************** function _setup_timer2 *****************
  1582 ;; Defined at:
  1583 ;;		line 334 in file "main.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1597 ;;      Params:         0       0       0       0       0       0       0       0       0
  1598 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1600 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1601 ;;Total ram usage:        0 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; Hardware stack levels required when called:    5
  1604 ;; This function calls:
  1605 ;;		Nothing
  1606 ;; This function is called by:
  1607 ;;		_setup
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           	psect	text3
  1612  00242C                     __ptext3:
  1613                           	opt stack 0
  1614  00242C                     _setup_timer2:
  1615                           	opt stack 24
  1616                           
  1617                           ;main.c: 337: TMR2ON = 0;
  1618                           
  1619                           ;incstack = 0
  1620  00242C  94CA               	bcf	4042,2,c	;volatile
  1621                           
  1622                           ;main.c: 339: T2CKPS0 = 1;
  1623  00242E  80CA               	bsf	4042,0,c	;volatile
  1624                           
  1625                           ;main.c: 340: T2CKPS1 = 0;
  1626  002430  92CA               	bcf	4042,1,c	;volatile
  1627                           
  1628                           ;main.c: 342: TMR2 = 0;
  1629  002432  0E00               	movlw	0
  1630  002434  6ECC               	movwf	4044,c	;volatile
  1631                           
  1632                           ;main.c: 345: PR2 = 0xFF;
  1633  002436  68CB               	setf	4043,c	;volatile
  1634                           
  1635                           ;main.c: 347: T2OUTPS0 = 0;
  1636  002438  96CA               	bcf	4042,3,c	;volatile
  1637                           
  1638                           ;main.c: 348: T2OUTPS1 = 0;
  1639  00243A  98CA               	bcf	4042,4,c	;volatile
  1640                           
  1641                           ;main.c: 349: T2OUTPS2 = 0;
  1642  00243C  9ACA               	bcf	4042,5,c	;volatile
  1643                           
  1644                           ;main.c: 350: T2OUTPS3 = 0;
  1645  00243E  9CCA               	bcf	4042,6,c	;volatile
  1646                           
  1647                           ;main.c: 352: TMR2IE = 1;
  1648  002440  829D               	bsf	3997,1,c	;volatile
  1649                           
  1650                           ;main.c: 353: TMR2IF = 0;
  1651  002442  929E               	bcf	3998,1,c	;volatile
  1652                           
  1653                           ;main.c: 354: TMR2IP = 0;
  1654  002444  929F               	bcf	3999,1,c	;volatile
  1655                           
  1656                           ;main.c: 356: TMR2ON = 1;
  1657  002446  84CA               	bsf	4042,2,c	;volatile
  1658  002448  0012               	return		;funcret
  1659  00244A                     __end_of_setup_timer2:
  1660                           	opt stack 0
  1661                           tblptru	equ	0xFF8
  1662                           tblptrh	equ	0xFF7
  1663                           tblptrl	equ	0xFF6
  1664                           tablat	equ	0xFF5
  1665                           intcon	equ	0xFF2
  1666                           postinc0	equ	0xFEE
  1667                           wreg	equ	0xFE8
  1668                           status	equ	0xFD8
  1669                           
  1670 ;; *************** function _setup_timer1 *****************
  1671 ;; Defined at:
  1672 ;;		line 308 in file "main.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  tmp             2   24[BANK0 ] unsigned short 
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		wreg, status,2, status,0
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1686 ;;      Params:         0       0       0       0       0       0       0       0       0
  1687 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1688 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1689 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1690 ;;Total ram usage:        4 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; Hardware stack levels required when called:    5
  1693 ;; This function calls:
  1694 ;;		Nothing
  1695 ;; This function is called by:
  1696 ;;		_setup
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text4
  1701  002302                     __ptext4:
  1702                           	opt stack 0
  1703  002302                     _setup_timer1:
  1704                           	opt stack 24
  1705                           
  1706                           ;main.c: 311: TMR1ON = 0;
  1707                           
  1708                           ;incstack = 0
  1709  002302  90CD               	bcf	4045,0,c	;volatile
  1710                           
  1711                           ;main.c: 313: T1RD16 = 1;
  1712  002304  8ECD               	bsf	4045,7,c	;volatile
  1713                           
  1714                           ;main.c: 315: T1RUN = 0;
  1715  002306  9CCD               	bcf	4045,6,c	;volatile
  1716                           
  1717                           ;main.c: 316: TMR1CS = 0;
  1718  002308  92CD               	bcf	4045,1,c	;volatile
  1719                           
  1720                           ;main.c: 318: TMR1IE = 1;
  1721  00230A  809D               	bsf	3997,0,c	;volatile
  1722                           
  1723                           ;main.c: 319: TMR1IF = 0;
  1724  00230C  909E               	bcf	3998,0,c	;volatile
  1725                           
  1726                           ;main.c: 320: TMR1IP = 1;
  1727  00230E  809F               	bsf	3999,0,c	;volatile
  1728                           
  1729                           ;main.c: 324: T1CKPS0 = T1CKPS1 = 1;
  1730  002310  8ACD               	bsf	4045,5,c	;volatile
  1731  002312  88CD               	bsf	4045,4,c	;volatile
  1732                           
  1733                           ;main.c: 326: unsigned short tmp = (500000UL / 32U);
  1734  002314  0E3D               	movlw	61
  1735  002316  0100               	movlb	0	; () banked
  1736  002318  6F79               	movwf	(setup_timer1@tmp+1)& (0+255),b
  1737  00231A  0E09               	movlw	9
  1738  00231C  6F78               	movwf	setup_timer1@tmp& (0+255),b
  1739                           
  1740                           ; BSR set to: 0
  1741                           ;main.c: 327: TMR1 = 0xFFFFU - tmp;
  1742  00231E  C078  F076         	movff	setup_timer1@tmp,??_setup_timer1
  1743  002322  C079  F077         	movff	setup_timer1@tmp+1,??_setup_timer1+1
  1744  002326  0100               	movlb	0	; () banked
  1745  002328  1F76               	comf	??_setup_timer1& (0+255),f,b
  1746  00232A  1F77               	comf	(??_setup_timer1+1)& (0+255),f,b
  1747  00232C  4B76               	infsnz	??_setup_timer1& (0+255),f,b
  1748  00232E  2B77               	incf	(??_setup_timer1+1)& (0+255),f,b
  1749  002330  0EFF               	movlw	255
  1750  002332  0100               	movlb	0	; () banked
  1751  002334  2576               	addwf	??_setup_timer1& (0+255),w,b
  1752  002336  6ECE               	movwf	4046,c	;volatile
  1753  002338  0EFF               	movlw	255
  1754  00233A  0100               	movlb	0	; () banked
  1755  00233C  2177               	addwfc	(??_setup_timer1+1)& (0+255),w,b
  1756  00233E  6ECF               	movwf	4047,c	;volatile
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;main.c: 329: TMR1ON = 1;
  1760  002340  80CD               	bsf	4045,0,c	;volatile
  1761                           
  1762                           ; BSR set to: 0
  1763  002342  0012               	return		;funcret
  1764  002344                     __end_of_setup_timer1:
  1765                           	opt stack 0
  1766                           tblptru	equ	0xFF8
  1767                           tblptrh	equ	0xFF7
  1768                           tblptrl	equ	0xFF6
  1769                           tablat	equ	0xFF5
  1770                           intcon	equ	0xFF2
  1771                           postinc0	equ	0xFEE
  1772                           wreg	equ	0xFE8
  1773                           status	equ	0xFD8
  1774                           
  1775 ;; *************** function _setup_timer0 *****************
  1776 ;; Defined at:
  1777 ;;		line 286 in file "main.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;		None
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;		None
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1791 ;;      Params:         0       0       0       0       0       0       0       0       0
  1792 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1793 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1794 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1795 ;;Total ram usage:        0 bytes
  1796 ;; Hardware stack levels used:    1
  1797 ;; Hardware stack levels required when called:    5
  1798 ;; This function calls:
  1799 ;;		Nothing
  1800 ;; This function is called by:
  1801 ;;		_setup
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           	psect	text5
  1806  00244A                     __ptext5:
  1807                           	opt stack 0
  1808  00244A                     _setup_timer0:
  1809                           	opt stack 24
  1810                           
  1811                           ;main.c: 289: TMR0ON = 0;
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;incstack = 0
  1815  00244A  9ED5               	bcf	4053,7,c	;volatile
  1816                           
  1817                           ;main.c: 291: TMR0 = 0;
  1818  00244C  0E00               	movlw	0
  1819  00244E  6ED7               	movwf	4055,c	;volatile
  1820  002450  0E00               	movlw	0
  1821  002452  6ED6               	movwf	4054,c	;volatile
  1822                           
  1823                           ;main.c: 293: T08BIT = 0;
  1824  002454  9CD5               	bcf	4053,6,c	;volatile
  1825                           
  1826                           ;main.c: 295: T0CS = 1;
  1827  002456  8AD5               	bsf	4053,5,c	;volatile
  1828                           
  1829                           ;main.c: 297: T0IE = 1;
  1830  002458  8AF2               	bsf	intcon,5,c	;volatile
  1831                           
  1832                           ;main.c: 298: T0IF = 0;
  1833  00245A  94F2               	bcf	intcon,2,c	;volatile
  1834                           
  1835                           ;main.c: 299: T0IP = 0;
  1836  00245C  94F1               	bcf	intcon2,2,c	;volatile
  1837                           
  1838                           ;main.c: 301: PSA = 0;
  1839  00245E  96D5               	bcf	4053,3,c	;volatile
  1840                           
  1841                           ;main.c: 303: T0PS0 = T0PS1 = T0PS2 = 1;
  1842  002460  84D5               	bsf	4053,2,c	;volatile
  1843  002462  82D5               	bsf	4053,1,c	;volatile
  1844  002464  80D5               	bsf	4053,0,c	;volatile
  1845  002466  0012               	return		;funcret
  1846  002468                     __end_of_setup_timer0:
  1847                           	opt stack 0
  1848                           tblptru	equ	0xFF8
  1849                           tblptrh	equ	0xFF7
  1850                           tblptrl	equ	0xFF6
  1851                           tablat	equ	0xFF5
  1852                           intcon	equ	0xFF2
  1853                           intcon2	equ	0xFF1
  1854                           postinc0	equ	0xFEE
  1855                           wreg	equ	0xFE8
  1856                           status	equ	0xFD8
  1857                           
  1858 ;; *************** function _setup_therm *****************
  1859 ;; Defined at:
  1860 ;;		line 260 in file "main.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		None
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1874 ;;      Params:         0       0       0       0       0       0       0       0       0
  1875 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1876 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1877 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1878 ;;Total ram usage:        0 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; Hardware stack levels required when called:    5
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_setup
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           	psect	text6
  1889  002404                     __ptext6:
  1890                           	opt stack 0
  1891  002404                     _setup_therm:
  1892                           	opt stack 24
  1893                           
  1894                           ;main.c: 264: TRISA0 = 1;
  1895                           
  1896                           ;incstack = 0
  1897  002404  8092               	bsf	3986,0,c	;volatile
  1898                           
  1899                           ;main.c: 266: ADON = 1;
  1900  002406  80C2               	bsf	4034,0,c	;volatile
  1901                           
  1902                           ;main.c: 267: ADIE = 0;
  1903  002408  9C9D               	bcf	3997,6,c	;volatile
  1904                           
  1905                           ;main.c: 268: ADIP = 0;
  1906  00240A  9C9F               	bcf	3999,6,c	;volatile
  1907                           
  1908                           ;main.c: 269: ADIF = 0;
  1909  00240C  9C9E               	bcf	3998,6,c	;volatile
  1910                           
  1911                           ;main.c: 271: CHS0 = CHS1 = CHS2 = CHS3 = 0;
  1912  00240E  9AC2               	bcf	4034,5,c	;volatile
  1913  002410  98C2               	bcf	4034,4,c	;volatile
  1914  002412  96C2               	bcf	4034,3,c	;volatile
  1915  002414  94C2               	bcf	4034,2,c	;volatile
  1916                           
  1917                           ;main.c: 273: PCFG0 = 0;
  1918  002416  90C1               	bcf	4033,0,c	;volatile
  1919                           
  1920                           ;main.c: 274: PCFG1 = PCFG2 = PCFG3 = 1;
  1921  002418  86C1               	bsf	4033,3,c	;volatile
  1922  00241A  84C1               	bsf	4033,2,c	;volatile
  1923  00241C  82C1               	bsf	4033,1,c	;volatile
  1924                           
  1925                           ;main.c: 276: ACQT2 = 1;
  1926  00241E  8AC0               	bsf	4032,5,c	;volatile
  1927                           
  1928                           ;main.c: 277: ACQT1 = ACQT0 = 0;
  1929  002420  96C0               	bcf	4032,3,c	;volatile
  1930  002422  98C0               	bcf	4032,4,c	;volatile
  1931                           
  1932                           ;main.c: 279: ADCS2 = 1;
  1933  002424  84C0               	bsf	4032,2,c	;volatile
  1934                           
  1935                           ;main.c: 280: ADCS1 = 0;
  1936  002426  92C0               	bcf	4032,1,c	;volatile
  1937                           
  1938                           ;main.c: 281: ADCS0 = 1;
  1939  002428  80C0               	bsf	4032,0,c	;volatile
  1940  00242A  0012               	return		;funcret
  1941  00242C                     __end_of_setup_therm:
  1942                           	opt stack 0
  1943                           tblptru	equ	0xFF8
  1944                           tblptrh	equ	0xFF7
  1945                           tblptrl	equ	0xFF6
  1946                           tablat	equ	0xFF5
  1947                           intcon	equ	0xFF2
  1948                           intcon2	equ	0xFF1
  1949                           postinc0	equ	0xFEE
  1950                           wreg	equ	0xFE8
  1951                           status	equ	0xFD8
  1952                           
  1953 ;; *************** function _setup_io *****************
  1954 ;; Defined at:
  1955 ;;		line 241 in file "main.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;		None
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		None
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1969 ;;      Params:         0       0       0       0       0       0       0       0       0
  1970 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1972 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1973 ;;Total ram usage:        0 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; Hardware stack levels required when called:    5
  1976 ;; This function calls:
  1977 ;;		Nothing
  1978 ;; This function is called by:
  1979 ;;		_setup
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           	psect	text7
  1984  002484                     __ptext7:
  1985                           	opt stack 0
  1986  002484                     _setup_io:
  1987                           	opt stack 24
  1988                           
  1989                           ;main.c: 244: nRBPU = 0;
  1990                           
  1991                           ;incstack = 0
  1992  002484  9EF1               	bcf	intcon2,7,c	;volatile
  1993                           
  1994                           ;main.c: 246: TRISA3 = 0;
  1995  002486  9692               	bcf	3986,3,c	;volatile
  1996                           
  1997                           ;main.c: 247: TRISA3 = 1;
  1998  002488  8692               	bsf	3986,3,c	;volatile
  1999                           
  2000                           ;main.c: 248: TRISA4 = 0;
  2001  00248A  9892               	bcf	3986,4,c	;volatile
  2002                           
  2003                           ;main.c: 249: TRISA4 = 1;
  2004  00248C  8892               	bsf	3986,4,c	;volatile
  2005                           
  2006                           ;main.c: 250: TRISA2 = 0;
  2007  00248E  9492               	bcf	3986,2,c	;volatile
  2008                           
  2009                           ;main.c: 251: LATA2 = 1;
  2010  002490  8489               	bsf	3977,2,c	;volatile
  2011                           
  2012                           ;main.c: 252: TRISA5 = 0;
  2013  002492  9A92               	bcf	3986,5,c	;volatile
  2014                           
  2015                           ;main.c: 253: LATA5 = 0;
  2016  002494  9A89               	bcf	3977,5,c	;volatile
  2017                           
  2018                           ;main.c: 255: TRISC1 = 0;
  2019  002496  9294               	bcf	3988,1,c	;volatile
  2020                           
  2021                           ;main.c: 256: TRISC2 = 0;
  2022  002498  9494               	bcf	3988,2,c	;volatile
  2023                           
  2024                           ;main.c: 257: TRISC0 = 0;
  2025  00249A  9094               	bcf	3988,0,c	;volatile
  2026  00249C  0012               	return		;funcret
  2027  00249E                     __end_of_setup_io:
  2028                           	opt stack 0
  2029                           tblptru	equ	0xFF8
  2030                           tblptrh	equ	0xFF7
  2031                           tblptrl	equ	0xFF6
  2032                           tablat	equ	0xFF5
  2033                           intcon	equ	0xFF2
  2034                           intcon2	equ	0xFF1
  2035                           postinc0	equ	0xFEE
  2036                           wreg	equ	0xFE8
  2037                           status	equ	0xFD8
  2038                           
  2039 ;; *************** function _setup_eeprom *****************
  2040 ;; Defined at:
  2041 ;;		line 359 in file "main.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;		None
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;		None
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		None
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2055 ;;      Params:         0       0       0       0       0       0       0       0       0
  2056 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2058 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2059 ;;Total ram usage:        0 bytes
  2060 ;; Hardware stack levels used:    1
  2061 ;; Hardware stack levels required when called:    5
  2062 ;; This function calls:
  2063 ;;		Nothing
  2064 ;; This function is called by:
  2065 ;;		_setup
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text8
  2070  0024B2                     __ptext8:
  2071                           	opt stack 0
  2072  0024B2                     _setup_eeprom:
  2073                           	opt stack 24
  2074                           
  2075                           ;main.c: 362: EEPGD = 0;
  2076                           
  2077                           ;incstack = 0
  2078  0024B2  9EA6               	bcf	4006,7,c	;volatile
  2079                           
  2080                           ;main.c: 363: CFGS = 0;
  2081  0024B4  9CA6               	bcf	4006,6,c	;volatile
  2082                           
  2083                           ;main.c: 365: FREE = 0;
  2084  0024B6  98A6               	bcf	4006,4,c	;volatile
  2085                           
  2086                           ;main.c: 367: WRERR = 0;
  2087  0024B8  96A6               	bcf	4006,3,c	;volatile
  2088                           
  2089                           ;main.c: 369: WREN = 0;
  2090  0024BA  94A6               	bcf	4006,2,c	;volatile
  2091                           
  2092                           ;main.c: 371: EEIE = 1;
  2093  0024BC  88A0               	bsf	4000,4,c	;volatile
  2094                           
  2095                           ;main.c: 372: EEIF = 0;
  2096  0024BE  98A1               	bcf	4001,4,c	;volatile
  2097                           
  2098                           ;main.c: 373: EEIP = 0;
  2099  0024C0  98A2               	bcf	4002,4,c	;volatile
  2100  0024C2  0012               	return		;funcret
  2101  0024C4                     __end_of_setup_eeprom:
  2102                           	opt stack 0
  2103                           tblptru	equ	0xFF8
  2104                           tblptrh	equ	0xFF7
  2105                           tblptrl	equ	0xFF6
  2106                           tablat	equ	0xFF5
  2107                           intcon	equ	0xFF2
  2108                           intcon2	equ	0xFF1
  2109                           postinc0	equ	0xFEE
  2110                           wreg	equ	0xFE8
  2111                           status	equ	0xFD8
  2112                           
  2113 ;; *************** function _get_temp *****************
  2114 ;; Defined at:
  2115 ;;		line 430 in file "main.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;		None
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  resistance      3   96[BANK0 ] void 
  2120 ;;  voltage         3   93[BANK0 ] void 
  2121 ;;  temp            3   81[BANK0 ] void 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  3   78[BANK0 ] float 
  2124 ;; Registers used:
  2125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2131 ;;      Params:         0       3       0       0       0       0       0       0       0
  2132 ;;      Locals:         0      18       0       0       0       0       0       0       0
  2133 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2134 ;;      Totals:         0      21       0       0       0       0       0       0       0
  2135 ;;Total ram usage:       21 bytes
  2136 ;; Hardware stack levels used:    1
  2137 ;; Hardware stack levels required when called:    9
  2138 ;; This function calls:
  2139 ;;		___ftadd
  2140 ;;		___ftdiv
  2141 ;;		___ftmul
  2142 ;;		___ftneg
  2143 ;;		___lwtoft
  2144 ;;		_log
  2145 ;; This function is called by:
  2146 ;;		_main
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text9
  2151  000D62                     __ptext9:
  2152                           	opt stack 0
  2153  000D62                     _get_temp:
  2154                           	opt stack 21
  2155                           
  2156                           ;main.c: 433: GO = 1;
  2157                           
  2158                           ;incstack = 0
  2159  000D62  82C2               	bsf	4034,1,c	;volatile
  2160  000D64                     l372:
  2161  000D64  B2C2               	btfsc	4034,1,c	;volatile
  2162  000D66  D7FE               	goto	l372
  2163                           
  2164                           ;main.c: 437: double voltage = ((double) ADRES) * 5.0 / ((double) (1L << 16));
  2165  000D68  0E00               	movlw	0
  2166  000D6A  0100               	movlb	0	; () banked
  2167  000D6C  6F91               	movwf	___ftmul@f2& (0+255),b
  2168  000D6E  0EA0               	movlw	160
  2169  000D70  0100               	movlb	0	; () banked
  2170  000D72  6F92               	movwf	(___ftmul@f2+1)& (0+255),b
  2171  000D74  0E40               	movlw	64
  2172  000D76  0100               	movlb	0	; () banked
  2173  000D78  6F93               	movwf	(___ftmul@f2+2)& (0+255),b
  2174  000D7A  CFC3 F07E          	movff	4035,___lwtoft@c	;volatile
  2175  000D7E  CFC4 F07F          	movff	4036,___lwtoft@c+1	;volatile
  2176  000D82  ECED  F011         	call	___lwtoft	;wreg free
  2177  000D86  C07E  F08E         	movff	?___lwtoft,___ftmul@f1
  2178  000D8A  C07F  F08F         	movff	?___lwtoft+1,___ftmul@f1+1
  2179  000D8E  C080  F090         	movff	?___lwtoft+2,___ftmul@f1+2
  2180  000D92  ECA1  F007         	call	___ftmul	;wreg free
  2181  000D96  C08E  F09D         	movff	?___ftmul,___ftdiv@f1
  2182  000D9A  C08F  F09E         	movff	?___ftmul+1,___ftdiv@f1+1
  2183  000D9E  C090  F09F         	movff	?___ftmul+2,___ftdiv@f1+2
  2184  000DA2  0E00               	movlw	0
  2185  000DA4  0100               	movlb	0	; () banked
  2186  000DA6  6FA0               	movwf	___ftdiv@f2& (0+255),b
  2187  000DA8  0E80               	movlw	128
  2188  000DAA  0100               	movlb	0	; () banked
  2189  000DAC  6FA1               	movwf	(___ftdiv@f2+1)& (0+255),b
  2190  000DAE  0E47               	movlw	71
  2191  000DB0  0100               	movlb	0	; () banked
  2192  000DB2  6FA2               	movwf	(___ftdiv@f2+2)& (0+255),b
  2193  000DB4  ECF8  F008         	call	___ftdiv	;wreg free
  2194  000DB8  C09D  F0BD         	movff	?___ftdiv,get_temp@voltage
  2195  000DBC  C09E  F0BE         	movff	?___ftdiv+1,get_temp@voltage+1
  2196  000DC0  C09F  F0BF         	movff	?___ftdiv+2,get_temp@voltage+2
  2197                           
  2198                           ;main.c: 450: double resistance = (voltage / (5 - voltage)) * (1.00e3);
  2199  000DC4  0E00               	movlw	0
  2200  000DC6  0100               	movlb	0	; () banked
  2201  000DC8  6F85               	movwf	___ftadd@f2& (0+255),b
  2202  000DCA  0EA0               	movlw	160
  2203  000DCC  0100               	movlb	0	; () banked
  2204  000DCE  6F86               	movwf	(___ftadd@f2+1)& (0+255),b
  2205  000DD0  0E40               	movlw	64
  2206  000DD2  0100               	movlb	0	; () banked
  2207  000DD4  6F87               	movwf	(___ftadd@f2+2)& (0+255),b
  2208  000DD6  C0BD  F076         	movff	get_temp@voltage,___ftneg@f1
  2209  000DDA  C0BE  F077         	movff	get_temp@voltage+1,___ftneg@f1+1
  2210  000DDE  C0BF  F078         	movff	get_temp@voltage+2,___ftneg@f1+2
  2211  000DE2  ECD5  F011         	call	___ftneg	;wreg free
  2212  000DE6  C076  F082         	movff	?___ftneg,___ftadd@f1
  2213  000DEA  C077  F083         	movff	?___ftneg+1,___ftadd@f1+1
  2214  000DEE  C078  F084         	movff	?___ftneg+2,___ftadd@f1+2
  2215  000DF2  EC7D  F005         	call	___ftadd	;wreg free
  2216  000DF6  C082  F0A0         	movff	?___ftadd,___ftdiv@f2
  2217  000DFA  C083  F0A1         	movff	?___ftadd+1,___ftdiv@f2+1
  2218  000DFE  C084  F0A2         	movff	?___ftadd+2,___ftdiv@f2+2
  2219  000E02  C0BD  F09D         	movff	get_temp@voltage,___ftdiv@f1
  2220  000E06  C0BE  F09E         	movff	get_temp@voltage+1,___ftdiv@f1+1
  2221  000E0A  C0BF  F09F         	movff	get_temp@voltage+2,___ftdiv@f1+2
  2222  000E0E  ECF8  F008         	call	___ftdiv	;wreg free
  2223  000E12  C09D  F08E         	movff	?___ftdiv,___ftmul@f1
  2224  000E16  C09E  F08F         	movff	?___ftdiv+1,___ftmul@f1+1
  2225  000E1A  C09F  F090         	movff	?___ftdiv+2,___ftmul@f1+2
  2226  000E1E  0E00               	movlw	0
  2227  000E20  0100               	movlb	0	; () banked
  2228  000E22  6F91               	movwf	___ftmul@f2& (0+255),b
  2229  000E24  0E7A               	movlw	122
  2230  000E26  0100               	movlb	0	; () banked
  2231  000E28  6F92               	movwf	(___ftmul@f2+1)& (0+255),b
  2232  000E2A  0E44               	movlw	68
  2233  000E2C  0100               	movlb	0	; () banked
  2234  000E2E  6F93               	movwf	(___ftmul@f2+2)& (0+255),b
  2235  000E30  ECA1  F007         	call	___ftmul	;wreg free
  2236  000E34  C08E  F0C0         	movff	?___ftmul,get_temp@resistance
  2237  000E38  C08F  F0C1         	movff	?___ftmul+1,get_temp@resistance+1
  2238  000E3C  C090  F0C2         	movff	?___ftmul+2,get_temp@resistance+2
  2239                           
  2240                           ;main.c: 452: double temp = (1 / ((1) + (1) * log(resistance) + (1) * log(resistance)));
  2241  000E40  C0C0  F0A9         	movff	get_temp@resistance,log@x
  2242  000E44  C0C1  F0AA         	movff	get_temp@resistance+1,log@x+1
  2243  000E48  C0C2  F0AB         	movff	get_temp@resistance+2,log@x+2
  2244  000E4C  EC50  F008         	call	_log	;wreg free
  2245  000E50  C0A9  F0B4         	movff	?_log,_get_temp$969
  2246  000E54  C0AA  F0B5         	movff	?_log+1,_get_temp$969+1
  2247  000E58  C0AB  F0B6         	movff	?_log+2,_get_temp$969+2
  2248                           
  2249                           ;main.c: 452: double temp = (1 / ((1) + (1) * log(resistance) + (1) * log(resistance)));
  2250  000E5C  C0C0  F0A9         	movff	get_temp@resistance,log@x
  2251  000E60  C0C1  F0AA         	movff	get_temp@resistance+1,log@x+1
  2252  000E64  C0C2  F0AB         	movff	get_temp@resistance+2,log@x+2
  2253  000E68  EC50  F008         	call	_log	;wreg free
  2254  000E6C  C0A9  F0B7         	movff	?_log,_get_temp$970
  2255  000E70  C0AA  F0B8         	movff	?_log+1,_get_temp$970+1
  2256  000E74  C0AB  F0B9         	movff	?_log+2,_get_temp$970+2
  2257                           
  2258                           ;main.c: 452: double temp = (1 / ((1) + (1) * log(resistance) + (1) * log(resistance)));
  2259  000E78  0E00               	movlw	0
  2260  000E7A  0100               	movlb	0	; () banked
  2261  000E7C  6F91               	movwf	___ftmul@f2& (0+255),b
  2262  000E7E  0E80               	movlw	128
  2263  000E80  0100               	movlb	0	; () banked
  2264  000E82  6F92               	movwf	(___ftmul@f2+1)& (0+255),b
  2265  000E84  0E3F               	movlw	63
  2266  000E86  0100               	movlb	0	; () banked
  2267  000E88  6F93               	movwf	(___ftmul@f2+2)& (0+255),b
  2268  000E8A  C0B4  F08E         	movff	_get_temp$969,___ftmul@f1
  2269  000E8E  C0B5  F08F         	movff	_get_temp$969+1,___ftmul@f1+1
  2270  000E92  C0B6  F090         	movff	_get_temp$969+2,___ftmul@f1+2
  2271  000E96  ECA1  F007         	call	___ftmul	;wreg free
  2272  000E9A  C08E  F085         	movff	?___ftmul,___ftadd@f2
  2273  000E9E  C08F  F086         	movff	?___ftmul+1,___ftadd@f2+1
  2274  000EA2  C090  F087         	movff	?___ftmul+2,___ftadd@f2+2
  2275  000EA6  0E00               	movlw	0
  2276  000EA8  0100               	movlb	0	; () banked
  2277  000EAA  6F91               	movwf	___ftmul@f2& (0+255),b
  2278  000EAC  0E80               	movlw	128
  2279  000EAE  0100               	movlb	0	; () banked
  2280  000EB0  6F92               	movwf	(___ftmul@f2+1)& (0+255),b
  2281  000EB2  0E3F               	movlw	63
  2282  000EB4  0100               	movlb	0	; () banked
  2283  000EB6  6F93               	movwf	(___ftmul@f2+2)& (0+255),b
  2284  000EB8  C0B7  F08E         	movff	_get_temp$970,___ftmul@f1
  2285  000EBC  C0B8  F08F         	movff	_get_temp$970+1,___ftmul@f1+1
  2286  000EC0  C0B9  F090         	movff	_get_temp$970+2,___ftmul@f1+2
  2287  000EC4  ECA1  F007         	call	___ftmul	;wreg free
  2288  000EC8  C08E  F082         	movff	?___ftmul,___ftadd@f1
  2289  000ECC  C08F  F083         	movff	?___ftmul+1,___ftadd@f1+1
  2290  000ED0  C090  F084         	movff	?___ftmul+2,___ftadd@f1+2
  2291  000ED4  EC7D  F005         	call	___ftadd	;wreg free
  2292  000ED8  C082  F0BA         	movff	?___ftadd,_get_temp$971
  2293  000EDC  C083  F0BB         	movff	?___ftadd+1,_get_temp$971+1
  2294  000EE0  C084  F0BC         	movff	?___ftadd+2,_get_temp$971+2
  2295                           
  2296                           ;main.c: 452: double temp = (1 / ((1) + (1) * log(resistance) + (1) * log(resistance)));
  2297  000EE4  0E00               	movlw	0
  2298  000EE6  0100               	movlb	0	; () banked
  2299  000EE8  6F9D               	movwf	___ftdiv@f1& (0+255),b
  2300  000EEA  0E80               	movlw	128
  2301  000EEC  0100               	movlb	0	; () banked
  2302  000EEE  6F9E               	movwf	(___ftdiv@f1+1)& (0+255),b
  2303  000EF0  0E3F               	movlw	63
  2304  000EF2  0100               	movlb	0	; () banked
  2305  000EF4  6F9F               	movwf	(___ftdiv@f1+2)& (0+255),b
  2306  000EF6  0E00               	movlw	0
  2307  000EF8  0100               	movlb	0	; () banked
  2308  000EFA  6F85               	movwf	___ftadd@f2& (0+255),b
  2309  000EFC  0E80               	movlw	128
  2310  000EFE  0100               	movlb	0	; () banked
  2311  000F00  6F86               	movwf	(___ftadd@f2+1)& (0+255),b
  2312  000F02  0E3F               	movlw	63
  2313  000F04  0100               	movlb	0	; () banked
  2314  000F06  6F87               	movwf	(___ftadd@f2+2)& (0+255),b
  2315  000F08  C0BA  F082         	movff	_get_temp$971,___ftadd@f1
  2316  000F0C  C0BB  F083         	movff	_get_temp$971+1,___ftadd@f1+1
  2317  000F10  C0BC  F084         	movff	_get_temp$971+2,___ftadd@f1+2
  2318  000F14  EC7D  F005         	call	___ftadd	;wreg free
  2319  000F18  C082  F0A0         	movff	?___ftadd,___ftdiv@f2
  2320  000F1C  C083  F0A1         	movff	?___ftadd+1,___ftdiv@f2+1
  2321  000F20  C084  F0A2         	movff	?___ftadd+2,___ftdiv@f2+2
  2322  000F24  ECF8  F008         	call	___ftdiv	;wreg free
  2323  000F28  C09D  F0B1         	movff	?___ftdiv,get_temp@temp
  2324  000F2C  C09E  F0B2         	movff	?___ftdiv+1,get_temp@temp+1
  2325  000F30  C09F  F0B3         	movff	?___ftdiv+2,get_temp@temp+2
  2326                           
  2327                           ;main.c: 454: return temp;
  2328  000F34  C0B1  F0AE         	movff	get_temp@temp,?_get_temp
  2329  000F38  C0B2  F0AF         	movff	get_temp@temp+1,?_get_temp+1
  2330  000F3C  C0B3  F0B0         	movff	get_temp@temp+2,?_get_temp+2
  2331  000F40  0012               	return	
  2332  000F42                     __end_of_get_temp:
  2333                           	opt stack 0
  2334                           tblptru	equ	0xFF8
  2335                           tblptrh	equ	0xFF7
  2336                           tblptrl	equ	0xFF6
  2337                           tablat	equ	0xFF5
  2338                           intcon	equ	0xFF2
  2339                           intcon2	equ	0xFF1
  2340                           postinc0	equ	0xFEE
  2341                           wreg	equ	0xFE8
  2342                           status	equ	0xFD8
  2343                           
  2344 ;; *************** function _log *****************
  2345 ;; Defined at:
  2346 ;;		line 5 in file "/opt/microchip/xc8/v1.38/sources/common/log.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  x               3   73[BANK0 ] float 
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;  exponent        2   76[BANK0 ] int 
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  3   73[BANK0 ] int 
  2353 ;; Registers used:
  2354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2360 ;;      Params:         0       3       0       0       0       0       0       0       0
  2361 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2363 ;;      Totals:         0       5       0       0       0       0       0       0       0
  2364 ;;Total ram usage:        5 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    8
  2367 ;; This function calls:
  2368 ;;		___awtoft
  2369 ;;		___ftadd
  2370 ;;		___ftmul
  2371 ;;		_eval_poly
  2372 ;;		_frexp
  2373 ;; This function is called by:
  2374 ;;		_get_temp
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           	psect	text10
  2379  0010A0                     __ptext10:
  2380                           	opt stack 0
  2381  0010A0                     _log:
  2382                           	opt stack 21
  2383                           
  2384                           ;incstack = 0
  2385  0010A0  0100               	movlb	0	; () banked
  2386  0010A2  AFAB               	btfss	(log@x+2)& (0+255),7,b
  2387  0010A4  D00F               	goto	l2719
  2388                           
  2389                           ; BSR set to: 0
  2390  0010A6  0E00               	movlw	0
  2391  0010A8  0100               	movlb	0	; () banked
  2392  0010AA  6FCE               	movwf	(_errno+1)& (0+255),b
  2393  0010AC  0E21               	movlw	33
  2394  0010AE  6FCD               	movwf	_errno& (0+255),b
  2395  0010B0  0E00               	movlw	0
  2396  0010B2  0100               	movlb	0	; () banked
  2397  0010B4  6FA9               	movwf	?_log& (0+255),b
  2398  0010B6  0E00               	movlw	0
  2399  0010B8  0100               	movlb	0	; () banked
  2400  0010BA  6FAA               	movwf	(?_log+1)& (0+255),b
  2401  0010BC  0E00               	movlw	0
  2402  0010BE  0100               	movlb	0	; () banked
  2403  0010C0  6FAB               	movwf	(?_log+2)& (0+255),b
  2404                           
  2405                           ; BSR set to: 0
  2406  0010C2  0012               	return	
  2407  0010C4                     l2719:
  2408                           
  2409                           ; BSR set to: 0
  2410  0010C4  0100               	movlb	0	; () banked
  2411  0010C6  51A9               	movf	log@x& (0+255),w,b
  2412  0010C8  0100               	movlb	0	; () banked
  2413  0010CA  11AA               	iorwf	(log@x+1)& (0+255),w,b
  2414  0010CC  0100               	movlb	0	; () banked
  2415  0010CE  11AB               	iorwf	(log@x+2)& (0+255),w,b
  2416  0010D0  A4D8               	btfss	status,2,c
  2417  0010D2  D00F               	goto	l2725
  2418                           
  2419                           ; BSR set to: 0
  2420  0010D4  0E00               	movlw	0
  2421  0010D6  0100               	movlb	0	; () banked
  2422  0010D8  6FCE               	movwf	(_errno+1)& (0+255),b
  2423  0010DA  0E22               	movlw	34
  2424  0010DC  6FCD               	movwf	_errno& (0+255),b
  2425  0010DE  0E00               	movlw	0
  2426  0010E0  0100               	movlb	0	; () banked
  2427  0010E2  6FA9               	movwf	?_log& (0+255),b
  2428  0010E4  0E00               	movlw	0
  2429  0010E6  0100               	movlb	0	; () banked
  2430  0010E8  6FAA               	movwf	(?_log+1)& (0+255),b
  2431  0010EA  0E00               	movlw	0
  2432  0010EC  0100               	movlb	0	; () banked
  2433  0010EE  6FAB               	movwf	(?_log+2)& (0+255),b
  2434                           
  2435                           ; BSR set to: 0
  2436  0010F0  0012               	return	
  2437  0010F2                     l2725:
  2438                           
  2439                           ; BSR set to: 0
  2440  0010F2  0E00               	movlw	0
  2441  0010F4  0100               	movlb	0	; () banked
  2442  0010F6  6F91               	movwf	___ftmul@f2& (0+255),b
  2443  0010F8  0E00               	movlw	0
  2444  0010FA  0100               	movlb	0	; () banked
  2445  0010FC  6F92               	movwf	(___ftmul@f2+1)& (0+255),b
  2446  0010FE  0E40               	movlw	64
  2447  001100  0100               	movlb	0	; () banked
  2448  001102  6F93               	movwf	(___ftmul@f2+2)& (0+255),b
  2449  001104  0EAC               	movlw	low log@exponent
  2450  001106  0100               	movlb	0	; () banked
  2451  001108  6F79               	movwf	frexp@eptr& (0+255),b
  2452  00110A  0E00               	movlw	high log@exponent
  2453  00110C  0100               	movlb	0	; () banked
  2454  00110E  6F7A               	movwf	(frexp@eptr+1)& (0+255),b
  2455  001110  C0A9  F076         	movff	log@x,frexp@value
  2456  001114  C0AA  F077         	movff	log@x+1,frexp@value+1
  2457  001118  C0AB  F078         	movff	log@x+2,frexp@value+2
  2458  00111C  EC7D  F00F         	call	_frexp	;wreg free
  2459  001120  C076  F08E         	movff	?_frexp,___ftmul@f1
  2460  001124  C077  F08F         	movff	?_frexp+1,___ftmul@f1+1
  2461  001128  C078  F090         	movff	?_frexp+2,___ftmul@f1+2
  2462  00112C  ECA1  F007         	call	___ftmul	;wreg free
  2463  001130  C08E  F082         	movff	?___ftmul,___ftadd@f1
  2464  001134  C08F  F083         	movff	?___ftmul+1,___ftadd@f1+1
  2465  001138  C090  F084         	movff	?___ftmul+2,___ftadd@f1+2
  2466  00113C  0E00               	movlw	0
  2467  00113E  0100               	movlb	0	; () banked
  2468  001140  6F85               	movwf	___ftadd@f2& (0+255),b
  2469  001142  0E80               	movlw	128
  2470  001144  0100               	movlb	0	; () banked
  2471  001146  6F86               	movwf	(___ftadd@f2+1)& (0+255),b
  2472  001148  0EBF               	movlw	191
  2473  00114A  0100               	movlb	0	; () banked
  2474  00114C  6F87               	movwf	(___ftadd@f2+2)& (0+255),b
  2475  00114E  EC7D  F005         	call	___ftadd	;wreg free
  2476  001152  C082  F0A9         	movff	?___ftadd,log@x
  2477  001156  C083  F0AA         	movff	?___ftadd+1,log@x+1
  2478  00115A  C084  F0AB         	movff	?___ftadd+2,log@x+2
  2479  00115E  0100               	movlb	0	; () banked
  2480  001160  07AC               	decf	log@exponent& (0+255),f,b
  2481  001162  A0D8               	btfss	status,0,c
  2482  001164  07AD               	decf	(log@exponent+1)& (0+255),f,b
  2483                           
  2484                           ; BSR set to: 0
  2485  001166  C0A9  F09D         	movff	log@x,eval_poly@x
  2486  00116A  C0AA  F09E         	movff	log@x+1,eval_poly@x+1
  2487  00116E  C0AB  F09F         	movff	log@x+2,eval_poly@x+2
  2488  001172  0E0B               	movlw	low log@coeff
  2489  001174  0100               	movlb	0	; () banked
  2490  001176  6FA0               	movwf	eval_poly@d& (0+255),b
  2491  001178  0E08               	movlw	high log@coeff
  2492  00117A  0100               	movlb	0	; () banked
  2493  00117C  6FA1               	movwf	(eval_poly@d+1)& (0+255),b
  2494  00117E  0E00               	movlw	0
  2495  001180  0100               	movlb	0	; () banked
  2496  001182  6FA3               	movwf	(eval_poly@n+1)& (0+255),b
  2497  001184  0E08               	movlw	8
  2498  001186  6FA2               	movwf	eval_poly@n& (0+255),b
  2499  001188  ECB4  F00C         	call	_eval_poly	;wreg free
  2500  00118C  C09D  F0A9         	movff	?_eval_poly,log@x
  2501  001190  C09E  F0AA         	movff	?_eval_poly+1,log@x+1
  2502  001194  C09F  F0AB         	movff	?_eval_poly+2,log@x+2
  2503  001198  0E72               	movlw	114
  2504  00119A  0100               	movlb	0	; () banked
  2505  00119C  6F91               	movwf	___ftmul@f2& (0+255),b
  2506  00119E  0E31               	movlw	49
  2507  0011A0  0100               	movlb	0	; () banked
  2508  0011A2  6F92               	movwf	(___ftmul@f2+1)& (0+255),b
  2509  0011A4  0E3F               	movlw	63
  2510  0011A6  0100               	movlb	0	; () banked
  2511  0011A8  6F93               	movwf	(___ftmul@f2+2)& (0+255),b
  2512  0011AA  C0AC  F07E         	movff	log@exponent,___awtoft@c
  2513  0011AE  C0AD  F07F         	movff	log@exponent+1,___awtoft@c+1
  2514  0011B2  EC5F  F011         	call	___awtoft	;wreg free
  2515  0011B6  C07E  F08E         	movff	?___awtoft,___ftmul@f1
  2516  0011BA  C07F  F08F         	movff	?___awtoft+1,___ftmul@f1+1
  2517  0011BE  C080  F090         	movff	?___awtoft+2,___ftmul@f1+2
  2518  0011C2  ECA1  F007         	call	___ftmul	;wreg free
  2519  0011C6  C08E  F082         	movff	?___ftmul,___ftadd@f1
  2520  0011CA  C08F  F083         	movff	?___ftmul+1,___ftadd@f1+1
  2521  0011CE  C090  F084         	movff	?___ftmul+2,___ftadd@f1+2
  2522  0011D2  C0A9  F085         	movff	log@x,___ftadd@f2
  2523  0011D6  C0AA  F086         	movff	log@x+1,___ftadd@f2+1
  2524  0011DA  C0AB  F087         	movff	log@x+2,___ftadd@f2+2
  2525  0011DE  EC7D  F005         	call	___ftadd	;wreg free
  2526  0011E2  C082  F0A9         	movff	?___ftadd,?_log
  2527  0011E6  C083  F0AA         	movff	?___ftadd+1,?_log+1
  2528  0011EA  C084  F0AB         	movff	?___ftadd+2,?_log+2
  2529  0011EE  0012               	return	
  2530  0011F0                     __end_of_log:
  2531                           	opt stack 0
  2532                           tblptru	equ	0xFF8
  2533                           tblptrh	equ	0xFF7
  2534                           tblptrl	equ	0xFF6
  2535                           tablat	equ	0xFF5
  2536                           intcon	equ	0xFF2
  2537                           intcon2	equ	0xFF1
  2538                           postinc0	equ	0xFEE
  2539                           wreg	equ	0xFE8
  2540                           status	equ	0xFD8
  2541                           
  2542 ;; *************** function _frexp *****************
  2543 ;; Defined at:
  2544 ;;		line 254 in file "/opt/microchip/xc8/v1.38/sources/common/frexp.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  value           3   22[BANK0 ] int 
  2547 ;;  eptr            2   25[BANK0 ] PTR int 
  2548 ;;		 -> log@exponent(2), 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  3   22[BANK0 ] PTR int 
  2553 ;; Registers used:
  2554 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2560 ;;      Params:         0       5       0       0       0       0       0       0       0
  2561 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2562 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2563 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2564 ;;Total ram usage:        7 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:    5
  2567 ;; This function calls:
  2568 ;;		Nothing
  2569 ;; This function is called by:
  2570 ;;		_log
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text11
  2575  001EFA                     __ptext11:
  2576                           	opt stack 0
  2577  001EFA                     _frexp:
  2578                           	opt stack 23
  2579                           
  2580                           ;incstack = 0
  2581  001EFA  0100               	movlb	0	; () banked
  2582  001EFC  5176               	movf	frexp@value& (0+255),w,b
  2583  001EFE  0100               	movlb	0	; () banked
  2584  001F00  1177               	iorwf	(frexp@value+1)& (0+255),w,b
  2585  001F02  0100               	movlb	0	; () banked
  2586  001F04  1178               	iorwf	(frexp@value+2)& (0+255),w,b
  2587  001F06  A4D8               	btfss	status,2,c
  2588  001F08  D012               	goto	l2587
  2589                           
  2590                           ; BSR set to: 0
  2591  001F0A  C079  FFD9         	movff	frexp@eptr,fsr2l
  2592  001F0E  C07A  FFDA         	movff	frexp@eptr+1,fsr2h
  2593  001F12  0E00               	movlw	0
  2594  001F14  6EDE               	movwf	postinc2,c
  2595  001F16  0E00               	movlw	0
  2596  001F18  6EDD               	movwf	postdec2,c
  2597                           
  2598                           ; BSR set to: 0
  2599  001F1A  0E00               	movlw	0
  2600  001F1C  0100               	movlb	0	; () banked
  2601  001F1E  6F76               	movwf	?_frexp& (0+255),b
  2602  001F20  0E00               	movlw	0
  2603  001F22  0100               	movlb	0	; () banked
  2604  001F24  6F77               	movwf	(?_frexp+1)& (0+255),b
  2605  001F26  0E00               	movlw	0
  2606  001F28  0100               	movlb	0	; () banked
  2607  001F2A  6F78               	movwf	(?_frexp+2)& (0+255),b
  2608                           
  2609                           ; BSR set to: 0
  2610  001F2C  0012               	return	
  2611  001F2E                     l2587:
  2612                           
  2613                           ; BSR set to: 0
  2614  001F2E  0100               	movlb	0	; () banked
  2615  001F30  5178               	movf	(frexp@value+2)& (0+255),w,b
  2616  001F32  0B7F               	andlw	127
  2617  001F34  0100               	movlb	0	; () banked
  2618  001F36  6F7B               	movwf	??_frexp& (0+255),b
  2619  001F38  6B7C               	clrf	(??_frexp+1)& (0+255),b
  2620  001F3A  90D8               	bcf	status,0,c
  2621  001F3C  0100               	movlb	0	; () banked
  2622  001F3E  377B               	rlcf	??_frexp& (0+255),f,b
  2623  001F40  377C               	rlcf	(??_frexp+1)& (0+255),f,b
  2624  001F42  C079  FFD9         	movff	frexp@eptr,fsr2l
  2625  001F46  C07A  FFDA         	movff	frexp@eptr+1,fsr2h
  2626  001F4A  C07B  FFDE         	movff	??_frexp,postinc2
  2627  001F4E  C07C  FFDD         	movff	??_frexp+1,postdec2
  2628  001F52  0100               	movlb	0	; () banked
  2629  001F54  AF77               	btfss	(frexp@value+1)& (0+255),7,b
  2630  001F56  D004               	goto	u2910
  2631  001F58  0100               	movlb	0	; () banked
  2632  001F5A  6B7B               	clrf	??_frexp& (0+255),b
  2633  001F5C  2B7B               	incf	??_frexp& (0+255),f,b
  2634  001F5E  D002               	goto	u2918
  2635  001F60                     u2910:
  2636  001F60  0100               	movlb	0	; () banked
  2637  001F62  6B7B               	clrf	??_frexp& (0+255),b
  2638  001F64                     u2918:
  2639  001F64  0100               	movlb	0	; () banked
  2640  001F66  517B               	movf	??_frexp& (0+255),w,b
  2641  001F68  C079  FFD9         	movff	frexp@eptr,fsr2l
  2642  001F6C  C07A  FFDA         	movff	frexp@eptr+1,fsr2h
  2643  001F70  12DE               	iorwf	postinc2,f,c
  2644  001F72  0E00               	movlw	0
  2645  001F74  12DD               	iorwf	postdec2,f,c
  2646                           
  2647                           ; BSR set to: 0
  2648  001F76  C079  FFD9         	movff	frexp@eptr,fsr2l
  2649  001F7A  C07A  FFDA         	movff	frexp@eptr+1,fsr2h
  2650  001F7E  0E82               	movlw	130
  2651  001F80  26DE               	addwf	postinc2,f,c
  2652  001F82  0EFF               	movlw	255
  2653  001F84  22DD               	addwfc	postdec2,f,c
  2654                           
  2655                           ; BSR set to: 0
  2656  001F86  0100               	movlb	0	; () banked
  2657  001F88  8178               	bsf	(frexp@value+2)& (0+255),0,b
  2658  001F8A  8378               	bsf	(frexp@value+2)& (0+255),1,b
  2659  001F8C  8578               	bsf	(frexp@value+2)& (0+255),2,b
  2660  001F8E  8778               	bsf	(frexp@value+2)& (0+255),3,b
  2661  001F90  8978               	bsf	(frexp@value+2)& (0+255),4,b
  2662  001F92  8B78               	bsf	(frexp@value+2)& (0+255),5,b
  2663  001F94  9D78               	bcf	(frexp@value+2)& (0+255),6,b
  2664                           
  2665                           ; BSR set to: 0
  2666  001F96  0100               	movlb	0	; () banked
  2667  001F98  9F77               	bcf	(frexp@value+1)& (0+255),7,b
  2668                           
  2669                           ; BSR set to: 0
  2670  001F9A  C076  F076         	movff	frexp@value,?_frexp
  2671  001F9E  C077  F077         	movff	frexp@value+1,?_frexp+1
  2672  001FA2  C078  F078         	movff	frexp@value+2,?_frexp+2
  2673  001FA6  0012               	return	
  2674  001FA8                     __end_of_frexp:
  2675                           	opt stack 0
  2676                           tblptru	equ	0xFF8
  2677                           tblptrh	equ	0xFF7
  2678                           tblptrl	equ	0xFF6
  2679                           tablat	equ	0xFF5
  2680                           intcon	equ	0xFF2
  2681                           intcon2	equ	0xFF1
  2682                           postinc0	equ	0xFEE
  2683                           wreg	equ	0xFE8
  2684                           postinc2	equ	0xFDE
  2685                           postdec2	equ	0xFDD
  2686                           fsr2h	equ	0xFDA
  2687                           fsr2l	equ	0xFD9
  2688                           status	equ	0xFD8
  2689                           
  2690 ;; *************** function _eval_poly *****************
  2691 ;; Defined at:
  2692 ;;		line 4 in file "/opt/microchip/xc8/v1.38/sources/common/evalpoly.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  x               3   61[BANK0 ] PTR int 
  2695 ;;  d               2   64[BANK0 ] PTR const 
  2696 ;;		 -> log@coeff(27), 
  2697 ;;  n               2   66[BANK0 ] int 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;  res             3   70[BANK0 ] int 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  3   61[BANK0 ] int 
  2702 ;; Registers used:
  2703 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2709 ;;      Params:         0       7       0       0       0       0       0       0       0
  2710 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2711 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2712 ;;      Totals:         0      12       0       0       0       0       0       0       0
  2713 ;;Total ram usage:       12 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    7
  2716 ;; This function calls:
  2717 ;;		___ftadd
  2718 ;;		___ftmul
  2719 ;;		___wmul
  2720 ;; This function is called by:
  2721 ;;		_log
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text12
  2726  001968                     __ptext12:
  2727                           	opt stack 0
  2728  001968                     _eval_poly:
  2729                           	opt stack 21
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;incstack = 0
  2733  001968  C0A2  F076         	movff	eval_poly@n,___wmul@multiplier
  2734  00196C  C0A3  F077         	movff	eval_poly@n+1,___wmul@multiplier+1
  2735  001970  0E00               	movlw	0
  2736  001972  0100               	movlb	0	; () banked
  2737  001974  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2738  001976  0E03               	movlw	3
  2739  001978  6F78               	movwf	___wmul@multiplicand& (0+255),b
  2740  00197A  ECA2  F011         	call	___wmul	;wreg free
  2741  00197E  C0A0  F0A4         	movff	eval_poly@d,??_eval_poly
  2742  001982  C0A1  F0A5         	movff	eval_poly@d+1,??_eval_poly+1
  2743  001986  0100               	movlb	0	; () banked
  2744  001988  5176               	movf	?___wmul& (0+255),w,b
  2745  00198A  0100               	movlb	0	; () banked
  2746  00198C  27A4               	addwf	??_eval_poly& (0+255),f,b
  2747  00198E  0100               	movlb	0	; () banked
  2748  001990  5177               	movf	(?___wmul+1)& (0+255),w,b
  2749  001992  0100               	movlb	0	; () banked
  2750  001994  23A5               	addwfc	(??_eval_poly+1)& (0+255),f,b
  2751  001996  C0A4  FFF6         	movff	??_eval_poly,tblptrl
  2752  00199A  C0A5  FFF7         	movff	??_eval_poly+1,tblptrh
  2753  00199E                     	if	0	;tblptru may be non-zero
  2754  00199E                     	endif
  2755  00199E                     	if	0	;tblptru may be non-zero
  2756  00199E                     	endif
  2757  00199E  0009               	tblrd		*+
  2758  0019A0  CFF5 F0A6          	movff	tablat,eval_poly@res
  2759  0019A4  0009               	tblrd		*+
  2760  0019A6  CFF5 F0A7          	movff	tablat,eval_poly@res+1
  2761  0019AA  000A               	tblrd		*-
  2762  0019AC  CFF5 F0A8          	movff	tablat,eval_poly@res+2
  2763  0019B0  D044               	goto	l2603
  2764  0019B2                     l2601:
  2765                           
  2766                           ; BSR set to: 0
  2767  0019B2  C0A6  F091         	movff	eval_poly@res,___ftmul@f2
  2768  0019B6  C0A7  F092         	movff	eval_poly@res+1,___ftmul@f2+1
  2769  0019BA  C0A8  F093         	movff	eval_poly@res+2,___ftmul@f2+2
  2770  0019BE  C09D  F08E         	movff	eval_poly@x,___ftmul@f1
  2771  0019C2  C09E  F08F         	movff	eval_poly@x+1,___ftmul@f1+1
  2772  0019C6  C09F  F090         	movff	eval_poly@x+2,___ftmul@f1+2
  2773  0019CA  ECA1  F007         	call	___ftmul	;wreg free
  2774  0019CE  C08E  F082         	movff	?___ftmul,___ftadd@f1
  2775  0019D2  C08F  F083         	movff	?___ftmul+1,___ftadd@f1+1
  2776  0019D6  C090  F084         	movff	?___ftmul+2,___ftadd@f1+2
  2777  0019DA  0E00               	movlw	0
  2778  0019DC  0100               	movlb	0	; () banked
  2779  0019DE  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2780  0019E0  0E03               	movlw	3
  2781  0019E2  6F78               	movwf	___wmul@multiplicand& (0+255),b
  2782  0019E4  0100               	movlb	0	; () banked
  2783  0019E6  07A2               	decf	eval_poly@n& (0+255),f,b
  2784  0019E8  A0D8               	btfss	status,0,c
  2785  0019EA  07A3               	decf	(eval_poly@n+1)& (0+255),f,b
  2786  0019EC  C0A2  F076         	movff	eval_poly@n,___wmul@multiplier
  2787  0019F0  C0A3  F077         	movff	eval_poly@n+1,___wmul@multiplier+1
  2788  0019F4  ECA2  F011         	call	___wmul	;wreg free
  2789  0019F8  C0A0  F0A4         	movff	eval_poly@d,??_eval_poly
  2790  0019FC  C0A1  F0A5         	movff	eval_poly@d+1,??_eval_poly+1
  2791  001A00  0100               	movlb	0	; () banked
  2792  001A02  5176               	movf	?___wmul& (0+255),w,b
  2793  001A04  0100               	movlb	0	; () banked
  2794  001A06  27A4               	addwf	??_eval_poly& (0+255),f,b
  2795  001A08  0100               	movlb	0	; () banked
  2796  001A0A  5177               	movf	(?___wmul+1)& (0+255),w,b
  2797  001A0C  0100               	movlb	0	; () banked
  2798  001A0E  23A5               	addwfc	(??_eval_poly+1)& (0+255),f,b
  2799  001A10  C0A4  FFF6         	movff	??_eval_poly,tblptrl
  2800  001A14  C0A5  FFF7         	movff	??_eval_poly+1,tblptrh
  2801  001A18                     	if	0	;tblptru may be non-zero
  2802  001A18                     	endif
  2803  001A18                     	if	0	;tblptru may be non-zero
  2804  001A18                     	endif
  2805  001A18  0009               	tblrd		*+
  2806  001A1A  CFF5 F085          	movff	tablat,___ftadd@f2
  2807  001A1E  0009               	tblrd		*+
  2808  001A20  CFF5 F086          	movff	tablat,___ftadd@f2+1
  2809  001A24  000A               	tblrd		*-
  2810  001A26  CFF5 F087          	movff	tablat,___ftadd@f2+2
  2811  001A2A  EC7D  F005         	call	___ftadd	;wreg free
  2812  001A2E  C082  F0A6         	movff	?___ftadd,eval_poly@res
  2813  001A32  C083  F0A7         	movff	?___ftadd+1,eval_poly@res+1
  2814  001A36  C084  F0A8         	movff	?___ftadd+2,eval_poly@res+2
  2815  001A3A                     l2603:
  2816  001A3A  0100               	movlb	0	; () banked
  2817  001A3C  51A2               	movf	eval_poly@n& (0+255),w,b
  2818  001A3E  0100               	movlb	0	; () banked
  2819  001A40  11A3               	iorwf	(eval_poly@n+1)& (0+255),w,b
  2820  001A42  A4D8               	btfss	status,2,c
  2821  001A44  D7B6               	goto	l2601
  2822                           
  2823                           ; BSR set to: 0
  2824  001A46  C0A6  F09D         	movff	eval_poly@res,?_eval_poly
  2825  001A4A  C0A7  F09E         	movff	eval_poly@res+1,?_eval_poly+1
  2826  001A4E  C0A8  F09F         	movff	eval_poly@res+2,?_eval_poly+2
  2827                           
  2828                           ; BSR set to: 0
  2829  001A52  0012               	return		;funcret
  2830  001A54                     __end_of_eval_poly:
  2831                           	opt stack 0
  2832                           tblptru	equ	0xFF8
  2833                           tblptrh	equ	0xFF7
  2834                           tblptrl	equ	0xFF6
  2835                           tablat	equ	0xFF5
  2836                           intcon	equ	0xFF2
  2837                           intcon2	equ	0xFF1
  2838                           postinc0	equ	0xFEE
  2839                           wreg	equ	0xFE8
  2840                           postinc2	equ	0xFDE
  2841                           postdec2	equ	0xFDD
  2842                           fsr2h	equ	0xFDA
  2843                           fsr2l	equ	0xFD9
  2844                           status	equ	0xFD8
  2845                           
  2846 ;; *************** function ___wmul *****************
  2847 ;; Defined at:
  2848 ;;		line 15 in file "/opt/microchip/xc8/v1.38/sources/common/Umul16.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  multiplier      2   22[BANK0 ] unsigned int 
  2851 ;;  multiplicand    2   24[BANK0 ] unsigned int 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  product         2   26[BANK0 ] unsigned int 
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  2   22[BANK0 ] unsigned int 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0, prodl, prodh
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2863 ;;      Params:         0       4       0       0       0       0       0       0       0
  2864 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2865 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2866 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2867 ;;Total ram usage:        6 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    5
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_eval_poly
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text13
  2878  002344                     __ptext13:
  2879                           	opt stack 0
  2880  002344                     ___wmul:
  2881                           	opt stack 22
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;incstack = 0
  2885  002344  0100               	movlb	0	; () banked
  2886  002346  5176               	movf	___wmul@multiplier& (0+255),w,b
  2887  002348  0100               	movlb	0	; () banked
  2888  00234A  0378               	mulwf	___wmul@multiplicand& (0+255),b
  2889  00234C  CFF3 F07A          	movff	prodl,___wmul@product
  2890  002350  CFF4 F07B          	movff	prodh,___wmul@product+1
  2891  002354  0100               	movlb	0	; () banked
  2892  002356  5176               	movf	___wmul@multiplier& (0+255),w,b
  2893  002358  0100               	movlb	0	; () banked
  2894  00235A  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2895  00235C  50F3               	movf	prodl,w,c
  2896  00235E  0100               	movlb	0	; () banked
  2897  002360  277B               	addwf	(___wmul@product+1)& (0+255),f,b
  2898  002362  0100               	movlb	0	; () banked
  2899  002364  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2900  002366  0100               	movlb	0	; () banked
  2901  002368  0378               	mulwf	___wmul@multiplicand& (0+255),b
  2902  00236A  50F3               	movf	prodl,w,c
  2903  00236C  0100               	movlb	0	; () banked
  2904  00236E  277B               	addwf	(___wmul@product+1)& (0+255),f,b
  2905                           
  2906                           ; BSR set to: 0
  2907  002370  C07A  F076         	movff	___wmul@product,?___wmul
  2908  002374  C07B  F077         	movff	___wmul@product+1,?___wmul+1
  2909  002378  0012               	return	
  2910  00237A                     __end_of___wmul:
  2911                           	opt stack 0
  2912                           tblptru	equ	0xFF8
  2913                           tblptrh	equ	0xFF7
  2914                           tblptrl	equ	0xFF6
  2915                           tablat	equ	0xFF5
  2916                           prodh	equ	0xFF4
  2917                           prodl	equ	0xFF3
  2918                           intcon	equ	0xFF2
  2919                           intcon2	equ	0xFF1
  2920                           postinc0	equ	0xFEE
  2921                           wreg	equ	0xFE8
  2922                           postinc2	equ	0xFDE
  2923                           postdec2	equ	0xFDD
  2924                           fsr2h	equ	0xFDA
  2925                           fsr2l	equ	0xFD9
  2926                           status	equ	0xFD8
  2927                           
  2928 ;; *************** function ___ftmul *****************
  2929 ;; Defined at:
  2930 ;;		line 62 in file "/opt/microchip/xc8/v1.38/sources/common/ftmul.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  f1              3   46[BANK0 ] float 
  2933 ;;  f2              3   49[BANK0 ] float 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  f3_as_produc    3   56[BANK0 ] unsigned um
  2936 ;;  sign            1   60[BANK0 ] unsigned char 
  2937 ;;  cntr            1   59[BANK0 ] unsigned char 
  2938 ;;  exp             1   55[BANK0 ] unsigned char 
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  3   46[BANK0 ] float 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0, cstack
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2948 ;;      Params:         0       6       0       0       0       0       0       0       0
  2949 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2950 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2951 ;;      Totals:         0      15       0       0       0       0       0       0       0
  2952 ;;Total ram usage:       15 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; Hardware stack levels required when called:    6
  2955 ;; This function calls:
  2956 ;;		___ftpack
  2957 ;; This function is called by:
  2958 ;;		_get_temp
  2959 ;;		_log
  2960 ;;		_eval_poly
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text14
  2965  000F42                     __ptext14:
  2966                           	opt stack 0
  2967  000F42                     ___ftmul:
  2968                           	opt stack 21
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;incstack = 0
  2972  000F42  C090  F094         	movff	___ftmul@f1+2,??___ftmul
  2973  000F46  0100               	movlb	0	; () banked
  2974  000F48  6B95               	clrf	(??___ftmul+1)& (0+255),b
  2975  000F4A  6B96               	clrf	(??___ftmul+2)& (0+255),b
  2976  000F4C  0100               	movlb	0	; () banked
  2977  000F4E  358F               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  2978  000F50  0100               	movlb	0	; () banked
  2979  000F52  3794               	rlcf	??___ftmul& (0+255),f,b
  2980  000F54  E301               	bnc	u2631
  2981  000F56  8195               	bsf	(??___ftmul+1)& (0+255),0,b
  2982  000F58                     u2631:
  2983  000F58  0100               	movlb	0	; () banked
  2984  000F5A  5194               	movf	??___ftmul& (0+255),w,b
  2985  000F5C  0100               	movlb	0	; () banked
  2986  000F5E  6F97               	movwf	___ftmul@exp& (0+255),b
  2987  000F60  0100               	movlb	0	; () banked
  2988  000F62  5197               	movf	___ftmul@exp& (0+255),w,b
  2989  000F64  A4D8               	btfss	status,2,c
  2990  000F66  D00A               	goto	l2479
  2991                           
  2992                           ; BSR set to: 0
  2993  000F68  0E00               	movlw	0
  2994  000F6A  0100               	movlb	0	; () banked
  2995  000F6C  6F8E               	movwf	?___ftmul& (0+255),b
  2996  000F6E  0E00               	movlw	0
  2997  000F70  0100               	movlb	0	; () banked
  2998  000F72  6F8F               	movwf	(?___ftmul+1)& (0+255),b
  2999  000F74  0E00               	movlw	0
  3000  000F76  0100               	movlb	0	; () banked
  3001  000F78  6F90               	movwf	(?___ftmul+2)& (0+255),b
  3002                           
  3003                           ; BSR set to: 0
  3004  000F7A  0012               	return	
  3005  000F7C                     l2479:
  3006                           
  3007                           ; BSR set to: 0
  3008  000F7C  C093  F094         	movff	___ftmul@f2+2,??___ftmul
  3009  000F80  0100               	movlb	0	; () banked
  3010  000F82  6B95               	clrf	(??___ftmul+1)& (0+255),b
  3011  000F84  6B96               	clrf	(??___ftmul+2)& (0+255),b
  3012  000F86  0100               	movlb	0	; () banked
  3013  000F88  3592               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  3014  000F8A  0100               	movlb	0	; () banked
  3015  000F8C  3794               	rlcf	??___ftmul& (0+255),f,b
  3016  000F8E  E301               	bnc	u2651
  3017  000F90  8195               	bsf	(??___ftmul+1)& (0+255),0,b
  3018  000F92                     u2651:
  3019  000F92  0100               	movlb	0	; () banked
  3020  000F94  5194               	movf	??___ftmul& (0+255),w,b
  3021  000F96  0100               	movlb	0	; () banked
  3022  000F98  6F9C               	movwf	___ftmul@sign& (0+255),b
  3023  000F9A  0100               	movlb	0	; () banked
  3024  000F9C  519C               	movf	___ftmul@sign& (0+255),w,b
  3025  000F9E  A4D8               	btfss	status,2,c
  3026  000FA0  D00A               	goto	l2485
  3027                           
  3028                           ; BSR set to: 0
  3029  000FA2  0E00               	movlw	0
  3030  000FA4  0100               	movlb	0	; () banked
  3031  000FA6  6F8E               	movwf	?___ftmul& (0+255),b
  3032  000FA8  0E00               	movlw	0
  3033  000FAA  0100               	movlb	0	; () banked
  3034  000FAC  6F8F               	movwf	(?___ftmul+1)& (0+255),b
  3035  000FAE  0E00               	movlw	0
  3036  000FB0  0100               	movlb	0	; () banked
  3037  000FB2  6F90               	movwf	(?___ftmul+2)& (0+255),b
  3038                           
  3039                           ; BSR set to: 0
  3040  000FB4  0012               	return	
  3041  000FB6                     l2485:
  3042                           
  3043                           ; BSR set to: 0
  3044  000FB6  0100               	movlb	0	; () banked
  3045  000FB8  519C               	movf	___ftmul@sign& (0+255),w,b
  3046  000FBA  0F7B               	addlw	123
  3047  000FBC  0100               	movlb	0	; () banked
  3048  000FBE  2797               	addwf	___ftmul@exp& (0+255),f,b
  3049                           
  3050                           ; BSR set to: 0
  3051  000FC0  C090  F09C         	movff	___ftmul@f1+2,___ftmul@sign
  3052  000FC4  0100               	movlb	0	; () banked
  3053  000FC6  5193               	movf	(___ftmul@f2+2)& (0+255),w,b
  3054  000FC8  0100               	movlb	0	; () banked
  3055  000FCA  1B9C               	xorwf	___ftmul@sign& (0+255),f,b
  3056  000FCC  0E80               	movlw	128
  3057  000FCE  0100               	movlb	0	; () banked
  3058  000FD0  179C               	andwf	___ftmul@sign& (0+255),f,b
  3059                           
  3060                           ; BSR set to: 0
  3061  000FD2  0100               	movlb	0	; () banked
  3062  000FD4  8F8F               	bsf	(___ftmul@f1+1)& (0+255),7,b
  3063                           
  3064                           ; BSR set to: 0
  3065  000FD6  0100               	movlb	0	; () banked
  3066  000FD8  8F92               	bsf	(___ftmul@f2+1)& (0+255),7,b
  3067                           
  3068                           ; BSR set to: 0
  3069  000FDA  0EFF               	movlw	255
  3070  000FDC  0100               	movlb	0	; () banked
  3071  000FDE  1791               	andwf	___ftmul@f2& (0+255),f,b
  3072  000FE0  0EFF               	movlw	255
  3073  000FE2  0100               	movlb	0	; () banked
  3074  000FE4  1792               	andwf	(___ftmul@f2+1)& (0+255),f,b
  3075  000FE6  0E00               	movlw	0
  3076  000FE8  0100               	movlb	0	; () banked
  3077  000FEA  1793               	andwf	(___ftmul@f2+2)& (0+255),f,b
  3078                           
  3079                           ; BSR set to: 0
  3080  000FEC  0E00               	movlw	0
  3081  000FEE  0100               	movlb	0	; () banked
  3082  000FF0  6F98               	movwf	___ftmul@f3_as_product& (0+255),b
  3083  000FF2  0E00               	movlw	0
  3084  000FF4  0100               	movlb	0	; () banked
  3085  000FF6  6F99               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  3086  000FF8  0E00               	movlw	0
  3087  000FFA  0100               	movlb	0	; () banked
  3088  000FFC  6F9A               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  3089                           
  3090                           ; BSR set to: 0
  3091  000FFE  0E07               	movlw	7
  3092  001000  0100               	movlb	0	; () banked
  3093  001002  6F9B               	movwf	___ftmul@cntr& (0+255),b
  3094  001004                     l2499:
  3095                           
  3096                           ; BSR set to: 0
  3097  001004  0100               	movlb	0	; () banked
  3098  001006  A18E               	btfss	___ftmul@f1& (0+255),0,b
  3099  001008  D00C               	goto	l2503
  3100                           
  3101                           ; BSR set to: 0
  3102  00100A  0100               	movlb	0	; () banked
  3103  00100C  5191               	movf	___ftmul@f2& (0+255),w,b
  3104  00100E  0100               	movlb	0	; () banked
  3105  001010  2798               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3106  001012  0100               	movlb	0	; () banked
  3107  001014  5192               	movf	(___ftmul@f2+1)& (0+255),w,b
  3108  001016  0100               	movlb	0	; () banked
  3109  001018  2399               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3110  00101A  0100               	movlb	0	; () banked
  3111  00101C  5193               	movf	(___ftmul@f2+2)& (0+255),w,b
  3112  00101E  0100               	movlb	0	; () banked
  3113  001020  239A               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3114  001022                     l2503:
  3115                           
  3116                           ; BSR set to: 0
  3117  001022  0100               	movlb	0	; () banked
  3118  001024  90D8               	bcf	status,0,c
  3119  001026  3390               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3120  001028  338F               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3121  00102A  338E               	rrcf	___ftmul@f1& (0+255),f,b
  3122  00102C  0100               	movlb	0	; () banked
  3123  00102E  90D8               	bcf	status,0,c
  3124  001030  3791               	rlcf	___ftmul@f2& (0+255),f,b
  3125  001032  3792               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  3126  001034  3793               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  3127                           
  3128                           ; BSR set to: 0
  3129  001036  0100               	movlb	0	; () banked
  3130  001038  2F9B               	decfsz	___ftmul@cntr& (0+255),f,b
  3131  00103A  D7E4               	goto	l2499
  3132                           
  3133                           ; BSR set to: 0
  3134                           
  3135                           ; BSR set to: 0
  3136  00103C  0E09               	movlw	9
  3137  00103E  0100               	movlb	0	; () banked
  3138  001040  6F9B               	movwf	___ftmul@cntr& (0+255),b
  3139  001042                     l2509:
  3140                           
  3141                           ; BSR set to: 0
  3142  001042  0100               	movlb	0	; () banked
  3143  001044  A18E               	btfss	___ftmul@f1& (0+255),0,b
  3144  001046  D00C               	goto	l2513
  3145                           
  3146                           ; BSR set to: 0
  3147  001048  0100               	movlb	0	; () banked
  3148  00104A  5191               	movf	___ftmul@f2& (0+255),w,b
  3149  00104C  0100               	movlb	0	; () banked
  3150  00104E  2798               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3151  001050  0100               	movlb	0	; () banked
  3152  001052  5192               	movf	(___ftmul@f2+1)& (0+255),w,b
  3153  001054  0100               	movlb	0	; () banked
  3154  001056  2399               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3155  001058  0100               	movlb	0	; () banked
  3156  00105A  5193               	movf	(___ftmul@f2+2)& (0+255),w,b
  3157  00105C  0100               	movlb	0	; () banked
  3158  00105E  239A               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3159  001060                     l2513:
  3160                           
  3161                           ; BSR set to: 0
  3162  001060  0100               	movlb	0	; () banked
  3163  001062  90D8               	bcf	status,0,c
  3164  001064  3390               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3165  001066  338F               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3166  001068  338E               	rrcf	___ftmul@f1& (0+255),f,b
  3167  00106A  0100               	movlb	0	; () banked
  3168  00106C  90D8               	bcf	status,0,c
  3169  00106E  339A               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  3170  001070  3399               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  3171  001072  3398               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  3172                           
  3173                           ; BSR set to: 0
  3174  001074  0100               	movlb	0	; () banked
  3175  001076  2F9B               	decfsz	___ftmul@cntr& (0+255),f,b
  3176  001078  D7E4               	goto	l2509
  3177                           
  3178                           ; BSR set to: 0
  3179                           
  3180                           ; BSR set to: 0
  3181  00107A  C098  F076         	movff	___ftmul@f3_as_product,___ftpack@arg
  3182  00107E  C099  F077         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3183  001082  C09A  F078         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3184  001086  C097  F079         	movff	___ftmul@exp,___ftpack@exp
  3185  00108A  C09C  F07A         	movff	___ftmul@sign,___ftpack@sign
  3186  00108E  EC2B  F00A         	call	___ftpack	;wreg free
  3187  001092  C076  F08E         	movff	?___ftpack,?___ftmul
  3188  001096  C077  F08F         	movff	?___ftpack+1,?___ftmul+1
  3189  00109A  C078  F090         	movff	?___ftpack+2,?___ftmul+2
  3190  00109E  0012               	return	
  3191  0010A0                     __end_of___ftmul:
  3192                           	opt stack 0
  3193                           tblptru	equ	0xFF8
  3194                           tblptrh	equ	0xFF7
  3195                           tblptrl	equ	0xFF6
  3196                           tablat	equ	0xFF5
  3197                           prodh	equ	0xFF4
  3198                           prodl	equ	0xFF3
  3199                           intcon	equ	0xFF2
  3200                           intcon2	equ	0xFF1
  3201                           postinc0	equ	0xFEE
  3202                           wreg	equ	0xFE8
  3203                           postinc2	equ	0xFDE
  3204                           postdec2	equ	0xFDD
  3205                           fsr2h	equ	0xFDA
  3206                           fsr2l	equ	0xFD9
  3207                           status	equ	0xFD8
  3208                           
  3209 ;; *************** function ___ftadd *****************
  3210 ;; Defined at:
  3211 ;;		line 86 in file "/opt/microchip/xc8/v1.38/sources/common/ftadd.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  f1              3   34[BANK0 ] float 
  3214 ;;  f2              3   37[BANK0 ] float 
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;  exp1            1   45[BANK0 ] unsigned char 
  3217 ;;  exp2            1   44[BANK0 ] unsigned char 
  3218 ;;  sign            1   43[BANK0 ] unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  3   34[BANK0 ] float 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0, cstack
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3228 ;;      Params:         0       6       0       0       0       0       0       0       0
  3229 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3230 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3231 ;;      Totals:         0      12       0       0       0       0       0       0       0
  3232 ;;Total ram usage:       12 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    6
  3235 ;; This function calls:
  3236 ;;		___ftpack
  3237 ;; This function is called by:
  3238 ;;		_get_temp
  3239 ;;		_log
  3240 ;;		_eval_poly
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text15
  3245  000AFA                     __ptext15:
  3246                           	opt stack 0
  3247  000AFA                     ___ftadd:
  3248                           	opt stack 21
  3249                           
  3250                           ;incstack = 0
  3251  000AFA  C084  F088         	movff	___ftadd@f1+2,??___ftadd
  3252  000AFE  0100               	movlb	0	; () banked
  3253  000B00  6B89               	clrf	(??___ftadd+1)& (0+255),b
  3254  000B02  6B8A               	clrf	(??___ftadd+2)& (0+255),b
  3255  000B04  0100               	movlb	0	; () banked
  3256  000B06  3583               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  3257  000B08  0100               	movlb	0	; () banked
  3258  000B0A  3788               	rlcf	??___ftadd& (0+255),f,b
  3259  000B0C  E301               	bnc	u2421
  3260  000B0E  8189               	bsf	(??___ftadd+1)& (0+255),0,b
  3261  000B10                     u2421:
  3262  000B10  0100               	movlb	0	; () banked
  3263  000B12  5188               	movf	??___ftadd& (0+255),w,b
  3264  000B14  0100               	movlb	0	; () banked
  3265  000B16  6F8D               	movwf	___ftadd@exp1& (0+255),b
  3266  000B18  C087  F088         	movff	___ftadd@f2+2,??___ftadd
  3267  000B1C  0100               	movlb	0	; () banked
  3268  000B1E  6B89               	clrf	(??___ftadd+1)& (0+255),b
  3269  000B20  6B8A               	clrf	(??___ftadd+2)& (0+255),b
  3270  000B22  0100               	movlb	0	; () banked
  3271  000B24  3586               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  3272  000B26  0100               	movlb	0	; () banked
  3273  000B28  3788               	rlcf	??___ftadd& (0+255),f,b
  3274  000B2A  E301               	bnc	u2431
  3275  000B2C  8189               	bsf	(??___ftadd+1)& (0+255),0,b
  3276  000B2E                     u2431:
  3277  000B2E  0100               	movlb	0	; () banked
  3278  000B30  5188               	movf	??___ftadd& (0+255),w,b
  3279  000B32  0100               	movlb	0	; () banked
  3280  000B34  6F8C               	movwf	___ftadd@exp2& (0+255),b
  3281                           
  3282                           ; BSR set to: 0
  3283  000B36  0100               	movlb	0	; () banked
  3284  000B38  518D               	movf	___ftadd@exp1& (0+255),w,b
  3285  000B3A  0100               	movlb	0	; () banked
  3286  000B3C  B4D8               	btfsc	status,2,c
  3287  000B3E  D011               	goto	l755
  3288                           
  3289                           ; BSR set to: 0
  3290  000B40  0100               	movlb	0	; () banked
  3291  000B42  518C               	movf	___ftadd@exp2& (0+255),w,b
  3292  000B44  0100               	movlb	0	; () banked
  3293  000B46  5D8D               	subwf	___ftadd@exp1& (0+255),w,b
  3294  000B48  B0D8               	btfsc	status,0,c
  3295  000B4A  D012               	goto	l2411
  3296                           
  3297                           ; BSR set to: 0
  3298  000B4C  0100               	movlb	0	; () banked
  3299  000B4E  518D               	movf	___ftadd@exp1& (0+255),w,b
  3300  000B50  0800               	sublw	0
  3301  000B52  0100               	movlb	0	; () banked
  3302  000B54  258C               	addwf	___ftadd@exp2& (0+255),w,b
  3303  000B56  0100               	movlb	0	; () banked
  3304  000B58  6F88               	movwf	??___ftadd& (0+255),b
  3305  000B5A  0E18               	movlw	24
  3306  000B5C  0100               	movlb	0	; () banked
  3307  000B5E  6588               	cpfsgt	??___ftadd& (0+255),b
  3308  000B60  D007               	goto	l2411
  3309  000B62                     l755:
  3310                           
  3311                           ; BSR set to: 0
  3312  000B62  C085  F082         	movff	___ftadd@f2,?___ftadd
  3313  000B66  C086  F083         	movff	___ftadd@f2+1,?___ftadd+1
  3314  000B6A  C087  F084         	movff	___ftadd@f2+2,?___ftadd+2
  3315  000B6E  0012               	return	
  3316  000B70                     l2411:
  3317                           
  3318                           ; BSR set to: 0
  3319  000B70  0100               	movlb	0	; () banked
  3320  000B72  518C               	movf	___ftadd@exp2& (0+255),w,b
  3321  000B74  0100               	movlb	0	; () banked
  3322  000B76  B4D8               	btfsc	status,2,c
  3323  000B78  D011               	goto	l759
  3324                           
  3325                           ; BSR set to: 0
  3326  000B7A  0100               	movlb	0	; () banked
  3327  000B7C  518D               	movf	___ftadd@exp1& (0+255),w,b
  3328  000B7E  0100               	movlb	0	; () banked
  3329  000B80  5D8C               	subwf	___ftadd@exp2& (0+255),w,b
  3330  000B82  B0D8               	btfsc	status,0,c
  3331  000B84  D012               	goto	l2417
  3332                           
  3333                           ; BSR set to: 0
  3334  000B86  0100               	movlb	0	; () banked
  3335  000B88  518C               	movf	___ftadd@exp2& (0+255),w,b
  3336  000B8A  0800               	sublw	0
  3337  000B8C  0100               	movlb	0	; () banked
  3338  000B8E  258D               	addwf	___ftadd@exp1& (0+255),w,b
  3339  000B90  0100               	movlb	0	; () banked
  3340  000B92  6F88               	movwf	??___ftadd& (0+255),b
  3341  000B94  0E18               	movlw	24
  3342  000B96  0100               	movlb	0	; () banked
  3343  000B98  6588               	cpfsgt	??___ftadd& (0+255),b
  3344  000B9A  D007               	goto	l2417
  3345  000B9C                     l759:
  3346                           
  3347                           ; BSR set to: 0
  3348  000B9C  C082  F082         	movff	___ftadd@f1,?___ftadd
  3349  000BA0  C083  F083         	movff	___ftadd@f1+1,?___ftadd+1
  3350  000BA4  C084  F084         	movff	___ftadd@f1+2,?___ftadd+2
  3351  000BA8  0012               	return	
  3352  000BAA                     l2417:
  3353                           
  3354                           ; BSR set to: 0
  3355  000BAA  0E06               	movlw	6
  3356  000BAC  0100               	movlb	0	; () banked
  3357  000BAE  6F8B               	movwf	___ftadd@sign& (0+255),b
  3358                           
  3359                           ; BSR set to: 0
  3360  000BB0  0100               	movlb	0	; () banked
  3361  000BB2  AF84               	btfss	(___ftadd@f1+2)& (0+255),7,b
  3362  000BB4  D002               	goto	l2423
  3363                           
  3364                           ; BSR set to: 0
  3365  000BB6  0100               	movlb	0	; () banked
  3366  000BB8  8F8B               	bsf	___ftadd@sign& (0+255),7,b
  3367  000BBA                     l2423:
  3368                           
  3369                           ; BSR set to: 0
  3370  000BBA  0100               	movlb	0	; () banked
  3371  000BBC  AF87               	btfss	(___ftadd@f2+2)& (0+255),7,b
  3372  000BBE  D002               	goto	l761
  3373                           
  3374                           ; BSR set to: 0
  3375  000BC0  0100               	movlb	0	; () banked
  3376  000BC2  8D8B               	bsf	___ftadd@sign& (0+255),6,b
  3377  000BC4                     l761:
  3378                           
  3379                           ; BSR set to: 0
  3380  000BC4  0100               	movlb	0	; () banked
  3381  000BC6  8F83               	bsf	(___ftadd@f1+1)& (0+255),7,b
  3382                           
  3383                           ; BSR set to: 0
  3384  000BC8  0EFF               	movlw	255
  3385  000BCA  0100               	movlb	0	; () banked
  3386  000BCC  1782               	andwf	___ftadd@f1& (0+255),f,b
  3387  000BCE  0EFF               	movlw	255
  3388  000BD0  0100               	movlb	0	; () banked
  3389  000BD2  1783               	andwf	(___ftadd@f1+1)& (0+255),f,b
  3390  000BD4  0E00               	movlw	0
  3391  000BD6  0100               	movlb	0	; () banked
  3392  000BD8  1784               	andwf	(___ftadd@f1+2)& (0+255),f,b
  3393  000BDA  0100               	movlb	0	; () banked
  3394  000BDC  8F86               	bsf	(___ftadd@f2+1)& (0+255),7,b
  3395                           
  3396                           ; BSR set to: 0
  3397  000BDE  0EFF               	movlw	255
  3398  000BE0  0100               	movlb	0	; () banked
  3399  000BE2  1785               	andwf	___ftadd@f2& (0+255),f,b
  3400  000BE4  0EFF               	movlw	255
  3401  000BE6  0100               	movlb	0	; () banked
  3402  000BE8  1786               	andwf	(___ftadd@f2+1)& (0+255),f,b
  3403  000BEA  0E00               	movlw	0
  3404  000BEC  0100               	movlb	0	; () banked
  3405  000BEE  1787               	andwf	(___ftadd@f2+2)& (0+255),f,b
  3406                           
  3407                           ; BSR set to: 0
  3408  000BF0  0100               	movlb	0	; () banked
  3409  000BF2  518C               	movf	___ftadd@exp2& (0+255),w,b
  3410  000BF4  0100               	movlb	0	; () banked
  3411  000BF6  5D8D               	subwf	___ftadd@exp1& (0+255),w,b
  3412  000BF8  B0D8               	btfsc	status,0,c
  3413  000BFA  D025               	goto	l2443
  3414  000BFC                     l2433:
  3415                           
  3416                           ; BSR set to: 0
  3417  000BFC  0100               	movlb	0	; () banked
  3418  000BFE  90D8               	bcf	status,0,c
  3419  000C00  3785               	rlcf	___ftadd@f2& (0+255),f,b
  3420  000C02  3786               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  3421  000C04  3787               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  3422  000C06  0100               	movlb	0	; () banked
  3423  000C08  078C               	decf	___ftadd@exp2& (0+255),f,b
  3424                           
  3425                           ; BSR set to: 0
  3426  000C0A  0100               	movlb	0	; () banked
  3427  000C0C  518D               	movf	___ftadd@exp1& (0+255),w,b
  3428  000C0E  0100               	movlb	0	; () banked
  3429  000C10  198C               	xorwf	___ftadd@exp2& (0+255),w,b
  3430  000C12  B4D8               	btfsc	status,2,c
  3431  000C14  D011               	goto	l2441
  3432                           
  3433                           ; BSR set to: 0
  3434  000C16  0100               	movlb	0	; () banked
  3435  000C18  078B               	decf	___ftadd@sign& (0+255),f,b
  3436  000C1A  C08B  F088         	movff	___ftadd@sign,??___ftadd
  3437  000C1E  0E07               	movlw	7
  3438  000C20  0100               	movlb	0	; () banked
  3439  000C22  1788               	andwf	??___ftadd& (0+255),f,b
  3440  000C24  B4D8               	btfsc	status,2,c
  3441  000C26  D008               	goto	l2441
  3442  000C28  D7E9               	goto	l2433
  3443  000C2A                     l2439:
  3444                           
  3445                           ; BSR set to: 0
  3446  000C2A  0100               	movlb	0	; () banked
  3447  000C2C  90D8               	bcf	status,0,c
  3448  000C2E  3384               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  3449  000C30  3383               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  3450  000C32  3382               	rrcf	___ftadd@f1& (0+255),f,b
  3451  000C34  0100               	movlb	0	; () banked
  3452  000C36  2B8D               	incf	___ftadd@exp1& (0+255),f,b
  3453  000C38                     l2441:
  3454                           
  3455                           ; BSR set to: 0
  3456  000C38  0100               	movlb	0	; () banked
  3457  000C3A  518C               	movf	___ftadd@exp2& (0+255),w,b
  3458  000C3C  0100               	movlb	0	; () banked
  3459  000C3E  198D               	xorwf	___ftadd@exp1& (0+255),w,b
  3460  000C40  B4D8               	btfsc	status,2,c
  3461  000C42  D02B               	goto	l770
  3462  000C44  D7F2               	goto	l2439
  3463  000C46                     l2443:
  3464                           
  3465                           ; BSR set to: 0
  3466  000C46  0100               	movlb	0	; () banked
  3467  000C48  518D               	movf	___ftadd@exp1& (0+255),w,b
  3468  000C4A  0100               	movlb	0	; () banked
  3469  000C4C  5D8C               	subwf	___ftadd@exp2& (0+255),w,b
  3470  000C4E  B0D8               	btfsc	status,0,c
  3471  000C50  D024               	goto	l770
  3472  000C52                     l2445:
  3473                           
  3474                           ; BSR set to: 0
  3475  000C52  0100               	movlb	0	; () banked
  3476  000C54  90D8               	bcf	status,0,c
  3477  000C56  3782               	rlcf	___ftadd@f1& (0+255),f,b
  3478  000C58  3783               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  3479  000C5A  3784               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  3480  000C5C  0100               	movlb	0	; () banked
  3481  000C5E  078D               	decf	___ftadd@exp1& (0+255),f,b
  3482                           
  3483                           ; BSR set to: 0
  3484  000C60  0100               	movlb	0	; () banked
  3485  000C62  518D               	movf	___ftadd@exp1& (0+255),w,b
  3486  000C64  0100               	movlb	0	; () banked
  3487  000C66  198C               	xorwf	___ftadd@exp2& (0+255),w,b
  3488  000C68  B4D8               	btfsc	status,2,c
  3489  000C6A  D011               	goto	l2453
  3490                           
  3491                           ; BSR set to: 0
  3492  000C6C  0100               	movlb	0	; () banked
  3493  000C6E  078B               	decf	___ftadd@sign& (0+255),f,b
  3494  000C70  C08B  F088         	movff	___ftadd@sign,??___ftadd
  3495  000C74  0E07               	movlw	7
  3496  000C76  0100               	movlb	0	; () banked
  3497  000C78  1788               	andwf	??___ftadd& (0+255),f,b
  3498  000C7A  B4D8               	btfsc	status,2,c
  3499  000C7C  D008               	goto	l2453
  3500  000C7E  D7E9               	goto	l2445
  3501  000C80                     l2451:
  3502                           
  3503                           ; BSR set to: 0
  3504  000C80  0100               	movlb	0	; () banked
  3505  000C82  90D8               	bcf	status,0,c
  3506  000C84  3387               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  3507  000C86  3386               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  3508  000C88  3385               	rrcf	___ftadd@f2& (0+255),f,b
  3509  000C8A  0100               	movlb	0	; () banked
  3510  000C8C  2B8C               	incf	___ftadd@exp2& (0+255),f,b
  3511  000C8E                     l2453:
  3512                           
  3513                           ; BSR set to: 0
  3514  000C8E  0100               	movlb	0	; () banked
  3515  000C90  518C               	movf	___ftadd@exp2& (0+255),w,b
  3516  000C92  0100               	movlb	0	; () banked
  3517  000C94  198D               	xorwf	___ftadd@exp1& (0+255),w,b
  3518  000C96  A4D8               	btfss	status,2,c
  3519  000C98  D7F3               	goto	l2451
  3520  000C9A                     l770:
  3521                           
  3522                           ; BSR set to: 0
  3523  000C9A  0100               	movlb	0	; () banked
  3524  000C9C  AF8B               	btfss	___ftadd@sign& (0+255),7,b
  3525  000C9E  D012               	goto	l779
  3526                           
  3527                           ; BSR set to: 0
  3528  000CA0  0EFF               	movlw	255
  3529  000CA2  0100               	movlb	0	; () banked
  3530  000CA4  1B82               	xorwf	___ftadd@f1& (0+255),f,b
  3531  000CA6  0EFF               	movlw	255
  3532  000CA8  0100               	movlb	0	; () banked
  3533  000CAA  1B83               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  3534  000CAC  0EFF               	movlw	255
  3535  000CAE  0100               	movlb	0	; () banked
  3536  000CB0  1B84               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  3537  000CB2  0E01               	movlw	1
  3538  000CB4  0100               	movlb	0	; () banked
  3539  000CB6  2782               	addwf	___ftadd@f1& (0+255),f,b
  3540  000CB8  0E00               	movlw	0
  3541  000CBA  0100               	movlb	0	; () banked
  3542  000CBC  2383               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  3543  000CBE  0E00               	movlw	0
  3544  000CC0  0100               	movlb	0	; () banked
  3545  000CC2  2384               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  3546  000CC4                     l779:
  3547                           
  3548                           ; BSR set to: 0
  3549  000CC4  0100               	movlb	0	; () banked
  3550  000CC6  AD8B               	btfss	___ftadd@sign& (0+255),6,b
  3551  000CC8  D012               	goto	l2459
  3552                           
  3553                           ; BSR set to: 0
  3554  000CCA  0EFF               	movlw	255
  3555  000CCC  0100               	movlb	0	; () banked
  3556  000CCE  1B85               	xorwf	___ftadd@f2& (0+255),f,b
  3557  000CD0  0EFF               	movlw	255
  3558  000CD2  0100               	movlb	0	; () banked
  3559  000CD4  1B86               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  3560  000CD6  0EFF               	movlw	255
  3561  000CD8  0100               	movlb	0	; () banked
  3562  000CDA  1B87               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  3563  000CDC  0E01               	movlw	1
  3564  000CDE  0100               	movlb	0	; () banked
  3565  000CE0  2785               	addwf	___ftadd@f2& (0+255),f,b
  3566  000CE2  0E00               	movlw	0
  3567  000CE4  0100               	movlb	0	; () banked
  3568  000CE6  2386               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  3569  000CE8  0E00               	movlw	0
  3570  000CEA  0100               	movlb	0	; () banked
  3571  000CEC  2387               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  3572  000CEE                     l2459:
  3573                           
  3574                           ; BSR set to: 0
  3575  000CEE  0E00               	movlw	0
  3576  000CF0  0100               	movlb	0	; () banked
  3577  000CF2  6F8B               	movwf	___ftadd@sign& (0+255),b
  3578                           
  3579                           ; BSR set to: 0
  3580  000CF4  0100               	movlb	0	; () banked
  3581  000CF6  5182               	movf	___ftadd@f1& (0+255),w,b
  3582  000CF8  0100               	movlb	0	; () banked
  3583  000CFA  2785               	addwf	___ftadd@f2& (0+255),f,b
  3584  000CFC  0100               	movlb	0	; () banked
  3585  000CFE  5183               	movf	(___ftadd@f1+1)& (0+255),w,b
  3586  000D00  0100               	movlb	0	; () banked
  3587  000D02  2386               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  3588  000D04  0100               	movlb	0	; () banked
  3589  000D06  5184               	movf	(___ftadd@f1+2)& (0+255),w,b
  3590  000D08  0100               	movlb	0	; () banked
  3591  000D0A  2387               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  3592                           
  3593                           ; BSR set to: 0
  3594  000D0C  0100               	movlb	0	; () banked
  3595  000D0E  AF87               	btfss	(___ftadd@f2+2)& (0+255),7,b
  3596  000D10  D015               	goto	l2469
  3597                           
  3598                           ; BSR set to: 0
  3599  000D12  0EFF               	movlw	255
  3600  000D14  0100               	movlb	0	; () banked
  3601  000D16  1B85               	xorwf	___ftadd@f2& (0+255),f,b
  3602  000D18  0EFF               	movlw	255
  3603  000D1A  0100               	movlb	0	; () banked
  3604  000D1C  1B86               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  3605  000D1E  0EFF               	movlw	255
  3606  000D20  0100               	movlb	0	; () banked
  3607  000D22  1B87               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  3608  000D24  0E01               	movlw	1
  3609  000D26  0100               	movlb	0	; () banked
  3610  000D28  2785               	addwf	___ftadd@f2& (0+255),f,b
  3611  000D2A  0E00               	movlw	0
  3612  000D2C  0100               	movlb	0	; () banked
  3613  000D2E  2386               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  3614  000D30  0E00               	movlw	0
  3615  000D32  0100               	movlb	0	; () banked
  3616  000D34  2387               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  3617                           
  3618                           ; BSR set to: 0
  3619  000D36  0E01               	movlw	1
  3620  000D38  0100               	movlb	0	; () banked
  3621  000D3A  6F8B               	movwf	___ftadd@sign& (0+255),b
  3622  000D3C                     l2469:
  3623                           
  3624                           ; BSR set to: 0
  3625  000D3C  C085  F076         	movff	___ftadd@f2,___ftpack@arg
  3626  000D40  C086  F077         	movff	___ftadd@f2+1,___ftpack@arg+1
  3627  000D44  C087  F078         	movff	___ftadd@f2+2,___ftpack@arg+2
  3628  000D48  C08D  F079         	movff	___ftadd@exp1,___ftpack@exp
  3629  000D4C  C08B  F07A         	movff	___ftadd@sign,___ftpack@sign
  3630  000D50  EC2B  F00A         	call	___ftpack	;wreg free
  3631  000D54  C076  F082         	movff	?___ftpack,?___ftadd
  3632  000D58  C077  F083         	movff	?___ftpack+1,?___ftadd+1
  3633  000D5C  C078  F084         	movff	?___ftpack+2,?___ftadd+2
  3634  000D60  0012               	return	
  3635  000D62                     __end_of___ftadd:
  3636                           	opt stack 0
  3637                           tblptru	equ	0xFF8
  3638                           tblptrh	equ	0xFF7
  3639                           tblptrl	equ	0xFF6
  3640                           tablat	equ	0xFF5
  3641                           prodh	equ	0xFF4
  3642                           prodl	equ	0xFF3
  3643                           intcon	equ	0xFF2
  3644                           intcon2	equ	0xFF1
  3645                           postinc0	equ	0xFEE
  3646                           wreg	equ	0xFE8
  3647                           postinc2	equ	0xFDE
  3648                           postdec2	equ	0xFDD
  3649                           fsr2h	equ	0xFDA
  3650                           fsr2l	equ	0xFD9
  3651                           status	equ	0xFD8
  3652                           
  3653 ;; *************** function ___awtoft *****************
  3654 ;; Defined at:
  3655 ;;		line 32 in file "/opt/microchip/xc8/v1.38/sources/common/awtoft.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;  c               2   30[BANK0 ] int 
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;  sign            1   33[BANK0 ] unsigned char 
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  3   30[BANK0 ] float 
  3662 ;; Registers used:
  3663 ;;		wreg, status,2, status,0, cstack
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3669 ;;      Params:         0       3       0       0       0       0       0       0       0
  3670 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3671 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3672 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3673 ;;Total ram usage:        4 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; Hardware stack levels required when called:    6
  3676 ;; This function calls:
  3677 ;;		___ftpack
  3678 ;; This function is called by:
  3679 ;;		_main
  3680 ;;		_log
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           	psect	text16
  3685  0022BE                     __ptext16:
  3686                           	opt stack 0
  3687  0022BE                     ___awtoft:
  3688                           	opt stack 22
  3689                           
  3690                           ;incstack = 0
  3691  0022BE  0E00               	movlw	0
  3692  0022C0  0100               	movlb	0	; () banked
  3693  0022C2  6F81               	movwf	___awtoft@sign& (0+255),b
  3694                           
  3695                           ; BSR set to: 0
  3696  0022C4  0100               	movlb	0	; () banked
  3697  0022C6  AF7F               	btfss	(___awtoft@c+1)& (0+255),7,b
  3698  0022C8  D008               	goto	l2575
  3699                           
  3700                           ; BSR set to: 0
  3701  0022CA  0100               	movlb	0	; () banked
  3702  0022CC  6D7E               	negf	___awtoft@c& (0+255),b
  3703  0022CE  1F7F               	comf	(___awtoft@c+1)& (0+255),f,b
  3704  0022D0  B0D8               	btfsc	status,0,c
  3705  0022D2  2B7F               	incf	(___awtoft@c+1)& (0+255),f,b
  3706                           
  3707                           ; BSR set to: 0
  3708  0022D4  0E01               	movlw	1
  3709  0022D6  0100               	movlb	0	; () banked
  3710  0022D8  6F81               	movwf	___awtoft@sign& (0+255),b
  3711  0022DA                     l2575:
  3712                           
  3713                           ; BSR set to: 0
  3714  0022DA  C07E  F076         	movff	___awtoft@c,___ftpack@arg
  3715  0022DE  C07F  F077         	movff	___awtoft@c+1,___ftpack@arg+1
  3716  0022E2  0100               	movlb	0	; () banked
  3717  0022E4  6B78               	clrf	(___ftpack@arg+2)& (0+255),b
  3718  0022E6  0E8E               	movlw	142
  3719  0022E8  0100               	movlb	0	; () banked
  3720  0022EA  6F79               	movwf	___ftpack@exp& (0+255),b
  3721  0022EC  C081  F07A         	movff	___awtoft@sign,___ftpack@sign
  3722  0022F0  EC2B  F00A         	call	___ftpack	;wreg free
  3723  0022F4  C076  F07E         	movff	?___ftpack,?___awtoft
  3724  0022F8  C077  F07F         	movff	?___ftpack+1,?___awtoft+1
  3725  0022FC  C078  F080         	movff	?___ftpack+2,?___awtoft+2
  3726  002300  0012               	return	
  3727  002302                     __end_of___awtoft:
  3728                           	opt stack 0
  3729                           tblptru	equ	0xFF8
  3730                           tblptrh	equ	0xFF7
  3731                           tblptrl	equ	0xFF6
  3732                           tablat	equ	0xFF5
  3733                           prodh	equ	0xFF4
  3734                           prodl	equ	0xFF3
  3735                           intcon	equ	0xFF2
  3736                           intcon2	equ	0xFF1
  3737                           postinc0	equ	0xFEE
  3738                           wreg	equ	0xFE8
  3739                           postinc2	equ	0xFDE
  3740                           postdec2	equ	0xFDD
  3741                           fsr2h	equ	0xFDA
  3742                           fsr2l	equ	0xFD9
  3743                           status	equ	0xFD8
  3744                           
  3745 ;; *************** function ___lwtoft *****************
  3746 ;; Defined at:
  3747 ;;		line 28 in file "/opt/microchip/xc8/v1.38/sources/common/lwtoft.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  c               2   30[BANK0 ] unsigned int 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  3   30[BANK0 ] float 
  3754 ;; Registers used:
  3755 ;;		wreg, status,2, status,0, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3761 ;;      Params:         0       3       0       0       0       0       0       0       0
  3762 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3764 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3765 ;;Total ram usage:        3 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    6
  3768 ;; This function calls:
  3769 ;;		___ftpack
  3770 ;; This function is called by:
  3771 ;;		_get_temp
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           	psect	text17
  3776  0023DA                     __ptext17:
  3777                           	opt stack 0
  3778  0023DA                     ___lwtoft:
  3779                           	opt stack 23
  3780                           
  3781                           ;incstack = 0
  3782  0023DA  C07E  F076         	movff	___lwtoft@c,___ftpack@arg
  3783  0023DE  C07F  F077         	movff	___lwtoft@c+1,___ftpack@arg+1
  3784  0023E2  0100               	movlb	0	; () banked
  3785  0023E4  6B78               	clrf	(___ftpack@arg+2)& (0+255),b
  3786  0023E6  0E8E               	movlw	142
  3787  0023E8  0100               	movlb	0	; () banked
  3788  0023EA  6F79               	movwf	___ftpack@exp& (0+255),b
  3789  0023EC  0E00               	movlw	0
  3790  0023EE  0100               	movlb	0	; () banked
  3791  0023F0  6F7A               	movwf	___ftpack@sign& (0+255),b
  3792  0023F2  EC2B  F00A         	call	___ftpack	;wreg free
  3793  0023F6  C076  F07E         	movff	?___ftpack,?___lwtoft
  3794  0023FA  C077  F07F         	movff	?___ftpack+1,?___lwtoft+1
  3795  0023FE  C078  F080         	movff	?___ftpack+2,?___lwtoft+2
  3796  002402  0012               	return	
  3797  002404                     __end_of___lwtoft:
  3798                           	opt stack 0
  3799                           tblptru	equ	0xFF8
  3800                           tblptrh	equ	0xFF7
  3801                           tblptrl	equ	0xFF6
  3802                           tablat	equ	0xFF5
  3803                           prodh	equ	0xFF4
  3804                           prodl	equ	0xFF3
  3805                           intcon	equ	0xFF2
  3806                           intcon2	equ	0xFF1
  3807                           postinc0	equ	0xFEE
  3808                           wreg	equ	0xFE8
  3809                           postinc2	equ	0xFDE
  3810                           postdec2	equ	0xFDD
  3811                           fsr2h	equ	0xFDA
  3812                           fsr2l	equ	0xFD9
  3813                           status	equ	0xFD8
  3814                           
  3815 ;; *************** function ___ftneg *****************
  3816 ;; Defined at:
  3817 ;;		line 15 in file "/opt/microchip/xc8/v1.38/sources/common/ftneg.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;  f1              3   22[BANK0 ] float 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;		None
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  3   22[BANK0 ] float 
  3824 ;; Registers used:
  3825 ;;		wreg, status,2, status,0
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3831 ;;      Params:         0       3       0       0       0       0       0       0       0
  3832 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3834 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3835 ;;Total ram usage:        3 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; Hardware stack levels required when called:    5
  3838 ;; This function calls:
  3839 ;;		Nothing
  3840 ;; This function is called by:
  3841 ;;		_get_temp
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           	psect	text18
  3846  0023AA                     __ptext18:
  3847                           	opt stack 0
  3848  0023AA                     ___ftneg:
  3849                           	opt stack 24
  3850                           
  3851                           ;incstack = 0
  3852  0023AA  0100               	movlb	0	; () banked
  3853  0023AC  5176               	movf	___ftneg@f1& (0+255),w,b
  3854  0023AE  0100               	movlb	0	; () banked
  3855  0023B0  1177               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  3856  0023B2  0100               	movlb	0	; () banked
  3857  0023B4  1178               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  3858  0023B6  B4D8               	btfsc	status,2,c
  3859  0023B8  D009               	goto	l812
  3860                           
  3861                           ; BSR set to: 0
  3862  0023BA  0E00               	movlw	0
  3863  0023BC  0100               	movlb	0	; () banked
  3864  0023BE  1B76               	xorwf	___ftneg@f1& (0+255),f,b
  3865  0023C0  0E00               	movlw	0
  3866  0023C2  0100               	movlb	0	; () banked
  3867  0023C4  1B77               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  3868  0023C6  0E80               	movlw	128
  3869  0023C8  0100               	movlb	0	; () banked
  3870  0023CA  1B78               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  3871  0023CC                     l812:
  3872                           
  3873                           ; BSR set to: 0
  3874  0023CC  C076  F076         	movff	___ftneg@f1,?___ftneg
  3875  0023D0  C077  F077         	movff	___ftneg@f1+1,?___ftneg+1
  3876  0023D4  C078  F078         	movff	___ftneg@f1+2,?___ftneg+2
  3877                           
  3878                           ; BSR set to: 0
  3879  0023D8  0012               	return		;funcret
  3880  0023DA                     __end_of___ftneg:
  3881                           	opt stack 0
  3882                           tblptru	equ	0xFF8
  3883                           tblptrh	equ	0xFF7
  3884                           tblptrl	equ	0xFF6
  3885                           tablat	equ	0xFF5
  3886                           prodh	equ	0xFF4
  3887                           prodl	equ	0xFF3
  3888                           intcon	equ	0xFF2
  3889                           intcon2	equ	0xFF1
  3890                           postinc0	equ	0xFEE
  3891                           wreg	equ	0xFE8
  3892                           postinc2	equ	0xFDE
  3893                           postdec2	equ	0xFDD
  3894                           fsr2h	equ	0xFDA
  3895                           fsr2l	equ	0xFD9
  3896                           status	equ	0xFD8
  3897                           
  3898 ;; *************** function ___ftdiv *****************
  3899 ;; Defined at:
  3900 ;;		line 54 in file "/opt/microchip/xc8/v1.38/sources/common/ftdiv.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  f1              3   61[BANK0 ] float 
  3903 ;;  f2              3   64[BANK0 ] float 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;  f3              3   71[BANK0 ] float 
  3906 ;;  sign            1   75[BANK0 ] unsigned char 
  3907 ;;  exp             1   74[BANK0 ] unsigned char 
  3908 ;;  cntr            1   70[BANK0 ] unsigned char 
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  3   61[BANK0 ] float 
  3911 ;; Registers used:
  3912 ;;		wreg, status,2, status,0, cstack
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3918 ;;      Params:         0       6       0       0       0       0       0       0       0
  3919 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3920 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3921 ;;      Totals:         0      15       0       0       0       0       0       0       0
  3922 ;;Total ram usage:       15 bytes
  3923 ;; Hardware stack levels used:    1
  3924 ;; Hardware stack levels required when called:    6
  3925 ;; This function calls:
  3926 ;;		___ftpack
  3927 ;; This function is called by:
  3928 ;;		_get_temp
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           	psect	text19
  3933  0011F0                     __ptext19:
  3934                           	opt stack 0
  3935  0011F0                     ___ftdiv:
  3936                           	opt stack 23
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;incstack = 0
  3940  0011F0  C09F  F0A3         	movff	___ftdiv@f1+2,??___ftdiv
  3941  0011F4  0100               	movlb	0	; () banked
  3942  0011F6  6BA4               	clrf	(??___ftdiv+1)& (0+255),b
  3943  0011F8  6BA5               	clrf	(??___ftdiv+2)& (0+255),b
  3944  0011FA  0100               	movlb	0	; () banked
  3945  0011FC  359E               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3946  0011FE  0100               	movlb	0	; () banked
  3947  001200  37A3               	rlcf	??___ftdiv& (0+255),f,b
  3948  001202  E301               	bnc	u3241
  3949  001204  81A4               	bsf	(??___ftdiv+1)& (0+255),0,b
  3950  001206                     u3241:
  3951  001206  0100               	movlb	0	; () banked
  3952  001208  51A3               	movf	??___ftdiv& (0+255),w,b
  3953  00120A  0100               	movlb	0	; () banked
  3954  00120C  6FAA               	movwf	___ftdiv@exp& (0+255),b
  3955  00120E  0100               	movlb	0	; () banked
  3956  001210  51AA               	movf	___ftdiv@exp& (0+255),w,b
  3957  001212  A4D8               	btfss	status,2,c
  3958  001214  D00A               	goto	l2749
  3959                           
  3960                           ; BSR set to: 0
  3961  001216  0E00               	movlw	0
  3962  001218  0100               	movlb	0	; () banked
  3963  00121A  6F9D               	movwf	?___ftdiv& (0+255),b
  3964  00121C  0E00               	movlw	0
  3965  00121E  0100               	movlb	0	; () banked
  3966  001220  6F9E               	movwf	(?___ftdiv+1)& (0+255),b
  3967  001222  0E00               	movlw	0
  3968  001224  0100               	movlb	0	; () banked
  3969  001226  6F9F               	movwf	(?___ftdiv+2)& (0+255),b
  3970                           
  3971                           ; BSR set to: 0
  3972  001228  0012               	return	
  3973  00122A                     l2749:
  3974                           
  3975                           ; BSR set to: 0
  3976  00122A  C0A2  F0A3         	movff	___ftdiv@f2+2,??___ftdiv
  3977  00122E  0100               	movlb	0	; () banked
  3978  001230  6BA4               	clrf	(??___ftdiv+1)& (0+255),b
  3979  001232  6BA5               	clrf	(??___ftdiv+2)& (0+255),b
  3980  001234  0100               	movlb	0	; () banked
  3981  001236  35A1               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3982  001238  0100               	movlb	0	; () banked
  3983  00123A  37A3               	rlcf	??___ftdiv& (0+255),f,b
  3984  00123C  E301               	bnc	u3261
  3985  00123E  81A4               	bsf	(??___ftdiv+1)& (0+255),0,b
  3986  001240                     u3261:
  3987  001240  0100               	movlb	0	; () banked
  3988  001242  51A3               	movf	??___ftdiv& (0+255),w,b
  3989  001244  0100               	movlb	0	; () banked
  3990  001246  6FAB               	movwf	___ftdiv@sign& (0+255),b
  3991  001248  0100               	movlb	0	; () banked
  3992  00124A  51AB               	movf	___ftdiv@sign& (0+255),w,b
  3993  00124C  A4D8               	btfss	status,2,c
  3994  00124E  D00A               	goto	l2755
  3995                           
  3996                           ; BSR set to: 0
  3997  001250  0E00               	movlw	0
  3998  001252  0100               	movlb	0	; () banked
  3999  001254  6F9D               	movwf	?___ftdiv& (0+255),b
  4000  001256  0E00               	movlw	0
  4001  001258  0100               	movlb	0	; () banked
  4002  00125A  6F9E               	movwf	(?___ftdiv+1)& (0+255),b
  4003  00125C  0E00               	movlw	0
  4004  00125E  0100               	movlb	0	; () banked
  4005  001260  6F9F               	movwf	(?___ftdiv+2)& (0+255),b
  4006                           
  4007                           ; BSR set to: 0
  4008  001262  0012               	return	
  4009  001264                     l2755:
  4010                           
  4011                           ; BSR set to: 0
  4012  001264  0E00               	movlw	0
  4013  001266  0100               	movlb	0	; () banked
  4014  001268  6FA7               	movwf	___ftdiv@f3& (0+255),b
  4015  00126A  0E00               	movlw	0
  4016  00126C  0100               	movlb	0	; () banked
  4017  00126E  6FA8               	movwf	(___ftdiv@f3+1)& (0+255),b
  4018  001270  0E00               	movlw	0
  4019  001272  0100               	movlb	0	; () banked
  4020  001274  6FA9               	movwf	(___ftdiv@f3+2)& (0+255),b
  4021                           
  4022                           ; BSR set to: 0
  4023  001276  0100               	movlb	0	; () banked
  4024  001278  51AB               	movf	___ftdiv@sign& (0+255),w,b
  4025  00127A  0F89               	addlw	137
  4026  00127C  0100               	movlb	0	; () banked
  4027  00127E  5FAA               	subwf	___ftdiv@exp& (0+255),f,b
  4028                           
  4029                           ; BSR set to: 0
  4030  001280  C09F  F0AB         	movff	___ftdiv@f1+2,___ftdiv@sign
  4031                           
  4032                           ; BSR set to: 0
  4033  001284  0100               	movlb	0	; () banked
  4034  001286  51A2               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4035  001288  0100               	movlb	0	; () banked
  4036  00128A  1BAB               	xorwf	___ftdiv@sign& (0+255),f,b
  4037                           
  4038                           ; BSR set to: 0
  4039  00128C  0E80               	movlw	128
  4040  00128E  0100               	movlb	0	; () banked
  4041  001290  17AB               	andwf	___ftdiv@sign& (0+255),f,b
  4042                           
  4043                           ; BSR set to: 0
  4044  001292  0100               	movlb	0	; () banked
  4045  001294  8F9E               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  4046                           
  4047                           ; BSR set to: 0
  4048  001296  0EFF               	movlw	255
  4049  001298  0100               	movlb	0	; () banked
  4050  00129A  179D               	andwf	___ftdiv@f1& (0+255),f,b
  4051  00129C  0EFF               	movlw	255
  4052  00129E  0100               	movlb	0	; () banked
  4053  0012A0  179E               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  4054  0012A2  0E00               	movlw	0
  4055  0012A4  0100               	movlb	0	; () banked
  4056  0012A6  179F               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  4057                           
  4058                           ; BSR set to: 0
  4059  0012A8  0100               	movlb	0	; () banked
  4060  0012AA  8FA1               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  4061                           
  4062                           ; BSR set to: 0
  4063  0012AC  0EFF               	movlw	255
  4064  0012AE  0100               	movlb	0	; () banked
  4065  0012B0  17A0               	andwf	___ftdiv@f2& (0+255),f,b
  4066  0012B2  0EFF               	movlw	255
  4067  0012B4  0100               	movlb	0	; () banked
  4068  0012B6  17A1               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  4069  0012B8  0E00               	movlw	0
  4070  0012BA  0100               	movlb	0	; () banked
  4071  0012BC  17A2               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  4072                           
  4073                           ; BSR set to: 0
  4074  0012BE  0E18               	movlw	24
  4075  0012C0  0100               	movlb	0	; () banked
  4076  0012C2  6FA6               	movwf	___ftdiv@cntr& (0+255),b
  4077  0012C4                     l2775:
  4078                           
  4079                           ; BSR set to: 0
  4080  0012C4  0100               	movlb	0	; () banked
  4081  0012C6  90D8               	bcf	status,0,c
  4082  0012C8  37A7               	rlcf	___ftdiv@f3& (0+255),f,b
  4083  0012CA  37A8               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  4084  0012CC  37A9               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  4085                           
  4086                           ; BSR set to: 0
  4087  0012CE  0100               	movlb	0	; () banked
  4088  0012D0  51A0               	movf	___ftdiv@f2& (0+255),w,b
  4089  0012D2  0100               	movlb	0	; () banked
  4090  0012D4  5D9D               	subwf	___ftdiv@f1& (0+255),w,b
  4091  0012D6  0100               	movlb	0	; () banked
  4092  0012D8  51A1               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4093  0012DA  0100               	movlb	0	; () banked
  4094  0012DC  599E               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  4095  0012DE  0100               	movlb	0	; () banked
  4096  0012E0  51A2               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4097  0012E2  0100               	movlb	0	; () banked
  4098  0012E4  599F               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  4099  0012E6  A0D8               	btfss	status,0,c
  4100  0012E8  D00E               	goto	l790
  4101                           
  4102                           ; BSR set to: 0
  4103  0012EA  0100               	movlb	0	; () banked
  4104  0012EC  51A0               	movf	___ftdiv@f2& (0+255),w,b
  4105  0012EE  0100               	movlb	0	; () banked
  4106  0012F0  5F9D               	subwf	___ftdiv@f1& (0+255),f,b
  4107  0012F2  0100               	movlb	0	; () banked
  4108  0012F4  51A1               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4109  0012F6  0100               	movlb	0	; () banked
  4110  0012F8  5B9E               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  4111  0012FA  0100               	movlb	0	; () banked
  4112  0012FC  51A2               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4113  0012FE  0100               	movlb	0	; () banked
  4114  001300  5B9F               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  4115                           
  4116                           ; BSR set to: 0
  4117  001302  0100               	movlb	0	; () banked
  4118  001304  81A7               	bsf	___ftdiv@f3& (0+255),0,b
  4119  001306                     l790:
  4120                           
  4121                           ; BSR set to: 0
  4122  001306  0100               	movlb	0	; () banked
  4123  001308  90D8               	bcf	status,0,c
  4124  00130A  379D               	rlcf	___ftdiv@f1& (0+255),f,b
  4125  00130C  379E               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  4126  00130E  379F               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  4127                           
  4128                           ; BSR set to: 0
  4129  001310  0100               	movlb	0	; () banked
  4130  001312  2FA6               	decfsz	___ftdiv@cntr& (0+255),f,b
  4131  001314  D7D7               	goto	l2775
  4132                           
  4133                           ; BSR set to: 0
  4134                           
  4135                           ; BSR set to: 0
  4136  001316  C0A7  F076         	movff	___ftdiv@f3,___ftpack@arg
  4137  00131A  C0A8  F077         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4138  00131E  C0A9  F078         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4139  001322  C0AA  F079         	movff	___ftdiv@exp,___ftpack@exp
  4140  001326  C0AB  F07A         	movff	___ftdiv@sign,___ftpack@sign
  4141  00132A  EC2B  F00A         	call	___ftpack	;wreg free
  4142  00132E  C076  F09D         	movff	?___ftpack,?___ftdiv
  4143  001332  C077  F09E         	movff	?___ftpack+1,?___ftdiv+1
  4144  001336  C078  F09F         	movff	?___ftpack+2,?___ftdiv+2
  4145  00133A  0012               	return	
  4146  00133C                     __end_of___ftdiv:
  4147                           	opt stack 0
  4148                           tblptru	equ	0xFF8
  4149                           tblptrh	equ	0xFF7
  4150                           tblptrl	equ	0xFF6
  4151                           tablat	equ	0xFF5
  4152                           prodh	equ	0xFF4
  4153                           prodl	equ	0xFF3
  4154                           intcon	equ	0xFF2
  4155                           intcon2	equ	0xFF1
  4156                           postinc0	equ	0xFEE
  4157                           wreg	equ	0xFE8
  4158                           postinc2	equ	0xFDE
  4159                           postdec2	equ	0xFDD
  4160                           fsr2h	equ	0xFDA
  4161                           fsr2l	equ	0xFD9
  4162                           status	equ	0xFD8
  4163                           
  4164 ;; *************** function ___ftpack *****************
  4165 ;; Defined at:
  4166 ;;		line 62 in file "/opt/microchip/xc8/v1.38/sources/common/float.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  arg             3   22[BANK0 ] unsigned um
  4169 ;;  exp             1   25[BANK0 ] unsigned char 
  4170 ;;  sign            1   26[BANK0 ] unsigned char 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  3   22[BANK0 ] float 
  4175 ;; Registers used:
  4176 ;;		wreg, status,2, status,0
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4182 ;;      Params:         0       5       0       0       0       0       0       0       0
  4183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4184 ;;      Temps:          0       3       0       0       0       0       0       0       0
  4185 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4186 ;;Total ram usage:        8 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    5
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		___awtoft
  4193 ;;		___ftadd
  4194 ;;		___ftdiv
  4195 ;;		___ftmul
  4196 ;;		___lwtoft
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           	psect	text20
  4201  001456                     __ptext20:
  4202                           	opt stack 0
  4203  001456                     ___ftpack:
  4204                           	opt stack 21
  4205                           
  4206                           ;incstack = 0
  4207  001456  0100               	movlb	0	; () banked
  4208  001458  5179               	movf	___ftpack@exp& (0+255),w,b
  4209  00145A  0100               	movlb	0	; () banked
  4210  00145C  B4D8               	btfsc	status,2,c
  4211  00145E  D008               	goto	l2365
  4212                           
  4213                           ; BSR set to: 0
  4214  001460  0100               	movlb	0	; () banked
  4215  001462  5176               	movf	___ftpack@arg& (0+255),w,b
  4216  001464  0100               	movlb	0	; () banked
  4217  001466  1177               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  4218  001468  0100               	movlb	0	; () banked
  4219  00146A  1178               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  4220  00146C  A4D8               	btfss	status,2,c
  4221  00146E  D011               	goto	l2371
  4222  001470                     l2365:
  4223                           
  4224                           ; BSR set to: 0
  4225  001470  0E00               	movlw	0
  4226  001472  0100               	movlb	0	; () banked
  4227  001474  6F76               	movwf	?___ftpack& (0+255),b
  4228  001476  0E00               	movlw	0
  4229  001478  0100               	movlb	0	; () banked
  4230  00147A  6F77               	movwf	(?___ftpack+1)& (0+255),b
  4231  00147C  0E00               	movlw	0
  4232  00147E  0100               	movlb	0	; () banked
  4233  001480  6F78               	movwf	(?___ftpack+2)& (0+255),b
  4234                           
  4235                           ; BSR set to: 0
  4236  001482  0012               	return	
  4237  001484                     l2369:
  4238                           
  4239                           ; BSR set to: 0
  4240  001484  0100               	movlb	0	; () banked
  4241  001486  2B79               	incf	___ftpack@exp& (0+255),f,b
  4242  001488  0100               	movlb	0	; () banked
  4243  00148A  90D8               	bcf	status,0,c
  4244  00148C  3378               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  4245  00148E  3377               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  4246  001490  3376               	rrcf	___ftpack@arg& (0+255),f,b
  4247  001492                     l2371:
  4248                           
  4249                           ; BSR set to: 0
  4250  001492  0E00               	movlw	0
  4251  001494  0100               	movlb	0	; () banked
  4252  001496  1576               	andwf	___ftpack@arg& (0+255),w,b
  4253  001498  0100               	movlb	0	; () banked
  4254  00149A  6F7B               	movwf	??___ftpack& (0+255),b
  4255  00149C  0E00               	movlw	0
  4256  00149E  0100               	movlb	0	; () banked
  4257  0014A0  1577               	andwf	(___ftpack@arg+1)& (0+255),w,b
  4258  0014A2  0100               	movlb	0	; () banked
  4259  0014A4  6F7C               	movwf	(??___ftpack+1)& (0+255),b
  4260  0014A6  0EFE               	movlw	254
  4261  0014A8  0100               	movlb	0	; () banked
  4262  0014AA  1578               	andwf	(___ftpack@arg+2)& (0+255),w,b
  4263  0014AC  0100               	movlb	0	; () banked
  4264  0014AE  6F7D               	movwf	(??___ftpack+2)& (0+255),b
  4265  0014B0  0100               	movlb	0	; () banked
  4266  0014B2  517B               	movf	??___ftpack& (0+255),w,b
  4267  0014B4  0100               	movlb	0	; () banked
  4268  0014B6  117C               	iorwf	(??___ftpack+1)& (0+255),w,b
  4269  0014B8  0100               	movlb	0	; () banked
  4270  0014BA  117D               	iorwf	(??___ftpack+2)& (0+255),w,b
  4271  0014BC  B4D8               	btfsc	status,2,c
  4272  0014BE  D011               	goto	l2377
  4273  0014C0  D7E1               	goto	l2369
  4274  0014C2                     l2373:
  4275                           
  4276                           ; BSR set to: 0
  4277  0014C2  0100               	movlb	0	; () banked
  4278  0014C4  2B79               	incf	___ftpack@exp& (0+255),f,b
  4279                           
  4280                           ; BSR set to: 0
  4281  0014C6  0E01               	movlw	1
  4282  0014C8  0100               	movlb	0	; () banked
  4283  0014CA  2776               	addwf	___ftpack@arg& (0+255),f,b
  4284  0014CC  0E00               	movlw	0
  4285  0014CE  0100               	movlb	0	; () banked
  4286  0014D0  2377               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  4287  0014D2  0E00               	movlw	0
  4288  0014D4  0100               	movlb	0	; () banked
  4289  0014D6  2378               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  4290  0014D8  0100               	movlb	0	; () banked
  4291  0014DA  90D8               	bcf	status,0,c
  4292  0014DC  3378               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  4293  0014DE  3377               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  4294  0014E0  3376               	rrcf	___ftpack@arg& (0+255),f,b
  4295  0014E2                     l2377:
  4296                           
  4297                           ; BSR set to: 0
  4298  0014E2  0E00               	movlw	0
  4299  0014E4  0100               	movlb	0	; () banked
  4300  0014E6  1576               	andwf	___ftpack@arg& (0+255),w,b
  4301  0014E8  0100               	movlb	0	; () banked
  4302  0014EA  6F7B               	movwf	??___ftpack& (0+255),b
  4303  0014EC  0E00               	movlw	0
  4304  0014EE  0100               	movlb	0	; () banked
  4305  0014F0  1577               	andwf	(___ftpack@arg+1)& (0+255),w,b
  4306  0014F2  0100               	movlb	0	; () banked
  4307  0014F4  6F7C               	movwf	(??___ftpack+1)& (0+255),b
  4308  0014F6  0EFF               	movlw	255
  4309  0014F8  0100               	movlb	0	; () banked
  4310  0014FA  1578               	andwf	(___ftpack@arg+2)& (0+255),w,b
  4311  0014FC  0100               	movlb	0	; () banked
  4312  0014FE  6F7D               	movwf	(??___ftpack+2)& (0+255),b
  4313  001500  0100               	movlb	0	; () banked
  4314  001502  517B               	movf	??___ftpack& (0+255),w,b
  4315  001504  0100               	movlb	0	; () banked
  4316  001506  117C               	iorwf	(??___ftpack+1)& (0+255),w,b
  4317  001508  0100               	movlb	0	; () banked
  4318  00150A  117D               	iorwf	(??___ftpack+2)& (0+255),w,b
  4319  00150C  B4D8               	btfsc	status,2,c
  4320  00150E  D008               	goto	l2381
  4321  001510  D7D8               	goto	l2373
  4322  001512                     l2379:
  4323                           
  4324                           ; BSR set to: 0
  4325  001512  0100               	movlb	0	; () banked
  4326  001514  0779               	decf	___ftpack@exp& (0+255),f,b
  4327  001516  0100               	movlb	0	; () banked
  4328  001518  90D8               	bcf	status,0,c
  4329  00151A  3776               	rlcf	___ftpack@arg& (0+255),f,b
  4330  00151C  3777               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  4331  00151E  3778               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  4332  001520                     l2381:
  4333                           
  4334                           ; BSR set to: 0
  4335  001520  0100               	movlb	0	; () banked
  4336  001522  BF77               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  4337  001524  D004               	goto	l732
  4338                           
  4339                           ; BSR set to: 0
  4340  001526  0E02               	movlw	2
  4341  001528  0100               	movlb	0	; () banked
  4342  00152A  6179               	cpfslt	___ftpack@exp& (0+255),b
  4343  00152C  D7F2               	goto	l2379
  4344  00152E                     l732:
  4345                           
  4346                           ; BSR set to: 0
  4347  00152E  0100               	movlb	0	; () banked
  4348  001530  B179               	btfsc	___ftpack@exp& (0+255),0,b
  4349  001532  D002               	goto	l2387
  4350                           
  4351                           ; BSR set to: 0
  4352  001534  0100               	movlb	0	; () banked
  4353  001536  9F77               	bcf	(___ftpack@arg+1)& (0+255),7,b
  4354  001538                     l2387:
  4355                           
  4356                           ; BSR set to: 0
  4357  001538  0100               	movlb	0	; () banked
  4358  00153A  90D8               	bcf	status,0,c
  4359  00153C  3379               	rrcf	___ftpack@exp& (0+255),f,b
  4360  00153E  0100               	movlb	0	; () banked
  4361  001540  5179               	movf	___ftpack@exp& (0+255),w,b
  4362  001542  0100               	movlb	0	; () banked
  4363  001544  1378               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  4364                           
  4365                           ; BSR set to: 0
  4366  001546  0100               	movlb	0	; () banked
  4367  001548  517A               	movf	___ftpack@sign& (0+255),w,b
  4368  00154A  0100               	movlb	0	; () banked
  4369  00154C  B4D8               	btfsc	status,2,c
  4370  00154E  D002               	goto	l2393
  4371                           
  4372                           ; BSR set to: 0
  4373  001550  0100               	movlb	0	; () banked
  4374  001552  8F78               	bsf	(___ftpack@arg+2)& (0+255),7,b
  4375  001554                     l2393:
  4376                           
  4377                           ; BSR set to: 0
  4378  001554  C076  F076         	movff	___ftpack@arg,?___ftpack
  4379  001558  C077  F077         	movff	___ftpack@arg+1,?___ftpack+1
  4380  00155C  C078  F078         	movff	___ftpack@arg+2,?___ftpack+2
  4381  001560  0012               	return	
  4382  001562                     __end_of___ftpack:
  4383                           	opt stack 0
  4384                           tblptru	equ	0xFF8
  4385                           tblptrh	equ	0xFF7
  4386                           tblptrl	equ	0xFF6
  4387                           tablat	equ	0xFF5
  4388                           prodh	equ	0xFF4
  4389                           prodl	equ	0xFF3
  4390                           intcon	equ	0xFF2
  4391                           intcon2	equ	0xFF1
  4392                           postinc0	equ	0xFEE
  4393                           wreg	equ	0xFE8
  4394                           postinc2	equ	0xFDE
  4395                           postdec2	equ	0xFDD
  4396                           fsr2h	equ	0xFDA
  4397                           fsr2l	equ	0xFD9
  4398                           status	equ	0xFD8
  4399                           
  4400 ;; *************** function _error *****************
  4401 ;; Defined at:
  4402 ;;		line 386 in file "main.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  code            1    wreg     unsigned char 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;  code            1   31[BANK0 ] unsigned char 
  4407 ;;  i               2   32[BANK0 ] int 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4417 ;;      Params:         0       0       0       0       0       0       0       0       0
  4418 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4419 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4420 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4421 ;;Total ram usage:        3 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    7
  4424 ;; This function calls:
  4425 ;;		_num_to_disp
  4426 ;;		_set_LEDs
  4427 ;;		_set_digit
  4428 ;;		_set_key_led_disp_tris
  4429 ;; This function is called by:
  4430 ;;		_main
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text21
  4435  001D7C                     __ptext21:
  4436                           	opt stack 0
  4437  001D7C                     _error:
  4438                           	opt stack 23
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;incstack = 0
  4442                           ;error@code stored from wreg
  4443  001D7C  0100               	movlb	0	; () banked
  4444  001D7E  6F7F               	movwf	error@code& (0+255),b
  4445                           
  4446                           ;main.c: 389: disp[0] = num_to_disp('E') | 0b10000000;
  4447  001D80  0E45               	movlw	69
  4448  001D82  EC6C  F010         	call	_num_to_disp
  4449  001D86  0980               	iorlw	128
  4450  001D88  0100               	movlb	0	; () banked
  4451  001D8A  6FCB               	movwf	_disp& (0+255),b
  4452                           
  4453                           ;main.c: 390: disp[1] = num_to_disp(code) | 0b10000000;
  4454  001D8C  0100               	movlb	0	; () banked
  4455  001D8E  517F               	movf	error@code& (0+255),w,b
  4456  001D90  EC6C  F010         	call	_num_to_disp
  4457  001D94  0980               	iorlw	128
  4458  001D96  0100               	movlb	0	; () banked
  4459  001D98  6FCC               	movwf	(_disp+1)& (0+255),b
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;main.c: 391: set_key_led_disp_tris(0);
  4463  001D9A  0E00               	movlw	0
  4464  001D9C  ECE4  F010         	call	_set_key_led_disp_tris
  4465                           
  4466                           ;main.c: 394: LATC1 = 0;
  4467  001DA0  928B               	bcf	3979,1,c	;volatile
  4468                           
  4469                           ;main.c: 395: LATC2 = 0;
  4470  001DA2  948B               	bcf	3979,2,c	;volatile
  4471                           
  4472                           ;main.c: 396: LATC0 = 0;
  4473  001DA4  908B               	bcf	3979,0,c	;volatile
  4474                           
  4475                           ;main.c: 397: LATA5 = 0;
  4476  001DA6  9A89               	bcf	3977,5,c	;volatile
  4477  001DA8                     l2921:
  4478                           
  4479                           ;main.c: 400: {
  4480                           ;main.c: 401: LATA3 = 0;
  4481  001DA8  9689               	bcf	3977,3,c	;volatile
  4482                           
  4483                           ;main.c: 402: LATA4 = 1;
  4484  001DAA  8889               	bsf	3977,4,c	;volatile
  4485                           
  4486                           ;main.c: 403: LATA2 = 1;
  4487  001DAC  8489               	bsf	3977,2,c	;volatile
  4488                           
  4489                           ;main.c: 404: set_digit(disp[0] ^ (blink * 0b10000000));
  4490  001DAE  0100               	movlb	0	; () banked
  4491  001DB0  51CF               	movf	_blink& (0+255),w,b
  4492  001DB2  0D80               	mullw	128
  4493  001DB4  50F3               	movf	prodl,w,c
  4494  001DB6  0100               	movlb	0	; () banked
  4495  001DB8  19CB               	xorwf	_disp& (0+255),w,b
  4496  001DBA  EC37  F00B         	call	_set_digit
  4497                           
  4498                           ;main.c: 406: i = 1000;
  4499  001DBE  0E03               	movlw	3
  4500  001DC0  0100               	movlb	0	; () banked
  4501  001DC2  6F81               	movwf	(error@i+1)& (0+255),b
  4502  001DC4  0EE8               	movlw	232
  4503  001DC6  6F80               	movwf	error@i& (0+255),b
  4504  001DC8                     l2931:
  4505                           
  4506                           ; BSR set to: 0
  4507  001DC8  0100               	movlb	0	; () banked
  4508  001DCA  0780               	decf	error@i& (0+255),f,b
  4509  001DCC  A0D8               	btfss	status,0,c
  4510  001DCE  0781               	decf	(error@i+1)& (0+255),f,b
  4511  001DD0  0100               	movlb	0	; () banked
  4512  001DD2  5180               	movf	error@i& (0+255),w,b
  4513  001DD4  0100               	movlb	0	; () banked
  4514  001DD6  1181               	iorwf	(error@i+1)& (0+255),w,b
  4515  001DD8  A4D8               	btfss	status,2,c
  4516  001DDA  D7F6               	goto	l2931
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;main.c: 409: LATA3 = 1;
  4520  001DDC  8689               	bsf	3977,3,c	;volatile
  4521                           
  4522                           ;main.c: 410: LATA4 = 0;
  4523  001DDE  9889               	bcf	3977,4,c	;volatile
  4524                           
  4525                           ;main.c: 411: LATA2 = 1;
  4526  001DE0  8489               	bsf	3977,2,c	;volatile
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;main.c: 412: set_digit(disp[1] ^ (blink * 0b10000000));
  4530  001DE2  0100               	movlb	0	; () banked
  4531  001DE4  51CF               	movf	_blink& (0+255),w,b
  4532  001DE6  0D80               	mullw	128
  4533  001DE8  50F3               	movf	prodl,w,c
  4534  001DEA  0100               	movlb	0	; () banked
  4535  001DEC  19CC               	xorwf	(_disp+1)& (0+255),w,b
  4536  001DEE  EC37  F00B         	call	_set_digit
  4537                           
  4538                           ;main.c: 414: i = 1000;
  4539  001DF2  0E03               	movlw	3
  4540  001DF4  0100               	movlb	0	; () banked
  4541  001DF6  6F81               	movwf	(error@i+1)& (0+255),b
  4542  001DF8  0EE8               	movlw	232
  4543  001DFA  6F80               	movwf	error@i& (0+255),b
  4544  001DFC                     l2937:
  4545                           
  4546                           ; BSR set to: 0
  4547  001DFC  0100               	movlb	0	; () banked
  4548  001DFE  0780               	decf	error@i& (0+255),f,b
  4549  001E00  A0D8               	btfss	status,0,c
  4550  001E02  0781               	decf	(error@i+1)& (0+255),f,b
  4551  001E04  0100               	movlb	0	; () banked
  4552  001E06  5180               	movf	error@i& (0+255),w,b
  4553  001E08  0100               	movlb	0	; () banked
  4554  001E0A  1181               	iorwf	(error@i+1)& (0+255),w,b
  4555  001E0C  A4D8               	btfss	status,2,c
  4556  001E0E  D7F6               	goto	l2937
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;main.c: 417: LATA3 = 1;
  4560  001E10  8689               	bsf	3977,3,c	;volatile
  4561                           
  4562                           ;main.c: 418: LATA4 = 1;
  4563  001E12  8889               	bsf	3977,4,c	;volatile
  4564                           
  4565                           ;main.c: 419: LATA2 = 0;
  4566  001E14  9489               	bcf	3977,2,c	;volatile
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;main.c: 421: set_LEDs(0b100000 | 0b1000000);
  4570  001E16  0E60               	movlw	96
  4571  001E18  ECB8  F00B         	call	_set_LEDs
  4572                           
  4573                           ;main.c: 423: i = 1000;
  4574  001E1C  0E03               	movlw	3
  4575  001E1E  0100               	movlb	0	; () banked
  4576  001E20  6F81               	movwf	(error@i+1)& (0+255),b
  4577  001E22  0EE8               	movlw	232
  4578  001E24  6F80               	movwf	error@i& (0+255),b
  4579  001E26                     l2943:
  4580                           
  4581                           ; BSR set to: 0
  4582  001E26  0100               	movlb	0	; () banked
  4583  001E28  0780               	decf	error@i& (0+255),f,b
  4584  001E2A  A0D8               	btfss	status,0,c
  4585  001E2C  0781               	decf	(error@i+1)& (0+255),f,b
  4586  001E2E  0100               	movlb	0	; () banked
  4587  001E30  5180               	movf	error@i& (0+255),w,b
  4588  001E32  0100               	movlb	0	; () banked
  4589  001E34  1181               	iorwf	(error@i+1)& (0+255),w,b
  4590  001E36  B4D8               	btfsc	status,2,c
  4591  001E38  D7B7               	goto	l2921
  4592  001E3A  D7F5               	goto	l2943
  4593  001E3C                     __end_of_error:
  4594                           	opt stack 0
  4595                           tblptru	equ	0xFF8
  4596                           tblptrh	equ	0xFF7
  4597                           tblptrl	equ	0xFF6
  4598                           tablat	equ	0xFF5
  4599                           prodh	equ	0xFF4
  4600                           prodl	equ	0xFF3
  4601                           intcon	equ	0xFF2
  4602                           intcon2	equ	0xFF1
  4603                           postinc0	equ	0xFEE
  4604                           wreg	equ	0xFE8
  4605                           postinc2	equ	0xFDE
  4606                           postdec2	equ	0xFDD
  4607                           fsr2h	equ	0xFDA
  4608                           fsr2l	equ	0xFD9
  4609                           status	equ	0xFD8
  4610                           
  4611 ;; *************** function _set_digit *****************
  4612 ;; Defined at:
  4613 ;;		line 27 in file "disp.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;  dig             1    wreg     unsigned char 
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;  dig             1   30[BANK0 ] unsigned char 
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1    wreg      void 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2, status,0, cstack
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4627 ;;      Params:         0       0       0       0       0       0       0       0       0
  4628 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4630 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4631 ;;Total ram usage:        1 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; Hardware stack levels required when called:    6
  4634 ;; This function calls:
  4635 ;;		___awdiv
  4636 ;; This function is called by:
  4637 ;;		_error
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640                           
  4641                           	psect	text22
  4642  00166E                     __ptext22:
  4643                           	opt stack 0
  4644  00166E                     _set_digit:
  4645                           	opt stack 23
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;incstack = 0
  4649                           ;set_digit@dig stored from wreg
  4650  00166E  0100               	movlb	0	; () banked
  4651  001670  6F7E               	movwf	set_digit@dig& (0+255),b
  4652                           
  4653                           ;disp.c: 48: if (dig & 0b10000000)
  4654  001672  0100               	movlb	0	; () banked
  4655  001674  AF7E               	btfss	set_digit@dig& (0+255),7,b
  4656  001676  D003               	goto	l2681
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;disp.c: 49: dig = 0;
  4660  001678  0E00               	movlw	0
  4661  00167A  0100               	movlb	0	; () banked
  4662  00167C  6F7E               	movwf	set_digit@dig& (0+255),b
  4663  00167E                     l2681:
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;disp.c: 51: LATB2 = (dig / 0b1);
  4667  00167E  0100               	movlb	0	; () banked
  4668  001680  A17E               	btfss	set_digit@dig& (0+255),0,b
  4669  001682  D002               	goto	u2940
  4670  001684  848A               	bsf	3978,2,c	;volatile
  4671  001686  D001               	goto	l2683
  4672  001688                     u2940:
  4673  001688  948A               	bcf	3978,2,c	;volatile
  4674  00168A                     l2683:
  4675                           
  4676                           ;disp.c: 52: LATB5 = (dig / 0b10);
  4677  00168A  C07E  F076         	movff	set_digit@dig,___awdiv@dividend
  4678  00168E  0100               	movlb	0	; () banked
  4679  001690  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4680  001692  0E00               	movlw	0
  4681  001694  0100               	movlb	0	; () banked
  4682  001696  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4683  001698  0E02               	movlw	2
  4684  00169A  6F78               	movwf	___awdiv@divisor& (0+255),b
  4685  00169C  EC1E  F00F         	call	___awdiv	;wreg free
  4686  0016A0  0100               	movlb	0	; () banked
  4687  0016A2  3176               	rrcf	?___awdiv& (0+255),w,b
  4688  0016A4  0100               	movlb	0	; () banked
  4689  0016A6  A0D8               	btfss	status,0,c
  4690  0016A8  D002               	goto	u2960
  4691  0016AA  8A8A               	bsf	3978,5,c	;volatile
  4692  0016AC  D001               	goto	l2685
  4693  0016AE                     u2960:
  4694  0016AE  9A8A               	bcf	3978,5,c	;volatile
  4695  0016B0                     l2685:
  4696                           
  4697                           ;disp.c: 53: LATB4 = (dig / 0b100);
  4698  0016B0  C07E  F076         	movff	set_digit@dig,___awdiv@dividend
  4699  0016B4  0100               	movlb	0	; () banked
  4700  0016B6  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4701  0016B8  0E00               	movlw	0
  4702  0016BA  0100               	movlb	0	; () banked
  4703  0016BC  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4704  0016BE  0E04               	movlw	4
  4705  0016C0  6F78               	movwf	___awdiv@divisor& (0+255),b
  4706  0016C2  EC1E  F00F         	call	___awdiv	;wreg free
  4707  0016C6  0100               	movlb	0	; () banked
  4708  0016C8  3176               	rrcf	?___awdiv& (0+255),w,b
  4709  0016CA  0100               	movlb	0	; () banked
  4710  0016CC  A0D8               	btfss	status,0,c
  4711  0016CE  D002               	goto	u2980
  4712  0016D0  888A               	bsf	3978,4,c	;volatile
  4713  0016D2  D001               	goto	l2687
  4714  0016D4                     u2980:
  4715  0016D4  988A               	bcf	3978,4,c	;volatile
  4716  0016D6                     l2687:
  4717                           
  4718                           ;disp.c: 54: LATB0 = (dig / 0b1000);
  4719  0016D6  C07E  F076         	movff	set_digit@dig,___awdiv@dividend
  4720  0016DA  0100               	movlb	0	; () banked
  4721  0016DC  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4722  0016DE  0E00               	movlw	0
  4723  0016E0  0100               	movlb	0	; () banked
  4724  0016E2  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4725  0016E4  0E08               	movlw	8
  4726  0016E6  6F78               	movwf	___awdiv@divisor& (0+255),b
  4727  0016E8  EC1E  F00F         	call	___awdiv	;wreg free
  4728  0016EC  0100               	movlb	0	; () banked
  4729  0016EE  3176               	rrcf	?___awdiv& (0+255),w,b
  4730  0016F0  0100               	movlb	0	; () banked
  4731  0016F2  A0D8               	btfss	status,0,c
  4732  0016F4  D002               	goto	u3000
  4733  0016F6  808A               	bsf	3978,0,c	;volatile
  4734  0016F8  D001               	goto	l2689
  4735  0016FA                     u3000:
  4736  0016FA  908A               	bcf	3978,0,c	;volatile
  4737  0016FC                     l2689:
  4738                           
  4739                           ;disp.c: 55: LATB4 = (dig / 0b10000);
  4740  0016FC  C07E  F076         	movff	set_digit@dig,___awdiv@dividend
  4741  001700  0100               	movlb	0	; () banked
  4742  001702  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4743  001704  0E00               	movlw	0
  4744  001706  0100               	movlb	0	; () banked
  4745  001708  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4746  00170A  0E10               	movlw	16
  4747  00170C  6F78               	movwf	___awdiv@divisor& (0+255),b
  4748  00170E  EC1E  F00F         	call	___awdiv	;wreg free
  4749  001712  0100               	movlb	0	; () banked
  4750  001714  3176               	rrcf	?___awdiv& (0+255),w,b
  4751  001716  0100               	movlb	0	; () banked
  4752  001718  A0D8               	btfss	status,0,c
  4753  00171A  D002               	goto	u3020
  4754  00171C  888A               	bsf	3978,4,c	;volatile
  4755  00171E  D001               	goto	l2691
  4756  001720                     u3020:
  4757  001720  988A               	bcf	3978,4,c	;volatile
  4758  001722                     l2691:
  4759                           
  4760                           ;disp.c: 56: LATB1 = (dig / 0b100000);
  4761  001722  C07E  F076         	movff	set_digit@dig,___awdiv@dividend
  4762  001726  0100               	movlb	0	; () banked
  4763  001728  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4764  00172A  0E00               	movlw	0
  4765  00172C  0100               	movlb	0	; () banked
  4766  00172E  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4767  001730  0E20               	movlw	32
  4768  001732  6F78               	movwf	___awdiv@divisor& (0+255),b
  4769  001734  EC1E  F00F         	call	___awdiv	;wreg free
  4770  001738  0100               	movlb	0	; () banked
  4771  00173A  3176               	rrcf	?___awdiv& (0+255),w,b
  4772  00173C  0100               	movlb	0	; () banked
  4773  00173E  A0D8               	btfss	status,0,c
  4774  001740  D002               	goto	u3040
  4775  001742  828A               	bsf	3978,1,c	;volatile
  4776  001744  D001               	goto	l2693
  4777  001746                     u3040:
  4778  001746  928A               	bcf	3978,1,c	;volatile
  4779  001748                     l2693:
  4780                           
  4781                           ;disp.c: 57: LATA6 = (dig / 0b1000000);
  4782  001748  C07E  F076         	movff	set_digit@dig,___awdiv@dividend
  4783  00174C  0100               	movlb	0	; () banked
  4784  00174E  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4785  001750  0E00               	movlw	0
  4786  001752  0100               	movlb	0	; () banked
  4787  001754  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4788  001756  0E40               	movlw	64
  4789  001758  6F78               	movwf	___awdiv@divisor& (0+255),b
  4790  00175A  EC1E  F00F         	call	___awdiv	;wreg free
  4791  00175E  0100               	movlb	0	; () banked
  4792  001760  3176               	rrcf	?___awdiv& (0+255),w,b
  4793  001762  0100               	movlb	0	; () banked
  4794  001764  A0D8               	btfss	status,0,c
  4795  001766  D002               	goto	u3060
  4796  001768  8C89               	bsf	3977,6,c	;volatile
  4797  00176A  0012               	return	
  4798  00176C                     u3060:
  4799  00176C  9C89               	bcf	3977,6,c	;volatile
  4800  00176E  0012               	return		;funcret
  4801  001770                     __end_of_set_digit:
  4802                           	opt stack 0
  4803                           tblptru	equ	0xFF8
  4804                           tblptrh	equ	0xFF7
  4805                           tblptrl	equ	0xFF6
  4806                           tablat	equ	0xFF5
  4807                           prodh	equ	0xFF4
  4808                           prodl	equ	0xFF3
  4809                           intcon	equ	0xFF2
  4810                           intcon2	equ	0xFF1
  4811                           postinc0	equ	0xFEE
  4812                           wreg	equ	0xFE8
  4813                           postinc2	equ	0xFDE
  4814                           postdec2	equ	0xFDD
  4815                           fsr2h	equ	0xFDA
  4816                           fsr2l	equ	0xFD9
  4817                           status	equ	0xFD8
  4818                           
  4819 ;; *************** function _set_LEDs *****************
  4820 ;; Defined at:
  4821 ;;		line 478 in file "main.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  mask            1    wreg     unsigned char 
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;  mask            1   30[BANK0 ] unsigned char 
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  1    wreg      void 
  4828 ;; Registers used:
  4829 ;;		wreg, status,2, status,0, cstack
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4835 ;;      Params:         0       0       0       0       0       0       0       0       0
  4836 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4837 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4838 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4839 ;;Total ram usage:        1 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:    6
  4842 ;; This function calls:
  4843 ;;		___awdiv
  4844 ;;		_set_key_led_disp_tris
  4845 ;; This function is called by:
  4846 ;;		_error
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text23
  4851  001770                     __ptext23:
  4852                           	opt stack 0
  4853  001770                     _set_LEDs:
  4854                           	opt stack 23
  4855                           
  4856                           ;incstack = 0
  4857                           ;set_LEDs@mask stored from wreg
  4858  001770  0100               	movlb	0	; () banked
  4859  001772  6F7E               	movwf	set_LEDs@mask& (0+255),b
  4860                           
  4861                           ;main.c: 480: set_key_led_disp_tris(0);
  4862  001774  0E00               	movlw	0
  4863  001776  ECE4  F010         	call	_set_key_led_disp_tris
  4864                           
  4865                           ;main.c: 481: LATA2 = 0;
  4866  00177A  9489               	bcf	3977,2,c	;volatile
  4867                           
  4868                           ;main.c: 484: LATA6 = mask / 0b1;
  4869  00177C  0100               	movlb	0	; () banked
  4870  00177E  A17E               	btfss	set_LEDs@mask& (0+255),0,b
  4871  001780  D002               	goto	u3080
  4872  001782  8C89               	bsf	3977,6,c	;volatile
  4873  001784  D001               	goto	l2701
  4874  001786                     u3080:
  4875  001786  9C89               	bcf	3977,6,c	;volatile
  4876  001788                     l2701:
  4877                           
  4878                           ;main.c: 485: LATB1 = mask / 0b10;
  4879  001788  C07E  F076         	movff	set_LEDs@mask,___awdiv@dividend
  4880  00178C  0100               	movlb	0	; () banked
  4881  00178E  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4882  001790  0E00               	movlw	0
  4883  001792  0100               	movlb	0	; () banked
  4884  001794  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4885  001796  0E02               	movlw	2
  4886  001798  6F78               	movwf	___awdiv@divisor& (0+255),b
  4887  00179A  EC1E  F00F         	call	___awdiv	;wreg free
  4888  00179E  0100               	movlb	0	; () banked
  4889  0017A0  3176               	rrcf	?___awdiv& (0+255),w,b
  4890  0017A2  0100               	movlb	0	; () banked
  4891  0017A4  A0D8               	btfss	status,0,c
  4892  0017A6  D002               	goto	u3100
  4893  0017A8  828A               	bsf	3978,1,c	;volatile
  4894  0017AA  D001               	goto	l2703
  4895  0017AC                     u3100:
  4896  0017AC  928A               	bcf	3978,1,c	;volatile
  4897  0017AE                     l2703:
  4898                           
  4899                           ;main.c: 486: LATB2 = mask / 0b100;
  4900  0017AE  C07E  F076         	movff	set_LEDs@mask,___awdiv@dividend
  4901  0017B2  0100               	movlb	0	; () banked
  4902  0017B4  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4903  0017B6  0E00               	movlw	0
  4904  0017B8  0100               	movlb	0	; () banked
  4905  0017BA  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4906  0017BC  0E04               	movlw	4
  4907  0017BE  6F78               	movwf	___awdiv@divisor& (0+255),b
  4908  0017C0  EC1E  F00F         	call	___awdiv	;wreg free
  4909  0017C4  0100               	movlb	0	; () banked
  4910  0017C6  3176               	rrcf	?___awdiv& (0+255),w,b
  4911  0017C8  0100               	movlb	0	; () banked
  4912  0017CA  A0D8               	btfss	status,0,c
  4913  0017CC  D002               	goto	u3120
  4914  0017CE  848A               	bsf	3978,2,c	;volatile
  4915  0017D0  D001               	goto	l2705
  4916  0017D2                     u3120:
  4917  0017D2  948A               	bcf	3978,2,c	;volatile
  4918  0017D4                     l2705:
  4919                           
  4920                           ;main.c: 487: LATB3 = mask / 0b1000;
  4921  0017D4  C07E  F076         	movff	set_LEDs@mask,___awdiv@dividend
  4922  0017D8  0100               	movlb	0	; () banked
  4923  0017DA  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4924  0017DC  0E00               	movlw	0
  4925  0017DE  0100               	movlb	0	; () banked
  4926  0017E0  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4927  0017E2  0E08               	movlw	8
  4928  0017E4  6F78               	movwf	___awdiv@divisor& (0+255),b
  4929  0017E6  EC1E  F00F         	call	___awdiv	;wreg free
  4930  0017EA  0100               	movlb	0	; () banked
  4931  0017EC  3176               	rrcf	?___awdiv& (0+255),w,b
  4932  0017EE  0100               	movlb	0	; () banked
  4933  0017F0  A0D8               	btfss	status,0,c
  4934  0017F2  D002               	goto	u3140
  4935  0017F4  868A               	bsf	3978,3,c	;volatile
  4936  0017F6  D001               	goto	l2707
  4937  0017F8                     u3140:
  4938  0017F8  968A               	bcf	3978,3,c	;volatile
  4939  0017FA                     l2707:
  4940                           
  4941                           ;main.c: 488: LATB4 = mask / 0b10000;
  4942  0017FA  C07E  F076         	movff	set_LEDs@mask,___awdiv@dividend
  4943  0017FE  0100               	movlb	0	; () banked
  4944  001800  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4945  001802  0E00               	movlw	0
  4946  001804  0100               	movlb	0	; () banked
  4947  001806  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4948  001808  0E10               	movlw	16
  4949  00180A  6F78               	movwf	___awdiv@divisor& (0+255),b
  4950  00180C  EC1E  F00F         	call	___awdiv	;wreg free
  4951  001810  0100               	movlb	0	; () banked
  4952  001812  3176               	rrcf	?___awdiv& (0+255),w,b
  4953  001814  0100               	movlb	0	; () banked
  4954  001816  A0D8               	btfss	status,0,c
  4955  001818  D002               	goto	u3160
  4956  00181A  888A               	bsf	3978,4,c	;volatile
  4957  00181C  D001               	goto	l2709
  4958  00181E                     u3160:
  4959  00181E  988A               	bcf	3978,4,c	;volatile
  4960  001820                     l2709:
  4961                           
  4962                           ;main.c: 489: LATB5 = mask / 0b100000;
  4963  001820  C07E  F076         	movff	set_LEDs@mask,___awdiv@dividend
  4964  001824  0100               	movlb	0	; () banked
  4965  001826  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4966  001828  0E00               	movlw	0
  4967  00182A  0100               	movlb	0	; () banked
  4968  00182C  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4969  00182E  0E20               	movlw	32
  4970  001830  6F78               	movwf	___awdiv@divisor& (0+255),b
  4971  001832  EC1E  F00F         	call	___awdiv	;wreg free
  4972  001836  0100               	movlb	0	; () banked
  4973  001838  3176               	rrcf	?___awdiv& (0+255),w,b
  4974  00183A  0100               	movlb	0	; () banked
  4975  00183C  A0D8               	btfss	status,0,c
  4976  00183E  D002               	goto	u3180
  4977  001840  8A8A               	bsf	3978,5,c	;volatile
  4978  001842  D001               	goto	l2711
  4979  001844                     u3180:
  4980  001844  9A8A               	bcf	3978,5,c	;volatile
  4981  001846                     l2711:
  4982                           
  4983                           ;main.c: 490: LATB0 = mask / 0b1000000;
  4984  001846  C07E  F076         	movff	set_LEDs@mask,___awdiv@dividend
  4985  00184A  0100               	movlb	0	; () banked
  4986  00184C  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4987  00184E  0E00               	movlw	0
  4988  001850  0100               	movlb	0	; () banked
  4989  001852  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4990  001854  0E40               	movlw	64
  4991  001856  6F78               	movwf	___awdiv@divisor& (0+255),b
  4992  001858  EC1E  F00F         	call	___awdiv	;wreg free
  4993  00185C  0100               	movlb	0	; () banked
  4994  00185E  3176               	rrcf	?___awdiv& (0+255),w,b
  4995  001860  0100               	movlb	0	; () banked
  4996  001862  A0D8               	btfss	status,0,c
  4997  001864  D002               	goto	u3200
  4998  001866  808A               	bsf	3978,0,c	;volatile
  4999  001868  0012               	return	
  5000  00186A                     u3200:
  5001  00186A  908A               	bcf	3978,0,c	;volatile
  5002  00186C  0012               	return		;funcret
  5003  00186E                     __end_of_set_LEDs:
  5004                           	opt stack 0
  5005                           tblptru	equ	0xFF8
  5006                           tblptrh	equ	0xFF7
  5007                           tblptrl	equ	0xFF6
  5008                           tablat	equ	0xFF5
  5009                           prodh	equ	0xFF4
  5010                           prodl	equ	0xFF3
  5011                           intcon	equ	0xFF2
  5012                           intcon2	equ	0xFF1
  5013                           postinc0	equ	0xFEE
  5014                           wreg	equ	0xFE8
  5015                           postinc2	equ	0xFDE
  5016                           postdec2	equ	0xFDD
  5017                           fsr2h	equ	0xFDA
  5018                           fsr2l	equ	0xFD9
  5019                           status	equ	0xFD8
  5020                           
  5021 ;; *************** function _set_key_led_disp_tris *****************
  5022 ;; Defined at:
  5023 ;;		line 501 in file "main.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;  dir             1    wreg     unsigned char 
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;  dir             1   22[BANK0 ] unsigned char 
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  1    wreg      void 
  5030 ;; Registers used:
  5031 ;;		wreg
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5037 ;;      Params:         0       0       0       0       0       0       0       0       0
  5038 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5039 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5040 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5041 ;;Total ram usage:        1 bytes
  5042 ;; Hardware stack levels used:    1
  5043 ;; Hardware stack levels required when called:    5
  5044 ;; This function calls:
  5045 ;;		Nothing
  5046 ;; This function is called by:
  5047 ;;		_error
  5048 ;;		_set_LEDs
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052                           	psect	text24
  5053  0021C8                     __ptext24:
  5054                           	opt stack 0
  5055  0021C8                     _set_key_led_disp_tris:
  5056                           	opt stack 24
  5057                           
  5058                           ;incstack = 0
  5059                           ;set_key_led_disp_tris@dir stored from wreg
  5060  0021C8  0100               	movlb	0	; () banked
  5061  0021CA  6F76               	movwf	set_key_led_disp_tris@dir& (0+255),b
  5062                           
  5063                           ;main.c: 505: TRISA6 = dir;
  5064  0021CC  0100               	movlb	0	; () banked
  5065  0021CE  A176               	btfss	set_key_led_disp_tris@dir& (0+255),0,b
  5066  0021D0  D002               	goto	u2690
  5067  0021D2  8C92               	bsf	3986,6,c	;volatile
  5068  0021D4  D001               	goto	u2705
  5069  0021D6                     u2690:
  5070  0021D6  9C92               	bcf	3986,6,c	;volatile
  5071  0021D8                     u2705:
  5072                           
  5073                           ;main.c: 506: TRISB1 = dir;
  5074  0021D8  0100               	movlb	0	; () banked
  5075  0021DA  A176               	btfss	set_key_led_disp_tris@dir& (0+255),0,b
  5076  0021DC  D002               	goto	u2710
  5077  0021DE  8293               	bsf	3987,1,c	;volatile
  5078  0021E0  D001               	goto	u2725
  5079  0021E2                     u2710:
  5080  0021E2  9293               	bcf	3987,1,c	;volatile
  5081  0021E4                     u2725:
  5082                           
  5083                           ;main.c: 507: TRISB2 = dir;
  5084  0021E4  0100               	movlb	0	; () banked
  5085  0021E6  A176               	btfss	set_key_led_disp_tris@dir& (0+255),0,b
  5086  0021E8  D002               	goto	u2730
  5087  0021EA  8493               	bsf	3987,2,c	;volatile
  5088  0021EC  D001               	goto	u2745
  5089  0021EE                     u2730:
  5090  0021EE  9493               	bcf	3987,2,c	;volatile
  5091  0021F0                     u2745:
  5092                           
  5093                           ;main.c: 508: TRISB3 = dir;
  5094  0021F0  0100               	movlb	0	; () banked
  5095  0021F2  A176               	btfss	set_key_led_disp_tris@dir& (0+255),0,b
  5096  0021F4  D002               	goto	u2750
  5097  0021F6  8693               	bsf	3987,3,c	;volatile
  5098  0021F8  D001               	goto	u2765
  5099  0021FA                     u2750:
  5100  0021FA  9693               	bcf	3987,3,c	;volatile
  5101  0021FC                     u2765:
  5102                           
  5103                           ;main.c: 509: TRISB4 = dir;
  5104  0021FC  0100               	movlb	0	; () banked
  5105  0021FE  A176               	btfss	set_key_led_disp_tris@dir& (0+255),0,b
  5106  002200  D002               	goto	u2770
  5107  002202  8893               	bsf	3987,4,c	;volatile
  5108  002204  D001               	goto	u2785
  5109  002206                     u2770:
  5110  002206  9893               	bcf	3987,4,c	;volatile
  5111  002208                     u2785:
  5112                           
  5113                           ;main.c: 510: TRISB5 = dir;
  5114  002208  0100               	movlb	0	; () banked
  5115  00220A  A176               	btfss	set_key_led_disp_tris@dir& (0+255),0,b
  5116  00220C  D002               	goto	u2790
  5117  00220E  8A93               	bsf	3987,5,c	;volatile
  5118  002210  D001               	goto	u2805
  5119  002212                     u2790:
  5120  002212  9A93               	bcf	3987,5,c	;volatile
  5121  002214                     u2805:
  5122                           
  5123                           ;main.c: 511: TRISB0 = dir;
  5124  002214  0100               	movlb	0	; () banked
  5125  002216  A176               	btfss	set_key_led_disp_tris@dir& (0+255),0,b
  5126  002218  D002               	goto	u2810
  5127  00221A  8093               	bsf	3987,0,c	;volatile
  5128  00221C  0012               	return	
  5129  00221E                     u2810:
  5130  00221E  9093               	bcf	3987,0,c	;volatile
  5131  002220  0012               	return		;funcret
  5132  002222                     __end_of_set_key_led_disp_tris:
  5133                           	opt stack 0
  5134                           tblptru	equ	0xFF8
  5135                           tblptrh	equ	0xFF7
  5136                           tblptrl	equ	0xFF6
  5137                           tablat	equ	0xFF5
  5138                           prodh	equ	0xFF4
  5139                           prodl	equ	0xFF3
  5140                           intcon	equ	0xFF2
  5141                           intcon2	equ	0xFF1
  5142                           postinc0	equ	0xFEE
  5143                           wreg	equ	0xFE8
  5144                           postinc2	equ	0xFDE
  5145                           postdec2	equ	0xFDD
  5146                           fsr2h	equ	0xFDA
  5147                           fsr2l	equ	0xFD9
  5148                           status	equ	0xFD8
  5149                           
  5150 ;; *************** function ___awdiv *****************
  5151 ;; Defined at:
  5152 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/awdiv.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  dividend        2   22[BANK0 ] int 
  5155 ;;  divisor         2   24[BANK0 ] int 
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;  quotient        2   28[BANK0 ] int 
  5158 ;;  sign            1   27[BANK0 ] unsigned char 
  5159 ;;  counter         1   26[BANK0 ] unsigned char 
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  2   22[BANK0 ] int 
  5162 ;; Registers used:
  5163 ;;		wreg, status,2, status,0
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5169 ;;      Params:         0       4       0       0       0       0       0       0       0
  5170 ;;      Locals:         0       4       0       0       0       0       0       0       0
  5171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5172 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5173 ;;Total ram usage:        8 bytes
  5174 ;; Hardware stack levels used:    1
  5175 ;; Hardware stack levels required when called:    5
  5176 ;; This function calls:
  5177 ;;		Nothing
  5178 ;; This function is called by:
  5179 ;;		_set_LEDs
  5180 ;;		_set_digit
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           	psect	text25
  5185  001E3C                     __ptext25:
  5186                           	opt stack 0
  5187  001E3C                     ___awdiv:
  5188                           	opt stack 23
  5189                           
  5190                           ;incstack = 0
  5191  001E3C  0E00               	movlw	0
  5192  001E3E  0100               	movlb	0	; () banked
  5193  001E40  6F7B               	movwf	___awdiv@sign& (0+255),b
  5194                           
  5195                           ; BSR set to: 0
  5196  001E42  0100               	movlb	0	; () banked
  5197  001E44  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5198  001E46  D008               	goto	l2531
  5199                           
  5200                           ; BSR set to: 0
  5201  001E48  0100               	movlb	0	; () banked
  5202  001E4A  6D78               	negf	___awdiv@divisor& (0+255),b
  5203  001E4C  1F79               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5204  001E4E  B0D8               	btfsc	status,0,c
  5205  001E50  2B79               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5206                           
  5207                           ; BSR set to: 0
  5208  001E52  0E01               	movlw	1
  5209  001E54  0100               	movlb	0	; () banked
  5210  001E56  6F7B               	movwf	___awdiv@sign& (0+255),b
  5211  001E58                     l2531:
  5212                           
  5213                           ; BSR set to: 0
  5214  001E58  0100               	movlb	0	; () banked
  5215  001E5A  AF77               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5216  001E5C  D008               	goto	l2537
  5217                           
  5218                           ; BSR set to: 0
  5219  001E5E  0100               	movlb	0	; () banked
  5220  001E60  6D76               	negf	___awdiv@dividend& (0+255),b
  5221  001E62  1F77               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5222  001E64  B0D8               	btfsc	status,0,c
  5223  001E66  2B77               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5224                           
  5225                           ; BSR set to: 0
  5226  001E68  0E01               	movlw	1
  5227  001E6A  0100               	movlb	0	; () banked
  5228  001E6C  1B7B               	xorwf	___awdiv@sign& (0+255),f,b
  5229  001E6E                     l2537:
  5230                           
  5231                           ; BSR set to: 0
  5232  001E6E  0E00               	movlw	0
  5233  001E70  0100               	movlb	0	; () banked
  5234  001E72  6F7D               	movwf	(___awdiv@quotient+1)& (0+255),b
  5235  001E74  0E00               	movlw	0
  5236  001E76  6F7C               	movwf	___awdiv@quotient& (0+255),b
  5237                           
  5238                           ; BSR set to: 0
  5239  001E78  0100               	movlb	0	; () banked
  5240  001E7A  5178               	movf	___awdiv@divisor& (0+255),w,b
  5241  001E7C  0100               	movlb	0	; () banked
  5242  001E7E  1179               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5243  001E80  B4D8               	btfsc	status,2,c
  5244  001E82  D02C               	goto	l2559
  5245                           
  5246                           ; BSR set to: 0
  5247  001E84  0E01               	movlw	1
  5248  001E86  0100               	movlb	0	; () banked
  5249  001E88  6F7A               	movwf	___awdiv@counter& (0+255),b
  5250  001E8A  D006               	goto	l2545
  5251  001E8C                     l2543:
  5252                           
  5253                           ; BSR set to: 0
  5254  001E8C  0100               	movlb	0	; () banked
  5255  001E8E  90D8               	bcf	status,0,c
  5256  001E90  3778               	rlcf	___awdiv@divisor& (0+255),f,b
  5257  001E92  3779               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5258  001E94  0100               	movlb	0	; () banked
  5259  001E96  2B7A               	incf	___awdiv@counter& (0+255),f,b
  5260  001E98                     l2545:
  5261                           
  5262                           ; BSR set to: 0
  5263  001E98  0100               	movlb	0	; () banked
  5264  001E9A  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5265  001E9C  D7F7               	goto	l2543
  5266  001E9E                     l2547:
  5267                           
  5268                           ; BSR set to: 0
  5269  001E9E  0100               	movlb	0	; () banked
  5270  001EA0  90D8               	bcf	status,0,c
  5271  001EA2  377C               	rlcf	___awdiv@quotient& (0+255),f,b
  5272  001EA4  377D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5273                           
  5274                           ; BSR set to: 0
  5275  001EA6  0100               	movlb	0	; () banked
  5276  001EA8  5178               	movf	___awdiv@divisor& (0+255),w,b
  5277  001EAA  0100               	movlb	0	; () banked
  5278  001EAC  5D76               	subwf	___awdiv@dividend& (0+255),w,b
  5279  001EAE  0100               	movlb	0	; () banked
  5280  001EB0  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5281  001EB2  0100               	movlb	0	; () banked
  5282  001EB4  5977               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5283  001EB6  A0D8               	btfss	status,0,c
  5284  001EB8  D00A               	goto	l2555
  5285                           
  5286                           ; BSR set to: 0
  5287  001EBA  0100               	movlb	0	; () banked
  5288  001EBC  5178               	movf	___awdiv@divisor& (0+255),w,b
  5289  001EBE  0100               	movlb	0	; () banked
  5290  001EC0  5F76               	subwf	___awdiv@dividend& (0+255),f,b
  5291  001EC2  0100               	movlb	0	; () banked
  5292  001EC4  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5293  001EC6  0100               	movlb	0	; () banked
  5294  001EC8  5B77               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5295                           
  5296                           ; BSR set to: 0
  5297  001ECA  0100               	movlb	0	; () banked
  5298  001ECC  817C               	bsf	___awdiv@quotient& (0+255),0,b
  5299  001ECE                     l2555:
  5300                           
  5301                           ; BSR set to: 0
  5302  001ECE  0100               	movlb	0	; () banked
  5303  001ED0  90D8               	bcf	status,0,c
  5304  001ED2  3379               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5305  001ED4  3378               	rrcf	___awdiv@divisor& (0+255),f,b
  5306                           
  5307                           ; BSR set to: 0
  5308  001ED6  0100               	movlb	0	; () banked
  5309  001ED8  2F7A               	decfsz	___awdiv@counter& (0+255),f,b
  5310  001EDA  D7E1               	goto	l2547
  5311  001EDC                     l2559:
  5312                           
  5313                           ; BSR set to: 0
  5314  001EDC  0100               	movlb	0	; () banked
  5315  001EDE  517B               	movf	___awdiv@sign& (0+255),w,b
  5316  001EE0  0100               	movlb	0	; () banked
  5317  001EE2  B4D8               	btfsc	status,2,c
  5318  001EE4  D005               	goto	l2563
  5319                           
  5320                           ; BSR set to: 0
  5321  001EE6  0100               	movlb	0	; () banked
  5322  001EE8  6D7C               	negf	___awdiv@quotient& (0+255),b
  5323  001EEA  1F7D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5324  001EEC  B0D8               	btfsc	status,0,c
  5325  001EEE  2B7D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5326  001EF0                     l2563:
  5327                           
  5328                           ; BSR set to: 0
  5329  001EF0  C07C  F076         	movff	___awdiv@quotient,?___awdiv
  5330  001EF4  C07D  F077         	movff	___awdiv@quotient+1,?___awdiv+1
  5331  001EF8  0012               	return	
  5332  001EFA                     __end_of___awdiv:
  5333                           	opt stack 0
  5334                           tblptru	equ	0xFF8
  5335                           tblptrh	equ	0xFF7
  5336                           tblptrl	equ	0xFF6
  5337                           tablat	equ	0xFF5
  5338                           prodh	equ	0xFF4
  5339                           prodl	equ	0xFF3
  5340                           intcon	equ	0xFF2
  5341                           intcon2	equ	0xFF1
  5342                           postinc0	equ	0xFEE
  5343                           wreg	equ	0xFE8
  5344                           postinc2	equ	0xFDE
  5345                           postdec2	equ	0xFDD
  5346                           fsr2h	equ	0xFDA
  5347                           fsr2l	equ	0xFD9
  5348                           status	equ	0xFD8
  5349                           
  5350 ;; *************** function _num_to_disp *****************
  5351 ;; Defined at:
  5352 ;;		line 5 in file "disp.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;  num             1    wreg     unsigned char 
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;  num             1   23[BANK0 ] unsigned char 
  5357 ;;  ret             1   22[BANK0 ] unsigned char 
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      unsigned char 
  5360 ;; Registers used:
  5361 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5367 ;;      Params:         0       0       0       0       0       0       0       0       0
  5368 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5369 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5370 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5371 ;;Total ram usage:        2 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:    5
  5374 ;; This function calls:
  5375 ;;		Nothing
  5376 ;; This function is called by:
  5377 ;;		_error
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           	psect	text26
  5382  0020D8                     __ptext26:
  5383                           	opt stack 0
  5384  0020D8                     _num_to_disp:
  5385                           	opt stack 24
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;incstack = 0
  5389                           ;num_to_disp@num stored from wreg
  5390  0020D8  0100               	movlb	0	; () banked
  5391  0020DA  6F77               	movwf	num_to_disp@num& (0+255),b
  5392                           
  5393                           ;disp.c: 7: unsigned char ret;
  5394                           ;disp.c: 8: switch (num)
  5395  0020DC  D013               	goto	l2671
  5396  0020DE                     l2663:
  5397                           
  5398                           ;disp.c: 11: ret = font[num];
  5399  0020DE  0100               	movlb	0	; () banked
  5400  0020E0  5177               	movf	num_to_disp@num& (0+255),w,b
  5401  0020E2  0D01               	mullw	1
  5402  0020E4  0E01               	movlw	low _font
  5403  0020E6  24F3               	addwf	prodl,w,c
  5404  0020E8  6EF6               	movwf	tblptrl,c
  5405  0020EA  0E08               	movlw	high _font
  5406  0020EC  20F4               	addwfc	prodh,w,c
  5407  0020EE  6EF7               	movwf	tblptrh,c
  5408  0020F0                     	if	0	;There are less than 3 active tblptr bytes
  5409  0020F0                     	endif
  5410  0020F0  0008               	tblrd		*
  5411  0020F2  CFF5 F076          	movff	tablat,num_to_disp@ret
  5412                           
  5413                           ;disp.c: 12: break;
  5414  0020F6  D02D               	goto	l2673
  5415  0020F8                     l2665:
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;disp.c: 14: case 'e':
  5419                           ;disp.c: 15: ret = (0b1 | 0 | 0 | 0b1000 | 0b10000 | 0b100000 | 0b1000000);
  5420  0020F8  0E79               	movlw	121
  5421  0020FA  D001               	goto	L4
  5422  0020FC                     l2667:
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;disp.c: 18: ret = (0);
  5426  0020FC  0E00               	movlw	0
  5427  0020FE                     L4:
  5428  0020FE  0100               	movlb	0	; () banked
  5429  002100  6F76               	movwf	num_to_disp@ret& (0+255),b
  5430                           
  5431                           ; BSR set to: 0
  5432                           ;disp.c: 20: }
  5433                           
  5434                           ;disp.c: 19: break;
  5435  002102  D027               	goto	l2673
  5436  002104                     l2671:
  5437  002104  0100               	movlb	0	; () banked
  5438  002106  5177               	movf	num_to_disp@num& (0+255),w,b
  5439                           
  5440                           ; Switch size 1, requested type "space"
  5441                           ; Number of cases is 12, Range of values is 0 to 101
  5442                           ; switch strategies available:
  5443                           ; Name         Instructions Cycles
  5444                           ; simple_byte           37    19 (average)
  5445                           ;	Chosen strategy is simple_byte
  5446  002108  0A00               	xorlw	0	; case 0
  5447  00210A  B4D8               	btfsc	status,2,c
  5448  00210C  D7E8               	goto	l2663
  5449  00210E  0A01               	xorlw	1	; case 1
  5450  002110  B4D8               	btfsc	status,2,c
  5451  002112  D7E5               	goto	l2663
  5452  002114  0A03               	xorlw	3	; case 2
  5453  002116  B4D8               	btfsc	status,2,c
  5454  002118  D7E2               	goto	l2663
  5455  00211A  0A01               	xorlw	1	; case 3
  5456  00211C  B4D8               	btfsc	status,2,c
  5457  00211E  D7DF               	goto	l2663
  5458  002120  0A07               	xorlw	7	; case 4
  5459  002122  B4D8               	btfsc	status,2,c
  5460  002124  D7DC               	goto	l2663
  5461  002126  0A01               	xorlw	1	; case 5
  5462  002128  B4D8               	btfsc	status,2,c
  5463  00212A  D7D9               	goto	l2663
  5464  00212C  0A03               	xorlw	3	; case 6
  5465  00212E  B4D8               	btfsc	status,2,c
  5466  002130  D7D6               	goto	l2663
  5467  002132  0A01               	xorlw	1	; case 7
  5468  002134  B4D8               	btfsc	status,2,c
  5469  002136  D7D3               	goto	l2663
  5470  002138  0A0F               	xorlw	15	; case 8
  5471  00213A  B4D8               	btfsc	status,2,c
  5472  00213C  D7D0               	goto	l2663
  5473  00213E  0A01               	xorlw	1	; case 9
  5474  002140  B4D8               	btfsc	status,2,c
  5475  002142  D7CD               	goto	l2663
  5476  002144  0A4C               	xorlw	76	; case 69
  5477  002146  B4D8               	btfsc	status,2,c
  5478  002148  D7D7               	goto	l2665
  5479  00214A  0A20               	xorlw	32	; case 101
  5480  00214C  B4D8               	btfsc	status,2,c
  5481  00214E  D7D4               	goto	l2665
  5482  002150  D7D5               	goto	l2667
  5483  002152                     l2673:
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;disp.c: 21: return ret;
  5487  002152  0100               	movlb	0	; () banked
  5488  002154  5176               	movf	num_to_disp@ret& (0+255),w,b
  5489  002156  0012               	return	
  5490  002158                     __end_of_num_to_disp:
  5491                           	opt stack 0
  5492                           tblptru	equ	0xFF8
  5493                           tblptrh	equ	0xFF7
  5494                           tblptrl	equ	0xFF6
  5495                           tablat	equ	0xFF5
  5496                           prodh	equ	0xFF4
  5497                           prodl	equ	0xFF3
  5498                           intcon	equ	0xFF2
  5499                           intcon2	equ	0xFF1
  5500                           postinc0	equ	0xFEE
  5501                           wreg	equ	0xFE8
  5502                           postinc2	equ	0xFDE
  5503                           postdec2	equ	0xFDD
  5504                           fsr2h	equ	0xFDA
  5505                           fsr2l	equ	0xFD9
  5506                           status	equ	0xFD8
  5507                           
  5508 ;; *************** function _ee_read_state *****************
  5509 ;; Defined at:
  5510 ;;		line 551 in file "main.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;		None
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;  mode            1   34[BANK0 ] unsigned char 
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  1    wreg      void 
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0, cstack
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5524 ;;      Params:         0       0       0       0       0       0       0       0       0
  5525 ;;      Locals:         0      11       0       0       0       0       0       0       0
  5526 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5527 ;;      Totals:         0      12       0       0       0       0       0       0       0
  5528 ;;Total ram usage:       12 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:    6
  5531 ;; This function calls:
  5532 ;;		_ee_read_byte
  5533 ;; This function is called by:
  5534 ;;		_main
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           	psect	text27
  5539  001562                     __ptext27:
  5540                           	opt stack 0
  5541  001562                     _ee_read_state:
  5542                           	opt stack 24
  5543                           
  5544                           ;main.c: 553: time = ee_read_byte(EE_TIME_ADDR);
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;incstack = 0
  5548  001562  0E00               	movlw	0
  5549  001564  EC62  F012         	call	_ee_read_byte
  5550  001568  0100               	movlb	0	; () banked
  5551  00156A  6F77               	movwf	??_ee_read_state& (0+255),b
  5552  00156C  0100               	movlb	0	; () banked
  5553  00156E  5177               	movf	??_ee_read_state& (0+255),w,b
  5554  001570  0100               	movlb	0	; () banked
  5555  001572  6FD7               	movwf	_time& (0+255),b
  5556  001574  6BD8               	clrf	(_time+1)& (0+255),b
  5557  001576  6BD9               	clrf	(_time+2)& (0+255),b
  5558  001578  6BDA               	clrf	(_time+3)& (0+255),b
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;main.c: 554: temp_want = ee_read_byte(EE_WANT_TEMP_ADDR);
  5562  00157A  0E01               	movlw	1
  5563  00157C  EC62  F012         	call	_ee_read_byte
  5564  001580  0100               	movlb	0	; () banked
  5565  001582  6FDB               	movwf	_temp_want& (0+255),b
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;main.c: 555: temp_want = temp_want ? temp_want : 20;
  5569  001584  0100               	movlb	0	; () banked
  5570  001586  51DB               	movf	_temp_want& (0+255),w,b
  5571  001588  A4D8               	btfss	status,2,c
  5572  00158A  D006               	goto	l400
  5573                           
  5574                           ; BSR set to: 0
  5575  00158C  0E00               	movlw	0
  5576  00158E  0100               	movlb	0	; () banked
  5577  001590  6F79               	movwf	(_ee_read_state$335+1)& (0+255),b
  5578  001592  0E14               	movlw	20
  5579  001594  6F78               	movwf	_ee_read_state$335& (0+255),b
  5580  001596  D004               	goto	l402
  5581  001598                     l400:
  5582                           
  5583                           ; BSR set to: 0
  5584  001598  C0DB  F078         	movff	_temp_want,_ee_read_state$335
  5585  00159C  0100               	movlb	0	; () banked
  5586  00159E  6B79               	clrf	(_ee_read_state$335+1)& (0+255),b
  5587  0015A0                     l402:
  5588                           
  5589                           ; BSR set to: 0
  5590  0015A0  C078  F0DB         	movff	_ee_read_state$335,_temp_want
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;main.c: 556: day_hour = ee_read_byte(EE_DAY_TIME_ADDR);
  5594  0015A4  0E02               	movlw	2
  5595  0015A6  EC62  F012         	call	_ee_read_byte
  5596  0015AA  0100               	movlb	0	; () banked
  5597  0015AC  6FD0               	movwf	_day_hour& (0+255),b
  5598                           
  5599                           ;main.c: 557: day_temp = ee_read_byte(EE_DAY_TEMP_ADDR);
  5600  0015AE  0E03               	movlw	3
  5601  0015B0  EC62  F012         	call	_ee_read_byte
  5602  0015B4  0100               	movlb	0	; () banked
  5603  0015B6  6FD1               	movwf	_day_temp& (0+255),b
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;main.c: 558: day_temp = day_temp ? day_temp : 20;
  5607  0015B8  0100               	movlb	0	; () banked
  5608  0015BA  51D1               	movf	_day_temp& (0+255),w,b
  5609  0015BC  A4D8               	btfss	status,2,c
  5610  0015BE  D006               	goto	l404
  5611                           
  5612                           ; BSR set to: 0
  5613  0015C0  0E00               	movlw	0
  5614  0015C2  0100               	movlb	0	; () banked
  5615  0015C4  6F7B               	movwf	(_ee_read_state$336+1)& (0+255),b
  5616  0015C6  0E14               	movlw	20
  5617  0015C8  6F7A               	movwf	_ee_read_state$336& (0+255),b
  5618  0015CA  D004               	goto	l406
  5619  0015CC                     l404:
  5620                           
  5621                           ; BSR set to: 0
  5622  0015CC  C0D1  F07A         	movff	_day_temp,_ee_read_state$336
  5623  0015D0  0100               	movlb	0	; () banked
  5624  0015D2  6B7B               	clrf	(_ee_read_state$336+1)& (0+255),b
  5625  0015D4                     l406:
  5626                           
  5627                           ; BSR set to: 0
  5628  0015D4  C07A  F0D1         	movff	_ee_read_state$336,_day_temp
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;main.c: 559: night_hour = ee_read_byte(EE_NIGHT_TIME_ADDR);
  5632  0015D8  0E04               	movlw	4
  5633  0015DA  EC62  F012         	call	_ee_read_byte
  5634  0015DE  0100               	movlb	0	; () banked
  5635  0015E0  6FD4               	movwf	_night_hour& (0+255),b
  5636                           
  5637                           ;main.c: 560: night_temp = ee_read_byte(EE_NIGHT_TEMP_ADDR);
  5638  0015E2  0E05               	movlw	5
  5639  0015E4  EC62  F012         	call	_ee_read_byte
  5640  0015E8  0100               	movlb	0	; () banked
  5641  0015EA  6FD5               	movwf	_night_temp& (0+255),b
  5642                           
  5643                           ; BSR set to: 0
  5644                           ;main.c: 561: night_temp = night_temp ? night_temp : 20;
  5645  0015EC  0100               	movlb	0	; () banked
  5646  0015EE  51D5               	movf	_night_temp& (0+255),w,b
  5647  0015F0  A4D8               	btfss	status,2,c
  5648  0015F2  D006               	goto	l408
  5649                           
  5650                           ; BSR set to: 0
  5651  0015F4  0E00               	movlw	0
  5652  0015F6  0100               	movlb	0	; () banked
  5653  0015F8  6F7D               	movwf	(_ee_read_state$337+1)& (0+255),b
  5654  0015FA  0E14               	movlw	20
  5655  0015FC  6F7C               	movwf	_ee_read_state$337& (0+255),b
  5656  0015FE  D004               	goto	l410
  5657  001600                     l408:
  5658                           
  5659                           ; BSR set to: 0
  5660  001600  C0D5  F07C         	movff	_night_temp,_ee_read_state$337
  5661  001604  0100               	movlb	0	; () banked
  5662  001606  6B7D               	clrf	(_ee_read_state$337+1)& (0+255),b
  5663  001608                     l410:
  5664                           
  5665                           ; BSR set to: 0
  5666  001608  C07C  F0D5         	movff	_ee_read_state$337,_night_temp
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;main.c: 562: unsigned char mode = ee_read_byte(EE_STATE_ADDR);
  5670  00160C  0E06               	movlw	6
  5671  00160E  EC62  F012         	call	_ee_read_byte
  5672  001612  0100               	movlb	0	; () banked
  5673  001614  6F82               	movwf	ee_read_state@mode& (0+255),b
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;main.c: 563: climate_control = 0x0F & mode;
  5677  001616  0100               	movlb	0	; () banked
  5678  001618  5182               	movf	ee_read_state@mode& (0+255),w,b
  5679  00161A  0B0F               	andlw	15
  5680  00161C  0100               	movlb	0	; () banked
  5681  00161E  6FDC               	movwf	_climate_control& (0+255),b
  5682                           
  5683                           ; BSR set to: 0
  5684                           ;main.c: 564: climate_control = (climate_control ? climate_control : (_HEAT | _COOL));
  5685  001620  0100               	movlb	0	; () banked
  5686  001622  51DC               	movf	_climate_control& (0+255),w,b
  5687  001624  A4D8               	btfss	status,2,c
  5688  001626  D006               	goto	l412
  5689                           
  5690                           ; BSR set to: 0
  5691  001628  0E00               	movlw	0
  5692  00162A  0100               	movlb	0	; () banked
  5693  00162C  6F7F               	movwf	(_ee_read_state$339+1)& (0+255),b
  5694  00162E  0E03               	movlw	3
  5695  001630  6F7E               	movwf	_ee_read_state$339& (0+255),b
  5696  001632  D004               	goto	l414
  5697  001634                     l412:
  5698                           
  5699                           ; BSR set to: 0
  5700  001634  C0DC  F07E         	movff	_climate_control,_ee_read_state$339
  5701  001638  0100               	movlb	0	; () banked
  5702  00163A  6B7F               	clrf	(_ee_read_state$339+1)& (0+255),b
  5703  00163C                     l414:
  5704                           
  5705                           ; BSR set to: 0
  5706  00163C  C07E  F0DC         	movff	_ee_read_state$339,_climate_control
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;main.c: 565: heat_mode = 0x0F & (mode >> 4);
  5710  001640  0100               	movlb	0	; () banked
  5711  001642  3982               	swapf	ee_read_state@mode& (0+255),w,b
  5712  001644  0B0F               	andlw	15
  5713  001646  0B0F               	andlw	15
  5714  001648  0100               	movlb	0	; () banked
  5715  00164A  6FDD               	movwf	_heat_mode& (0+255),b
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;main.c: 566: heat_mode = (heat_mode != _NONE ? heat_mode : _HEAT_BOTH);
  5719  00164C  0100               	movlb	0	; () banked
  5720  00164E  51DD               	movf	_heat_mode& (0+255),w,b
  5721  001650  A4D8               	btfss	status,2,c
  5722  001652  D006               	goto	l416
  5723                           
  5724                           ; BSR set to: 0
  5725  001654  0E00               	movlw	0
  5726  001656  0100               	movlb	0	; () banked
  5727  001658  6F81               	movwf	(_ee_read_state$340+1)& (0+255),b
  5728  00165A  0E03               	movlw	3
  5729  00165C  6F80               	movwf	_ee_read_state$340& (0+255),b
  5730  00165E  D004               	goto	l418
  5731  001660                     l416:
  5732                           
  5733                           ; BSR set to: 0
  5734  001660  C0DD  F080         	movff	_heat_mode,_ee_read_state$340
  5735  001664  0100               	movlb	0	; () banked
  5736  001666  6B81               	clrf	(_ee_read_state$340+1)& (0+255),b
  5737  001668                     l418:
  5738                           
  5739                           ; BSR set to: 0
  5740  001668  C080  F0DD         	movff	_ee_read_state$340,_heat_mode
  5741                           
  5742                           ; BSR set to: 0
  5743  00166C  0012               	return		;funcret
  5744  00166E                     __end_of_ee_read_state:
  5745                           	opt stack 0
  5746                           tblptru	equ	0xFF8
  5747                           tblptrh	equ	0xFF7
  5748                           tblptrl	equ	0xFF6
  5749                           tablat	equ	0xFF5
  5750                           prodh	equ	0xFF4
  5751                           prodl	equ	0xFF3
  5752                           intcon	equ	0xFF2
  5753                           intcon2	equ	0xFF1
  5754                           postinc0	equ	0xFEE
  5755                           wreg	equ	0xFE8
  5756                           postinc2	equ	0xFDE
  5757                           postdec2	equ	0xFDD
  5758                           fsr2h	equ	0xFDA
  5759                           fsr2l	equ	0xFD9
  5760                           status	equ	0xFD8
  5761                           
  5762 ;; *************** function _ee_read_byte *****************
  5763 ;; Defined at:
  5764 ;;		line 532 in file "main.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  addr            1    wreg     unsigned char 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;  addr            1   22[BANK0 ] unsigned char 
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  1    wreg      unsigned char 
  5771 ;; Registers used:
  5772 ;;		wreg, status,2
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5778 ;;      Params:         0       0       0       0       0       0       0       0       0
  5779 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5781 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5782 ;;Total ram usage:        1 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; Hardware stack levels required when called:    5
  5785 ;; This function calls:
  5786 ;;		Nothing
  5787 ;; This function is called by:
  5788 ;;		_ee_read_state
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           	psect	text28
  5793  0024C4                     __ptext28:
  5794                           	opt stack 0
  5795  0024C4                     _ee_read_byte:
  5796                           	opt stack 24
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;incstack = 0
  5800                           ;ee_read_byte@addr stored from wreg
  5801  0024C4  0100               	movlb	0	; () banked
  5802  0024C6  6F76               	movwf	ee_read_byte@addr& (0+255),b
  5803                           
  5804                           ;main.c: 534: EEADR = addr;
  5805  0024C8  C076  FFA9         	movff	ee_read_byte@addr,4009	;volatile
  5806                           
  5807                           ;main.c: 535: RD = 1;
  5808  0024CC  80A6               	bsf	4006,0,c	;volatile
  5809                           
  5810                           ;main.c: 537: return EEDATA;
  5811  0024CE  50A8               	movf	4008,w,c	;volatile
  5812  0024D0  0012               	return	
  5813  0024D2                     __end_of_ee_read_byte:
  5814                           	opt stack 0
  5815                           tblptru	equ	0xFF8
  5816                           tblptrh	equ	0xFF7
  5817                           tblptrl	equ	0xFF6
  5818                           tablat	equ	0xFF5
  5819                           prodh	equ	0xFF4
  5820                           prodl	equ	0xFF3
  5821                           intcon	equ	0xFF2
  5822                           intcon2	equ	0xFF1
  5823                           postinc0	equ	0xFEE
  5824                           wreg	equ	0xFE8
  5825                           postinc2	equ	0xFDE
  5826                           postdec2	equ	0xFDD
  5827                           fsr2h	equ	0xFDA
  5828                           fsr2l	equ	0xFD9
  5829                           status	equ	0xFD8
  5830                           
  5831 ;; *************** function ___ftge *****************
  5832 ;; Defined at:
  5833 ;;		line 4 in file "/opt/microchip/xc8/v1.38/sources/common/ftge.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;  ff1             3   34[BANK0 ] float 
  5836 ;;  ff2             3   37[BANK0 ] float 
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;		None
  5839 ;; Return value:  Size  Location     Type
  5840 ;;		None               void
  5841 ;; Registers used:
  5842 ;;		wreg, status,2, status,0
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5848 ;;      Params:         0       6       0       0       0       0       0       0       0
  5849 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5850 ;;      Temps:          0       3       0       0       0       0       0       0       0
  5851 ;;      Totals:         0       9       0       0       0       0       0       0       0
  5852 ;;Total ram usage:        9 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    5
  5855 ;; This function calls:
  5856 ;;		Nothing
  5857 ;; This function is called by:
  5858 ;;		_main
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text29
  5863  001CB4                     __ptext29:
  5864                           	opt stack 0
  5865  001CB4                     ___ftge:
  5866                           	opt stack 25
  5867                           
  5868                           ;incstack = 0
  5869  001CB4  0100               	movlb	0	; () banked
  5870  001CB6  AF84               	btfss	(___ftge@ff1+2)& (0+255),7,b
  5871  001CB8  D01D               	goto	l3069
  5872                           
  5873                           ; BSR set to: 0
  5874  001CBA  C082  F088         	movff	___ftge@ff1,??___ftge
  5875  001CBE  C083  F089         	movff	___ftge@ff1+1,??___ftge+1
  5876  001CC2  C084  F08A         	movff	___ftge@ff1+2,??___ftge+2
  5877  001CC6  0100               	movlb	0	; () banked
  5878  001CC8  1F88               	comf	??___ftge& (0+255),f,b
  5879  001CCA  1F89               	comf	(??___ftge+1)& (0+255),f,b
  5880  001CCC  1F8A               	comf	(??___ftge+2)& (0+255),f,b
  5881  001CCE  2B88               	incf	??___ftge& (0+255),f,b
  5882  001CD0  0E00               	movlw	0
  5883  001CD2  2389               	addwfc	(??___ftge+1)& (0+255),f,b
  5884  001CD4  238A               	addwfc	(??___ftge+2)& (0+255),f,b
  5885  001CD6  0E00               	movlw	0
  5886  001CD8  0100               	movlb	0	; () banked
  5887  001CDA  2588               	addwf	??___ftge& (0+255),w,b
  5888  001CDC  0100               	movlb	0	; () banked
  5889  001CDE  6F82               	movwf	___ftge@ff1& (0+255),b
  5890  001CE0  0E00               	movlw	0
  5891  001CE2  0100               	movlb	0	; () banked
  5892  001CE4  2189               	addwfc	(??___ftge+1)& (0+255),w,b
  5893  001CE6  0100               	movlb	0	; () banked
  5894  001CE8  6F83               	movwf	(___ftge@ff1+1)& (0+255),b
  5895  001CEA  0E80               	movlw	128
  5896  001CEC  0100               	movlb	0	; () banked
  5897  001CEE  218A               	addwfc	(??___ftge+2)& (0+255),w,b
  5898  001CF0  0100               	movlb	0	; () banked
  5899  001CF2  6F84               	movwf	(___ftge@ff1+2)& (0+255),b
  5900  001CF4                     l3069:
  5901                           
  5902                           ; BSR set to: 0
  5903  001CF4  0100               	movlb	0	; () banked
  5904  001CF6  AF87               	btfss	(___ftge@ff2+2)& (0+255),7,b
  5905  001CF8  D01D               	goto	l3073
  5906                           
  5907                           ; BSR set to: 0
  5908  001CFA  C085  F088         	movff	___ftge@ff2,??___ftge
  5909  001CFE  C086  F089         	movff	___ftge@ff2+1,??___ftge+1
  5910  001D02  C087  F08A         	movff	___ftge@ff2+2,??___ftge+2
  5911  001D06  0100               	movlb	0	; () banked
  5912  001D08  1F88               	comf	??___ftge& (0+255),f,b
  5913  001D0A  1F89               	comf	(??___ftge+1)& (0+255),f,b
  5914  001D0C  1F8A               	comf	(??___ftge+2)& (0+255),f,b
  5915  001D0E  2B88               	incf	??___ftge& (0+255),f,b
  5916  001D10  0E00               	movlw	0
  5917  001D12  2389               	addwfc	(??___ftge+1)& (0+255),f,b
  5918  001D14  238A               	addwfc	(??___ftge+2)& (0+255),f,b
  5919  001D16  0E00               	movlw	0
  5920  001D18  0100               	movlb	0	; () banked
  5921  001D1A  2588               	addwf	??___ftge& (0+255),w,b
  5922  001D1C  0100               	movlb	0	; () banked
  5923  001D1E  6F85               	movwf	___ftge@ff2& (0+255),b
  5924  001D20  0E00               	movlw	0
  5925  001D22  0100               	movlb	0	; () banked
  5926  001D24  2189               	addwfc	(??___ftge+1)& (0+255),w,b
  5927  001D26  0100               	movlb	0	; () banked
  5928  001D28  6F86               	movwf	(___ftge@ff2+1)& (0+255),b
  5929  001D2A  0E80               	movlw	128
  5930  001D2C  0100               	movlb	0	; () banked
  5931  001D2E  218A               	addwfc	(??___ftge+2)& (0+255),w,b
  5932  001D30  0100               	movlb	0	; () banked
  5933  001D32  6F87               	movwf	(___ftge@ff2+2)& (0+255),b
  5934  001D34                     l3073:
  5935                           
  5936                           ; BSR set to: 0
  5937  001D34  0E00               	movlw	0
  5938  001D36  0100               	movlb	0	; () banked
  5939  001D38  1B82               	xorwf	___ftge@ff1& (0+255),f,b
  5940  001D3A  0E00               	movlw	0
  5941  001D3C  0100               	movlb	0	; () banked
  5942  001D3E  1B83               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  5943  001D40  0E80               	movlw	128
  5944  001D42  0100               	movlb	0	; () banked
  5945  001D44  1B84               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  5946                           
  5947                           ; BSR set to: 0
  5948  001D46  0E00               	movlw	0
  5949  001D48  0100               	movlb	0	; () banked
  5950  001D4A  1B85               	xorwf	___ftge@ff2& (0+255),f,b
  5951  001D4C  0E00               	movlw	0
  5952  001D4E  0100               	movlb	0	; () banked
  5953  001D50  1B86               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  5954  001D52  0E80               	movlw	128
  5955  001D54  0100               	movlb	0	; () banked
  5956  001D56  1B87               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  5957  001D58  0100               	movlb	0	; () banked
  5958  001D5A  5185               	movf	___ftge@ff2& (0+255),w,b
  5959  001D5C  0100               	movlb	0	; () banked
  5960  001D5E  5D82               	subwf	___ftge@ff1& (0+255),w,b
  5961  001D60  0100               	movlb	0	; () banked
  5962  001D62  5186               	movf	(___ftge@ff2+1)& (0+255),w,b
  5963  001D64  0100               	movlb	0	; () banked
  5964  001D66  5983               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  5965  001D68  0100               	movlb	0	; () banked
  5966  001D6A  5187               	movf	(___ftge@ff2+2)& (0+255),w,b
  5967  001D6C  0100               	movlb	0	; () banked
  5968  001D6E  5984               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  5969  001D70  B0D8               	btfsc	status,0,c
  5970  001D72  D002               	goto	l3079
  5971                           
  5972                           ; BSR set to: 0
  5973  001D74  90D8               	bcf	status,0,c
  5974  001D76  0012               	return	
  5975  001D78                     l3079:
  5976                           
  5977                           ; BSR set to: 0
  5978  001D78  80D8               	bsf	status,0,c
  5979                           
  5980                           ; BSR set to: 0
  5981  001D7A  0012               	return	
  5982  001D7C                     __end_of___ftge:
  5983                           	opt stack 0
  5984                           tblptru	equ	0xFF8
  5985                           tblptrh	equ	0xFF7
  5986                           tblptrl	equ	0xFF6
  5987                           tablat	equ	0xFF5
  5988                           prodh	equ	0xFF4
  5989                           prodl	equ	0xFF3
  5990                           intcon	equ	0xFF2
  5991                           intcon2	equ	0xFF1
  5992                           postinc0	equ	0xFEE
  5993                           wreg	equ	0xFE8
  5994                           postinc2	equ	0xFDE
  5995                           postdec2	equ	0xFDD
  5996                           fsr2h	equ	0xFDA
  5997                           fsr2l	equ	0xFD9
  5998                           status	equ	0xFD8
  5999                           
  6000 ;; *************** function ___aldiv *****************
  6001 ;; Defined at:
  6002 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/aldiv.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;  dividend        4   22[BANK0 ] long 
  6005 ;;  divisor         4   26[BANK0 ] long 
  6006 ;; Auto vars:     Size  Location     Type
  6007 ;;  quotient        4   32[BANK0 ] long 
  6008 ;;  sign            1   31[BANK0 ] unsigned char 
  6009 ;;  counter         1   30[BANK0 ] unsigned char 
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  4   22[BANK0 ] long 
  6012 ;; Registers used:
  6013 ;;		wreg, status,2, status,0
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6019 ;;      Params:         0       8       0       0       0       0       0       0       0
  6020 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6022 ;;      Totals:         0      14       0       0       0       0       0       0       0
  6023 ;;Total ram usage:       14 bytes
  6024 ;; Hardware stack levels used:    1
  6025 ;; Hardware stack levels required when called:    5
  6026 ;; This function calls:
  6027 ;;		Nothing
  6028 ;; This function is called by:
  6029 ;;		_main
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text30
  6034  00133C                     __ptext30:
  6035                           	opt stack 0
  6036  00133C                     ___aldiv:
  6037                           	opt stack 25
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;incstack = 0
  6041  00133C  0E00               	movlw	0
  6042  00133E  0100               	movlb	0	; () banked
  6043  001340  6F7F               	movwf	___aldiv@sign& (0+255),b
  6044                           
  6045                           ; BSR set to: 0
  6046  001342  0100               	movlb	0	; () banked
  6047  001344  AF7D               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6048  001346  D00C               	goto	l2993
  6049                           
  6050                           ; BSR set to: 0
  6051  001348  0100               	movlb	0	; () banked
  6052  00134A  1F7D               	comf	(___aldiv@divisor+3)& (0+255),f,b
  6053  00134C  1F7C               	comf	(___aldiv@divisor+2)& (0+255),f,b
  6054  00134E  1F7B               	comf	(___aldiv@divisor+1)& (0+255),f,b
  6055  001350  6D7A               	negf	___aldiv@divisor& (0+255),b
  6056  001352  0E00               	movlw	0
  6057  001354  237B               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  6058  001356  237C               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  6059  001358  237D               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  6060                           
  6061                           ; BSR set to: 0
  6062  00135A  0E01               	movlw	1
  6063  00135C  0100               	movlb	0	; () banked
  6064  00135E  6F7F               	movwf	___aldiv@sign& (0+255),b
  6065  001360                     l2993:
  6066                           
  6067                           ; BSR set to: 0
  6068  001360  0100               	movlb	0	; () banked
  6069  001362  AF79               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  6070  001364  D00C               	goto	l2999
  6071                           
  6072                           ; BSR set to: 0
  6073  001366  0100               	movlb	0	; () banked
  6074  001368  1F79               	comf	(___aldiv@dividend+3)& (0+255),f,b
  6075  00136A  1F78               	comf	(___aldiv@dividend+2)& (0+255),f,b
  6076  00136C  1F77               	comf	(___aldiv@dividend+1)& (0+255),f,b
  6077  00136E  6D76               	negf	___aldiv@dividend& (0+255),b
  6078  001370  0E00               	movlw	0
  6079  001372  2377               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  6080  001374  2378               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  6081  001376  2379               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  6082                           
  6083                           ; BSR set to: 0
  6084  001378  0E01               	movlw	1
  6085  00137A  0100               	movlb	0	; () banked
  6086  00137C  1B7F               	xorwf	___aldiv@sign& (0+255),f,b
  6087  00137E                     l2999:
  6088                           
  6089                           ; BSR set to: 0
  6090  00137E  0E00               	movlw	0
  6091  001380  0100               	movlb	0	; () banked
  6092  001382  6F80               	movwf	___aldiv@quotient& (0+255),b
  6093  001384  0E00               	movlw	0
  6094  001386  6F81               	movwf	(___aldiv@quotient+1)& (0+255),b
  6095  001388  0E00               	movlw	0
  6096  00138A  6F82               	movwf	(___aldiv@quotient+2)& (0+255),b
  6097  00138C  0E00               	movlw	0
  6098  00138E  6F83               	movwf	(___aldiv@quotient+3)& (0+255),b
  6099                           
  6100                           ; BSR set to: 0
  6101  001390  0100               	movlb	0	; () banked
  6102  001392  517A               	movf	___aldiv@divisor& (0+255),w,b
  6103  001394  0100               	movlb	0	; () banked
  6104  001396  117B               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  6105  001398  0100               	movlb	0	; () banked
  6106  00139A  117C               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  6107  00139C  0100               	movlb	0	; () banked
  6108  00139E  117D               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  6109  0013A0  B4D8               	btfsc	status,2,c
  6110  0013A2  D042               	goto	l3021
  6111                           
  6112                           ; BSR set to: 0
  6113  0013A4  0E01               	movlw	1
  6114  0013A6  0100               	movlb	0	; () banked
  6115  0013A8  6F7E               	movwf	___aldiv@counter& (0+255),b
  6116  0013AA  D008               	goto	l3007
  6117  0013AC                     l3005:
  6118                           
  6119                           ; BSR set to: 0
  6120  0013AC  0100               	movlb	0	; () banked
  6121  0013AE  90D8               	bcf	status,0,c
  6122  0013B0  377A               	rlcf	___aldiv@divisor& (0+255),f,b
  6123  0013B2  377B               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  6124  0013B4  377C               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  6125  0013B6  377D               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  6126  0013B8  0100               	movlb	0	; () banked
  6127  0013BA  2B7E               	incf	___aldiv@counter& (0+255),f,b
  6128  0013BC                     l3007:
  6129                           
  6130                           ; BSR set to: 0
  6131  0013BC  0100               	movlb	0	; () banked
  6132  0013BE  AF7D               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6133  0013C0  D7F5               	goto	l3005
  6134  0013C2                     l3009:
  6135                           
  6136                           ; BSR set to: 0
  6137  0013C2  0100               	movlb	0	; () banked
  6138  0013C4  90D8               	bcf	status,0,c
  6139  0013C6  3780               	rlcf	___aldiv@quotient& (0+255),f,b
  6140  0013C8  3781               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  6141  0013CA  3782               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  6142  0013CC  3783               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  6143                           
  6144                           ; BSR set to: 0
  6145  0013CE  0100               	movlb	0	; () banked
  6146  0013D0  517A               	movf	___aldiv@divisor& (0+255),w,b
  6147  0013D2  0100               	movlb	0	; () banked
  6148  0013D4  5D76               	subwf	___aldiv@dividend& (0+255),w,b
  6149  0013D6  0100               	movlb	0	; () banked
  6150  0013D8  517B               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6151  0013DA  0100               	movlb	0	; () banked
  6152  0013DC  5977               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  6153  0013DE  0100               	movlb	0	; () banked
  6154  0013E0  517C               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6155  0013E2  0100               	movlb	0	; () banked
  6156  0013E4  5978               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  6157  0013E6  0100               	movlb	0	; () banked
  6158  0013E8  517D               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6159  0013EA  0100               	movlb	0	; () banked
  6160  0013EC  5979               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  6161  0013EE  A0D8               	btfss	status,0,c
  6162  0013F0  D012               	goto	l3017
  6163                           
  6164                           ; BSR set to: 0
  6165  0013F2  0100               	movlb	0	; () banked
  6166  0013F4  517A               	movf	___aldiv@divisor& (0+255),w,b
  6167  0013F6  0100               	movlb	0	; () banked
  6168  0013F8  5F76               	subwf	___aldiv@dividend& (0+255),f,b
  6169  0013FA  0100               	movlb	0	; () banked
  6170  0013FC  517B               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6171  0013FE  0100               	movlb	0	; () banked
  6172  001400  5B77               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  6173  001402  0100               	movlb	0	; () banked
  6174  001404  517C               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6175  001406  0100               	movlb	0	; () banked
  6176  001408  5B78               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  6177  00140A  0100               	movlb	0	; () banked
  6178  00140C  517D               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6179  00140E  0100               	movlb	0	; () banked
  6180  001410  5B79               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  6181                           
  6182                           ; BSR set to: 0
  6183  001412  0100               	movlb	0	; () banked
  6184  001414  8180               	bsf	___aldiv@quotient& (0+255),0,b
  6185  001416                     l3017:
  6186                           
  6187                           ; BSR set to: 0
  6188  001416  0100               	movlb	0	; () banked
  6189  001418  90D8               	bcf	status,0,c
  6190  00141A  337D               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  6191  00141C  337C               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  6192  00141E  337B               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  6193  001420  337A               	rrcf	___aldiv@divisor& (0+255),f,b
  6194                           
  6195                           ; BSR set to: 0
  6196  001422  0100               	movlb	0	; () banked
  6197  001424  2F7E               	decfsz	___aldiv@counter& (0+255),f,b
  6198  001426  D7CD               	goto	l3009
  6199  001428                     l3021:
  6200                           
  6201                           ; BSR set to: 0
  6202  001428  0100               	movlb	0	; () banked
  6203  00142A  517F               	movf	___aldiv@sign& (0+255),w,b
  6204  00142C  0100               	movlb	0	; () banked
  6205  00142E  B4D8               	btfsc	status,2,c
  6206  001430  D009               	goto	l3025
  6207                           
  6208                           ; BSR set to: 0
  6209  001432  0100               	movlb	0	; () banked
  6210  001434  1F83               	comf	(___aldiv@quotient+3)& (0+255),f,b
  6211  001436  1F82               	comf	(___aldiv@quotient+2)& (0+255),f,b
  6212  001438  1F81               	comf	(___aldiv@quotient+1)& (0+255),f,b
  6213  00143A  6D80               	negf	___aldiv@quotient& (0+255),b
  6214  00143C  0E00               	movlw	0
  6215  00143E  2381               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  6216  001440  2382               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  6217  001442  2383               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  6218  001444                     l3025:
  6219                           
  6220                           ; BSR set to: 0
  6221  001444  C080  F076         	movff	___aldiv@quotient,?___aldiv
  6222  001448  C081  F077         	movff	___aldiv@quotient+1,?___aldiv+1
  6223  00144C  C082  F078         	movff	___aldiv@quotient+2,?___aldiv+2
  6224  001450  C083  F079         	movff	___aldiv@quotient+3,?___aldiv+3
  6225  001454  0012               	return	
  6226  001456                     __end_of___aldiv:
  6227                           	opt stack 0
  6228                           tblptru	equ	0xFF8
  6229                           tblptrh	equ	0xFF7
  6230                           tblptrl	equ	0xFF6
  6231                           tablat	equ	0xFF5
  6232                           prodh	equ	0xFF4
  6233                           prodl	equ	0xFF3
  6234                           intcon	equ	0xFF2
  6235                           intcon2	equ	0xFF1
  6236                           postinc0	equ	0xFEE
  6237                           wreg	equ	0xFE8
  6238                           postinc2	equ	0xFDE
  6239                           postdec2	equ	0xFDD
  6240                           fsr2h	equ	0xFDA
  6241                           fsr2l	equ	0xFD9
  6242                           status	equ	0xFD8
  6243                           
  6244 ;; *************** function _ISR_low *****************
  6245 ;; Defined at:
  6246 ;;		line 619 in file "main.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;		None
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;  i               1   49[COMRAM] unsigned char 
  6251 ;;  ins             1   48[COMRAM] unsigned char 
  6252 ;;  mask_leds       1   46[COMRAM] unsigned char 
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  1    wreg      void 
  6255 ;; Registers used:
  6256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6262 ;;      Params:         0       0       0       0       0       0       0       0       0
  6263 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6264 ;;      Temps:          0      22       0       0       0       0       0       0       0
  6265 ;;      Totals:        10      22       0       0       0       0       0       0       0
  6266 ;;Total ram usage:       32 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; Hardware stack levels required when called:    4
  6269 ;; This function calls:
  6270 ;;		_buzzer
  6271 ;;		_sample_inputs
  6272 ;;		i1___aldiv
  6273 ;;		i1_set_LEDs
  6274 ;;		i1_set_digit
  6275 ;; This function is called by:
  6276 ;;		Interrupt level 1
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280                           	psect	intcodelo
  6281  000018                     __pintcodelo:
  6282                           	opt stack 0
  6283  000018                     _ISR_low:
  6284                           	opt stack 21
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;incstack = 0
  6288  000018  803D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6289  00001A  CFD8 F065          	movff	status,??_ISR_low+5
  6290  00001E  CFE8 F066          	movff	wreg,??_ISR_low+6
  6291  000022  CFE0 F067          	movff	bsr,??_ISR_low+7
  6292  000026  CFFA F068          	movff	pclath,??_ISR_low+8
  6293  00002A  CFFB F069          	movff	pclatu,??_ISR_low+9
  6294  00002E  CFE9 F06A          	movff	fsr0l,??_ISR_low+10
  6295  000032  CFEA F06B          	movff	fsr0h,??_ISR_low+11
  6296  000036  CFE1 F06C          	movff	fsr1l,??_ISR_low+12
  6297  00003A  CFE2 F06D          	movff	fsr1h,??_ISR_low+13
  6298  00003E  CFD9 F06E          	movff	fsr2l,??_ISR_low+14
  6299  000042  CFDA F06F          	movff	fsr2h,??_ISR_low+15
  6300  000046  CFF3 F070          	movff	prodl,??_ISR_low+16
  6301  00004A  CFF4 F071          	movff	prodh,??_ISR_low+17
  6302  00004E  CFF6 F072          	movff	tblptrl,??_ISR_low+18
  6303  000052  CFF7 F073          	movff	tblptrh,??_ISR_low+19
  6304  000056  CFF8 F074          	movff	tblptru,??_ISR_low+20
  6305  00005A  CFF5 F075          	movff	tablat,??_ISR_low+21
  6306                           
  6307                           ;main.c: 622: if (TMR0IE && TMR0IF)
  6308  00005E  BAF2               	btfsc	intcon,5,c	;volatile
  6309  000060  A4F2               	btfss	intcon,2,c	;volatile
  6310  000062  D00D               	goto	i1l435
  6311                           
  6312                           ;main.c: 623: {
  6313                           ;main.c: 624: blink = ~blink;
  6314  000064  0100               	movlb	0	; () banked
  6315  000066  1FCF               	comf	_blink& (0+255),f,b
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;main.c: 629: if (buzz && --buzz)
  6319  000068  503A               	movf	_buzz,w,c
  6320  00006A  B4D8               	btfsc	status,2,c
  6321  00006C  D006               	goto	i1l436
  6322                           
  6323                           ; BSR set to: 0
  6324  00006E  0E01               	movlw	1
  6325  000070  5E3A               	subwf	_buzz,f,c
  6326  000072  B4D8               	btfsc	status,2,c
  6327  000074  D002               	goto	i1l436
  6328                           
  6329                           ; BSR set to: 0
  6330                           ;main.c: 630: {
  6331                           ;main.c: 632: LATA5 = 1;
  6332  000076  8A89               	bsf	3977,5,c	;volatile
  6333                           
  6334                           ;main.c: 633: }
  6335  000078  D19A               	goto	i1l438
  6336  00007A                     i1l436:
  6337                           
  6338                           ; BSR set to: 0
  6339                           ;main.c: 635: else
  6340                           ;main.c: 636: {
  6341                           ;main.c: 637: LATA5 = 0;
  6342  00007A  9A89               	bcf	3977,5,c	;volatile
  6343                           
  6344                           ; BSR set to: 0
  6345                           ;main.c: 638: }
  6346                           ;main.c: 640: return;
  6347  00007C  D198               	goto	i1l438
  6348  00007E                     i1l435:
  6349                           
  6350                           ;main.c: 641: }
  6351                           ;main.c: 643: if (TMR2IE && TMR2IF)
  6352  00007E  B29D               	btfsc	3997,1,c	;volatile
  6353  000080  A29E               	btfss	3998,1,c	;volatile
  6354  000082  D190               	goto	i1l439
  6355                           
  6356                           ;main.c: 644: {
  6357                           ;main.c: 645: static scan_state cur = _KEYS;
  6358                           ;main.c: 646: unsigned char ins = 0;
  6359  000084  0E00               	movlw	0
  6360  000086  6E31               	movwf	ISR_low@ins,c
  6361                           
  6362                           ;main.c: 647: static unsigned char ins_prev = 0;
  6363                           ;main.c: 648: unsigned char mask_leds;
  6364                           ;main.c: 650: TMR2IF = 0;
  6365  000088  929E               	bcf	3998,1,c	;volatile
  6366                           
  6367                           ;main.c: 652: LATA2 = 1;
  6368  00008A  8489               	bsf	3977,2,c	;volatile
  6369                           
  6370                           ;main.c: 653: LATA3 = 1;
  6371  00008C  8689               	bsf	3977,3,c	;volatile
  6372                           
  6373                           ;main.c: 654: LATA4 = 1;
  6374  00008E  8889               	bsf	3977,4,c	;volatile
  6375                           
  6376                           ;main.c: 656: cur = (cur + 1) % 4;
  6377  000090  2838               	incf	ISR_low@cur,w,c
  6378  000092  0B03               	andlw	3
  6379  000094  6E38               	movwf	ISR_low@cur,c
  6380                           
  6381                           ;main.c: 658: switch (cur)
  6382  000096  D178               	goto	i1l3367
  6383  000098                     i1l445:
  6384                           
  6385                           ;main.c: 662: ins_prev = ins;
  6386  000098  C031  F039         	movff	ISR_low@ins,ISR_low@ins_prev
  6387                           
  6388                           ;main.c: 664: ins = sample_inputs();
  6389  00009C  ECAC  F010         	call	_sample_inputs	;wreg free
  6390  0000A0  6E31               	movwf	ISR_low@ins,c
  6391                           
  6392                           ;main.c: 666: buzzer(3);
  6393  0000A2  0E03               	movlw	3
  6394  0000A4  EC4F  F012         	call	_buzzer
  6395                           
  6396                           ;main.c: 667: unsigned char i = 0b10000000;
  6397  0000A8  0E80               	movlw	128
  6398  0000AA  6E32               	movwf	ISR_low@i,c
  6399                           
  6400                           ;main.c: 669: {
  6401                           ;main.c: 673: switch (ins & ~ins_prev & i)
  6402                           
  6403                           ;main.c: 668: do
  6404  0000AC  D02F               	goto	i1l3307
  6405  0000AE                     i1l448:
  6406                           
  6407                           ; BSR set to: 0
  6408                           ;main.c: 677: timer = 1^timer;
  6409  0000AE  B437               	btfsc	_timer/(0+8),_timer& (0+7),c
  6410  0000B0  D002               	goto	i1u444_20
  6411  0000B2  8437               	bsf	_timer/(0+8),_timer& (0+7),c
  6412  0000B4  D049               	goto	i1l3309
  6413  0000B6                     i1u444_20:
  6414  0000B6  9437               	bcf	_timer/(0+8),_timer& (0+7),c
  6415                           
  6416                           ;main.c: 678: break;
  6417  0000B8  D047               	goto	i1l3309
  6418  0000BA                     i1l3283:
  6419                           
  6420                           ;main.c: 680: (*cur_number)++;
  6421  0000BA  C03B  FFD9         	movff	_cur_number,fsr2l
  6422  0000BE  C03C  FFDA         	movff	_cur_number+1,fsr2h
  6423  0000C2  2ADF               	incf	indf2,f,c
  6424                           
  6425                           ;main.c: 681: break;
  6426  0000C4  D041               	goto	i1l3309
  6427  0000C6                     i1l3285:
  6428                           
  6429                           ;main.c: 683: (*cur_number)--;
  6430  0000C6  C03B  FFD9         	movff	_cur_number,fsr2l
  6431  0000CA  C03C  FFDA         	movff	_cur_number+1,fsr2h
  6432  0000CE  06DF               	decf	indf2,f,c
  6433                           
  6434                           ;main.c: 684: break;
  6435  0000D0  D03B               	goto	i1l3309
  6436  0000D2                     i1l452:
  6437                           
  6438                           ; BSR set to: 0
  6439                           ;main.c: 686: unit = 1^unit;
  6440  0000D2  B637               	btfsc	_unit/(0+8),_unit& (0+7),c
  6441  0000D4  D002               	goto	i1u446_20
  6442  0000D6  8637               	bsf	_unit/(0+8),_unit& (0+7),c
  6443  0000D8  D037               	goto	i1l3309
  6444  0000DA                     i1u446_20:
  6445  0000DA  9637               	bcf	_unit/(0+8),_unit& (0+7),c
  6446                           
  6447                           ;main.c: 687: break;
  6448  0000DC  D035               	goto	i1l3309
  6449  0000DE                     i1l3287:
  6450                           
  6451                           ;main.c: 689: buzzer(5);
  6452  0000DE  0E05               	movlw	5
  6453  0000E0  EC4F  F012         	call	_buzzer
  6454                           
  6455                           ;main.c: 691: if (state == _OFF)
  6456  0000E4  0100               	movlb	0	; () banked
  6457  0000E6  51D6               	movf	_state& (0+255),w,b
  6458  0000E8  A4D8               	btfss	status,2,c
  6459  0000EA  D008               	goto	i1l3299
  6460                           
  6461                           ; BSR set to: 0
  6462                           ;main.c: 692: {
  6463                           ;main.c: 693: state = _IDLE;
  6464  0000EC  0E02               	movlw	2
  6465  0000EE  0100               	movlb	0	; () banked
  6466  0000F0  6FD6               	movwf	_state& (0+255),b
  6467                           
  6468                           ; BSR set to: 0
  6469                           ;main.c: 694: disp[0] |= 0b10000000;
  6470  0000F2  0100               	movlb	0	; () banked
  6471  0000F4  8FCB               	bsf	_disp& (0+255),7,b
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;main.c: 695: disp[1] |= 0b10000000;
  6475  0000F6  0100               	movlb	0	; () banked
  6476  0000F8  8FCC               	bsf	(_disp+1)& (0+255),7,b
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;main.c: 697: }
  6480                           
  6481                           ;main.c: 696: break;
  6482  0000FA  D026               	goto	i1l3309
  6483  0000FC                     i1l3299:
  6484                           
  6485                           ; BSR set to: 0
  6486                           ;main.c: 698: else
  6487                           ;main.c: 699: {
  6488                           ;main.c: 700: state = _OFF;
  6489  0000FC  0E00               	movlw	0
  6490  0000FE  0100               	movlb	0	; () banked
  6491  000100  6FD6               	movwf	_state& (0+255),b
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;main.c: 701: disp[0] &= ~0b10000000;
  6495  000102  0100               	movlb	0	; () banked
  6496  000104  9FCB               	bcf	_disp& (0+255),7,b
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;main.c: 702: disp[1] &= ~0b10000000;
  6500  000106  0100               	movlb	0	; () banked
  6501  000108  9FCC               	bcf	(_disp+1)& (0+255),7,b
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;main.c: 708: }
  6505                           
  6506                           ; BSR set to: 0
  6507                           ;main.c: 707: break;
  6508                           
  6509                           ;main.c: 705: case 0b100000:
  6510                           
  6511                           ; BSR set to: 0
  6512                           ;main.c: 703: }
  6513                           ;main.c: 704: break;
  6514  00010A  D01E               	goto	i1l3309
  6515  00010C                     i1l3307:
  6516  00010C  5039               	movf	ISR_low@ins_prev,w,c
  6517  00010E  0AFF               	xorlw	255
  6518  000110  1431               	andwf	ISR_low@ins,w,c
  6519  000112  1432               	andwf	ISR_low@i,w,c
  6520  000114  0100               	movlb	0	; () banked
  6521  000116  6F60               	movwf	??_ISR_low& (0+255),b
  6522  000118  6B61               	clrf	(??_ISR_low+1)& (0+255),b
  6523                           
  6524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6525                           ; Switch size 1, requested type "space"
  6526                           ; Number of cases is 1, Range of values is 0 to 0
  6527                           ; switch strategies available:
  6528                           ; Name         Instructions Cycles
  6529                           ; simple_byte            4     3 (average)
  6530                           ;	Chosen strategy is simple_byte
  6531  00011A  0100               	movlb	0	; () banked
  6532  00011C  5161               	movf	(??_ISR_low+1)& (0+255),w,b
  6533  00011E  0A00               	xorlw	0	; case 0
  6534  000120  A4D8               	btfss	status,2,c
  6535  000122  D012               	goto	i1l3309
  6536                           
  6537                           ; BSR set to: 0
  6538                           ; Switch size 1, requested type "space"
  6539                           ; Number of cases is 6, Range of values is 1 to 32
  6540                           ; switch strategies available:
  6541                           ; Name         Instructions Cycles
  6542                           ; simple_byte           19    10 (average)
  6543                           ;	Chosen strategy is simple_byte
  6544  000124  0100               	movlb	0	; () banked
  6545  000126  5160               	movf	??_ISR_low& (0+255),w,b
  6546  000128  0A01               	xorlw	1	; case 1
  6547  00012A  B4D8               	btfsc	status,2,c
  6548  00012C  D7C0               	goto	i1l448
  6549  00012E  0A03               	xorlw	3	; case 2
  6550  000130  B4D8               	btfsc	status,2,c
  6551  000132  D7C3               	goto	i1l3283
  6552  000134  0A06               	xorlw	6	; case 4
  6553  000136  B4D8               	btfsc	status,2,c
  6554  000138  D7C6               	goto	i1l3285
  6555  00013A  0A0C               	xorlw	12	; case 8
  6556  00013C  B4D8               	btfsc	status,2,c
  6557  00013E  D7C9               	goto	i1l452
  6558  000140  0A18               	xorlw	24	; case 16
  6559  000142  B4D8               	btfsc	status,2,c
  6560  000144  D7CC               	goto	i1l3287
  6561  000146  0A30               	xorlw	48	; case 32
  6562  000148                     i1l3309:
  6563                           
  6564                           ;main.c: 709: }
  6565                           ;main.c: 710: while (i = i << 1);
  6566  000148  5032               	movf	ISR_low@i,w,c
  6567  00014A  2432               	addwf	ISR_low@i,w,c
  6568  00014C  6E32               	movwf	ISR_low@i,c
  6569  00014E  5032               	movf	ISR_low@i,w,c
  6570  000150  B4D8               	btfsc	status,2,c
  6571  000152  D12D               	goto	i1l438
  6572  000154  D7DB               	goto	i1l3307
  6573  000156                     i1l3311:
  6574                           
  6575                           ;main.c: 713: if (state == _OFF)
  6576  000156  0100               	movlb	0	; () banked
  6577  000158  51D6               	movf	_state& (0+255),w,b
  6578  00015A  A4D8               	btfss	status,2,c
  6579  00015C  D002               	goto	i1l460
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;main.c: 714: {
  6583                           ;main.c: 716: mask_leds = 0b10000;
  6584  00015E  0E10               	movlw	16
  6585  000160  D100               	goto	L5
  6586  000162                     i1l460:
  6587                           
  6588                           ; BSR set to: 0
  6589                           ;main.c: 718: else
  6590                           ;main.c: 719: {
  6591                           ;main.c: 720: mask_leds = (timer_led ? 0b1 : 0) |
  6592                           ;main.c: 721: (timer && (((time / 3600) >= day_hour && (time / 3600) < night_hour) ? 0b1
      +                          0 : 0)) |
  6593                           ;main.c: 722: (timer && (((time / 3600) < day_hour || (time / 3600) >= night_hour) ? 0b1
      +                          00 : 0)) |
  6594                           ;main.c: 723: ((heat_mode != LATC1 && heat_mode != LATC2) ? 0b1000 : 0) |
  6595                           ;main.c: 724: (power_led ? 0b10000 : 0) |
  6596                           ;main.c: 725: (unit ? 0b1000000 : 0b100000);
  6597  000162  B637               	btfsc	_unit/(0+8),_unit& (0+7),c
  6598  000164  D004               	goto	i1l3317
  6599                           
  6600                           ; BSR set to: 0
  6601  000166  0E00               	movlw	0
  6602  000168  6E34               	movwf	_ISR_low$354+1,c
  6603  00016A  0E20               	movlw	32
  6604  00016C  D003               	goto	L6
  6605  00016E                     i1l3317:
  6606                           
  6607                           ; BSR set to: 0
  6608  00016E  0E00               	movlw	0
  6609  000170  6E34               	movwf	_ISR_low$354+1,c
  6610  000172  0E40               	movlw	64
  6611  000174                     L6:
  6612  000174  6E33               	movwf	_ISR_low$354,c
  6613                           
  6614                           ; BSR set to: 0
  6615                           
  6616                           ; BSR set to: 0
  6617  000176  B037               	btfsc	_power_led/(0+8),_power_led& (0+7),c
  6618  000178  D004               	goto	i1l3323
  6619                           
  6620                           ; BSR set to: 0
  6621  00017A  0E00               	movlw	0
  6622  00017C  6E36               	movwf	_ISR_low$355+1,c
  6623  00017E  0E00               	movlw	0
  6624  000180  D003               	goto	L7
  6625  000182                     i1l3323:
  6626                           
  6627                           ; BSR set to: 0
  6628  000182  0E00               	movlw	0
  6629  000184  6E36               	movwf	_ISR_low$355+1,c
  6630  000186  0E10               	movlw	16
  6631  000188                     L7:
  6632  000188  6E35               	movwf	_ISR_low$355,c
  6633                           
  6634                           ; BSR set to: 0
  6635  00018A  0E00               	movlw	0
  6636  00018C  B28B               	btfsc	3979,1,c	;volatile
  6637  00018E  0E01               	movlw	1
  6638  000190  0100               	movlb	0	; () banked
  6639  000192  19DD               	xorwf	_heat_mode& (0+255),w,b
  6640  000194  B4D8               	btfsc	status,2,c
  6641  000196  D007               	goto	i1l3327
  6642                           
  6643                           ; BSR set to: 0
  6644  000198  0E00               	movlw	0
  6645  00019A  B48B               	btfsc	3979,2,c	;volatile
  6646  00019C  0E01               	movlw	1
  6647  00019E  0100               	movlb	0	; () banked
  6648  0001A0  19DD               	xorwf	_heat_mode& (0+255),w,b
  6649  0001A2  A4D8               	btfss	status,2,c
  6650  0001A4  D004               	goto	i1l3329
  6651  0001A6                     i1l3327:
  6652                           
  6653                           ; BSR set to: 0
  6654  0001A6  0E00               	movlw	0
  6655  0001A8  6E2E               	movwf	_ISR_low$356+1,c
  6656  0001AA  0E00               	movlw	0
  6657  0001AC  D003               	goto	L8
  6658  0001AE                     i1l3329:
  6659                           
  6660                           ; BSR set to: 0
  6661  0001AE  0E00               	movlw	0
  6662  0001B0  6E2E               	movwf	_ISR_low$356+1,c
  6663  0001B2  0E08               	movlw	8
  6664  0001B4                     L8:
  6665  0001B4  6E2D               	movwf	_ISR_low$356,c
  6666                           
  6667                           ; BSR set to: 0
  6668  0001B6  0E01               	movlw	1
  6669  0001B8  6E30               	movwf	_ISR_low$357,c
  6670                           
  6671                           ; BSR set to: 0
  6672  0001BA  B237               	btfsc	_timer_led/(0+8),_timer_led& (0+7),c
  6673  0001BC  D0CE               	goto	i1l3357
  6674                           
  6675                           ; BSR set to: 0
  6676  0001BE  A437               	btfss	_timer/(0+8),_timer& (0+7),c
  6677  0001C0  D064               	goto	i1l2343
  6678                           
  6679                           ; BSR set to: 0
  6680  0001C2  C0D0  F060         	movff	_day_hour,??_ISR_low
  6681  0001C6  0100               	movlb	0	; () banked
  6682  0001C8  6B61               	clrf	(??_ISR_low+1)& (0+255),b
  6683  0001CA  6B62               	clrf	(??_ISR_low+2)& (0+255),b
  6684  0001CC  6B63               	clrf	(??_ISR_low+3)& (0+255),b
  6685  0001CE  C0D7  F01F         	movff	_time,i1___aldiv@dividend
  6686  0001D2  C0D8  F020         	movff	_time+1,i1___aldiv@dividend+1
  6687  0001D6  C0D9  F021         	movff	_time+2,i1___aldiv@dividend+2
  6688  0001DA  C0DA  F022         	movff	_time+3,i1___aldiv@dividend+3
  6689  0001DE  0E10               	movlw	16
  6690  0001E0  6E23               	movwf	i1___aldiv@divisor,c
  6691  0001E2  0E0E               	movlw	14
  6692  0001E4  6E24               	movwf	i1___aldiv@divisor+1,c
  6693  0001E6  0E00               	movlw	0
  6694  0001E8  6E25               	movwf	i1___aldiv@divisor+2,c
  6695  0001EA  0E00               	movlw	0
  6696  0001EC  6E26               	movwf	i1___aldiv@divisor+3,c
  6697  0001EE  EC2A  F00D         	call	i1___aldiv	;wreg free
  6698  0001F2  0100               	movlb	0	; () banked
  6699  0001F4  5160               	movf	??_ISR_low& (0+255),w,b
  6700  0001F6  5C1F               	subwf	?i1___aldiv,w,c
  6701  0001F8  0100               	movlb	0	; () banked
  6702  0001FA  5161               	movf	(??_ISR_low+1)& (0+255),w,b
  6703  0001FC  5820               	subwfb	?i1___aldiv+1,w,c
  6704  0001FE  0100               	movlb	0	; () banked
  6705  000200  5162               	movf	(??_ISR_low+2)& (0+255),w,b
  6706  000202  5821               	subwfb	?i1___aldiv+2,w,c
  6707  000204  5022               	movf	?i1___aldiv+3,w,c
  6708  000206  0A80               	xorlw	128
  6709  000208  0100               	movlb	0	; () banked
  6710  00020A  6F64               	movwf	(??_ISR_low+4)& (0+255),b
  6711  00020C  0100               	movlb	0	; () banked
  6712  00020E  5163               	movf	(??_ISR_low+3)& (0+255),w,b
  6713  000210  0A80               	xorlw	128
  6714  000212  0100               	movlb	0	; () banked
  6715  000214  5964               	subwfb	(??_ISR_low+4)& (0+255),w,b
  6716  000216  A0D8               	btfss	status,0,c
  6717  000218  D02C               	goto	i1l3339
  6718                           
  6719                           ; BSR set to: 0
  6720  00021A  C0D4  F060         	movff	_night_hour,??_ISR_low
  6721  00021E  0100               	movlb	0	; () banked
  6722  000220  6B61               	clrf	(??_ISR_low+1)& (0+255),b
  6723  000222  6B62               	clrf	(??_ISR_low+2)& (0+255),b
  6724  000224  6B63               	clrf	(??_ISR_low+3)& (0+255),b
  6725  000226  C0D7  F01F         	movff	_time,i1___aldiv@dividend
  6726  00022A  C0D8  F020         	movff	_time+1,i1___aldiv@dividend+1
  6727  00022E  C0D9  F021         	movff	_time+2,i1___aldiv@dividend+2
  6728  000232  C0DA  F022         	movff	_time+3,i1___aldiv@dividend+3
  6729  000236  0E10               	movlw	16
  6730  000238  6E23               	movwf	i1___aldiv@divisor,c
  6731  00023A  0E0E               	movlw	14
  6732  00023C  6E24               	movwf	i1___aldiv@divisor+1,c
  6733  00023E  0E00               	movlw	0
  6734  000240  6E25               	movwf	i1___aldiv@divisor+2,c
  6735  000242  0E00               	movlw	0
  6736  000244  6E26               	movwf	i1___aldiv@divisor+3,c
  6737  000246  EC2A  F00D         	call	i1___aldiv	;wreg free
  6738  00024A  0100               	movlb	0	; () banked
  6739  00024C  5160               	movf	??_ISR_low& (0+255),w,b
  6740  00024E  5C1F               	subwf	?i1___aldiv,w,c
  6741  000250  0100               	movlb	0	; () banked
  6742  000252  5161               	movf	(??_ISR_low+1)& (0+255),w,b
  6743  000254  5820               	subwfb	?i1___aldiv+1,w,c
  6744  000256  0100               	movlb	0	; () banked
  6745  000258  5162               	movf	(??_ISR_low+2)& (0+255),w,b
  6746  00025A  5821               	subwfb	?i1___aldiv+2,w,c
  6747  00025C  5022               	movf	?i1___aldiv+3,w,c
  6748  00025E  0A80               	xorlw	128
  6749  000260  0100               	movlb	0	; () banked
  6750  000262  6F64               	movwf	(??_ISR_low+4)& (0+255),b
  6751  000264  0100               	movlb	0	; () banked
  6752  000266  5163               	movf	(??_ISR_low+3)& (0+255),w,b
  6753  000268  0A80               	xorlw	128
  6754  00026A  0100               	movlb	0	; () banked
  6755  00026C  5964               	subwfb	(??_ISR_low+4)& (0+255),w,b
  6756  00026E  A0D8               	btfss	status,0,c
  6757  000270  D004               	goto	i1l3341
  6758  000272                     i1l3339:
  6759                           
  6760                           ; BSR set to: 0
  6761  000272  0E00               	movlw	0
  6762  000274  6E34               	movwf	_ISR_low$354+1,c
  6763  000276  0E00               	movlw	0
  6764  000278  D003               	goto	L9
  6765  00027A                     i1l3341:
  6766                           
  6767                           ; BSR set to: 0
  6768  00027A  0E00               	movlw	0
  6769  00027C  6E34               	movwf	_ISR_low$354+1,c
  6770  00027E  0E02               	movlw	2
  6771  000280                     L9:
  6772  000280  6E33               	movwf	_ISR_low$354,c
  6773                           
  6774                           ; BSR set to: 0
  6775                           
  6776                           ; BSR set to: 0
  6777  000282  5033               	movf	_ISR_low$354,w,c
  6778  000284  1034               	iorwf	_ISR_low$354+1,w,c
  6779  000286  A4D8               	btfss	status,2,c
  6780  000288  D068               	goto	i1l3357
  6781  00028A                     i1l2343:
  6782                           
  6783                           ; BSR set to: 0
  6784  00028A  A437               	btfss	_timer/(0+8),_timer& (0+7),c
  6785  00028C  D064               	goto	i1l3355
  6786                           
  6787                           ; BSR set to: 0
  6788  00028E  C0D0  F060         	movff	_day_hour,??_ISR_low
  6789  000292  0100               	movlb	0	; () banked
  6790  000294  6B61               	clrf	(??_ISR_low+1)& (0+255),b
  6791  000296  6B62               	clrf	(??_ISR_low+2)& (0+255),b
  6792  000298  6B63               	clrf	(??_ISR_low+3)& (0+255),b
  6793  00029A  C0D7  F01F         	movff	_time,i1___aldiv@dividend
  6794  00029E  C0D8  F020         	movff	_time+1,i1___aldiv@dividend+1
  6795  0002A2  C0D9  F021         	movff	_time+2,i1___aldiv@dividend+2
  6796  0002A6  C0DA  F022         	movff	_time+3,i1___aldiv@dividend+3
  6797  0002AA  0E10               	movlw	16
  6798  0002AC  6E23               	movwf	i1___aldiv@divisor,c
  6799  0002AE  0E0E               	movlw	14
  6800  0002B0  6E24               	movwf	i1___aldiv@divisor+1,c
  6801  0002B2  0E00               	movlw	0
  6802  0002B4  6E25               	movwf	i1___aldiv@divisor+2,c
  6803  0002B6  0E00               	movlw	0
  6804  0002B8  6E26               	movwf	i1___aldiv@divisor+3,c
  6805  0002BA  EC2A  F00D         	call	i1___aldiv	;wreg free
  6806  0002BE  0100               	movlb	0	; () banked
  6807  0002C0  5160               	movf	??_ISR_low& (0+255),w,b
  6808  0002C2  5C1F               	subwf	?i1___aldiv,w,c
  6809  0002C4  0100               	movlb	0	; () banked
  6810  0002C6  5161               	movf	(??_ISR_low+1)& (0+255),w,b
  6811  0002C8  5820               	subwfb	?i1___aldiv+1,w,c
  6812  0002CA  0100               	movlb	0	; () banked
  6813  0002CC  5162               	movf	(??_ISR_low+2)& (0+255),w,b
  6814  0002CE  5821               	subwfb	?i1___aldiv+2,w,c
  6815  0002D0  5022               	movf	?i1___aldiv+3,w,c
  6816  0002D2  0A80               	xorlw	128
  6817  0002D4  0100               	movlb	0	; () banked
  6818  0002D6  6F64               	movwf	(??_ISR_low+4)& (0+255),b
  6819  0002D8  0100               	movlb	0	; () banked
  6820  0002DA  5163               	movf	(??_ISR_low+3)& (0+255),w,b
  6821  0002DC  0A80               	xorlw	128
  6822  0002DE  0100               	movlb	0	; () banked
  6823  0002E0  5964               	subwfb	(??_ISR_low+4)& (0+255),w,b
  6824  0002E2  A0D8               	btfss	status,0,c
  6825  0002E4  D030               	goto	i1l3351
  6826                           
  6827                           ; BSR set to: 0
  6828  0002E6  C0D4  F060         	movff	_night_hour,??_ISR_low
  6829  0002EA  0100               	movlb	0	; () banked
  6830  0002EC  6B61               	clrf	(??_ISR_low+1)& (0+255),b
  6831  0002EE  6B62               	clrf	(??_ISR_low+2)& (0+255),b
  6832  0002F0  6B63               	clrf	(??_ISR_low+3)& (0+255),b
  6833  0002F2  C0D7  F01F         	movff	_time,i1___aldiv@dividend
  6834  0002F6  C0D8  F020         	movff	_time+1,i1___aldiv@dividend+1
  6835  0002FA  C0D9  F021         	movff	_time+2,i1___aldiv@dividend+2
  6836  0002FE  C0DA  F022         	movff	_time+3,i1___aldiv@dividend+3
  6837  000302  0E10               	movlw	16
  6838  000304  6E23               	movwf	i1___aldiv@divisor,c
  6839  000306  0E0E               	movlw	14
  6840  000308  6E24               	movwf	i1___aldiv@divisor+1,c
  6841  00030A  0E00               	movlw	0
  6842  00030C  6E25               	movwf	i1___aldiv@divisor+2,c
  6843  00030E  0E00               	movlw	0
  6844  000310  6E26               	movwf	i1___aldiv@divisor+3,c
  6845  000312  EC2A  F00D         	call	i1___aldiv	;wreg free
  6846  000316  0100               	movlb	0	; () banked
  6847  000318  5160               	movf	??_ISR_low& (0+255),w,b
  6848  00031A  5C1F               	subwf	?i1___aldiv,w,c
  6849  00031C  0100               	movlb	0	; () banked
  6850  00031E  5161               	movf	(??_ISR_low+1)& (0+255),w,b
  6851  000320  5820               	subwfb	?i1___aldiv+1,w,c
  6852  000322  0100               	movlb	0	; () banked
  6853  000324  5162               	movf	(??_ISR_low+2)& (0+255),w,b
  6854  000326  5821               	subwfb	?i1___aldiv+2,w,c
  6855  000328  5022               	movf	?i1___aldiv+3,w,c
  6856  00032A  0A80               	xorlw	128
  6857  00032C  0100               	movlb	0	; () banked
  6858  00032E  6F64               	movwf	(??_ISR_low+4)& (0+255),b
  6859  000330  0100               	movlb	0	; () banked
  6860  000332  5163               	movf	(??_ISR_low+3)& (0+255),w,b
  6861  000334  0A80               	xorlw	128
  6862  000336  0100               	movlb	0	; () banked
  6863  000338  5964               	subwfb	(??_ISR_low+4)& (0+255),w,b
  6864  00033A  B0D8               	btfsc	status,0,c
  6865  00033C  D004               	goto	i1l3351
  6866                           
  6867                           ; BSR set to: 0
  6868  00033E  0E00               	movlw	0
  6869  000340  6E36               	movwf	_ISR_low$355+1,c
  6870  000342  0E00               	movlw	0
  6871  000344  D003               	goto	L10
  6872  000346                     i1l3351:
  6873                           
  6874                           ; BSR set to: 0
  6875  000346  0E00               	movlw	0
  6876  000348  6E36               	movwf	_ISR_low$355+1,c
  6877  00034A  0E04               	movlw	4
  6878  00034C                     L10:
  6879  00034C  6E35               	movwf	_ISR_low$355,c
  6880                           
  6881                           ; BSR set to: 0
  6882                           
  6883                           ; BSR set to: 0
  6884  00034E  5035               	movf	_ISR_low$355,w,c
  6885  000350  1036               	iorwf	_ISR_low$355+1,w,c
  6886  000352  A4D8               	btfss	status,2,c
  6887  000354  D002               	goto	i1l3357
  6888  000356                     i1l3355:
  6889                           
  6890                           ; BSR set to: 0
  6891  000356  0E00               	movlw	0
  6892  000358  6E30               	movwf	_ISR_low$357,c
  6893  00035A                     i1l3357:
  6894                           
  6895                           ; BSR set to: 0
  6896  00035A  5030               	movf	_ISR_low$357,w,c
  6897  00035C  102D               	iorwf	_ISR_low$356,w,c
  6898  00035E  1035               	iorwf	_ISR_low$355,w,c
  6899  000360  1033               	iorwf	_ISR_low$354,w,c
  6900  000362                     L5:
  6901  000362  6E2F               	movwf	ISR_low@mask_leds,c
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;main.c: 726: }
  6905                           ;main.c: 727: set_LEDs(mask_leds);
  6906                           
  6907                           ; BSR set to: 0
  6908  000364  502F               	movf	ISR_low@mask_leds,w,c
  6909  000366  ECF5  F00D         	call	i1_set_LEDs
  6910                           
  6911                           ;main.c: 728: break;
  6912  00036A  D021               	goto	i1l438
  6913  00036C                     i1l478:
  6914                           
  6915                           ;main.c: 730: LATA3 = 0;
  6916  00036C  9689               	bcf	3977,3,c	;volatile
  6917                           
  6918                           ;main.c: 731: LATA4 = 1;
  6919  00036E  8889               	bsf	3977,4,c	;volatile
  6920                           
  6921                           ;main.c: 732: set_digit(disp[0]);
  6922  000370  0100               	movlb	0	; () banked
  6923  000372  51CB               	movf	_disp& (0+255),w,b
  6924  000374  EC90  F00D         	call	i1_set_digit
  6925                           
  6926                           ;main.c: 733: break;
  6927  000378  D01A               	goto	i1l438
  6928  00037A                     i1l479:
  6929                           
  6930                           ;main.c: 735: LATA3 = 1;
  6931  00037A  8689               	bsf	3977,3,c	;volatile
  6932                           
  6933                           ;main.c: 736: LATA4 = 0;
  6934  00037C  9889               	bcf	3977,4,c	;volatile
  6935                           
  6936                           ;main.c: 737: set_digit(disp[1]);
  6937  00037E  0100               	movlb	0	; () banked
  6938  000380  51CC               	movf	(_disp+1)& (0+255),w,b
  6939  000382  EC90  F00D         	call	i1_set_digit
  6940                           
  6941                           ;main.c: 739: }
  6942                           
  6943                           ;main.c: 738: break;
  6944  000386  D013               	goto	i1l438
  6945  000388                     i1l3367:
  6946  000388  5038               	movf	ISR_low@cur,w,c
  6947                           
  6948                           ; Switch size 1, requested type "space"
  6949                           ; Number of cases is 4, Range of values is 0 to 3
  6950                           ; switch strategies available:
  6951                           ; Name         Instructions Cycles
  6952                           ; simple_byte           13     7 (average)
  6953                           ;	Chosen strategy is simple_byte
  6954  00038A  0A00               	xorlw	0	; case 0
  6955  00038C  B4D8               	btfsc	status,2,c
  6956  00038E  D684               	goto	i1l445
  6957  000390  0A01               	xorlw	1	; case 1
  6958  000392  B4D8               	btfsc	status,2,c
  6959  000394  D6E0               	goto	i1l3311
  6960  000396  0A03               	xorlw	3	; case 2
  6961  000398  B4D8               	btfsc	status,2,c
  6962  00039A  D7E8               	goto	i1l478
  6963  00039C  0A01               	xorlw	1	; case 3
  6964  00039E  B4D8               	btfsc	status,2,c
  6965  0003A0  D7EC               	goto	i1l479
  6966                           
  6967                           ;main.c: 741: return;
  6968  0003A2  D005               	goto	i1l438
  6969  0003A4                     i1l439:
  6970                           
  6971                           ;main.c: 742: }
  6972                           ;main.c: 743: if (EEIE && EEIF)
  6973  0003A4  B8A0               	btfsc	4000,4,c	;volatile
  6974  0003A6  A8A1               	btfss	4001,4,c	;volatile
  6975  0003A8  D002               	goto	i1l438
  6976                           
  6977                           ;main.c: 744: {
  6978                           ;main.c: 745: EEIF = 0;
  6979  0003AA  98A1               	bcf	4001,4,c	;volatile
  6980                           
  6981                           ;main.c: 747: WREN = 0;
  6982  0003AC  94A6               	bcf	4006,2,c	;volatile
  6983  0003AE                     i1l438:
  6984  0003AE  C075  FFF5         	movff	??_ISR_low+21,tablat
  6985  0003B2  C074  FFF8         	movff	??_ISR_low+20,tblptru
  6986  0003B6  C073  FFF7         	movff	??_ISR_low+19,tblptrh
  6987  0003BA  C072  FFF6         	movff	??_ISR_low+18,tblptrl
  6988  0003BE  C071  FFF4         	movff	??_ISR_low+17,prodh
  6989  0003C2  C070  FFF3         	movff	??_ISR_low+16,prodl
  6990  0003C6  C06F  FFDA         	movff	??_ISR_low+15,fsr2h
  6991  0003CA  C06E  FFD9         	movff	??_ISR_low+14,fsr2l
  6992  0003CE  C06D  FFE2         	movff	??_ISR_low+13,fsr1h
  6993  0003D2  C06C  FFE1         	movff	??_ISR_low+12,fsr1l
  6994  0003D6  C06B  FFEA         	movff	??_ISR_low+11,fsr0h
  6995  0003DA  C06A  FFE9         	movff	??_ISR_low+10,fsr0l
  6996  0003DE  C069  FFFB         	movff	??_ISR_low+9,pclatu
  6997  0003E2  C068  FFFA         	movff	??_ISR_low+8,pclath
  6998  0003E6  C067  FFE0         	movff	??_ISR_low+7,bsr
  6999  0003EA  C066  FFE8         	movff	??_ISR_low+6,wreg
  7000  0003EE  C065  FFD8         	movff	??_ISR_low+5,status
  7001  0003F2  903D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7002  0003F4  0010               	retfie	
  7003  0003F6                     __end_of_ISR_low:
  7004                           	opt stack 0
  7005                           pclatu	equ	0xFFB
  7006                           pclath	equ	0xFFA
  7007                           tblptru	equ	0xFF8
  7008                           tblptrh	equ	0xFF7
  7009                           tblptrl	equ	0xFF6
  7010                           tablat	equ	0xFF5
  7011                           prodh	equ	0xFF4
  7012                           prodl	equ	0xFF3
  7013                           intcon	equ	0xFF2
  7014                           intcon2	equ	0xFF1
  7015                           postinc0	equ	0xFEE
  7016                           fsr0h	equ	0xFEA
  7017                           fsr0l	equ	0xFE9
  7018                           wreg	equ	0xFE8
  7019                           fsr1h	equ	0xFE2
  7020                           fsr1l	equ	0xFE1
  7021                           bsr	equ	0xFE0
  7022                           indf2	equ	0xFDF
  7023                           postinc2	equ	0xFDE
  7024                           postdec2	equ	0xFDD
  7025                           fsr2h	equ	0xFDA
  7026                           fsr2l	equ	0xFD9
  7027                           status	equ	0xFD8
  7028                           
  7029 ;; *************** function i1_set_digit *****************
  7030 ;; Defined at:
  7031 ;;		line 27 in file "disp.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;  dig             1    wreg     unsigned char 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  dig             1   38[COMRAM] unsigned char 
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  1    wreg      void 
  7038 ;; Registers used:
  7039 ;;		wreg, status,2, status,0, cstack
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7045 ;;      Params:         0       0       0       0       0       0       0       0       0
  7046 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7047 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7048 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7049 ;;Total ram usage:        1 bytes
  7050 ;; Hardware stack levels used:    1
  7051 ;; Hardware stack levels required when called:    3
  7052 ;; This function calls:
  7053 ;;		i1___awdiv
  7054 ;; This function is called by:
  7055 ;;		_ISR_low
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059                           	psect	text32
  7060  001B20                     __ptext32:
  7061                           	opt stack 0
  7062  001B20                     i1_set_digit:
  7063                           	opt stack 21
  7064                           
  7065                           ;incstack = 0
  7066                           ;i1set_digit@dig stored from wreg
  7067  001B20  6E27               	movwf	i1set_digit@dig,c
  7068                           
  7069                           ;disp.c: 48: if (dig & 0b10000000)
  7070  001B22  AE27               	btfss	i1set_digit@dig,7,c
  7071  001B24  D002               	goto	i1l3105
  7072                           
  7073                           ;disp.c: 49: dig = 0;
  7074  001B26  0E00               	movlw	0
  7075  001B28  6E27               	movwf	i1set_digit@dig,c
  7076  001B2A                     i1l3105:
  7077                           
  7078                           ;disp.c: 51: LATB2 = (dig / 0b1);
  7079  001B2A  A027               	btfss	i1set_digit@dig,0,c
  7080  001B2C  D002               	goto	i1u397_20
  7081  001B2E  848A               	bsf	3978,2,c	;volatile
  7082  001B30  D001               	goto	i1l3107
  7083  001B32                     i1u397_20:
  7084  001B32  948A               	bcf	3978,2,c	;volatile
  7085  001B34                     i1l3107:
  7086                           
  7087                           ;disp.c: 52: LATB5 = (dig / 0b10);
  7088  001B34  C027  F01F         	movff	i1set_digit@dig,i1___awdiv@dividend
  7089  001B38  6A20               	clrf	i1___awdiv@dividend+1,c
  7090  001B3A  0E00               	movlw	0
  7091  001B3C  6E22               	movwf	i1___awdiv@divisor+1,c
  7092  001B3E  0E02               	movlw	2
  7093  001B40  6E21               	movwf	i1___awdiv@divisor,c
  7094  001B42  EC2A  F010         	call	i1___awdiv	;wreg free
  7095  001B46  301F               	rrcf	?i1___awdiv,w,c
  7096  001B48  A0D8               	btfss	status,0,c
  7097  001B4A  D002               	goto	i1u399_20
  7098  001B4C  8A8A               	bsf	3978,5,c	;volatile
  7099  001B4E  D001               	goto	i1l3109
  7100  001B50                     i1u399_20:
  7101  001B50  9A8A               	bcf	3978,5,c	;volatile
  7102  001B52                     i1l3109:
  7103                           
  7104                           ;disp.c: 53: LATB4 = (dig / 0b100);
  7105  001B52  C027  F01F         	movff	i1set_digit@dig,i1___awdiv@dividend
  7106  001B56  6A20               	clrf	i1___awdiv@dividend+1,c
  7107  001B58  0E00               	movlw	0
  7108  001B5A  6E22               	movwf	i1___awdiv@divisor+1,c
  7109  001B5C  0E04               	movlw	4
  7110  001B5E  6E21               	movwf	i1___awdiv@divisor,c
  7111  001B60  EC2A  F010         	call	i1___awdiv	;wreg free
  7112  001B64  301F               	rrcf	?i1___awdiv,w,c
  7113  001B66  A0D8               	btfss	status,0,c
  7114  001B68  D002               	goto	i1u401_20
  7115  001B6A  888A               	bsf	3978,4,c	;volatile
  7116  001B6C  D001               	goto	i1l3111
  7117  001B6E                     i1u401_20:
  7118  001B6E  988A               	bcf	3978,4,c	;volatile
  7119  001B70                     i1l3111:
  7120                           
  7121                           ;disp.c: 54: LATB0 = (dig / 0b1000);
  7122  001B70  C027  F01F         	movff	i1set_digit@dig,i1___awdiv@dividend
  7123  001B74  6A20               	clrf	i1___awdiv@dividend+1,c
  7124  001B76  0E00               	movlw	0
  7125  001B78  6E22               	movwf	i1___awdiv@divisor+1,c
  7126  001B7A  0E08               	movlw	8
  7127  001B7C  6E21               	movwf	i1___awdiv@divisor,c
  7128  001B7E  EC2A  F010         	call	i1___awdiv	;wreg free
  7129  001B82  301F               	rrcf	?i1___awdiv,w,c
  7130  001B84  A0D8               	btfss	status,0,c
  7131  001B86  D002               	goto	i1u403_20
  7132  001B88  808A               	bsf	3978,0,c	;volatile
  7133  001B8A  D001               	goto	i1l3113
  7134  001B8C                     i1u403_20:
  7135  001B8C  908A               	bcf	3978,0,c	;volatile
  7136  001B8E                     i1l3113:
  7137                           
  7138                           ;disp.c: 55: LATB4 = (dig / 0b10000);
  7139  001B8E  C027  F01F         	movff	i1set_digit@dig,i1___awdiv@dividend
  7140  001B92  6A20               	clrf	i1___awdiv@dividend+1,c
  7141  001B94  0E00               	movlw	0
  7142  001B96  6E22               	movwf	i1___awdiv@divisor+1,c
  7143  001B98  0E10               	movlw	16
  7144  001B9A  6E21               	movwf	i1___awdiv@divisor,c
  7145  001B9C  EC2A  F010         	call	i1___awdiv	;wreg free
  7146  001BA0  301F               	rrcf	?i1___awdiv,w,c
  7147  001BA2  A0D8               	btfss	status,0,c
  7148  001BA4  D002               	goto	i1u405_20
  7149  001BA6  888A               	bsf	3978,4,c	;volatile
  7150  001BA8  D001               	goto	i1l3115
  7151  001BAA                     i1u405_20:
  7152  001BAA  988A               	bcf	3978,4,c	;volatile
  7153  001BAC                     i1l3115:
  7154                           
  7155                           ;disp.c: 56: LATB1 = (dig / 0b100000);
  7156  001BAC  C027  F01F         	movff	i1set_digit@dig,i1___awdiv@dividend
  7157  001BB0  6A20               	clrf	i1___awdiv@dividend+1,c
  7158  001BB2  0E00               	movlw	0
  7159  001BB4  6E22               	movwf	i1___awdiv@divisor+1,c
  7160  001BB6  0E20               	movlw	32
  7161  001BB8  6E21               	movwf	i1___awdiv@divisor,c
  7162  001BBA  EC2A  F010         	call	i1___awdiv	;wreg free
  7163  001BBE  301F               	rrcf	?i1___awdiv,w,c
  7164  001BC0  A0D8               	btfss	status,0,c
  7165  001BC2  D002               	goto	i1u407_20
  7166  001BC4  828A               	bsf	3978,1,c	;volatile
  7167  001BC6  D001               	goto	i1l3117
  7168  001BC8                     i1u407_20:
  7169  001BC8  928A               	bcf	3978,1,c	;volatile
  7170  001BCA                     i1l3117:
  7171                           
  7172                           ;disp.c: 57: LATA6 = (dig / 0b1000000);
  7173  001BCA  C027  F01F         	movff	i1set_digit@dig,i1___awdiv@dividend
  7174  001BCE  6A20               	clrf	i1___awdiv@dividend+1,c
  7175  001BD0  0E00               	movlw	0
  7176  001BD2  6E22               	movwf	i1___awdiv@divisor+1,c
  7177  001BD4  0E40               	movlw	64
  7178  001BD6  6E21               	movwf	i1___awdiv@divisor,c
  7179  001BD8  EC2A  F010         	call	i1___awdiv	;wreg free
  7180  001BDC  301F               	rrcf	?i1___awdiv,w,c
  7181  001BDE  A0D8               	btfss	status,0,c
  7182  001BE0  D002               	goto	i1u409_20
  7183  001BE2  8C89               	bsf	3977,6,c	;volatile
  7184  001BE4  0012               	return	
  7185  001BE6                     i1u409_20:
  7186  001BE6  9C89               	bcf	3977,6,c	;volatile
  7187  001BE8  0012               	return		;funcret
  7188  001BEA                     __end_ofi1_set_digit:
  7189                           	opt stack 0
  7190                           pclatu	equ	0xFFB
  7191                           pclath	equ	0xFFA
  7192                           tblptru	equ	0xFF8
  7193                           tblptrh	equ	0xFF7
  7194                           tblptrl	equ	0xFF6
  7195                           tablat	equ	0xFF5
  7196                           prodh	equ	0xFF4
  7197                           prodl	equ	0xFF3
  7198                           intcon	equ	0xFF2
  7199                           intcon2	equ	0xFF1
  7200                           postinc0	equ	0xFEE
  7201                           fsr0h	equ	0xFEA
  7202                           fsr0l	equ	0xFE9
  7203                           wreg	equ	0xFE8
  7204                           fsr1h	equ	0xFE2
  7205                           fsr1l	equ	0xFE1
  7206                           bsr	equ	0xFE0
  7207                           indf2	equ	0xFDF
  7208                           postinc2	equ	0xFDE
  7209                           postdec2	equ	0xFDD
  7210                           fsr2h	equ	0xFDA
  7211                           fsr2l	equ	0xFD9
  7212                           status	equ	0xFD8
  7213                           
  7214 ;; *************** function i1_set_LEDs *****************
  7215 ;; Defined at:
  7216 ;;		line 478 in file "main.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;  mask            1    wreg     unsigned char 
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;  mask            1   38[COMRAM] unsigned char 
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1    wreg      void 
  7223 ;; Registers used:
  7224 ;;		wreg, status,2, status,0, cstack
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7230 ;;      Params:         0       0       0       0       0       0       0       0       0
  7231 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7233 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7234 ;;Total ram usage:        1 bytes
  7235 ;; Hardware stack levels used:    1
  7236 ;; Hardware stack levels required when called:    3
  7237 ;; This function calls:
  7238 ;;		i1___awdiv
  7239 ;;		i1_set_key_led_disp_tris
  7240 ;; This function is called by:
  7241 ;;		_ISR_low
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           	psect	text33
  7246  001BEA                     __ptext33:
  7247                           	opt stack 0
  7248  001BEA                     i1_set_LEDs:
  7249                           	opt stack 21
  7250                           
  7251                           ;incstack = 0
  7252                           ;i1set_LEDs@mask stored from wreg
  7253  001BEA  6E27               	movwf	i1set_LEDs@mask,c
  7254                           
  7255                           ;main.c: 480: set_key_led_disp_tris(0);
  7256  001BEC  0E00               	movlw	0
  7257  001BEE  EC3A  F011         	call	i1_set_key_led_disp_tris
  7258                           
  7259                           ;main.c: 481: LATA2 = 0;
  7260  001BF2  9489               	bcf	3977,2,c	;volatile
  7261                           
  7262                           ;main.c: 484: LATA6 = mask / 0b1;
  7263  001BF4  A027               	btfss	i1set_LEDs@mask,0,c
  7264  001BF6  D002               	goto	i1u382_20
  7265  001BF8  8C89               	bsf	3977,6,c	;volatile
  7266  001BFA  D001               	goto	i1l3089
  7267  001BFC                     i1u382_20:
  7268  001BFC  9C89               	bcf	3977,6,c	;volatile
  7269  001BFE                     i1l3089:
  7270                           
  7271                           ;main.c: 485: LATB1 = mask / 0b10;
  7272  001BFE  C027  F01F         	movff	i1set_LEDs@mask,i1___awdiv@dividend
  7273  001C02  6A20               	clrf	i1___awdiv@dividend+1,c
  7274  001C04  0E00               	movlw	0
  7275  001C06  6E22               	movwf	i1___awdiv@divisor+1,c
  7276  001C08  0E02               	movlw	2
  7277  001C0A  6E21               	movwf	i1___awdiv@divisor,c
  7278  001C0C  EC2A  F010         	call	i1___awdiv	;wreg free
  7279  001C10  301F               	rrcf	?i1___awdiv,w,c
  7280  001C12  A0D8               	btfss	status,0,c
  7281  001C14  D002               	goto	i1u384_20
  7282  001C16  828A               	bsf	3978,1,c	;volatile
  7283  001C18  D001               	goto	i1l3091
  7284  001C1A                     i1u384_20:
  7285  001C1A  928A               	bcf	3978,1,c	;volatile
  7286  001C1C                     i1l3091:
  7287                           
  7288                           ;main.c: 486: LATB2 = mask / 0b100;
  7289  001C1C  C027  F01F         	movff	i1set_LEDs@mask,i1___awdiv@dividend
  7290  001C20  6A20               	clrf	i1___awdiv@dividend+1,c
  7291  001C22  0E00               	movlw	0
  7292  001C24  6E22               	movwf	i1___awdiv@divisor+1,c
  7293  001C26  0E04               	movlw	4
  7294  001C28  6E21               	movwf	i1___awdiv@divisor,c
  7295  001C2A  EC2A  F010         	call	i1___awdiv	;wreg free
  7296  001C2E  301F               	rrcf	?i1___awdiv,w,c
  7297  001C30  A0D8               	btfss	status,0,c
  7298  001C32  D002               	goto	i1u386_20
  7299  001C34  848A               	bsf	3978,2,c	;volatile
  7300  001C36  D001               	goto	i1l3093
  7301  001C38                     i1u386_20:
  7302  001C38  948A               	bcf	3978,2,c	;volatile
  7303  001C3A                     i1l3093:
  7304                           
  7305                           ;main.c: 487: LATB3 = mask / 0b1000;
  7306  001C3A  C027  F01F         	movff	i1set_LEDs@mask,i1___awdiv@dividend
  7307  001C3E  6A20               	clrf	i1___awdiv@dividend+1,c
  7308  001C40  0E00               	movlw	0
  7309  001C42  6E22               	movwf	i1___awdiv@divisor+1,c
  7310  001C44  0E08               	movlw	8
  7311  001C46  6E21               	movwf	i1___awdiv@divisor,c
  7312  001C48  EC2A  F010         	call	i1___awdiv	;wreg free
  7313  001C4C  301F               	rrcf	?i1___awdiv,w,c
  7314  001C4E  A0D8               	btfss	status,0,c
  7315  001C50  D002               	goto	i1u388_20
  7316  001C52  868A               	bsf	3978,3,c	;volatile
  7317  001C54  D001               	goto	i1l3095
  7318  001C56                     i1u388_20:
  7319  001C56  968A               	bcf	3978,3,c	;volatile
  7320  001C58                     i1l3095:
  7321                           
  7322                           ;main.c: 488: LATB4 = mask / 0b10000;
  7323  001C58  C027  F01F         	movff	i1set_LEDs@mask,i1___awdiv@dividend
  7324  001C5C  6A20               	clrf	i1___awdiv@dividend+1,c
  7325  001C5E  0E00               	movlw	0
  7326  001C60  6E22               	movwf	i1___awdiv@divisor+1,c
  7327  001C62  0E10               	movlw	16
  7328  001C64  6E21               	movwf	i1___awdiv@divisor,c
  7329  001C66  EC2A  F010         	call	i1___awdiv	;wreg free
  7330  001C6A  301F               	rrcf	?i1___awdiv,w,c
  7331  001C6C  A0D8               	btfss	status,0,c
  7332  001C6E  D002               	goto	i1u390_20
  7333  001C70  888A               	bsf	3978,4,c	;volatile
  7334  001C72  D001               	goto	i1l3097
  7335  001C74                     i1u390_20:
  7336  001C74  988A               	bcf	3978,4,c	;volatile
  7337  001C76                     i1l3097:
  7338                           
  7339                           ;main.c: 489: LATB5 = mask / 0b100000;
  7340  001C76  C027  F01F         	movff	i1set_LEDs@mask,i1___awdiv@dividend
  7341  001C7A  6A20               	clrf	i1___awdiv@dividend+1,c
  7342  001C7C  0E00               	movlw	0
  7343  001C7E  6E22               	movwf	i1___awdiv@divisor+1,c
  7344  001C80  0E20               	movlw	32
  7345  001C82  6E21               	movwf	i1___awdiv@divisor,c
  7346  001C84  EC2A  F010         	call	i1___awdiv	;wreg free
  7347  001C88  301F               	rrcf	?i1___awdiv,w,c
  7348  001C8A  A0D8               	btfss	status,0,c
  7349  001C8C  D002               	goto	i1u392_20
  7350  001C8E  8A8A               	bsf	3978,5,c	;volatile
  7351  001C90  D001               	goto	i1l3099
  7352  001C92                     i1u392_20:
  7353  001C92  9A8A               	bcf	3978,5,c	;volatile
  7354  001C94                     i1l3099:
  7355                           
  7356                           ;main.c: 490: LATB0 = mask / 0b1000000;
  7357  001C94  C027  F01F         	movff	i1set_LEDs@mask,i1___awdiv@dividend
  7358  001C98  6A20               	clrf	i1___awdiv@dividend+1,c
  7359  001C9A  0E00               	movlw	0
  7360  001C9C  6E22               	movwf	i1___awdiv@divisor+1,c
  7361  001C9E  0E40               	movlw	64
  7362  001CA0  6E21               	movwf	i1___awdiv@divisor,c
  7363  001CA2  EC2A  F010         	call	i1___awdiv	;wreg free
  7364  001CA6  301F               	rrcf	?i1___awdiv,w,c
  7365  001CA8  A0D8               	btfss	status,0,c
  7366  001CAA  D002               	goto	i1u394_20
  7367  001CAC  808A               	bsf	3978,0,c	;volatile
  7368  001CAE  0012               	return	
  7369  001CB0                     i1u394_20:
  7370  001CB0  908A               	bcf	3978,0,c	;volatile
  7371  001CB2  0012               	return		;funcret
  7372  001CB4                     __end_ofi1_set_LEDs:
  7373                           	opt stack 0
  7374                           pclatu	equ	0xFFB
  7375                           pclath	equ	0xFFA
  7376                           tblptru	equ	0xFF8
  7377                           tblptrh	equ	0xFF7
  7378                           tblptrl	equ	0xFF6
  7379                           tablat	equ	0xFF5
  7380                           prodh	equ	0xFF4
  7381                           prodl	equ	0xFF3
  7382                           intcon	equ	0xFF2
  7383                           intcon2	equ	0xFF1
  7384                           postinc0	equ	0xFEE
  7385                           fsr0h	equ	0xFEA
  7386                           fsr0l	equ	0xFE9
  7387                           wreg	equ	0xFE8
  7388                           fsr1h	equ	0xFE2
  7389                           fsr1l	equ	0xFE1
  7390                           bsr	equ	0xFE0
  7391                           indf2	equ	0xFDF
  7392                           postinc2	equ	0xFDE
  7393                           postdec2	equ	0xFDD
  7394                           fsr2h	equ	0xFDA
  7395                           fsr2l	equ	0xFD9
  7396                           status	equ	0xFD8
  7397                           
  7398 ;; *************** function i1___awdiv *****************
  7399 ;; Defined at:
  7400 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/awdiv.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;  dividend        2   30[COMRAM] int 
  7403 ;;  divisor         2   32[COMRAM] int 
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;  __awdiv         2   36[COMRAM] int 
  7406 ;;  __awdiv         1   35[COMRAM] unsigned char 
  7407 ;;  __awdiv         1   34[COMRAM] unsigned char 
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  2   30[COMRAM] int 
  7410 ;; Registers used:
  7411 ;;		wreg, status,2, status,0
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7417 ;;      Params:         4       0       0       0       0       0       0       0       0
  7418 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7419 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7420 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7421 ;;Total ram usage:        8 bytes
  7422 ;; Hardware stack levels used:    1
  7423 ;; Hardware stack levels required when called:    2
  7424 ;; This function calls:
  7425 ;;		Nothing
  7426 ;; This function is called by:
  7427 ;;		i1_set_LEDs
  7428 ;;		i1_set_digit
  7429 ;; This function uses a non-reentrant model
  7430 ;;
  7431                           
  7432                           	psect	text34
  7433  002054                     __ptext34:
  7434                           	opt stack 0
  7435  002054                     i1___awdiv:
  7436                           	opt stack 21
  7437                           
  7438                           ;incstack = 0
  7439  002054  0E00               	movlw	0
  7440  002056  6E24               	movwf	i1___awdiv@sign,c
  7441  002058  AE22               	btfss	i1___awdiv@divisor+1,7,c
  7442  00205A  D006               	goto	i1l2807
  7443  00205C  6C21               	negf	i1___awdiv@divisor,c
  7444  00205E  1E22               	comf	i1___awdiv@divisor+1,f,c
  7445  002060  B0D8               	btfsc	status,0,c
  7446  002062  2A22               	incf	i1___awdiv@divisor+1,f,c
  7447  002064  0E01               	movlw	1
  7448  002066  6E24               	movwf	i1___awdiv@sign,c
  7449  002068                     i1l2807:
  7450  002068  AE20               	btfss	i1___awdiv@dividend+1,7,c
  7451  00206A  D006               	goto	i1l2813
  7452  00206C  6C1F               	negf	i1___awdiv@dividend,c
  7453  00206E  1E20               	comf	i1___awdiv@dividend+1,f,c
  7454  002070  B0D8               	btfsc	status,0,c
  7455  002072  2A20               	incf	i1___awdiv@dividend+1,f,c
  7456  002074  0E01               	movlw	1
  7457  002076  1A24               	xorwf	i1___awdiv@sign,f,c
  7458  002078                     i1l2813:
  7459  002078  0E00               	movlw	0
  7460  00207A  6E26               	movwf	i1___awdiv@quotient+1,c
  7461  00207C  0E00               	movlw	0
  7462  00207E  6E25               	movwf	i1___awdiv@quotient,c
  7463  002080  5021               	movf	i1___awdiv@divisor,w,c
  7464  002082  1022               	iorwf	i1___awdiv@divisor+1,w,c
  7465  002084  B4D8               	btfsc	status,2,c
  7466  002086  D01C               	goto	i1l2835
  7467  002088  0E01               	movlw	1
  7468  00208A  6E23               	movwf	i1___awdiv@counter,c
  7469  00208C  D004               	goto	i1l2821
  7470  00208E                     i1l2819:
  7471  00208E  90D8               	bcf	status,0,c
  7472  002090  3621               	rlcf	i1___awdiv@divisor,f,c
  7473  002092  3622               	rlcf	i1___awdiv@divisor+1,f,c
  7474  002094  2A23               	incf	i1___awdiv@counter,f,c
  7475  002096                     i1l2821:
  7476  002096  AE22               	btfss	i1___awdiv@divisor+1,7,c
  7477  002098  D7FA               	goto	i1l2819
  7478  00209A                     i1l2823:
  7479  00209A  90D8               	bcf	status,0,c
  7480  00209C  3625               	rlcf	i1___awdiv@quotient,f,c
  7481  00209E  3626               	rlcf	i1___awdiv@quotient+1,f,c
  7482  0020A0  5021               	movf	i1___awdiv@divisor,w,c
  7483  0020A2  5C1F               	subwf	i1___awdiv@dividend,w,c
  7484  0020A4  5022               	movf	i1___awdiv@divisor+1,w,c
  7485  0020A6  5820               	subwfb	i1___awdiv@dividend+1,w,c
  7486  0020A8  A0D8               	btfss	status,0,c
  7487  0020AA  D005               	goto	i1l2831
  7488  0020AC  5021               	movf	i1___awdiv@divisor,w,c
  7489  0020AE  5E1F               	subwf	i1___awdiv@dividend,f,c
  7490  0020B0  5022               	movf	i1___awdiv@divisor+1,w,c
  7491  0020B2  5A20               	subwfb	i1___awdiv@dividend+1,f,c
  7492  0020B4  8025               	bsf	i1___awdiv@quotient,0,c
  7493  0020B6                     i1l2831:
  7494  0020B6  90D8               	bcf	status,0,c
  7495  0020B8  3222               	rrcf	i1___awdiv@divisor+1,f,c
  7496  0020BA  3221               	rrcf	i1___awdiv@divisor,f,c
  7497  0020BC  2E23               	decfsz	i1___awdiv@counter,f,c
  7498  0020BE  D7ED               	goto	i1l2823
  7499  0020C0                     i1l2835:
  7500  0020C0  5024               	movf	i1___awdiv@sign,w,c
  7501  0020C2  B4D8               	btfsc	status,2,c
  7502  0020C4  D004               	goto	i1l2839
  7503  0020C6  6C25               	negf	i1___awdiv@quotient,c
  7504  0020C8  1E26               	comf	i1___awdiv@quotient+1,f,c
  7505  0020CA  B0D8               	btfsc	status,0,c
  7506  0020CC  2A26               	incf	i1___awdiv@quotient+1,f,c
  7507  0020CE                     i1l2839:
  7508  0020CE  C025  F01F         	movff	i1___awdiv@quotient,?i1___awdiv
  7509  0020D2  C026  F020         	movff	i1___awdiv@quotient+1,?i1___awdiv+1
  7510  0020D6  0012               	return	
  7511  0020D8                     __end_ofi1___awdiv:
  7512                           	opt stack 0
  7513                           pclatu	equ	0xFFB
  7514                           pclath	equ	0xFFA
  7515                           tblptru	equ	0xFF8
  7516                           tblptrh	equ	0xFF7
  7517                           tblptrl	equ	0xFF6
  7518                           tablat	equ	0xFF5
  7519                           prodh	equ	0xFF4
  7520                           prodl	equ	0xFF3
  7521                           intcon	equ	0xFF2
  7522                           intcon2	equ	0xFF1
  7523                           postinc0	equ	0xFEE
  7524                           fsr0h	equ	0xFEA
  7525                           fsr0l	equ	0xFE9
  7526                           wreg	equ	0xFE8
  7527                           fsr1h	equ	0xFE2
  7528                           fsr1l	equ	0xFE1
  7529                           bsr	equ	0xFE0
  7530                           indf2	equ	0xFDF
  7531                           postinc2	equ	0xFDE
  7532                           postdec2	equ	0xFDD
  7533                           fsr2h	equ	0xFDA
  7534                           fsr2l	equ	0xFD9
  7535                           status	equ	0xFD8
  7536                           
  7537 ;; *************** function i1___aldiv *****************
  7538 ;; Defined at:
  7539 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/aldiv.c"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;  dividend        4   30[COMRAM] long 
  7542 ;;  divisor         4   34[COMRAM] long 
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;  __aldiv         4   40[COMRAM] long 
  7545 ;;  __aldiv         1   39[COMRAM] unsigned char 
  7546 ;;  __aldiv         1   38[COMRAM] unsigned char 
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  4   30[COMRAM] long 
  7549 ;; Registers used:
  7550 ;;		wreg, status,2, status,0
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7556 ;;      Params:         8       0       0       0       0       0       0       0       0
  7557 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7558 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7559 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7560 ;;Total ram usage:       14 bytes
  7561 ;; Hardware stack levels used:    1
  7562 ;; Hardware stack levels required when called:    2
  7563 ;; This function calls:
  7564 ;;		Nothing
  7565 ;; This function is called by:
  7566 ;;		_ISR_low
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           
  7570                           	psect	text35
  7571  001A54                     __ptext35:
  7572                           	opt stack 0
  7573  001A54                     i1___aldiv:
  7574                           	opt stack 22
  7575                           
  7576                           ;incstack = 0
  7577  001A54  0E00               	movlw	0
  7578  001A56  6E28               	movwf	i1___aldiv@sign,c
  7579  001A58  AE26               	btfss	i1___aldiv@divisor+3,7,c
  7580  001A5A  D00A               	goto	i1l3127
  7581  001A5C  1E26               	comf	i1___aldiv@divisor+3,f,c
  7582  001A5E  1E25               	comf	i1___aldiv@divisor+2,f,c
  7583  001A60  1E24               	comf	i1___aldiv@divisor+1,f,c
  7584  001A62  6C23               	negf	i1___aldiv@divisor,c
  7585  001A64  0E00               	movlw	0
  7586  001A66  2224               	addwfc	i1___aldiv@divisor+1,f,c
  7587  001A68  2225               	addwfc	i1___aldiv@divisor+2,f,c
  7588  001A6A  2226               	addwfc	i1___aldiv@divisor+3,f,c
  7589  001A6C  0E01               	movlw	1
  7590  001A6E  6E28               	movwf	i1___aldiv@sign,c
  7591  001A70                     i1l3127:
  7592  001A70  AE22               	btfss	i1___aldiv@dividend+3,7,c
  7593  001A72  D00A               	goto	i1l3133
  7594  001A74  1E22               	comf	i1___aldiv@dividend+3,f,c
  7595  001A76  1E21               	comf	i1___aldiv@dividend+2,f,c
  7596  001A78  1E20               	comf	i1___aldiv@dividend+1,f,c
  7597  001A7A  6C1F               	negf	i1___aldiv@dividend,c
  7598  001A7C  0E00               	movlw	0
  7599  001A7E  2220               	addwfc	i1___aldiv@dividend+1,f,c
  7600  001A80  2221               	addwfc	i1___aldiv@dividend+2,f,c
  7601  001A82  2222               	addwfc	i1___aldiv@dividend+3,f,c
  7602  001A84  0E01               	movlw	1
  7603  001A86  1A28               	xorwf	i1___aldiv@sign,f,c
  7604  001A88                     i1l3133:
  7605  001A88  0E00               	movlw	0
  7606  001A8A  6E29               	movwf	i1___aldiv@quotient,c
  7607  001A8C  0E00               	movlw	0
  7608  001A8E  6E2A               	movwf	i1___aldiv@quotient+1,c
  7609  001A90  0E00               	movlw	0
  7610  001A92  6E2B               	movwf	i1___aldiv@quotient+2,c
  7611  001A94  0E00               	movlw	0
  7612  001A96  6E2C               	movwf	i1___aldiv@quotient+3,c
  7613  001A98  5023               	movf	i1___aldiv@divisor,w,c
  7614  001A9A  1024               	iorwf	i1___aldiv@divisor+1,w,c
  7615  001A9C  1025               	iorwf	i1___aldiv@divisor+2,w,c
  7616  001A9E  1026               	iorwf	i1___aldiv@divisor+3,w,c
  7617  001AA0  B4D8               	btfsc	status,2,c
  7618  001AA2  D02A               	goto	i1l3155
  7619  001AA4  0E01               	movlw	1
  7620  001AA6  6E27               	movwf	i1___aldiv@counter,c
  7621  001AA8  D006               	goto	i1l3141
  7622  001AAA                     i1l3139:
  7623  001AAA  90D8               	bcf	status,0,c
  7624  001AAC  3623               	rlcf	i1___aldiv@divisor,f,c
  7625  001AAE  3624               	rlcf	i1___aldiv@divisor+1,f,c
  7626  001AB0  3625               	rlcf	i1___aldiv@divisor+2,f,c
  7627  001AB2  3626               	rlcf	i1___aldiv@divisor+3,f,c
  7628  001AB4  2A27               	incf	i1___aldiv@counter,f,c
  7629  001AB6                     i1l3141:
  7630  001AB6  AE26               	btfss	i1___aldiv@divisor+3,7,c
  7631  001AB8  D7F8               	goto	i1l3139
  7632  001ABA                     i1l3143:
  7633  001ABA  90D8               	bcf	status,0,c
  7634  001ABC  3629               	rlcf	i1___aldiv@quotient,f,c
  7635  001ABE  362A               	rlcf	i1___aldiv@quotient+1,f,c
  7636  001AC0  362B               	rlcf	i1___aldiv@quotient+2,f,c
  7637  001AC2  362C               	rlcf	i1___aldiv@quotient+3,f,c
  7638  001AC4  5023               	movf	i1___aldiv@divisor,w,c
  7639  001AC6  5C1F               	subwf	i1___aldiv@dividend,w,c
  7640  001AC8  5024               	movf	i1___aldiv@divisor+1,w,c
  7641  001ACA  5820               	subwfb	i1___aldiv@dividend+1,w,c
  7642  001ACC  5025               	movf	i1___aldiv@divisor+2,w,c
  7643  001ACE  5821               	subwfb	i1___aldiv@dividend+2,w,c
  7644  001AD0  5026               	movf	i1___aldiv@divisor+3,w,c
  7645  001AD2  5822               	subwfb	i1___aldiv@dividend+3,w,c
  7646  001AD4  A0D8               	btfss	status,0,c
  7647  001AD6  D009               	goto	i1l3151
  7648  001AD8  5023               	movf	i1___aldiv@divisor,w,c
  7649  001ADA  5E1F               	subwf	i1___aldiv@dividend,f,c
  7650  001ADC  5024               	movf	i1___aldiv@divisor+1,w,c
  7651  001ADE  5A20               	subwfb	i1___aldiv@dividend+1,f,c
  7652  001AE0  5025               	movf	i1___aldiv@divisor+2,w,c
  7653  001AE2  5A21               	subwfb	i1___aldiv@dividend+2,f,c
  7654  001AE4  5026               	movf	i1___aldiv@divisor+3,w,c
  7655  001AE6  5A22               	subwfb	i1___aldiv@dividend+3,f,c
  7656  001AE8  8029               	bsf	i1___aldiv@quotient,0,c
  7657  001AEA                     i1l3151:
  7658  001AEA  90D8               	bcf	status,0,c
  7659  001AEC  3226               	rrcf	i1___aldiv@divisor+3,f,c
  7660  001AEE  3225               	rrcf	i1___aldiv@divisor+2,f,c
  7661  001AF0  3224               	rrcf	i1___aldiv@divisor+1,f,c
  7662  001AF2  3223               	rrcf	i1___aldiv@divisor,f,c
  7663  001AF4  2E27               	decfsz	i1___aldiv@counter,f,c
  7664  001AF6  D7E1               	goto	i1l3143
  7665  001AF8                     i1l3155:
  7666  001AF8  5028               	movf	i1___aldiv@sign,w,c
  7667  001AFA  B4D8               	btfsc	status,2,c
  7668  001AFC  D008               	goto	i1l3159
  7669  001AFE  1E2C               	comf	i1___aldiv@quotient+3,f,c
  7670  001B00  1E2B               	comf	i1___aldiv@quotient+2,f,c
  7671  001B02  1E2A               	comf	i1___aldiv@quotient+1,f,c
  7672  001B04  6C29               	negf	i1___aldiv@quotient,c
  7673  001B06  0E00               	movlw	0
  7674  001B08  222A               	addwfc	i1___aldiv@quotient+1,f,c
  7675  001B0A  222B               	addwfc	i1___aldiv@quotient+2,f,c
  7676  001B0C  222C               	addwfc	i1___aldiv@quotient+3,f,c
  7677  001B0E                     i1l3159:
  7678  001B0E  C029  F01F         	movff	i1___aldiv@quotient,?i1___aldiv
  7679  001B12  C02A  F020         	movff	i1___aldiv@quotient+1,?i1___aldiv+1
  7680  001B16  C02B  F021         	movff	i1___aldiv@quotient+2,?i1___aldiv+2
  7681  001B1A  C02C  F022         	movff	i1___aldiv@quotient+3,?i1___aldiv+3
  7682  001B1E  0012               	return	
  7683  001B20                     __end_ofi1___aldiv:
  7684                           	opt stack 0
  7685                           pclatu	equ	0xFFB
  7686                           pclath	equ	0xFFA
  7687                           tblptru	equ	0xFF8
  7688                           tblptrh	equ	0xFF7
  7689                           tblptrl	equ	0xFF6
  7690                           tablat	equ	0xFF5
  7691                           prodh	equ	0xFF4
  7692                           prodl	equ	0xFF3
  7693                           intcon	equ	0xFF2
  7694                           intcon2	equ	0xFF1
  7695                           postinc0	equ	0xFEE
  7696                           fsr0h	equ	0xFEA
  7697                           fsr0l	equ	0xFE9
  7698                           wreg	equ	0xFE8
  7699                           fsr1h	equ	0xFE2
  7700                           fsr1l	equ	0xFE1
  7701                           bsr	equ	0xFE0
  7702                           indf2	equ	0xFDF
  7703                           postinc2	equ	0xFDE
  7704                           postdec2	equ	0xFDD
  7705                           fsr2h	equ	0xFDA
  7706                           fsr2l	equ	0xFD9
  7707                           status	equ	0xFD8
  7708                           
  7709 ;; *************** function _sample_inputs *****************
  7710 ;; Defined at:
  7711 ;;		line 457 in file "main.c"
  7712 ;; Parameters:    Size  Location     Type
  7713 ;;		None
  7714 ;; Auto vars:     Size  Location     Type
  7715 ;;  ret             1   31[COMRAM] unsigned char 
  7716 ;; Return value:  Size  Location     Type
  7717 ;;                  1    wreg      unsigned char 
  7718 ;; Registers used:
  7719 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7720 ;; Tracked objects:
  7721 ;;		On entry : 0/0
  7722 ;;		On exit  : 0/0
  7723 ;;		Unchanged: 0/0
  7724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7725 ;;      Params:         0       0       0       0       0       0       0       0       0
  7726 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7727 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7728 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7729 ;;Total ram usage:        1 bytes
  7730 ;; Hardware stack levels used:    1
  7731 ;; Hardware stack levels required when called:    3
  7732 ;; This function calls:
  7733 ;;		i1_set_key_led_disp_tris
  7734 ;; This function is called by:
  7735 ;;		_ISR_low
  7736 ;; This function uses a non-reentrant model
  7737 ;;
  7738                           
  7739                           	psect	text36
  7740  002158                     __ptext36:
  7741                           	opt stack 0
  7742  002158                     _sample_inputs:
  7743                           	opt stack 21
  7744                           
  7745                           ;main.c: 460: set_key_led_disp_tris(1);
  7746                           
  7747                           ;incstack = 0
  7748  002158  0E01               	movlw	1
  7749  00215A  EC3A  F011         	call	i1_set_key_led_disp_tris
  7750                           
  7751                           ;main.c: 461: unsigned char ret = 0;
  7752  00215E  0E00               	movlw	0
  7753  002160  6E20               	movwf	sample_inputs@ret,c
  7754                           
  7755                           ;main.c: 467: ret |= PORTBbits.RB0 * 0b1;
  7756  002162  A081               	btfss	3969,0,c	;volatile
  7757  002164  D002               	goto	i1u359_20
  7758  002166  0E01               	movlw	1
  7759  002168  D001               	goto	i1u359_26
  7760  00216A                     i1u359_20:
  7761  00216A  0E00               	movlw	0
  7762  00216C                     i1u359_26:
  7763  00216C  0D01               	mullw	1
  7764  00216E  50F3               	movf	prodl,w,c
  7765  002170  1220               	iorwf	sample_inputs@ret,f,c
  7766                           
  7767                           ;main.c: 468: ret |= PORTBbits.RB1 * 0b10;
  7768  002172  A281               	btfss	3969,1,c	;volatile
  7769  002174  D002               	goto	i1u360_20
  7770  002176  0E01               	movlw	1
  7771  002178  D001               	goto	i1u360_26
  7772  00217A                     i1u360_20:
  7773  00217A  0E00               	movlw	0
  7774  00217C                     i1u360_26:
  7775  00217C  0D02               	mullw	2
  7776  00217E  50F3               	movf	prodl,w,c
  7777  002180  1220               	iorwf	sample_inputs@ret,f,c
  7778                           
  7779                           ;main.c: 469: ret |= PORTBbits.RB2 * 0b100;
  7780  002182  A481               	btfss	3969,2,c	;volatile
  7781  002184  D002               	goto	i1u361_20
  7782  002186  0E01               	movlw	1
  7783  002188  D001               	goto	i1u361_26
  7784  00218A                     i1u361_20:
  7785  00218A  0E00               	movlw	0
  7786  00218C                     i1u361_26:
  7787  00218C  0D04               	mullw	4
  7788  00218E  50F3               	movf	prodl,w,c
  7789  002190  1220               	iorwf	sample_inputs@ret,f,c
  7790                           
  7791                           ;main.c: 470: ret |= PORTBbits.RB3 * 0b1000;
  7792  002192  A681               	btfss	3969,3,c	;volatile
  7793  002194  D002               	goto	i1u362_20
  7794  002196  0E01               	movlw	1
  7795  002198  D001               	goto	i1u362_26
  7796  00219A                     i1u362_20:
  7797  00219A  0E00               	movlw	0
  7798  00219C                     i1u362_26:
  7799  00219C  0D08               	mullw	8
  7800  00219E  50F3               	movf	prodl,w,c
  7801  0021A0  1220               	iorwf	sample_inputs@ret,f,c
  7802                           
  7803                           ;main.c: 471: ret |= PORTBbits.RB4 * 0b10000;
  7804  0021A2  A881               	btfss	3969,4,c	;volatile
  7805  0021A4  D002               	goto	i1u363_20
  7806  0021A6  0E01               	movlw	1
  7807  0021A8  D001               	goto	i1u363_26
  7808  0021AA                     i1u363_20:
  7809  0021AA  0E00               	movlw	0
  7810  0021AC                     i1u363_26:
  7811  0021AC  0D10               	mullw	16
  7812  0021AE  50F3               	movf	prodl,w,c
  7813  0021B0  1220               	iorwf	sample_inputs@ret,f,c
  7814                           
  7815                           ;main.c: 472: ret |= PORTBbits.RB5 * 0b100000;
  7816  0021B2  AA81               	btfss	3969,5,c	;volatile
  7817  0021B4  D002               	goto	i1u364_20
  7818  0021B6  0E01               	movlw	1
  7819  0021B8  D001               	goto	i1u364_26
  7820  0021BA                     i1u364_20:
  7821  0021BA  0E00               	movlw	0
  7822  0021BC                     i1u364_26:
  7823  0021BC  0D20               	mullw	32
  7824  0021BE  50F3               	movf	prodl,w,c
  7825  0021C0  1220               	iorwf	sample_inputs@ret,f,c
  7826                           
  7827                           ;main.c: 475: return ~ret;
  7828  0021C2  5020               	movf	sample_inputs@ret,w,c
  7829  0021C4  0AFF               	xorlw	255
  7830  0021C6  0012               	return	
  7831  0021C8                     __end_of_sample_inputs:
  7832                           	opt stack 0
  7833                           pclatu	equ	0xFFB
  7834                           pclath	equ	0xFFA
  7835                           tblptru	equ	0xFF8
  7836                           tblptrh	equ	0xFF7
  7837                           tblptrl	equ	0xFF6
  7838                           tablat	equ	0xFF5
  7839                           prodh	equ	0xFF4
  7840                           prodl	equ	0xFF3
  7841                           intcon	equ	0xFF2
  7842                           intcon2	equ	0xFF1
  7843                           postinc0	equ	0xFEE
  7844                           fsr0h	equ	0xFEA
  7845                           fsr0l	equ	0xFE9
  7846                           wreg	equ	0xFE8
  7847                           fsr1h	equ	0xFE2
  7848                           fsr1l	equ	0xFE1
  7849                           bsr	equ	0xFE0
  7850                           indf2	equ	0xFDF
  7851                           postinc2	equ	0xFDE
  7852                           postdec2	equ	0xFDD
  7853                           fsr2h	equ	0xFDA
  7854                           fsr2l	equ	0xFD9
  7855                           status	equ	0xFD8
  7856                           
  7857 ;; *************** function i1_set_key_led_disp_tris *****************
  7858 ;; Defined at:
  7859 ;;		line 501 in file "main.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;  dir             1    wreg     unsigned char 
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;  dir             1   30[COMRAM] unsigned char 
  7864 ;; Return value:  Size  Location     Type
  7865 ;;                  1    wreg      void 
  7866 ;; Registers used:
  7867 ;;		wreg
  7868 ;; Tracked objects:
  7869 ;;		On entry : 0/0
  7870 ;;		On exit  : 0/0
  7871 ;;		Unchanged: 0/0
  7872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7873 ;;      Params:         0       0       0       0       0       0       0       0       0
  7874 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7875 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7876 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7877 ;;Total ram usage:        1 bytes
  7878 ;; Hardware stack levels used:    1
  7879 ;; Hardware stack levels required when called:    2
  7880 ;; This function calls:
  7881 ;;		Nothing
  7882 ;; This function is called by:
  7883 ;;		_sample_inputs
  7884 ;;		i1_set_LEDs
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888                           	psect	text37
  7889  002274                     __ptext37:
  7890                           	opt stack 0
  7891  002274                     i1_set_key_led_disp_tris:
  7892                           	opt stack 21
  7893                           
  7894                           ;incstack = 0
  7895                           ;i1set_key_led_disp_tris@dir stored from wreg
  7896  002274  6E1F               	movwf	i1set_key_led_disp_tris@dir,c
  7897                           
  7898                           ;main.c: 505: TRISA6 = dir;
  7899  002276  A01F               	btfss	i1set_key_led_disp_tris@dir,0,c
  7900  002278  D002               	goto	i1u330_20
  7901  00227A  8C92               	bsf	3986,6,c	;volatile
  7902  00227C  D001               	goto	i1u331_25
  7903  00227E                     i1u330_20:
  7904  00227E  9C92               	bcf	3986,6,c	;volatile
  7905  002280                     i1u331_25:
  7906                           
  7907                           ;main.c: 506: TRISB1 = dir;
  7908  002280  A01F               	btfss	i1set_key_led_disp_tris@dir,0,c
  7909  002282  D002               	goto	i1u332_20
  7910  002284  8293               	bsf	3987,1,c	;volatile
  7911  002286  D001               	goto	i1u333_25
  7912  002288                     i1u332_20:
  7913  002288  9293               	bcf	3987,1,c	;volatile
  7914  00228A                     i1u333_25:
  7915                           
  7916                           ;main.c: 507: TRISB2 = dir;
  7917  00228A  A01F               	btfss	i1set_key_led_disp_tris@dir,0,c
  7918  00228C  D002               	goto	i1u334_20
  7919  00228E  8493               	bsf	3987,2,c	;volatile
  7920  002290  D001               	goto	i1u335_25
  7921  002292                     i1u334_20:
  7922  002292  9493               	bcf	3987,2,c	;volatile
  7923  002294                     i1u335_25:
  7924                           
  7925                           ;main.c: 508: TRISB3 = dir;
  7926  002294  A01F               	btfss	i1set_key_led_disp_tris@dir,0,c
  7927  002296  D002               	goto	i1u336_20
  7928  002298  8693               	bsf	3987,3,c	;volatile
  7929  00229A  D001               	goto	i1u337_25
  7930  00229C                     i1u336_20:
  7931  00229C  9693               	bcf	3987,3,c	;volatile
  7932  00229E                     i1u337_25:
  7933                           
  7934                           ;main.c: 509: TRISB4 = dir;
  7935  00229E  A01F               	btfss	i1set_key_led_disp_tris@dir,0,c
  7936  0022A0  D002               	goto	i1u338_20
  7937  0022A2  8893               	bsf	3987,4,c	;volatile
  7938  0022A4  D001               	goto	i1u339_25
  7939  0022A6                     i1u338_20:
  7940  0022A6  9893               	bcf	3987,4,c	;volatile
  7941  0022A8                     i1u339_25:
  7942                           
  7943                           ;main.c: 510: TRISB5 = dir;
  7944  0022A8  A01F               	btfss	i1set_key_led_disp_tris@dir,0,c
  7945  0022AA  D002               	goto	i1u340_20
  7946  0022AC  8A93               	bsf	3987,5,c	;volatile
  7947  0022AE  D001               	goto	i1u341_25
  7948  0022B0                     i1u340_20:
  7949  0022B0  9A93               	bcf	3987,5,c	;volatile
  7950  0022B2                     i1u341_25:
  7951                           
  7952                           ;main.c: 511: TRISB0 = dir;
  7953  0022B2  A01F               	btfss	i1set_key_led_disp_tris@dir,0,c
  7954  0022B4  D002               	goto	i1u342_20
  7955  0022B6  8093               	bsf	3987,0,c	;volatile
  7956  0022B8  0012               	return	
  7957  0022BA                     i1u342_20:
  7958  0022BA  9093               	bcf	3987,0,c	;volatile
  7959  0022BC  0012               	return		;funcret
  7960  0022BE                     __end_ofi1_set_key_led_disp_tris:
  7961                           	opt stack 0
  7962                           pclatu	equ	0xFFB
  7963                           pclath	equ	0xFFA
  7964                           tblptru	equ	0xFF8
  7965                           tblptrh	equ	0xFF7
  7966                           tblptrl	equ	0xFF6
  7967                           tablat	equ	0xFF5
  7968                           prodh	equ	0xFF4
  7969                           prodl	equ	0xFF3
  7970                           intcon	equ	0xFF2
  7971                           intcon2	equ	0xFF1
  7972                           postinc0	equ	0xFEE
  7973                           fsr0h	equ	0xFEA
  7974                           fsr0l	equ	0xFE9
  7975                           wreg	equ	0xFE8
  7976                           fsr1h	equ	0xFE2
  7977                           fsr1l	equ	0xFE1
  7978                           bsr	equ	0xFE0
  7979                           indf2	equ	0xFDF
  7980                           postinc2	equ	0xFDE
  7981                           postdec2	equ	0xFDD
  7982                           fsr2h	equ	0xFDA
  7983                           fsr2l	equ	0xFD9
  7984                           status	equ	0xFD8
  7985                           
  7986 ;; *************** function _buzzer *****************
  7987 ;; Defined at:
  7988 ;;		line 493 in file "main.c"
  7989 ;; Parameters:    Size  Location     Type
  7990 ;;  duration        1    wreg     unsigned char 
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;  duration        1   30[COMRAM] unsigned char 
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1    wreg      void 
  7995 ;; Registers used:
  7996 ;;		wreg, status,2
  7997 ;; Tracked objects:
  7998 ;;		On entry : 0/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8002 ;;      Params:         0       0       0       0       0       0       0       0       0
  8003 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8004 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8005 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8006 ;;Total ram usage:        1 bytes
  8007 ;; Hardware stack levels used:    1
  8008 ;; Hardware stack levels required when called:    2
  8009 ;; This function calls:
  8010 ;;		Nothing
  8011 ;; This function is called by:
  8012 ;;		_ISR_low
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           	psect	text38
  8017  00249E                     __ptext38:
  8018                           	opt stack 0
  8019  00249E                     _buzzer:
  8020                           	opt stack 22
  8021                           
  8022                           ;incstack = 0
  8023                           ;buzzer@duration stored from wreg
  8024  00249E  6E1F               	movwf	buzzer@duration,c
  8025                           
  8026                           ;main.c: 496: buzz = duration;
  8027  0024A0  C01F  F03A         	movff	buzzer@duration,_buzz
  8028                           
  8029                           ;main.c: 498: LATA5 = buzz > 0 ? 1 : 0;
  8030  0024A4  503A               	movf	_buzz,w,c
  8031  0024A6  B4D8               	btfsc	status,2,c
  8032  0024A8  D002               	goto	i1u365_20
  8033  0024AA  8A89               	bsf	3977,5,c	;volatile
  8034  0024AC  0012               	return	
  8035  0024AE                     i1u365_20:
  8036  0024AE  9A89               	bcf	3977,5,c	;volatile
  8037  0024B0  0012               	return		;funcret
  8038  0024B2                     __end_of_buzzer:
  8039                           	opt stack 0
  8040                           pclatu	equ	0xFFB
  8041                           pclath	equ	0xFFA
  8042                           tblptru	equ	0xFF8
  8043                           tblptrh	equ	0xFF7
  8044                           tblptrl	equ	0xFF6
  8045                           tablat	equ	0xFF5
  8046                           prodh	equ	0xFF4
  8047                           prodl	equ	0xFF3
  8048                           intcon	equ	0xFF2
  8049                           intcon2	equ	0xFF1
  8050                           postinc0	equ	0xFEE
  8051                           fsr0h	equ	0xFEA
  8052                           fsr0l	equ	0xFE9
  8053                           wreg	equ	0xFE8
  8054                           fsr1h	equ	0xFE2
  8055                           fsr1l	equ	0xFE1
  8056                           bsr	equ	0xFE0
  8057                           indf2	equ	0xFDF
  8058                           postinc2	equ	0xFDE
  8059                           postdec2	equ	0xFDD
  8060                           fsr2h	equ	0xFDA
  8061                           fsr2l	equ	0xFD9
  8062                           status	equ	0xFD8
  8063                           
  8064 ;; *************** function _ISR_high *****************
  8065 ;; Defined at:
  8066 ;;		line 593 in file "main.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;		None
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;  tmp             2   28[COMRAM] unsigned short 
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  1    wreg      void 
  8073 ;; Registers used:
  8074 ;;		wreg, status,2, status,0, cstack
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8080 ;;      Params:         0       0       0       0       0       0       0       0       0
  8081 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8082 ;;      Temps:         18       0       0       0       0       0       0       0       0
  8083 ;;      Totals:        20       0       0       0       0       0       0       0       0
  8084 ;;Total ram usage:       20 bytes
  8085 ;; Hardware stack levels used:    1
  8086 ;; Hardware stack levels required when called:    1
  8087 ;; This function calls:
  8088 ;;		___almod
  8089 ;;		_ee_write_byte
  8090 ;; This function is called by:
  8091 ;;		Interrupt level 2
  8092 ;; This function uses a non-reentrant model
  8093 ;;
  8094                           
  8095                           	psect	intcode
  8096  000008                     __pintcode:
  8097                           	opt stack 0
  8098  000008                     _ISR_high:
  8099                           	opt stack 21
  8100                           
  8101                           ;incstack = 0
  8102  000008  823D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8103  00000A  CFFA F00F          	movff	pclath,??_ISR_high+4
  8104  00000E  CFFB F010          	movff	pclatu,??_ISR_high+5
  8105  000012  ED37  F00C         	call	int_func,f	;refresh shadow registers
  8106                           pclatu	equ	0xFFB
  8107                           pclath	equ	0xFFA
  8108                           tblptru	equ	0xFF8
  8109                           tblptrh	equ	0xFF7
  8110                           tblptrl	equ	0xFF6
  8111                           tablat	equ	0xFF5
  8112                           prodh	equ	0xFF4
  8113                           prodl	equ	0xFF3
  8114                           intcon	equ	0xFF2
  8115                           intcon2	equ	0xFF1
  8116                           postinc0	equ	0xFEE
  8117                           fsr0h	equ	0xFEA
  8118                           fsr0l	equ	0xFE9
  8119                           wreg	equ	0xFE8
  8120                           fsr1h	equ	0xFE2
  8121                           fsr1l	equ	0xFE1
  8122                           bsr	equ	0xFE0
  8123                           indf2	equ	0xFDF
  8124                           postinc2	equ	0xFDE
  8125                           postdec2	equ	0xFDD
  8126                           fsr2h	equ	0xFDA
  8127                           fsr2l	equ	0xFD9
  8128                           status	equ	0xFD8
  8129                           
  8130                           	psect	intcode_body
  8131  00186E                     __pintcode_body:
  8132                           	opt stack 21
  8133  00186E                     int_func:
  8134                           	opt stack 21
  8135  00186E  0006               	pop		; remove dummy address from shadow register refresh
  8136  001870  CFE9 F011          	movff	fsr0l,??_ISR_high+6
  8137  001874  CFEA F012          	movff	fsr0h,??_ISR_high+7
  8138  001878  CFE1 F013          	movff	fsr1l,??_ISR_high+8
  8139  00187C  CFE2 F014          	movff	fsr1h,??_ISR_high+9
  8140  001880  CFD9 F015          	movff	fsr2l,??_ISR_high+10
  8141  001884  CFDA F016          	movff	fsr2h,??_ISR_high+11
  8142  001888  CFF3 F017          	movff	prodl,??_ISR_high+12
  8143  00188C  CFF4 F018          	movff	prodh,??_ISR_high+13
  8144  001890  CFF6 F019          	movff	tblptrl,??_ISR_high+14
  8145  001894  CFF7 F01A          	movff	tblptrh,??_ISR_high+15
  8146  001898  CFF8 F01B          	movff	tblptru,??_ISR_high+16
  8147  00189C  CFF5 F01C          	movff	tablat,??_ISR_high+17
  8148                           
  8149                           ;main.c: 595: if (TMR1IE && TMR1IF)
  8150  0018A0  B09D               	btfsc	3997,0,c	;volatile
  8151  0018A2  A09E               	btfss	3998,0,c	;volatile
  8152  0018A4  D043               	goto	i2l432
  8153                           
  8154                           ;main.c: 596: {
  8155                           ;main.c: 603: unsigned short tmp = (500000UL / 32UL);
  8156  0018A6  0E3D               	movlw	61
  8157  0018A8  6E1E               	movwf	ISR_high@tmp+1,c
  8158  0018AA  0E09               	movlw	9
  8159  0018AC  6E1D               	movwf	ISR_high@tmp,c
  8160                           
  8161                           ;main.c: 604: TMR1 += 0xFFFFU - tmp;
  8162  0018AE  0EFF               	movlw	255
  8163  0018B0  6E0B               	movwf	??_ISR_high& (0+255),c
  8164  0018B2  0EFF               	movlw	255
  8165  0018B4  6E0C               	movwf	(??_ISR_high+1)& (0+255),c
  8166  0018B6  C01D  F00D         	movff	ISR_high@tmp,??_ISR_high+2
  8167  0018BA  C01E  F00E         	movff	ISR_high@tmp+1,??_ISR_high+3
  8168  0018BE  1E0D               	comf	??_ISR_high+2,f,c
  8169  0018C0  1E0E               	comf	??_ISR_high+3,f,c
  8170  0018C2  4A0D               	infsnz	??_ISR_high+2,f,c
  8171  0018C4  2A0E               	incf	??_ISR_high+3,f,c
  8172  0018C6  500B               	movf	??_ISR_high,w,c
  8173  0018C8  260D               	addwf	??_ISR_high+2,f,c
  8174  0018CA  500C               	movf	??_ISR_high+1,w,c
  8175  0018CC  220E               	addwfc	??_ISR_high+3,f,c
  8176  0018CE  500D               	movf	??_ISR_high+2,w,c
  8177  0018D0  26CE               	addwf	4046,f,c	;volatile
  8178  0018D2  500E               	movf	??_ISR_high+3,w,c
  8179  0018D4  22CF               	addwfc	4047,f,c	;volatile
  8180                           
  8181                           ;main.c: 606: TMR1IF = 0;
  8182  0018D6  909E               	bcf	3998,0,c	;volatile
  8183                           
  8184                           ;main.c: 608: time = (long) (time + 1) % (3600L * 24L);
  8185  0018D8  0E01               	movlw	1
  8186  0018DA  0100               	movlb	0	; () banked
  8187  0018DC  25D7               	addwf	_time& (0+255),w,b
  8188  0018DE  6E01               	movwf	___almod@dividend,c
  8189  0018E0  0E00               	movlw	0
  8190  0018E2  0100               	movlb	0	; () banked
  8191  0018E4  21D8               	addwfc	(_time+1)& (0+255),w,b
  8192  0018E6  6E02               	movwf	___almod@dividend+1,c
  8193  0018E8  0E00               	movlw	0
  8194  0018EA  0100               	movlb	0	; () banked
  8195  0018EC  21D9               	addwfc	(_time+2)& (0+255),w,b
  8196  0018EE  6E03               	movwf	___almod@dividend+2,c
  8197  0018F0  0E00               	movlw	0
  8198  0018F2  0100               	movlb	0	; () banked
  8199  0018F4  21DA               	addwfc	(_time+3)& (0+255),w,b
  8200  0018F6  6E04               	movwf	___almod@dividend+3,c
  8201  0018F8  0E80               	movlw	128
  8202  0018FA  6E05               	movwf	___almod@divisor,c
  8203  0018FC  0E51               	movlw	81
  8204  0018FE  6E06               	movwf	___almod@divisor+1,c
  8205  001900  0E01               	movlw	1
  8206  001902  6E07               	movwf	___almod@divisor+2,c
  8207  001904  0E00               	movlw	0
  8208  001906  6E08               	movwf	___almod@divisor+3,c
  8209  001908  ECD4  F00F         	call	___almod	;wreg free
  8210  00190C  C001  F0D7         	movff	?___almod,_time
  8211  001910  C002  F0D8         	movff	?___almod+1,_time+1
  8212  001914  C003  F0D9         	movff	?___almod+2,_time+2
  8213  001918  C004  F0DA         	movff	?___almod+3,_time+3
  8214                           
  8215                           ;main.c: 610: fan_timeout--;
  8216  00191C  0100               	movlb	0	; () banked
  8217  00191E  07D2               	decf	_fan_timeout& (0+255),f,b
  8218                           
  8219                           ; BSR set to: 0
  8220                           ;main.c: 612: ee_write_byte(time, EE_TIME_ADDR);
  8221  001920  0E00               	movlw	0
  8222  001922  6E01               	movwf	ee_write_byte@data,c
  8223  001924  0100               	movlb	0	; () banked
  8224  001926  51D7               	movf	_time& (0+255),w,b
  8225  001928  EC34  F012         	call	_ee_write_byte
  8226  00192C                     i2l432:
  8227  00192C  C01C  FFF5         	movff	??_ISR_high+17,tablat
  8228  001930  C01B  FFF8         	movff	??_ISR_high+16,tblptru
  8229  001934  C01A  FFF7         	movff	??_ISR_high+15,tblptrh
  8230  001938  C019  FFF6         	movff	??_ISR_high+14,tblptrl
  8231  00193C  C018  FFF4         	movff	??_ISR_high+13,prodh
  8232  001940  C017  FFF3         	movff	??_ISR_high+12,prodl
  8233  001944  C016  FFDA         	movff	??_ISR_high+11,fsr2h
  8234  001948  C015  FFD9         	movff	??_ISR_high+10,fsr2l
  8235  00194C  C014  FFE2         	movff	??_ISR_high+9,fsr1h
  8236  001950  C013  FFE1         	movff	??_ISR_high+8,fsr1l
  8237  001954  C012  FFEA         	movff	??_ISR_high+7,fsr0h
  8238  001958  C011  FFE9         	movff	??_ISR_high+6,fsr0l
  8239  00195C  C010  FFFB         	movff	??_ISR_high+5,pclatu
  8240  001960  C00F  FFFA         	movff	??_ISR_high+4,pclath
  8241  001964  923D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8242  001966  0011               	retfie		f
  8243  001968                     __end_of_ISR_high:
  8244                           	opt stack 0
  8245                           pclatu	equ	0xFFB
  8246                           pclath	equ	0xFFA
  8247                           tblptru	equ	0xFF8
  8248                           tblptrh	equ	0xFF7
  8249                           tblptrl	equ	0xFF6
  8250                           tablat	equ	0xFF5
  8251                           prodh	equ	0xFF4
  8252                           prodl	equ	0xFF3
  8253                           intcon	equ	0xFF2
  8254                           intcon2	equ	0xFF1
  8255                           postinc0	equ	0xFEE
  8256                           fsr0h	equ	0xFEA
  8257                           fsr0l	equ	0xFE9
  8258                           wreg	equ	0xFE8
  8259                           fsr1h	equ	0xFE2
  8260                           fsr1l	equ	0xFE1
  8261                           bsr	equ	0xFE0
  8262                           indf2	equ	0xFDF
  8263                           postinc2	equ	0xFDE
  8264                           postdec2	equ	0xFDD
  8265                           fsr2h	equ	0xFDA
  8266                           fsr2l	equ	0xFD9
  8267                           status	equ	0xFD8
  8268                           
  8269 ;; *************** function _ee_write_byte *****************
  8270 ;; Defined at:
  8271 ;;		line 514 in file "main.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  addr            1    wreg     unsigned char 
  8274 ;;  data            1    0[COMRAM] unsigned char 
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;  addr            1    1[COMRAM] unsigned char 
  8277 ;; Return value:  Size  Location     Type
  8278 ;;                  1    wreg      void 
  8279 ;; Registers used:
  8280 ;;		wreg, status,2
  8281 ;; Tracked objects:
  8282 ;;		On entry : 0/0
  8283 ;;		On exit  : 0/0
  8284 ;;		Unchanged: 0/0
  8285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8286 ;;      Params:         1       0       0       0       0       0       0       0       0
  8287 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8288 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8289 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8290 ;;Total ram usage:        2 bytes
  8291 ;; Hardware stack levels used:    1
  8292 ;; This function calls:
  8293 ;;		Nothing
  8294 ;; This function is called by:
  8295 ;;		_ISR_high
  8296 ;;		_ee_save_state
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           	psect	text40
  8301  002468                     __ptext40:
  8302                           	opt stack 0
  8303  002468                     _ee_write_byte:
  8304                           	opt stack 21
  8305                           
  8306                           ;incstack = 0
  8307                           ;ee_write_byte@addr stored from wreg
  8308  002468  6E02               	movwf	ee_write_byte@addr,c
  8309                           
  8310                           ;main.c: 517: WREN = 1;
  8311  00246A  84A6               	bsf	4006,2,c	;volatile
  8312                           
  8313                           ;main.c: 518: EEADR = addr;
  8314  00246C  C002  FFA9         	movff	ee_write_byte@addr,4009	;volatile
  8315                           
  8316                           ;main.c: 519: EEDATA = data;
  8317  002470  C001  FFA8         	movff	ee_write_byte@data,4008	;volatile
  8318                           
  8319                           ;main.c: 523: GIE = 0;
  8320  002474  9EF2               	bcf	intcon,7,c	;volatile
  8321                           
  8322                           ;main.c: 524: EECON2 = 0x55;
  8323  002476  0E55               	movlw	85
  8324  002478  6EA7               	movwf	4007,c	;volatile
  8325                           
  8326                           ;main.c: 525: EECON2 = 0xAA;
  8327  00247A  0EAA               	movlw	170
  8328  00247C  6EA7               	movwf	4007,c	;volatile
  8329                           
  8330                           ;main.c: 526: GIE = 1;
  8331  00247E  8EF2               	bsf	intcon,7,c	;volatile
  8332                           
  8333                           ;main.c: 528: WR = 1;
  8334  002480  82A6               	bsf	4006,1,c	;volatile
  8335  002482  0012               	return		;funcret
  8336  002484                     __end_of_ee_write_byte:
  8337                           	opt stack 0
  8338                           pclatu	equ	0xFFB
  8339                           pclath	equ	0xFFA
  8340                           tblptru	equ	0xFF8
  8341                           tblptrh	equ	0xFF7
  8342                           tblptrl	equ	0xFF6
  8343                           tablat	equ	0xFF5
  8344                           prodh	equ	0xFF4
  8345                           prodl	equ	0xFF3
  8346                           intcon	equ	0xFF2
  8347                           intcon2	equ	0xFF1
  8348                           postinc0	equ	0xFEE
  8349                           fsr0h	equ	0xFEA
  8350                           fsr0l	equ	0xFE9
  8351                           wreg	equ	0xFE8
  8352                           fsr1h	equ	0xFE2
  8353                           fsr1l	equ	0xFE1
  8354                           bsr	equ	0xFE0
  8355                           indf2	equ	0xFDF
  8356                           postinc2	equ	0xFDE
  8357                           postdec2	equ	0xFDD
  8358                           fsr2h	equ	0xFDA
  8359                           fsr2l	equ	0xFD9
  8360                           status	equ	0xFD8
  8361                           
  8362 ;; *************** function ___almod *****************
  8363 ;; Defined at:
  8364 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/almod.c"
  8365 ;; Parameters:    Size  Location     Type
  8366 ;;  dividend        4    0[COMRAM] long 
  8367 ;;  divisor         4    4[COMRAM] long 
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;  sign            1    9[COMRAM] unsigned char 
  8370 ;;  counter         1    8[COMRAM] unsigned char 
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  4    0[COMRAM] long 
  8373 ;; Registers used:
  8374 ;;		wreg, status,2, status,0
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8380 ;;      Params:         8       0       0       0       0       0       0       0       0
  8381 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8382 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8383 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8384 ;;Total ram usage:       10 bytes
  8385 ;; Hardware stack levels used:    1
  8386 ;; This function calls:
  8387 ;;		Nothing
  8388 ;; This function is called by:
  8389 ;;		_ISR_high
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           
  8393                           	psect	text41
  8394  001FA8                     __ptext41:
  8395                           	opt stack 0
  8396  001FA8                     ___almod:
  8397                           	opt stack 21
  8398                           
  8399                           ;incstack = 0
  8400  001FA8  0E00               	movlw	0
  8401  001FAA  6E0A               	movwf	___almod@sign,c
  8402  001FAC  AE04               	btfss	___almod@dividend+3,7,c
  8403  001FAE  D00A               	goto	i2l3037
  8404  001FB0  1E04               	comf	___almod@dividend+3,f,c
  8405  001FB2  1E03               	comf	___almod@dividend+2,f,c
  8406  001FB4  1E02               	comf	___almod@dividend+1,f,c
  8407  001FB6  6C01               	negf	___almod@dividend,c
  8408  001FB8  0E00               	movlw	0
  8409  001FBA  2202               	addwfc	___almod@dividend+1,f,c
  8410  001FBC  2203               	addwfc	___almod@dividend+2,f,c
  8411  001FBE  2204               	addwfc	___almod@dividend+3,f,c
  8412  001FC0  0E01               	movlw	1
  8413  001FC2  6E0A               	movwf	___almod@sign,c
  8414  001FC4                     i2l3037:
  8415  001FC4  AE08               	btfss	___almod@divisor+3,7,c
  8416  001FC6  D008               	goto	i2l3041
  8417  001FC8  1E08               	comf	___almod@divisor+3,f,c
  8418  001FCA  1E07               	comf	___almod@divisor+2,f,c
  8419  001FCC  1E06               	comf	___almod@divisor+1,f,c
  8420  001FCE  6C05               	negf	___almod@divisor,c
  8421  001FD0  0E00               	movlw	0
  8422  001FD2  2206               	addwfc	___almod@divisor+1,f,c
  8423  001FD4  2207               	addwfc	___almod@divisor+2,f,c
  8424  001FD6  2208               	addwfc	___almod@divisor+3,f,c
  8425  001FD8                     i2l3041:
  8426  001FD8  5005               	movf	___almod@divisor,w,c
  8427  001FDA  1006               	iorwf	___almod@divisor+1,w,c
  8428  001FDC  1007               	iorwf	___almod@divisor+2,w,c
  8429  001FDE  1008               	iorwf	___almod@divisor+3,w,c
  8430  001FE0  B4D8               	btfsc	status,2,c
  8431  001FE2  D024               	goto	i2l3057
  8432  001FE4  0E01               	movlw	1
  8433  001FE6  6E09               	movwf	___almod@counter,c
  8434  001FE8  D006               	goto	i2l3047
  8435  001FEA                     i2l3045:
  8436  001FEA  90D8               	bcf	status,0,c
  8437  001FEC  3605               	rlcf	___almod@divisor,f,c
  8438  001FEE  3606               	rlcf	___almod@divisor+1,f,c
  8439  001FF0  3607               	rlcf	___almod@divisor+2,f,c
  8440  001FF2  3608               	rlcf	___almod@divisor+3,f,c
  8441  001FF4  2A09               	incf	___almod@counter,f,c
  8442  001FF6                     i2l3047:
  8443  001FF6  AE08               	btfss	___almod@divisor+3,7,c
  8444  001FF8  D7F8               	goto	i2l3045
  8445  001FFA                     i2l3049:
  8446  001FFA  5005               	movf	___almod@divisor,w,c
  8447  001FFC  5C01               	subwf	___almod@dividend,w,c
  8448  001FFE  5006               	movf	___almod@divisor+1,w,c
  8449  002000  5802               	subwfb	___almod@dividend+1,w,c
  8450  002002  5007               	movf	___almod@divisor+2,w,c
  8451  002004  5803               	subwfb	___almod@dividend+2,w,c
  8452  002006  5008               	movf	___almod@divisor+3,w,c
  8453  002008  5804               	subwfb	___almod@dividend+3,w,c
  8454  00200A  A0D8               	btfss	status,0,c
  8455  00200C  D008               	goto	i2l3053
  8456  00200E  5005               	movf	___almod@divisor,w,c
  8457  002010  5E01               	subwf	___almod@dividend,f,c
  8458  002012  5006               	movf	___almod@divisor+1,w,c
  8459  002014  5A02               	subwfb	___almod@dividend+1,f,c
  8460  002016  5007               	movf	___almod@divisor+2,w,c
  8461  002018  5A03               	subwfb	___almod@dividend+2,f,c
  8462  00201A  5008               	movf	___almod@divisor+3,w,c
  8463  00201C  5A04               	subwfb	___almod@dividend+3,f,c
  8464  00201E                     i2l3053:
  8465  00201E  90D8               	bcf	status,0,c
  8466  002020  3208               	rrcf	___almod@divisor+3,f,c
  8467  002022  3207               	rrcf	___almod@divisor+2,f,c
  8468  002024  3206               	rrcf	___almod@divisor+1,f,c
  8469  002026  3205               	rrcf	___almod@divisor,f,c
  8470  002028  2E09               	decfsz	___almod@counter,f,c
  8471  00202A  D7E7               	goto	i2l3049
  8472  00202C                     i2l3057:
  8473  00202C  500A               	movf	___almod@sign,w,c
  8474  00202E  B4D8               	btfsc	status,2,c
  8475  002030  D008               	goto	i2l3061
  8476  002032  1E04               	comf	___almod@dividend+3,f,c
  8477  002034  1E03               	comf	___almod@dividend+2,f,c
  8478  002036  1E02               	comf	___almod@dividend+1,f,c
  8479  002038  6C01               	negf	___almod@dividend,c
  8480  00203A  0E00               	movlw	0
  8481  00203C  2202               	addwfc	___almod@dividend+1,f,c
  8482  00203E  2203               	addwfc	___almod@dividend+2,f,c
  8483  002040  2204               	addwfc	___almod@dividend+3,f,c
  8484  002042                     i2l3061:
  8485  002042  C001  F001         	movff	___almod@dividend,?___almod
  8486  002046  C002  F002         	movff	___almod@dividend+1,?___almod+1
  8487  00204A  C003  F003         	movff	___almod@dividend+2,?___almod+2
  8488  00204E  C004  F004         	movff	___almod@dividend+3,?___almod+3
  8489  002052  0012               	return	
  8490  002054                     __end_of___almod:
  8491                           	opt stack 0
  8492                           pclatu	equ	0xFFB
  8493                           pclath	equ	0xFFA
  8494                           tblptru	equ	0xFF8
  8495                           tblptrh	equ	0xFF7
  8496                           tblptrl	equ	0xFF6
  8497                           tablat	equ	0xFF5
  8498                           prodh	equ	0xFF4
  8499                           prodl	equ	0xFF3
  8500                           intcon	equ	0xFF2
  8501                           intcon2	equ	0xFF1
  8502                           postinc0	equ	0xFEE
  8503                           fsr0h	equ	0xFEA
  8504                           fsr0l	equ	0xFE9
  8505                           wreg	equ	0xFE8
  8506                           fsr1h	equ	0xFE2
  8507                           fsr1l	equ	0xFE1
  8508                           bsr	equ	0xFE0
  8509                           indf2	equ	0xFDF
  8510                           postinc2	equ	0xFDE
  8511                           postdec2	equ	0xFDD
  8512                           fsr2h	equ	0xFDA
  8513                           fsr2l	equ	0xFD9
  8514                           status	equ	0xFD8
  8515                           pclatu	equ	0xFFB
  8516                           pclath	equ	0xFFA
  8517                           tblptru	equ	0xFF8
  8518                           tblptrh	equ	0xFF7
  8519                           tblptrl	equ	0xFF6
  8520                           tablat	equ	0xFF5
  8521                           prodh	equ	0xFF4
  8522                           prodl	equ	0xFF3
  8523                           intcon	equ	0xFF2
  8524                           intcon2	equ	0xFF1
  8525                           postinc0	equ	0xFEE
  8526                           fsr0h	equ	0xFEA
  8527                           fsr0l	equ	0xFE9
  8528                           wreg	equ	0xFE8
  8529                           fsr1h	equ	0xFE2
  8530                           fsr1l	equ	0xFE1
  8531                           bsr	equ	0xFE0
  8532                           indf2	equ	0xFDF
  8533                           postinc2	equ	0xFDE
  8534                           postdec2	equ	0xFDD
  8535                           fsr2h	equ	0xFDA
  8536                           fsr2l	equ	0xFD9
  8537                           status	equ	0xFD8
  8538                           
  8539                           	psect	rparam
  8540  0000                     pclatu	equ	0xFFB
  8541                           pclath	equ	0xFFA
  8542                           tblptru	equ	0xFF8
  8543                           tblptrh	equ	0xFF7
  8544                           tblptrl	equ	0xFF6
  8545                           tablat	equ	0xFF5
  8546                           prodh	equ	0xFF4
  8547                           prodl	equ	0xFF3
  8548                           intcon	equ	0xFF2
  8549                           intcon2	equ	0xFF1
  8550                           postinc0	equ	0xFEE
  8551                           fsr0h	equ	0xFEA
  8552                           fsr0l	equ	0xFE9
  8553                           wreg	equ	0xFE8
  8554                           fsr1h	equ	0xFE2
  8555                           fsr1l	equ	0xFE1
  8556                           bsr	equ	0xFE0
  8557                           indf2	equ	0xFDF
  8558                           postinc2	equ	0xFDE
  8559                           postdec2	equ	0xFDD
  8560                           fsr2h	equ	0xFDA
  8561                           fsr2l	equ	0xFD9
  8562                           status	equ	0xFD8
  8563                           
  8564                           	psect	temp
  8565  00003D                     btemp:
  8566                           	opt stack 0
  8567  00003D                     	ds	1
  8568  0000                     int$flags	set	btemp
  8569                           pclatu	equ	0xFFB
  8570                           pclath	equ	0xFFA
  8571                           tblptru	equ	0xFF8
  8572                           tblptrh	equ	0xFF7
  8573                           tblptrl	equ	0xFF6
  8574                           tablat	equ	0xFF5
  8575                           prodh	equ	0xFF4
  8576                           prodl	equ	0xFF3
  8577                           intcon	equ	0xFF2
  8578                           intcon2	equ	0xFF1
  8579                           postinc0	equ	0xFEE
  8580                           fsr0h	equ	0xFEA
  8581                           fsr0l	equ	0xFE9
  8582                           wreg	equ	0xFE8
  8583                           fsr1h	equ	0xFE2
  8584                           fsr1l	equ	0xFE1
  8585                           bsr	equ	0xFE0
  8586                           indf2	equ	0xFDF
  8587                           postinc2	equ	0xFDE
  8588                           postdec2	equ	0xFDD
  8589                           fsr2h	equ	0xFDA
  8590                           fsr2l	equ	0xFD9
  8591                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    37
    Data        4
    BSS         18
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      60
    BANK0           160    104     126
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    cur_number	PTR unsigned char  size(2) Largest target is 1
		 -> temp_want(BANK0[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_low in COMRAM

    _ISR_low->i1___aldiv
    i1_set_digit->i1___awdiv
    i1_set_LEDs->i1___awdiv
    _sample_inputs->i1_set_key_led_disp_tris

Critical Paths under _ISR_high in COMRAM

    _ISR_high->___almod

Critical Paths under _main in BANK0

    _main->_get_temp
    _setup->_setup_timer1
    _get_temp->_log
    _log->_eval_poly
    _eval_poly->___ftmul
    ___ftmul->___ftadd
    ___ftadd->___awtoft
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    ___ftdiv->___ftmul
    _error->_set_LEDs
    _error->_set_digit
    _set_digit->___awdiv
    _set_LEDs->___awdiv
    _ee_read_state->_ee_read_byte
    ___ftge->___awtoft

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   41079
                                             99 BANK0      5     5      0
                            ___aldiv
                           ___awtoft
                             ___ftge
                      _ee_read_state
                              _error
                           _get_temp
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      23
                       _setup_eeprom
                           _setup_io
                        _setup_therm
                       _setup_timer0
                       _setup_timer1
                       _setup_timer2
                     _setup_watchdog
 ---------------------------------------------------------------------------------
 (2) _setup_watchdog                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_timer2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_timer1                                         4     4      0      23
                                             22 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _setup_timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_therm                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_io                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_eeprom                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            21    18      3   31858
                                             78 BANK0     21    18      3
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                           ___lwtoft
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  5     2      3   19041
                                             73 BANK0      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     352
                                             22 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           12     5      7    8241
                                             61 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     415
                                             22 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    3535
                                             46 BANK0     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    3921
                                             34 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2648
                                             30 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2195
                                             30 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                             22 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2875
                                             61 BANK0     15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2109
                                             22 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _error                                                3     3      0    4471
                                             31 BANK0      3     3      0
                        _num_to_disp
                           _set_LEDs
                          _set_digit
              _set_key_led_disp_tris
 ---------------------------------------------------------------------------------
 (2) _set_digit                                            1     1      0    2013
                                             30 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _set_LEDs                                             1     1      0    2144
                                             30 BANK0      1     1      0
                            ___awdiv
              _set_key_led_disp_tris
 ---------------------------------------------------------------------------------
 (2) _set_key_led_disp_tris                                1     1      0     154
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1836
                                             22 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _num_to_disp                                          2     2      0      69
                                             22 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ee_read_state                                       12    12      0     187
                                             23 BANK0     12    12      0
                       _ee_read_byte
 ---------------------------------------------------------------------------------
 (2) _ee_read_byte                                         1     1      0      22
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6    1032
                                             34 BANK0      9     3      6
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     860
                                             22 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_low                                             72    72      0    4150
                                             44 COMRAM    10    10      0
                                              0 BANK0     22    22      0
                             _buzzer
                      _sample_inputs
                          i1___aldiv
                         i1_set_LEDs
                        i1_set_digit
 ---------------------------------------------------------------------------------
 (7) i1_set_digit                                          1     1      0    1101
                                             38 COMRAM     1     1      0
                          i1___awdiv
 ---------------------------------------------------------------------------------
 (7) i1_set_LEDs                                           1     1      0    1232
                                             38 COMRAM     1     1      0
                          i1___awdiv
            i1_set_key_led_disp_tris
 ---------------------------------------------------------------------------------
 (8) i1___awdiv                                            8     4      4     924
                                             30 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) i1___aldiv                                           14     6      8     508
                                             30 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (7) _sample_inputs                                        1     1      0     183
                                             31 COMRAM     1     1      0
            i1_set_key_led_disp_tris
 ---------------------------------------------------------------------------------
 (8) i1_set_key_led_disp_tris                              1     1      0     154
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _buzzer                                               1     1      0      22
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_high                                            20    20      0    1003
                                             10 COMRAM    20    20      0
                            ___almod
                      _ee_write_byte
 ---------------------------------------------------------------------------------
 (10) _ee_write_byte                                       2     1      1     556
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (10) ___almod                                            10     2      8     424
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
   ___awtoft
     ___ftpack
   ___ftge
     ___awtoft (ARG)
       ___ftpack
   _ee_read_state
     _ee_read_byte
   _error
     _num_to_disp
     _set_LEDs
       ___awdiv
       _set_key_led_disp_tris
     _set_digit
       ___awdiv
     _set_key_led_disp_tris
   _get_temp
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _frexp (ARG)
     ___ftneg
     ___lwtoft
       ___ftpack
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___wmul
       _frexp
   _setup
     _setup_eeprom
     _setup_io
     _setup_therm
     _setup_timer0
     _setup_timer1
     _setup_timer2
     _setup_watchdog

 _ISR_low (ROOT)
   _buzzer
   _sample_inputs
     i1_set_key_led_disp_tris
   i1___aldiv
   i1_set_LEDs
     i1___awdiv
     i1_set_key_led_disp_tris
   i1_set_digit
     i1___awdiv

 _ISR_high (ROOT)
   ___almod
   _ee_write_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     68      7E       5       78.8%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     36      3C       1       63.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BA      20        0.0%
DATA                 0      0      BA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Oct 24 08:24:42 2016

                              _GO 007E11                                _RD 007D30  
                              _WR 007D31                      ___awdiv@sign 007B  
                              bsr 000FE0               ___wmul@multiplicand 0078  
                    ___ftadd@exp1 008D                      ___ftadd@exp2 008C  
                    ___ftadd@sign 008B                               l400 1598  
                             l321 0AB4                               l410 1608  
                             l402 15A0                               l322 0AC0  
                             l412 1634                               l404 15CC  
                             l325 0AC4                               l414 163C  
                             l406 15D4                               l327 0AF6  
                             l416 1660                               l408 1600  
                             l418 1668                               l372 0D64  
                             l297 0830                               l732 152E  
                             l812 23CC                               l761 0BC4  
                             l770 0C9A                               l755 0B62  
                             l790 1306                               l759 0B9C  
                             l779 0CC4                               _GIE 007F97  
                             _PR2 000FCB                               _PSA 007EAB  
                             _log 10A0                               wreg 000FE8  
            __end_of_ee_read_byte 24D2                    i1___aldiv@sign 0028  
                    ___ftdiv@cntr 00A6                      ___ftdiv@sign 00AB  
                    __CFG_WDT$OFF 000000                              l3005 13AC  
                            l3021 1428                              l3007 13BC  
                            l3025 1444                              l3017 1416  
                            l3009 13C2                              l2411 0B70  
                            l2423 0BBA                              l2503 1022  
                            l3073 1D34                              l2441 0C38  
                            l2433 0BFC                              l2417 0BAA  
                            l2513 1060                              l2601 19B2  
                            l2531 1E58                              l2371 1492  
                            l2451 0C80                              l2443 0C46  
                            l2603 1A3A                              l3069 1CF4  
                            l2701 1788                              l2381 1520  
                            l2373 14C2                              l2365 1470  
                            l2453 0C8E                              l2445 0C52  
                            l2509 1042                              l3501 097A  
                            l3079 1D78                              l2543 1E8C  
                            l2711 1846                              l2703 17AE  
                            l2439 0C2A                              l3511 09CC  
                            l2545 1E98                              l2537 1E6E  
                            l2705 17D4                              l2393 1554  
                            l2377 14E2                              l2369 1484  
                            l3505 0988                              l2563 1EF0  
                            l2555 1ECE                              l2547 1E9E  
                            l2707 17FA                              l2387 1538  
                            l2379 1512                              l2459 0CEE  
                            l3523 0A48                              l2709 1820  
                            l2469 0D3C                              l2485 0FB6  
                            l2725 10F2                              l3541 0ACC  
                            l2663 20DE                              l2671 2104  
                            l2559 1EDC                              l2575 22DA  
                            l2479 0F7C                              l2719 10C4  
                            l3543 0AD4                              l2665 20F8  
                            l2673 2152                              l2681 167E  
                            l2921 1DA8                              l3545 0AEA  
                            l2667 20FC                              l2691 1722  
                            l2683 168A                              l2931 1DC8  
                            l2755 1264                              l2499 1004  
                            l2587 1F2E                              l3539 0AC8  
                            l3491 0872                              l2693 1748  
                            l2685 16B0                              l2749 122A  
                            l2687 16D6                              l2943 1E26  
                            l2775 12C4                              l2689 16FC  
                            l2937 1DFC                              l2993 1360  
                            ?_log 00A9                              l2999 137E  
                            _ADIE 007CEE                              _ADIF 007CF6  
                            _ADIP 007CFE                              _ADON 007E10  
                            _CHS0 007E12                              _CHS1 007E13  
                            _CHS2 007E14                              _CHS3 007E15  
                            _CFGS 007D36                              _EEIE 007D04  
                            _EEIF 007D0C                              _EEIP 007D14  
                            _GIEH 007F97                              _GIEL 007F96  
                            _T0IE 007F95                              _T0IF 007F92  
                            _T0CS 007EAD                              _T0IP 007F8A  
                            _FREE 007D34                              u3000 16FA  
                            u3100 17AC                              u3020 1720  
                            u3200 186A                              u3120 17D2  
                            u3040 1746                              u3140 17F8  
                            u3060 176C                              u2421 0B10  
                            u2431 0B2E                              u3160 181E  
                            u3080 1786                              u3241 1206  
                            u3180 1844                              u3261 1240  
                            u2710 21E2                              u2631 0F58  
                            _IPEN 007E87                              u2705 21D8  
                            u2810 221E                              u2730 21EE  
                            u2651 0F92                              u2805 2214  
                            u2725 21E4                              u2750 21FA  
                            u2910 1F60                              u2745 21F0  
                            u2770 2206                              u2690 21D6  
                            u2940 1688                              u2765 21FC  
                            u2790 2212                              u2918 1F64  
                            u2960 16AE                              u2785 2208  
                            u2980 16D4                              _SCS0 007E98  
                            _SCS1 007E99                              _TMR0 000FD6  
                            _TMR1 000FCE                              _TMR2 000FCC  
                            _WREN 007D32                   __end_of_ISR_low 03F6  
                      i1_set_LEDs 1BEA                              _disp 00CB  
                            _main 0828                              _font 0801  
                    ___ftpack@arg 0076                              _buzz 003A  
                    ___ftpack@exp 0079                              _time 00D7  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              _unit 01BB  
                            btemp 003D                              log@x 00A9  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 03F6  
       ??i1_set_key_led_disp_tris 001F                     __CFG_MCLRE$ON 000000  
                    ___ftmul@cntr 009B                      ___param_bank 000010  
                    ___ftmul@sign 009C             __end_of_ee_read_state 166E  
                           ??_log 00AC             _set_key_led_disp_tris 21C8  
                 __end_of___aldiv 1456                   __end_of___almod 2054  
                           _ADCS0 007E00                             _ADCS1 007E01  
                           _ADCS2 007E02                             ?_main 0001  
                  i1___awdiv@sign 0024                      get_temp@temp 00B1  
                           _ACQT0 007E03                             _ACQT1 007E04  
                           _ACQT2 007E05                   __end_of___awdiv 1EFA  
                           _ADRES 000FC3                             _EEADR 000FA9  
                 __end_of___ftadd 0D62                   __end_of___ftdiv 133C  
                           _EEPGD 007D37                   __end_of___ftneg 23DA  
                 __end_of___ftmul 10A0                   ___awdiv@divisor 0078  
                           _LATB0 007C50                             _LATA2 007C4A  
                           _LATB1 007C51                             _LATA3 007C4B  
                           _LATC0 007C58                             _LATB2 007C52  
                           _LATA4 007C4C                             _LATC1 007C59  
                           _LATB3 007C53                             _LATA5 007C4D  
                           _LATC2 007C5A                             _LATB4 007C54  
                           _LATA6 007C4E                             _LATB5 007C55  
                           _T0PS0 007EA8                             _T0PS1 007EA9  
                           _T0PS2 007EAA                             _IRCF0 007E9C  
                           _IRCF1 007E9D                             _IRCF2 007E9E  
                  __CFG_DEBUG$OFF 000000                             _PCFG0 007E08  
                           _PCFG1 007E09                             _PCFG2 007E0A  
                           _PCFG3 007E0B                             _T1RUN 007E6E  
                           i1l435 007E                             i1l460 0162  
                           i1l452 00D2                             i1l436 007A  
                           i1l445 0098                             i1l438 03AE  
                           i1l439 03A4                             i1l448 00AE  
                           i1l478 036C                             i1l479 037A  
                           i2l432 192C                   ___awdiv@counter 007A  
                           _WRERR 007D33                     __CFG_PWRT$OFF 000000  
                           _nRBPU 007F8F                  __end_of_ISR_high 1968  
                   ___awtoft@sign 0081                             _blink 00CF  
                           _frexp 1EFA                             _errno 00CD  
                           _error 1D7C                     ___ftpack@sign 007A  
                           _timer 01BA                             _setup 237A  
                           _state 00D6                    __pbitbssCOMRAM 01B8  
                           tablat 000FF5                       i1_set_digit 1B20  
                           status 000FD8                __size_ofi1___aldiv 00CC  
              __size_ofi1___awdiv 0084                    __CFG_PBADEN$ON 000000  
                 __initialization 2222                       log@exponent 00AC  
                    __end_of_main 0AFA                      __end_of_font 080B  
           __end_of_sample_inputs 21C8                            ??_main 00C3  
                   __activetblptr 000002                         ??_ISR_low 0060  
                 _climate_control 00DC                            ?_frexp 0076  
                          ?_error 0001                    buzzer@duration 001F  
                          _EEDATA 000FA8                            _EECON2 000FA7  
                          _T08BIT 007EAE                  ___awdiv@dividend 0076  
                          ?_setup 0001                  __end_of___awtoft 2302  
                __end_of___ftpack 1562                            _T1RD16 007E6F  
                          i1l3111 1B70                            i1l3113 1B8E  
                          i1l3105 1B2A                            i1l3115 1BAC  
                          i1l3107 1B34                            i1l3141 1AB6  
                          i1l3133 1A88                            i1l3117 1BCA  
                          i1l3109 1B52                            i1l3151 1AEA  
                          i1l3143 1ABA                            i1l3127 1A70  
                          i1l2343 028A                            i1l3311 0156  
                          i1l3139 1AAA                            i1l3155 1AF8  
                          i1l3091 1C1C                            i1l3323 0182  
                          i1l3307 010C                            i1l3093 1C3A  
                          i1l3341 027A                            i1l3317 016E  
                          i1l3309 0148                            i1l3159 1B0E  
                          i1l3095 1C58                            i1l3351 0346  
                          i1l3327 01A6                            i1l3097 1C76  
                          i1l3089 1BFE                            i1l3329 01AE  
                          i1l3099 1C94                            i1l3355 0356  
                          i1l3339 0272                            i1l3283 00BA  
                          i1l2821 2096                            i1l2813 2078  
                          i1l3357 035A                            i1l3285 00C6  
                          i1l2831 20B6                            i1l2823 209A  
                          i1l2807 2068                            i1l3287 00DE  
                          i1l3367 0388                            i1l2819 208E  
                          i1l2835 20C0                            i1l3299 00FC  
                          i1l2839 20CE                            i2l3041 1FD8  
                          i2l3061 2042                            i2l3053 201E  
                          i2l3045 1FEA                            i2l3037 1FC4  
                          i2l3047 1FF6                            i2l3049 1FFA  
                          i2l3057 202C                            _INTSRC 007CDF  
                __end_of___lwtoft 2404                       ?i1_set_LEDs 0001  
                          _TMR0IE 007F95                            _TMR0IF 007F92  
                          _TMR1IE 007CE8                            _TMR1IF 007CF0  
                          _TMR1CS 007E69                            _TMR2IE 007CE9  
                          _TMR2IF 007CF1                            _TMR1IP 007CF8  
                          _TMR2IP 007CF9                            _TMR0ON 007EAF  
                          _TMR1ON 007E68                            _TMR2ON 007E52  
                          _TRISA0 007C90                            _TRISB0 007C98  
                          _TRISA2 007C92                            _TRISB1 007C99  
                          _TRISA3 007C93                            _TRISC0 007CA0  
                          _TRISB2 007C9A                            _TRISA4 007C94  
                          _TRISC1 007CA1                            _TRISB3 007C9B  
                          _TRISA5 007C95                            _TRISC2 007CA2  
                          _TRISB4 007C9C                            _TRISA6 007C96  
                          _TRISB5 007C9D                            _SWDTEN 007E88  
           __end_of_ee_write_byte 2484                  __end_of_get_temp 0F42  
                          ___ftge 1CB4                         ??___aldiv 007E  
          ?_set_key_led_disp_tris 0001                         ??___almod 0009  
                          ___wmul 2344                         ??___awdiv 007A  
                       ??___ftadd 0088                         ??___ftdiv 00A3  
                       ??___ftneg 0079                         ??___ftmul 0094  
                          _buzzer 249E                            clear_0 2258  
                ___awdiv@quotient 007C                  __end_of_set_LEDs 186E  
           __size_of_ee_read_byte 000E                 __end_ofi1___aldiv 1B20  
           ___ftmul@f3_as_product 0098                 __end_ofi1___awdiv 20D8  
                          error@i 0080                      __pdataCOMRAM 003B  
                    ?_num_to_disp 0001                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                __end_of_setup_io 249E                            tblptru 000FF8  
                ??_setup_watchdog 0076                      ?_setup_therm 0001  
                __end_oflog@coeff 0826                        __accesstop 0060  
         __end_of__initialization 2266                        ___ftadd@f1 0082  
                      ___ftadd@f2 0085                        ___ftge@ff1 0082  
                      ___ftge@ff2 0085                      eval_poly@res 00A6  
                   ___rparam_used 000001                        ___ftdiv@f1 009D  
                      ___ftdiv@f2 00A0                        ___ftdiv@f3 00A7  
                      ___ftneg@f1 0076                        ___awtoft@c 007E  
                      ___ftmul@f1 008E                        ___ftmul@f2 0091  
                  __pcstackCOMRAM 0001                      _ee_read_byte 24C4  
                    __pidataBANK0 24DA                         ?_ISR_high 0001  
                   __end_of_frexp 1FA8                     __end_of_error 1E3C  
                   __end_of_setup 23AA                        ___lwtoft@c 007E  
             __size_ofi1_set_LEDs 00CA                           ??_frexp 007B  
                         ??_error 007F                 i1___aldiv@divisor 0023  
                         ??_setup 007A                 i1___aldiv@counter 0027  
                      __pbssBANK0 00C8                __size_of_eval_poly 00EC  
                         ?___ftge 0082                           ?___wmul 0076  
                      ??_ISR_high 000B                           ?_buzzer 0001  
                       ?___awtoft 007E                         ?___ftpack 0076  
              __size_of_set_digit 0102                           _T1CKPS0 007E6C  
                         _T1CKPS1 007E6D                           _T2CKPS0 007E50  
                         _T2CKPS1 007E51                         ?___lwtoft 007E  
              i1___awdiv@dividend 001F          set_key_led_disp_tris@dir 0076  
                         _ISR_low 0018                         ?_get_temp 00AE  
                    ?i1_set_digit 0001                         ?_set_LEDs 0001  
                         __Hparam 0000                           __Lparam 0000  
              i1___awdiv@quotient 0025                        _cur_number 003B  
                         ___aldiv 133C                         ?_setup_io 0001  
                         ___almod 1FA8                   __size_of___ftge 00C8  
                         ___awdiv 1E3C                           ___ftadd 0AFA  
                         ___ftdiv 11F0                           ___ftneg 23AA  
                 __size_of___wmul 0036                           ___ftmul 0F42  
                     ISR_high@tmp 001D                      __psmallconst 0800  
                         __pcinit 2222                        ??___awtoft 0081  
                      ??___ftpack 007B                 __end_of_eval_poly 1A54  
      i1set_key_led_disp_tris@dir 001F                   __size_of_buzzer 0014  
                         __ramtop 0800                           __ptext0 0828  
                         __ptext1 237A                           __ptext2 24D2  
                         __ptext3 242C                           __ptext4 2302  
                         __ptext5 244A                           __ptext6 2404  
                         __ptext7 2484                           __ptext8 24B2  
                         __ptext9 0D62                        ??___lwtoft 0081  
                      _night_hour 00D4                      __size_of_log 0150  
                      _night_temp 00D5                  ___aldiv@dividend 0076  
            __size_of_num_to_disp 0080                        ??_get_temp 00B1  
                  __pintcode_body 186E              end_of_initialization 2266  
          __size_of_ee_read_state 010C          ?i1_set_key_led_disp_tris 0001  
                    ??i1_set_LEDs 0027                 __end_of_set_digit 1770  
                   __Lmediumconst 0000                           int_func 186E  
            __size_of_setup_therm 0028                        ??_set_LEDs 007E  
         ??_set_key_led_disp_tris 0076                      _get_temp$970 00B7  
                    _get_temp$971 00BA                      _get_temp$969 00B4  
                ___aldiv@quotient 0080                           postdec2 000FDD  
                      ??_setup_io 0076                           postinc0 000FEE  
                         postinc2 000FDE                         _PORTBbits 000F81  
                   ?_setup_eeprom 0001                __end_ofi1_set_LEDs 1CB4  
                   ?_setup_timer0 0001                     ?_setup_timer1 0001  
                   ?_setup_timer2 0001                         i1___aldiv 1A54  
                       i1___awdiv 2054            __size_of_sample_inputs 0070  
                     ___ftdiv@exp 00AA                get_temp@resistance 00C0  
                     ___ftmul@exp 0097                   setup_timer1@tmp 0078  
                  __end_of___ftge 1D7C                     _ee_read_state 1562  
                  __end_of___wmul 237A                     __pidataCOMRAM 24D8  
               __size_of_ISR_high 1960                    ??_setup_eeprom 0076  
                  __end_of_buzzer 24B2                    ??_setup_timer0 0076  
                  ??_setup_timer1 0076                    ??_setup_timer2 0076  
             start_initialization 2222                        eval_poly@d 00A0  
                      eval_poly@n 00A2                        eval_poly@x 009D  
 __end_ofi1_set_key_led_disp_tris 22BE                        ?i1___aldiv 001F  
                     __end_of_log 11F0                        ?i1___awdiv 001F  
          __size_of_ee_write_byte 001C                        frexp@value 0076  
            __size_ofi1_set_digit 00CA                          ??___ftge 0088  
                        ??___wmul 007A                    ?_ee_read_state 0001  
                     __pdataBANK0 00DC                  __CFG_LPT1OSC$OFF 000000  
              i1___aldiv@dividend 001F                          ??_buzzer 001F  
                   _sample_inputs 2158                      set_LEDs@mask 007E  
               __size_of___awtoft 0044                 __size_of___ftpack 010C  
                     __pbssCOMRAM 0038                 __size_of___lwtoft 002A  
                   __pcstackBANK0 0060                          ?_ISR_low 0001  
                ISR_low@mask_leds 002F                 __size_of_get_temp 01E0  
              i1___aldiv@quotient 0029                         __pnvBANK0 00D7  
                     _fan_timeout 00D2                 __size_of_set_LEDs 00FE  
                       __pintcode 0008           __size_of_setup_watchdog 0006  
                        ?___aldiv 0076                     _ee_write_byte 2468  
                        ?___almod 0001                          ?___awdiv 0076  
                        ?___ftadd 0082                          ?___ftdiv 009D  
                        ?___ftneg 0076                          ?___ftmul 008E  
                       _heat_mode 00DD                    ?_sample_inputs 0001  
                        ISR_low@i 0032                 i1___awdiv@divisor 0021  
                     __pintcodelo 0018                 __size_of_setup_io 001A  
               i1___awdiv@counter 0023                  ___almod@dividend 0001  
                     __smallconst 0800                 _ee_read_state$340 0080  
               _ee_read_state$335 0078                 _ee_read_state$336 007A  
               _ee_read_state$337 007C                 _ee_read_state$339 007E  
                  i1set_LEDs@mask 0027                         _eval_poly 1968  
                 get_temp@voltage 00BD                       ??i1___aldiv 0027  
                     ??i1___awdiv 0023                    __size_of_frexp 00AE  
                  __size_of_error 00C0                    __size_of_setup 0030  
                      ISR_low@cur 0038                        ISR_low@ins 0031  
                 ___aldiv@divisor 007A                          _T2OUTPS0 007E53  
                        _T2OUTPS1 007E54                          _T2OUTPS2 007E55  
                        _T2OUTPS3 007E56                   ___aldiv@counter 007E  
                  ___wmul@product 007A              __end_of_setup_eeprom 24C4  
               ee_read_state@mode 0082                          i1u401_20 1B6E  
                        i1u330_20 227E                          i1u403_20 1B8C  
                        i1u331_25 2280                          i1u340_20 22B0  
                        i1u332_20 2288                          i1u405_20 1BAA  
                        i1u341_25 22B2                          i1u333_25 228A  
                        i1u342_20 22BA                          i1u334_20 2292  
                        i1u407_20 1BC8                          i1u335_25 2294  
                        i1u336_20 229C                          i1u360_20 217A  
                        i1u360_26 217C                          i1u361_20 218A  
                        i1u409_20 1BE6                          i1u337_25 229E  
                        i1u361_26 218C                          i1u338_20 22A6  
                        i1u362_20 219A                          i1u362_26 219C  
                        i1u363_20 21AA                          i1u339_25 22A8  
                        i1u363_26 21AC                          i1u364_20 21BA  
                        i1u444_20 00B6                          i1u364_26 21BC  
                        i1u365_20 24AE                          i1u390_20 1C74  
                        i1u382_20 1BFC                          i1u446_20 00DA  
                        i1u359_20 216A                          i1u359_26 216C  
                        i1u392_20 1C92                          i1u384_20 1C1A  
            __end_of_setup_timer0 2468              __end_of_setup_timer1 2344  
            __end_of_setup_timer2 244A                          i1u394_20 1CB0  
                        i1u386_20 1C38                          i1u388_20 1C56  
                        i1u397_20 1B32                         _set_digit 166E  
                        i1u399_20 1B50                   ??_ee_read_state 0077  
  __size_of_set_key_led_disp_tris 005A                    ?_ee_write_byte 0001  
   __end_of_set_key_led_disp_tris 2222                  __CFG_WDTPS$32768 000000  
                       _temp_want 00DB                          _ISR_high 0008  
__size_ofi1_set_key_led_disp_tris 004A                         _timer_led 01B9  
                       _power_led 01B8                 ___wmul@multiplier 0076  
                      ?_eval_poly 009D                     ??_num_to_disp 0076  
                __size_of_ISR_low 03DE                     ??_setup_therm 0076  
                       frexp@eptr 0079                          __Hrparam 0000  
                      ?_set_digit 0001                         error@code 007F  
                        __Lrparam 0000                     ?_ee_read_byte 0001  
                 ??_sample_inputs 0020                  ee_read_byte@addr 0076  
                __size_of___aldiv 011A                  __size_of___almod 00AC  
                __size_of___awdiv 00BE                  __size_of___ftadd 0268  
                __size_of___ftdiv 014C                  __size_of___ftneg 0030  
                __size_of___ftmul 015E                          ___awtoft 22BE  
                        ___ftpack 1456             __CFG_FOSC$INTOSCIO_EC 000000  
                        ___lwtoft 23DA                   ISR_low@ins_prev 0039  
               ee_write_byte@addr 0002                 ee_write_byte@data 0001  
                        _day_hour 00D0                          _day_temp 00D1  
                    set_digit@dig 007E                          __ptext10 10A0  
                        __ptext11 1EFA                          __ptext20 1456  
                        __ptext12 1968                          __ptext21 1D7C  
                        __ptext13 2344                          __ptext30 133C  
                        __ptext22 166E                          __ptext14 0F42  
                        __ptext23 1770                          __ptext15 0AFA  
                        __ptext40 2468                          __ptext32 1B20  
                        __ptext24 21C8                          __ptext16 22BE  
                        __ptext41 1FA8                          __ptext33 1BEA  
                        __ptext25 1E3C                          __ptext17 23DA  
                        __ptext34 2054                          __ptext26 20D8  
                        __ptext18 23AA                          __ptext35 1A54  
                        __ptext27 1562                          __ptext19 11F0  
                        __ptext36 2158                          __ptext28 24C4  
                        __ptext37 2274                          __ptext29 1CB4  
                        __ptext38 249E                          _heat_cur 00D3  
                        _get_temp 0D62                   ___almod@divisor 0005  
                 ___almod@counter 0009               __end_of_num_to_disp 2158  
                   __size_of_main 02D2                          _set_LEDs 1770  
                 ??_ee_write_byte 0002                    ??_ee_read_byte 0076  
             __end_of_setup_therm 242C                          _temp_cur 00C8  
                  _setup_watchdog 24D2                          _setup_io 2484  
                        int$flags 003D                          log@coeff 080B  
                     ??_eval_poly 00A4                    i1set_digit@dig 0027  
           __size_of_setup_eeprom 0012                          intlevel1 0000  
                        intlevel2 0000                     ??i1_set_digit 0027  
           __size_of_setup_timer0 001E             __size_of_setup_timer1 0042  
           __size_of_setup_timer2 001E                       _ISR_low$354 0033  
                     _ISR_low$355 0035                       _ISR_low$356 002D  
                     _ISR_low$357 0030            __end_of_setup_watchdog 24D8  
                     ??_set_digit 007E           i1_set_key_led_disp_tris 2274  
                    _setup_eeprom 24B2                       _num_to_disp 20D8  
                    ___aldiv@sign 007F                      _setup_timer0 244A  
                    _setup_timer1 2302                      _setup_timer2 242C  
                  num_to_disp@ret 0076                    num_to_disp@num 0077  
                    ___almod@sign 000A                       _setup_therm 2404  
                sample_inputs@ret 0020                   ?_setup_watchdog 0001  
             __end_ofi1_set_digit 1BEA  
