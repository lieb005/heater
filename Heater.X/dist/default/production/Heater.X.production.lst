

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Oct 11 02:16:02 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataBANK0
    42  0010C8                     __pidataBANK0:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _cur_number
    46  0010C8  96                 	db	low _temp_want
    47  0010C9  00                 	db	high _temp_want
    48                           
    49                           	psect	smallconst
    50  000800                     __psmallconst:
    51                           	opt stack 0
    52  000800  00                 	db	0
    53  000801                     _font:
    54                           	opt stack 0
    55  000801  3F                 	db	63
    56  000802  06                 	db	6
    57  000803  5B                 	db	91
    58  000804  4F                 	db	79
    59  000805  66                 	db	102
    60  000806  6D                 	db	109
    61  000807  7D                 	db	125
    62  000808  07                 	db	7
    63  000809  7F                 	db	127
    64  00080A  67                 	db	103
    65  00080B                     __end_of_font:
    66                           	opt stack 0
    67  0000                     _ADRES	set	4035
    68  0000                     _TMR0	set	4054
    69  0000                     _TMR1	set	4046
    70  0000                     _LATB	set	3978
    71  0000                     _PORTB	set	3969
    72  0000                     _PR2	set	4043
    73  0000                     _TMR2	set	4044
    74  0000                     _TRISB	set	3987
    75  0000                     _ACQT0	set	32259
    76  0000                     _ACQT1	set	32260
    77  0000                     _ACQT2	set	32261
    78  0000                     _ADCS0	set	32256
    79  0000                     _ADCS1	set	32257
    80  0000                     _ADCS2	set	32258
    81  0000                     _ADIE	set	31982
    82  0000                     _ADIF	set	31990
    83  0000                     _ADIP	set	31998
    84  0000                     _ADON	set	32272
    85  0000                     _CHS0	set	32274
    86  0000                     _CHS1	set	32275
    87  0000                     _CHS2	set	32276
    88  0000                     _CHS3	set	32277
    89  0000                     _GIEH	set	32663
    90  0000                     _GIEL	set	32662
    91  0000                     _GO	set	32273
    92  0000                     _INTSRC	set	31967
    93  0000                     _IPEN	set	32391
    94  0000                     _IRCF0	set	32412
    95  0000                     _IRCF1	set	32413
    96  0000                     _IRCF2	set	32414
    97  0000                     _LATA3	set	31819
    98  0000                     _LATA4	set	31820
    99  0000                     _LATA5	set	31821
   100  0000                     _LATB0	set	31824
   101  0000                     _LATB1	set	31825
   102  0000                     _LATB2	set	31826
   103  0000                     _LATB3	set	31827
   104  0000                     _LATB4	set	31828
   105  0000                     _LATB5	set	31829
   106  0000                     _LATB6	set	31830
   107  0000                     _LATC0	set	31832
   108  0000                     _LATC1	set	31833
   109  0000                     _PCFG0	set	32264
   110  0000                     _PCFG1	set	32265
   111  0000                     _PCFG2	set	32266
   112  0000                     _PCFG3	set	32267
   113  0000                     _PSA	set	32427
   114  0000                     _SCS0	set	32408
   115  0000                     _SCS1	set	32409
   116  0000                     _T08BIT	set	32430
   117  0000                     _T0CS	set	32429
   118  0000                     _T0IE	set	32661
   119  0000                     _T0IF	set	32658
   120  0000                     _T0IP	set	32650
   121  0000                     _T0PS0	set	32424
   122  0000                     _T0PS1	set	32425
   123  0000                     _T0PS2	set	32426
   124  0000                     _T1CKPS0	set	32364
   125  0000                     _T1CKPS1	set	32365
   126  0000                     _T1RD16	set	32367
   127  0000                     _T1RUN	set	32366
   128  0000                     _T2CKPS0	set	32336
   129  0000                     _T2CKPS1	set	32337
   130  0000                     _T2OUTPS0	set	32339
   131  0000                     _T2OUTPS1	set	32340
   132  0000                     _T2OUTPS2	set	32341
   133  0000                     _T2OUTPS3	set	32342
   134  0000                     _TMR0IE	set	32661
   135  0000                     _TMR0IF	set	32658
   136  0000                     _TMR0ON	set	32431
   137  0000                     _TMR1CS	set	32361
   138  0000                     _TMR1IE	set	31976
   139  0000                     _TMR1IF	set	31984
   140  0000                     _TMR1IP	set	31992
   141  0000                     _TMR1ON	set	32360
   142  0000                     _TMR2IE	set	31977
   143  0000                     _TMR2IF	set	31985
   144  0000                     _TMR2IP	set	31993
   145  0000                     _TMR2ON	set	32338
   146  0000                     _TRISA0	set	31888
   147  0000                     _TRISA2	set	31890
   148  0000                     _TRISA3	set	31891
   149  0000                     _TRISA4	set	31892
   150  0000                     _TRISA5	set	31893
   151  0000                     _nRBPU	set	32655
   152                           
   153                           ; #config settings
   154  00080B  00                 	db	0	; dummy byte at the end
   155  0000                     
   156                           	psect	cinit
   157  000F58                     __pcinit:
   158                           	opt stack 0
   159  000F58                     start_initialization:
   160                           	opt stack 0
   161  000F58                     __initialization:
   162                           	opt stack 0
   163                           
   164                           ; Initialize objects allocated to BANK0 (2 bytes)
   165                           ; load TBLPTR registers with __pidataBANK0
   166  000F58  0EC8               	movlw	low __pidataBANK0
   167  000F5A  6EF6               	movwf	tblptrl,c
   168  000F5C  0E10               	movlw	high __pidataBANK0
   169  000F5E  6EF7               	movwf	tblptrh,c
   170  000F60  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   171  000F62  6EF8               	movwf	tblptru,c
   172  000F64  0009               	tblrd		*+	;fetch initializer
   173  000F66  CFF5 F097          	movff	tablat,__pdataBANK0
   174  000F6A  0009               	tblrd		*+	;fetch initializer
   175  000F6C  CFF5 F098          	movff	tablat,__pdataBANK0+1
   176                           
   177                           ; Clear objects allocated to BANK0 (11 bytes)
   178  000F70  EE00  F08C         	lfsr	0,__pbssBANK0
   179  000F74  0E0B               	movlw	11
   180  000F76                     clear_0:
   181  000F76  6AEE               	clrf	postinc0,c
   182  000F78  06E8               	decf	wreg,f,c
   183  000F7A  E1FD               	bnz	clear_0
   184                           
   185                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   186  000F7C  6A43               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   187                           
   188                           ; Clear objects allocated to COMRAM (6 bytes)
   189  000F7E  6A42               	clrf	(__pbssCOMRAM+5)& (0+255),c
   190  000F80  6A41               	clrf	(__pbssCOMRAM+4)& (0+255),c
   191  000F82  6A40               	clrf	(__pbssCOMRAM+3)& (0+255),c
   192  000F84  6A3F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   193  000F86  6A3E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   194  000F88  6A3D               	clrf	__pbssCOMRAM& (0+255),c
   195  000F8A                     end_of_initialization:
   196                           	opt stack 0
   197  000F8A                     __end_of__initialization:
   198                           	opt stack 0
   199  000F8A  9044               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   200  000F8C  9244               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   201  000F8E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   202  000F90  6EF8               	movwf	tblptru,c
   203  000F92  0100               	movlb	0
   204  000F94  EF87  F007         	goto	_main	;jump to C main() function
   205                           tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           tblptrl	equ	0xFF6
   208                           tablat	equ	0xFF5
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           
   212                           	psect	bitbssCOMRAM
   213  000218                     __pbitbssCOMRAM:
   214                           	opt stack 0
   215  000218                     _power_led:
   216                           	opt stack 0
   217  000218                     	ds	1
   218  000219                     _timer_led:
   219                           	opt stack 0
   220  000219                     	ds	1
   221  00021A                     _unit:
   222                           	opt stack 0
   223  00021A                     	ds	1
   224  00021B                     _timer:
   225                           	opt stack 0
   226  00021B                     	ds	1
   227                           tblptru	equ	0xFF8
   228                           tblptrh	equ	0xFF7
   229                           tblptrl	equ	0xFF6
   230                           tablat	equ	0xFF5
   231                           postinc0	equ	0xFEE
   232                           wreg	equ	0xFE8
   233                           
   234                           	psect	bssCOMRAM
   235  00003D                     __pbssCOMRAM:
   236                           	opt stack 0
   237  00003D                     _time:
   238                           	opt stack 0
   239  00003D                     	ds	4
   240  000041                     _high_temp:
   241                           	opt stack 0
   242  000041                     	ds	1
   243  000042                     _low_temp:
   244                           	opt stack 0
   245  000042                     	ds	1
   246                           tblptru	equ	0xFF8
   247                           tblptrh	equ	0xFF7
   248                           tblptrl	equ	0xFF6
   249                           tablat	equ	0xFF5
   250                           postinc0	equ	0xFEE
   251                           wreg	equ	0xFE8
   252                           
   253                           	psect	bssBANK0
   254  00008C                     __pbssBANK0:
   255                           	opt stack 0
   256  00008C                     _temp_cur:
   257                           	opt stack 0
   258  00008C                     	ds	3
   259  00008F                     _disp:
   260                           	opt stack 0
   261  00008F                     	ds	2
   262  000091                     ISR_low@ins_prev:
   263                           	opt stack 0
   264  000091                     	ds	1
   265  000092                     _heat_mode:
   266                           	opt stack 0
   267  000092                     	ds	1
   268  000093                     _high_hour:
   269                           	opt stack 0
   270  000093                     	ds	1
   271  000094                     _low_hour:
   272                           	opt stack 0
   273  000094                     	ds	1
   274  000095                     _state:
   275                           	opt stack 0
   276  000095                     	ds	1
   277  000096                     _temp_want:
   278                           	opt stack 0
   279  000096                     	ds	1
   280                           tblptru	equ	0xFF8
   281                           tblptrh	equ	0xFF7
   282                           tblptrl	equ	0xFF6
   283                           tablat	equ	0xFF5
   284                           postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           
   287                           	psect	dataBANK0
   288  000097                     __pdataBANK0:
   289                           	opt stack 0
   290  000097                     _cur_number:
   291                           	opt stack 0
   292  000097                     	ds	2
   293                           tblptru	equ	0xFF8
   294                           tblptrh	equ	0xFF7
   295                           tblptrl	equ	0xFF6
   296                           tablat	equ	0xFF5
   297                           postinc0	equ	0xFEE
   298                           wreg	equ	0xFE8
   299                           
   300                           	psect	cstackBANK0
   301  000060                     __pcstackBANK0:
   302                           	opt stack 0
   303  000060                     _ISR_low$210:
   304                           	opt stack 0
   305                           
   306                           ; 2 bytes @ 0x0
   307  000060                     	ds	2
   308  000062                     _ISR_low$211:
   309                           	opt stack 0
   310                           
   311                           ; 2 bytes @ 0x2
   312  000062                     	ds	2
   313  000064                     ISR_low@cur:
   314                           	opt stack 0
   315                           
   316                           ; 1 bytes @ 0x4
   317  000064                     	ds	1
   318  000065                     ISR_low@mask_leds:
   319                           	opt stack 0
   320                           
   321                           ; 1 bytes @ 0x5
   322  000065                     	ds	1
   323  000066                     _ISR_low$212:
   324                           	opt stack 0
   325                           
   326                           ; 1 bytes @ 0x6
   327  000066                     	ds	1
   328  000067                     _ISR_low$207:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0x7
   332  000067                     	ds	2
   333  000069                     _ISR_low$209:
   334                           	opt stack 0
   335                           
   336                           ; 2 bytes @ 0x9
   337  000069                     	ds	2
   338  00006B                     ISR_low@ins:
   339                           	opt stack 0
   340                           
   341                           ; 1 bytes @ 0xB
   342  00006B                     	ds	1
   343  00006C                     ?___ftpack:
   344                           	opt stack 0
   345  00006C                     num_to_disp@ret:
   346                           	opt stack 0
   347  00006C                     set_digit@num:
   348                           	opt stack 0
   349  00006C                     ___ftpack@arg:
   350                           	opt stack 0
   351  00006C                     ___ftge@ff1:
   352                           	opt stack 0
   353                           
   354                           ; 3 bytes @ 0xC
   355  00006C                     	ds	1
   356  00006D                     num_to_disp@num:
   357                           	opt stack 0
   358  00006D                     set_digit@dig:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0xD
   362  00006D                     	ds	1
   363  00006E                     error@code:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0xE
   367  00006E                     	ds	1
   368  00006F                     ___ftpack@exp:
   369                           	opt stack 0
   370  00006F                     ___ftge@ff2:
   371                           	opt stack 0
   372                           
   373                           ; 3 bytes @ 0xF
   374  00006F                     	ds	1
   375  000070                     ___ftpack@sign:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x10
   379  000070                     	ds	1
   380  000071                     ??___ftpack:
   381                           
   382                           ; 1 bytes @ 0x11
   383  000071                     	ds	1
   384  000072                     ??___ftge:
   385                           
   386                           ; 1 bytes @ 0x12
   387  000072                     	ds	2
   388  000074                     ?___lwtoft:
   389                           	opt stack 0
   390  000074                     ___lwtoft@c:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x14
   394  000074                     	ds	3
   395  000077                     ?___ftdiv:
   396                           	opt stack 0
   397  000077                     ___ftdiv@f1:
   398                           	opt stack 0
   399                           
   400                           ; 3 bytes @ 0x17
   401  000077                     	ds	3
   402  00007A                     ___ftdiv@f2:
   403                           	opt stack 0
   404                           
   405                           ; 3 bytes @ 0x1A
   406  00007A                     	ds	3
   407  00007D                     ??___ftdiv:
   408                           
   409                           ; 1 bytes @ 0x1D
   410  00007D                     	ds	3
   411  000080                     ___ftdiv@cntr:
   412                           	opt stack 0
   413                           
   414                           ; 1 bytes @ 0x20
   415  000080                     	ds	1
   416  000081                     ___ftdiv@f3:
   417                           	opt stack 0
   418                           
   419                           ; 3 bytes @ 0x21
   420  000081                     	ds	3
   421  000084                     ___ftdiv@exp:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0x24
   425  000084                     	ds	1
   426  000085                     ___ftdiv@sign:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x25
   430  000085                     	ds	1
   431  000086                     ?_get_temp:
   432                           	opt stack 0
   433                           
   434                           ; 3 bytes @ 0x26
   435  000086                     	ds	3
   436  000089                     get_temp@temp:
   437                           	opt stack 0
   438                           
   439                           ; 3 bytes @ 0x29
   440  000089                     	ds	3
   441  00008C                     tblptru	equ	0xFF8
   442                           tblptrh	equ	0xFF7
   443                           tblptrl	equ	0xFF6
   444                           tablat	equ	0xFF5
   445                           postinc0	equ	0xFEE
   446                           wreg	equ	0xFE8
   447                           
   448                           ; 1 bytes @ 0x2C
   449                           
   450                           	psect	cstackCOMRAM
   451  000001                     __pcstackCOMRAM:
   452                           	opt stack 0
   453  000001                     ?___almod:
   454                           	opt stack 0
   455  000001                     ___almod@dividend:
   456                           	opt stack 0
   457                           
   458                           ; 4 bytes @ 0x0
   459  000001                     	ds	4
   460  000005                     ___almod@divisor:
   461                           	opt stack 0
   462                           
   463                           ; 4 bytes @ 0x4
   464  000005                     	ds	4
   465  000009                     ___almod@counter:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x8
   469  000009                     	ds	1
   470  00000A                     ___almod@sign:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x9
   474  00000A                     	ds	1
   475  00000B                     ??_ISR_high:
   476                           
   477                           ; 1 bytes @ 0xA
   478  00000B                     	ds	14
   479  000019                     ?___aldiv:
   480                           	opt stack 0
   481  000019                     set_LEDs@mask:
   482                           	opt stack 0
   483  000019                     i1set_digit@num:
   484                           	opt stack 0
   485  000019                     ___aldiv@dividend:
   486                           	opt stack 0
   487                           
   488                           ; 4 bytes @ 0x18
   489  000019                     	ds	1
   490  00001A                     i1set_digit@dig:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x19
   494  00001A                     	ds	3
   495  00001D                     ___aldiv@divisor:
   496                           	opt stack 0
   497                           
   498                           ; 4 bytes @ 0x1C
   499  00001D                     	ds	4
   500  000021                     ___aldiv@counter:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x20
   504  000021                     	ds	1
   505  000022                     ___aldiv@sign:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x21
   509  000022                     	ds	1
   510  000023                     ___aldiv@quotient:
   511                           	opt stack 0
   512                           
   513                           ; 4 bytes @ 0x22
   514  000023                     	ds	4
   515  000027                     ??_ISR_low:
   516                           
   517                           ; 1 bytes @ 0x26
   518  000027                     	ds	22
   519                           tblptru	equ	0xFF8
   520                           tblptrh	equ	0xFF7
   521                           tblptrl	equ	0xFF6
   522                           tablat	equ	0xFF5
   523                           postinc0	equ	0xFEE
   524                           wreg	equ	0xFE8
   525                           
   526 ;;
   527 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   528 ;;
   529 ;; *************** function _main *****************
   530 ;; Defined at:
   531 ;;		line 51 in file "main.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;		None
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   545 ;;      Params:         0       0       0       0       0       0       0       0       0
   546 ;;      Locals:         0       0       0       0       0       0       0       0       0
   547 ;;      Temps:          0       0       0       0       0       0       0       0       0
   548 ;;      Totals:         0       0       0       0       0       0       0       0       0
   549 ;;Total ram usage:        0 bytes
   550 ;; Hardware stack levels required when called:    7
   551 ;; This function calls:
   552 ;;		___ftge
   553 ;;		_error
   554 ;;		_get_temp
   555 ;;		_setup
   556 ;; This function is called by:
   557 ;;		Startup code after reset
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           	psect	text0
   562  000F0E                     __ptext0:
   563                           	opt stack 0
   564  000F0E                     _main:
   565                           	opt stack 24
   566                           
   567                           ;main.c: 53: setup();
   568                           
   569                           ;incstack = 0
   570  000F0E  ECE8  F007         	call	_setup	;wreg free
   571  000F12                     l1944:
   572                           
   573                           ;main.c: 60: }
   574                           ;main.c: 61: temp_cur = get_temp();
   575  000F12  EC60  F007         	call	_get_temp	;wreg free
   576  000F16  C086  F08C         	movff	?_get_temp,_temp_cur
   577  000F1A  C087  F08D         	movff	?_get_temp+1,_temp_cur+1
   578  000F1E  C088  F08E         	movff	?_get_temp+2,_temp_cur+2
   579                           
   580                           ;main.c: 62: if (temp_cur > 40)
   581  000F22  0E00               	movlw	0
   582  000F24  0100               	movlb	0	; () banked
   583  000F26  6F6C               	movwf	___ftge@ff1& (0+255),b
   584  000F28  0E20               	movlw	32
   585  000F2A  0100               	movlb	0	; () banked
   586  000F2C  6F6D               	movwf	(___ftge@ff1+1)& (0+255),b
   587  000F2E  0E42               	movlw	66
   588  000F30  0100               	movlb	0	; () banked
   589  000F32  6F6E               	movwf	(___ftge@ff1+2)& (0+255),b
   590  000F34  C08C  F06F         	movff	_temp_cur,___ftge@ff2
   591  000F38  C08D  F070         	movff	_temp_cur+1,___ftge@ff2+1
   592  000F3C  C08E  F071         	movff	_temp_cur+2,___ftge@ff2+2
   593  000F40  EC98  F005         	call	___ftge	;wreg free
   594  000F44  0100               	movlb	0	; () banked
   595  000F46  B0D8               	btfsc	status,0,c
   596  000F48  D7E4               	goto	l1944
   597                           
   598                           ; BSR set to: 0
   599                           ;main.c: 63: {
   600                           ;main.c: 64: state = ERR;
   601  000F4A  0E01               	movlw	1
   602  000F4C  0100               	movlb	0	; () banked
   603  000F4E  6F95               	movwf	_state& (0+255),b
   604                           
   605                           ; BSR set to: 0
   606                           ;main.c: 65: error(1);
   607  000F50  0E01               	movlw	1
   608  000F52  ECCC  F007         	call	_error
   609                           
   610                           ;main.c: 72: else
   611                           ;main.c: 73: {
   612                           
   613                           ;main.c: 69: {
   614                           ;main.c: 71: }
   615  000F56  D7DD               	goto	l1944
   616  000F58                     __end_of_main:
   617                           	opt stack 0
   618                           tblptru	equ	0xFF8
   619                           tblptrh	equ	0xFF7
   620                           tblptrl	equ	0xFF6
   621                           tablat	equ	0xFF5
   622                           postinc0	equ	0xFEE
   623                           wreg	equ	0xFE8
   624                           status	equ	0xFD8
   625                           
   626 ;; *************** function _setup *****************
   627 ;; Defined at:
   628 ;;		line 86 in file "main.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, status,2, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   642 ;;      Params:         0       0       0       0       0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; Hardware stack levels required when called:    5
   649 ;; This function calls:
   650 ;;		_setup_therm
   651 ;;		_setup_timer0
   652 ;;		_setup_timer1
   653 ;;		_setup_timer2
   654 ;; This function is called by:
   655 ;;		_main
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text1
   660  000FD0                     __ptext1:
   661                           	opt stack 0
   662  000FD0                     _setup:
   663                           	opt stack 25
   664                           
   665                           ;main.c: 90: SCS0 = 1;
   666                           
   667                           ;incstack = 0
   668  000FD0  80D3               	bsf	4051,0,c	;volatile
   669                           
   670                           ;main.c: 91: SCS1 = 1;
   671  000FD2  82D3               	bsf	4051,1,c	;volatile
   672                           
   673                           ;main.c: 92: INTSRC = 1;
   674  000FD4  8E9B               	bsf	3995,7,c	;volatile
   675                           
   676                           ;main.c: 94: IRCF2 = 0;
   677  000FD6  9CD3               	bcf	4051,6,c	;volatile
   678                           
   679                           ;main.c: 95: IRCF1 = 0;
   680  000FD8  9AD3               	bcf	4051,5,c	;volatile
   681                           
   682                           ;main.c: 96: IRCF0 = 1;
   683  000FDA  88D3               	bsf	4051,4,c	;volatile
   684                           
   685                           ;main.c: 99: setup_therm();
   686  000FDC  EC14  F008         	call	_setup_therm	;wreg free
   687                           
   688                           ;main.c: 102: nRBPU = 0;
   689  000FE0  9EF1               	bcf	intcon2,7,c	;volatile
   690                           
   691                           ;main.c: 104: TRISA4 = 0;
   692  000FE2  9892               	bcf	3986,4,c	;volatile
   693                           
   694                           ;main.c: 105: TRISA5 = 0;
   695  000FE4  9A92               	bcf	3986,5,c	;volatile
   696                           
   697                           ;main.c: 106: TRISA3 = 0;
   698  000FE6  9692               	bcf	3986,3,c	;volatile
   699                           
   700                           ;main.c: 107: TRISA2 = 0;
   701  000FE8  9492               	bcf	3986,2,c	;volatile
   702                           
   703                           ;main.c: 110: IPEN = 1;
   704  000FEA  8ED0               	bsf	4048,7,c	;volatile
   705                           
   706                           ;main.c: 111: GIEH = 1;
   707  000FEC  8EF2               	bsf	intcon,7,c	;volatile
   708                           
   709                           ;main.c: 112: GIEL = 0;
   710  000FEE  9CF2               	bcf	intcon,6,c	;volatile
   711                           
   712                           ;main.c: 115: setup_timer0();
   713  000FF0  EC46  F008         	call	_setup_timer0	;wreg free
   714                           
   715                           ;main.c: 117: setup_timer1();
   716  000FF4  EC37  F008         	call	_setup_timer1	;wreg free
   717                           
   718                           ;main.c: 119: setup_timer2();
   719  000FF8  EC28  F008         	call	_setup_timer2	;wreg free
   720  000FFC  0012               	return		;funcret
   721  000FFE                     __end_of_setup:
   722                           	opt stack 0
   723                           tblptru	equ	0xFF8
   724                           tblptrh	equ	0xFF7
   725                           tblptrl	equ	0xFF6
   726                           tablat	equ	0xFF5
   727                           intcon	equ	0xFF2
   728                           intcon2	equ	0xFF1
   729                           postinc0	equ	0xFEE
   730                           wreg	equ	0xFE8
   731                           status	equ	0xFD8
   732                           
   733 ;; *************** function _setup_timer2 *****************
   734 ;; Defined at:
   735 ;;		line 193 in file "main.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, status,2
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   749 ;;      Params:         0       0       0       0       0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0       0       0       0       0
   752 ;;      Totals:         0       0       0       0       0       0       0       0       0
   753 ;;Total ram usage:        0 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:    4
   756 ;; This function calls:
   757 ;;		Nothing
   758 ;; This function is called by:
   759 ;;		_setup
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text2
   764  001050                     __ptext2:
   765                           	opt stack 0
   766  001050                     _setup_timer2:
   767                           	opt stack 25
   768                           
   769                           ;main.c: 196: TMR2ON = 0;
   770                           
   771                           ;incstack = 0
   772  001050  94CA               	bcf	4042,2,c	;volatile
   773                           
   774                           ;main.c: 198: T2CKPS0 = 1;
   775  001052  80CA               	bsf	4042,0,c	;volatile
   776                           
   777                           ;main.c: 199: T2CKPS1 = 0;
   778  001054  92CA               	bcf	4042,1,c	;volatile
   779                           
   780                           ;main.c: 201: TMR2 = 0;
   781  001056  0E00               	movlw	0
   782  001058  6ECC               	movwf	4044,c	;volatile
   783                           
   784                           ;main.c: 204: PR2 = 0xFF;
   785  00105A  68CB               	setf	4043,c	;volatile
   786                           
   787                           ;main.c: 206: T2OUTPS0 = 0;
   788  00105C  96CA               	bcf	4042,3,c	;volatile
   789                           
   790                           ;main.c: 207: T2OUTPS1 = 0;
   791  00105E  98CA               	bcf	4042,4,c	;volatile
   792                           
   793                           ;main.c: 208: T2OUTPS2 = 0;
   794  001060  9ACA               	bcf	4042,5,c	;volatile
   795                           
   796                           ;main.c: 209: T2OUTPS3 = 0;
   797  001062  9CCA               	bcf	4042,6,c	;volatile
   798                           
   799                           ;main.c: 211: TMR2IE = 1;
   800  001064  829D               	bsf	3997,1,c	;volatile
   801                           
   802                           ;main.c: 212: TMR2IF = 0;
   803  001066  929E               	bcf	3998,1,c	;volatile
   804                           
   805                           ;main.c: 213: TMR2IP = 0;
   806  001068  929F               	bcf	3999,1,c	;volatile
   807                           
   808                           ;main.c: 215: TMR2ON = 1;
   809  00106A  84CA               	bsf	4042,2,c	;volatile
   810  00106C  0012               	return		;funcret
   811  00106E                     __end_of_setup_timer2:
   812                           	opt stack 0
   813                           tblptru	equ	0xFF8
   814                           tblptrh	equ	0xFF7
   815                           tblptrl	equ	0xFF6
   816                           tablat	equ	0xFF5
   817                           intcon	equ	0xFF2
   818                           intcon2	equ	0xFF1
   819                           postinc0	equ	0xFEE
   820                           wreg	equ	0xFE8
   821                           status	equ	0xFD8
   822                           
   823 ;; *************** function _setup_timer1 *****************
   824 ;; Defined at:
   825 ;;		line 170 in file "main.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg, status,2
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   839 ;;      Params:         0       0       0       0       0       0       0       0       0
   840 ;;      Locals:         0       0       0       0       0       0       0       0       0
   841 ;;      Temps:          0       0       0       0       0       0       0       0       0
   842 ;;      Totals:         0       0       0       0       0       0       0       0       0
   843 ;;Total ram usage:        0 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; Hardware stack levels required when called:    4
   846 ;; This function calls:
   847 ;;		Nothing
   848 ;; This function is called by:
   849 ;;		_setup
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text3
   854  00106E                     __ptext3:
   855                           	opt stack 0
   856  00106E                     _setup_timer1:
   857                           	opt stack 25
   858                           
   859                           ;main.c: 173: TMR1ON = 0;
   860                           
   861                           ;incstack = 0
   862  00106E  90CD               	bcf	4045,0,c	;volatile
   863                           
   864                           ;main.c: 175: T1RD16 = 1;
   865  001070  8ECD               	bsf	4045,7,c	;volatile
   866                           
   867                           ;main.c: 177: T1RUN = 0;
   868  001072  9CCD               	bcf	4045,6,c	;volatile
   869                           
   870                           ;main.c: 178: TMR1CS = 0;
   871  001074  92CD               	bcf	4045,1,c	;volatile
   872                           
   873                           ;main.c: 180: TMR1IE = 1;
   874  001076  809D               	bsf	3997,0,c	;volatile
   875                           
   876                           ;main.c: 181: TMR1IF = 0;
   877  001078  909E               	bcf	3998,0,c	;volatile
   878                           
   879                           ;main.c: 182: TMR1IP = 1;
   880  00107A  809F               	bsf	3999,0,c	;volatile
   881                           
   882                           ;main.c: 184: T1CKPS0 = T1CKPS1 = 1;
   883  00107C  8ACD               	bsf	4045,5,c	;volatile
   884  00107E  88CD               	bsf	4045,4,c	;volatile
   885                           
   886                           ;main.c: 186: TMR1 = 0xFFFF - 15625;
   887  001080  0EC2               	movlw	194
   888  001082  6ECF               	movwf	4047,c	;volatile
   889  001084  0EF6               	movlw	246
   890  001086  6ECE               	movwf	4046,c	;volatile
   891                           
   892                           ;main.c: 188: TMR1ON = 1;
   893  001088  80CD               	bsf	4045,0,c	;volatile
   894  00108A  0012               	return		;funcret
   895  00108C                     __end_of_setup_timer1:
   896                           	opt stack 0
   897                           tblptru	equ	0xFF8
   898                           tblptrh	equ	0xFF7
   899                           tblptrl	equ	0xFF6
   900                           tablat	equ	0xFF5
   901                           intcon	equ	0xFF2
   902                           intcon2	equ	0xFF1
   903                           postinc0	equ	0xFEE
   904                           wreg	equ	0xFE8
   905                           status	equ	0xFD8
   906                           
   907 ;; *************** function _setup_timer0 *****************
   908 ;; Defined at:
   909 ;;		line 148 in file "main.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, status,2
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   923 ;;      Params:         0       0       0       0       0       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0       0       0
   926 ;;      Totals:         0       0       0       0       0       0       0       0       0
   927 ;;Total ram usage:        0 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    4
   930 ;; This function calls:
   931 ;;		Nothing
   932 ;; This function is called by:
   933 ;;		_setup
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text4
   938  00108C                     __ptext4:
   939                           	opt stack 0
   940  00108C                     _setup_timer0:
   941                           	opt stack 25
   942                           
   943                           ;main.c: 151: TMR0ON = 0;
   944                           
   945                           ;incstack = 0
   946  00108C  9ED5               	bcf	4053,7,c	;volatile
   947                           
   948                           ;main.c: 153: TMR0 = 0;
   949  00108E  0E00               	movlw	0
   950  001090  6ED7               	movwf	4055,c	;volatile
   951  001092  0E00               	movlw	0
   952  001094  6ED6               	movwf	4054,c	;volatile
   953                           
   954                           ;main.c: 155: T08BIT = 0;
   955  001096  9CD5               	bcf	4053,6,c	;volatile
   956                           
   957                           ;main.c: 157: T0CS = 1;
   958  001098  8AD5               	bsf	4053,5,c	;volatile
   959                           
   960                           ;main.c: 159: T0IE = 1;
   961  00109A  8AF2               	bsf	intcon,5,c	;volatile
   962                           
   963                           ;main.c: 160: T0IF = 0;
   964  00109C  94F2               	bcf	intcon,2,c	;volatile
   965                           
   966                           ;main.c: 161: T0IP = 0;
   967  00109E  94F1               	bcf	intcon2,2,c	;volatile
   968                           
   969                           ;main.c: 163: PSA = 0;
   970  0010A0  96D5               	bcf	4053,3,c	;volatile
   971                           
   972                           ;main.c: 165: T0PS0 = T0PS1 = T0PS2 = 1;
   973  0010A2  84D5               	bsf	4053,2,c	;volatile
   974  0010A4  82D5               	bsf	4053,1,c	;volatile
   975  0010A6  80D5               	bsf	4053,0,c	;volatile
   976  0010A8  0012               	return		;funcret
   977  0010AA                     __end_of_setup_timer0:
   978                           	opt stack 0
   979                           tblptru	equ	0xFF8
   980                           tblptrh	equ	0xFF7
   981                           tblptrl	equ	0xFF6
   982                           tablat	equ	0xFF5
   983                           intcon	equ	0xFF2
   984                           intcon2	equ	0xFF1
   985                           postinc0	equ	0xFEE
   986                           wreg	equ	0xFE8
   987                           status	equ	0xFD8
   988                           
   989 ;; *************** function _setup_therm *****************
   990 ;; Defined at:
   991 ;;		line 123 in file "main.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;		None
   996 ;; Return value:  Size  Location     Type
   997 ;;                  1    wreg      void 
   998 ;; Registers used:
   999 ;;		None
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1005 ;;      Params:         0       0       0       0       0       0       0       0       0
  1006 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1007 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1008 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1009 ;;Total ram usage:        0 bytes
  1010 ;; Hardware stack levels used:    1
  1011 ;; Hardware stack levels required when called:    4
  1012 ;; This function calls:
  1013 ;;		Nothing
  1014 ;; This function is called by:
  1015 ;;		_setup
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           	psect	text5
  1020  001028                     __ptext5:
  1021                           	opt stack 0
  1022  001028                     _setup_therm:
  1023                           	opt stack 25
  1024                           
  1025                           ;main.c: 127: TRISA0 = 1;
  1026                           
  1027                           ;incstack = 0
  1028  001028  8092               	bsf	3986,0,c	;volatile
  1029                           
  1030                           ;main.c: 129: ADON = 1;
  1031  00102A  80C2               	bsf	4034,0,c	;volatile
  1032                           
  1033                           ;main.c: 130: ADIE = 0;
  1034  00102C  9C9D               	bcf	3997,6,c	;volatile
  1035                           
  1036                           ;main.c: 131: ADIP = 0;
  1037  00102E  9C9F               	bcf	3999,6,c	;volatile
  1038                           
  1039                           ;main.c: 132: ADIF = 0;
  1040  001030  9C9E               	bcf	3998,6,c	;volatile
  1041                           
  1042                           ;main.c: 134: CHS0 = CHS1 = CHS2 = CHS3 = 0;
  1043  001032  9AC2               	bcf	4034,5,c	;volatile
  1044  001034  98C2               	bcf	4034,4,c	;volatile
  1045  001036  96C2               	bcf	4034,3,c	;volatile
  1046  001038  94C2               	bcf	4034,2,c	;volatile
  1047                           
  1048                           ;main.c: 136: PCFG0 = 0;
  1049  00103A  90C1               	bcf	4033,0,c	;volatile
  1050                           
  1051                           ;main.c: 137: PCFG1 = PCFG2 = PCFG3 = 1;
  1052  00103C  86C1               	bsf	4033,3,c	;volatile
  1053  00103E  84C1               	bsf	4033,2,c	;volatile
  1054  001040  82C1               	bsf	4033,1,c	;volatile
  1055                           
  1056                           ;main.c: 139: ACQT2 = 1;
  1057  001042  8AC0               	bsf	4032,5,c	;volatile
  1058                           
  1059                           ;main.c: 140: ACQT1 = ACQT0 = 0;
  1060  001044  96C0               	bcf	4032,3,c	;volatile
  1061  001046  98C0               	bcf	4032,4,c	;volatile
  1062                           
  1063                           ;main.c: 142: ADCS2 = 1;
  1064  001048  84C0               	bsf	4032,2,c	;volatile
  1065                           
  1066                           ;main.c: 143: ADCS1 = 0;
  1067  00104A  92C0               	bcf	4032,1,c	;volatile
  1068                           
  1069                           ;main.c: 144: ADCS0 = 1;
  1070  00104C  80C0               	bsf	4032,0,c	;volatile
  1071  00104E  0012               	return		;funcret
  1072  001050                     __end_of_setup_therm:
  1073                           	opt stack 0
  1074                           tblptru	equ	0xFF8
  1075                           tblptrh	equ	0xFF7
  1076                           tblptrl	equ	0xFF6
  1077                           tablat	equ	0xFF5
  1078                           intcon	equ	0xFF2
  1079                           intcon2	equ	0xFF1
  1080                           postinc0	equ	0xFEE
  1081                           wreg	equ	0xFE8
  1082                           status	equ	0xFD8
  1083                           
  1084 ;; *************** function _get_temp *****************
  1085 ;; Defined at:
  1086 ;;		line 227 in file "main.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;  temp            3   41[BANK0 ] float 
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  3   38[BANK0 ] float 
  1093 ;; Registers used:
  1094 ;;		wreg, status,2, status,0, cstack
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1100 ;;      Params:         0       3       0       0       0       0       0       0       0
  1101 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1102 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1103 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1104 ;;Total ram usage:        6 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; Hardware stack levels required when called:    6
  1107 ;; This function calls:
  1108 ;;		___ftdiv
  1109 ;;		___lwtoft
  1110 ;; This function is called by:
  1111 ;;		_main
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text6
  1116  000EC0                     __ptext6:
  1117                           	opt stack 0
  1118  000EC0                     _get_temp:
  1119                           	opt stack 24
  1120                           
  1121                           ;main.c: 230: GO = 1;
  1122                           
  1123                           ;incstack = 0
  1124  000EC0  82C2               	bsf	4034,1,c	;volatile
  1125  000EC2                     l252:
  1126  000EC2  B2C2               	btfsc	4034,1,c	;volatile
  1127  000EC4  D7FE               	goto	l252
  1128                           
  1129                           ;main.c: 233: float temp = ((double) ADRES) / ((double) (1L << 16));
  1130  000EC6  CFC3 F074          	movff	4035,___lwtoft@c	;volatile
  1131  000ECA  CFC4 F075          	movff	4036,___lwtoft@c+1	;volatile
  1132  000ECE  ECFF  F007         	call	___lwtoft	;wreg free
  1133  000ED2  C074  F077         	movff	?___lwtoft,___ftdiv@f1
  1134  000ED6  C075  F078         	movff	?___lwtoft+1,___ftdiv@f1+1
  1135  000EDA  C076  F079         	movff	?___lwtoft+2,___ftdiv@f1+2
  1136  000EDE  0E00               	movlw	0
  1137  000EE0  0100               	movlb	0	; () banked
  1138  000EE2  6F7A               	movwf	___ftdiv@f2& (0+255),b
  1139  000EE4  0E80               	movlw	128
  1140  000EE6  0100               	movlb	0	; () banked
  1141  000EE8  6F7B               	movwf	(___ftdiv@f2+1)& (0+255),b
  1142  000EEA  0E47               	movlw	71
  1143  000EEC  0100               	movlb	0	; () banked
  1144  000EEE  6F7C               	movwf	(___ftdiv@f2+2)& (0+255),b
  1145  000EF0  EC06  F004         	call	___ftdiv	;wreg free
  1146  000EF4  C077  F089         	movff	?___ftdiv,get_temp@temp
  1147  000EF8  C078  F08A         	movff	?___ftdiv+1,get_temp@temp+1
  1148  000EFC  C079  F08B         	movff	?___ftdiv+2,get_temp@temp+2
  1149                           
  1150                           ;main.c: 235: return temp;
  1151  000F00  C089  F086         	movff	get_temp@temp,?_get_temp
  1152  000F04  C08A  F087         	movff	get_temp@temp+1,?_get_temp+1
  1153  000F08  C08B  F088         	movff	get_temp@temp+2,?_get_temp+2
  1154  000F0C  0012               	return	
  1155  000F0E                     __end_of_get_temp:
  1156                           	opt stack 0
  1157                           tblptru	equ	0xFF8
  1158                           tblptrh	equ	0xFF7
  1159                           tblptrl	equ	0xFF6
  1160                           tablat	equ	0xFF5
  1161                           intcon	equ	0xFF2
  1162                           intcon2	equ	0xFF1
  1163                           postinc0	equ	0xFEE
  1164                           wreg	equ	0xFE8
  1165                           status	equ	0xFD8
  1166                           
  1167 ;; *************** function ___lwtoft *****************
  1168 ;; Defined at:
  1169 ;;		line 28 in file "/opt/microchip/xc8/v1.38/sources/common/lwtoft.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;  c               2   20[BANK0 ] unsigned int 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;		None
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  3   20[BANK0 ] float 
  1176 ;; Registers used:
  1177 ;;		wreg, status,2, status,0, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1183 ;;      Params:         0       3       0       0       0       0       0       0       0
  1184 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1185 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1186 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1187 ;;Total ram usage:        3 bytes
  1188 ;; Hardware stack levels used:    1
  1189 ;; Hardware stack levels required when called:    5
  1190 ;; This function calls:
  1191 ;;		___ftpack
  1192 ;; This function is called by:
  1193 ;;		_get_temp
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text7
  1198  000FFE                     __ptext7:
  1199                           	opt stack 0
  1200  000FFE                     ___lwtoft:
  1201                           	opt stack 24
  1202                           
  1203                           ;incstack = 0
  1204  000FFE  C074  F06C         	movff	___lwtoft@c,___ftpack@arg
  1205  001002  C075  F06D         	movff	___lwtoft@c+1,___ftpack@arg+1
  1206  001006  0100               	movlb	0	; () banked
  1207  001008  6B6E               	clrf	(___ftpack@arg+2)& (0+255),b
  1208  00100A  0E8E               	movlw	142
  1209  00100C  0100               	movlb	0	; () banked
  1210  00100E  6F6F               	movwf	___ftpack@exp& (0+255),b
  1211  001010  0E00               	movlw	0
  1212  001012  0100               	movlb	0	; () banked
  1213  001014  6F70               	movwf	___ftpack@sign& (0+255),b
  1214  001016  ECAC  F004         	call	___ftpack	;wreg free
  1215  00101A  C06C  F074         	movff	?___ftpack,?___lwtoft
  1216  00101E  C06D  F075         	movff	?___ftpack+1,?___lwtoft+1
  1217  001022  C06E  F076         	movff	?___ftpack+2,?___lwtoft+2
  1218  001026  0012               	return	
  1219  001028                     __end_of___lwtoft:
  1220                           	opt stack 0
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           intcon	equ	0xFF2
  1226                           intcon2	equ	0xFF1
  1227                           postinc0	equ	0xFEE
  1228                           wreg	equ	0xFE8
  1229                           status	equ	0xFD8
  1230                           
  1231 ;; *************** function ___ftdiv *****************
  1232 ;; Defined at:
  1233 ;;		line 54 in file "/opt/microchip/xc8/v1.38/sources/common/ftdiv.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;  f1              3   23[BANK0 ] float 
  1236 ;;  f2              3   26[BANK0 ] float 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  f3              3   33[BANK0 ] float 
  1239 ;;  sign            1   37[BANK0 ] unsigned char 
  1240 ;;  exp             1   36[BANK0 ] unsigned char 
  1241 ;;  cntr            1   32[BANK0 ] unsigned char 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  3   23[BANK0 ] float 
  1244 ;; Registers used:
  1245 ;;		wreg, status,2, status,0, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1251 ;;      Params:         0       6       0       0       0       0       0       0       0
  1252 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1253 ;;      Temps:          0       3       0       0       0       0       0       0       0
  1254 ;;      Totals:         0      15       0       0       0       0       0       0       0
  1255 ;;Total ram usage:       15 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; Hardware stack levels required when called:    5
  1258 ;; This function calls:
  1259 ;;		___ftpack
  1260 ;; This function is called by:
  1261 ;;		_get_temp
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text8
  1266  00080C                     __ptext8:
  1267                           	opt stack 0
  1268  00080C                     ___ftdiv:
  1269                           	opt stack 24
  1270                           
  1271                           ;incstack = 0
  1272  00080C  C079  F07D         	movff	___ftdiv@f1+2,??___ftdiv
  1273  000810  0100               	movlb	0	; () banked
  1274  000812  6B7E               	clrf	(??___ftdiv+1)& (0+255),b
  1275  000814  6B7F               	clrf	(??___ftdiv+2)& (0+255),b
  1276  000816  0100               	movlb	0	; () banked
  1277  000818  3578               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  1278  00081A  0100               	movlb	0	; () banked
  1279  00081C  377D               	rlcf	??___ftdiv& (0+255),f,b
  1280  00081E  E301               	bnc	u1251
  1281  000820  817E               	bsf	(??___ftdiv+1)& (0+255),0,b
  1282  000822                     u1251:
  1283  000822  0100               	movlb	0	; () banked
  1284  000824  517D               	movf	??___ftdiv& (0+255),w,b
  1285  000826  0100               	movlb	0	; () banked
  1286  000828  6F84               	movwf	___ftdiv@exp& (0+255),b
  1287  00082A  0100               	movlb	0	; () banked
  1288  00082C  5184               	movf	___ftdiv@exp& (0+255),w,b
  1289  00082E  A4D8               	btfss	status,2,c
  1290  000830  D00A               	goto	l1720
  1291                           
  1292                           ; BSR set to: 0
  1293  000832  0E00               	movlw	0
  1294  000834  0100               	movlb	0	; () banked
  1295  000836  6F77               	movwf	?___ftdiv& (0+255),b
  1296  000838  0E00               	movlw	0
  1297  00083A  0100               	movlb	0	; () banked
  1298  00083C  6F78               	movwf	(?___ftdiv+1)& (0+255),b
  1299  00083E  0E00               	movlw	0
  1300  000840  0100               	movlb	0	; () banked
  1301  000842  6F79               	movwf	(?___ftdiv+2)& (0+255),b
  1302                           
  1303                           ; BSR set to: 0
  1304  000844  0012               	return	
  1305  000846                     l1720:
  1306                           
  1307                           ; BSR set to: 0
  1308  000846  C07C  F07D         	movff	___ftdiv@f2+2,??___ftdiv
  1309  00084A  0100               	movlb	0	; () banked
  1310  00084C  6B7E               	clrf	(??___ftdiv+1)& (0+255),b
  1311  00084E  6B7F               	clrf	(??___ftdiv+2)& (0+255),b
  1312  000850  0100               	movlb	0	; () banked
  1313  000852  357B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  1314  000854  0100               	movlb	0	; () banked
  1315  000856  377D               	rlcf	??___ftdiv& (0+255),f,b
  1316  000858  E301               	bnc	u1271
  1317  00085A  817E               	bsf	(??___ftdiv+1)& (0+255),0,b
  1318  00085C                     u1271:
  1319  00085C  0100               	movlb	0	; () banked
  1320  00085E  517D               	movf	??___ftdiv& (0+255),w,b
  1321  000860  0100               	movlb	0	; () banked
  1322  000862  6F85               	movwf	___ftdiv@sign& (0+255),b
  1323  000864  0100               	movlb	0	; () banked
  1324  000866  5185               	movf	___ftdiv@sign& (0+255),w,b
  1325  000868  A4D8               	btfss	status,2,c
  1326  00086A  D00A               	goto	l1726
  1327                           
  1328                           ; BSR set to: 0
  1329  00086C  0E00               	movlw	0
  1330  00086E  0100               	movlb	0	; () banked
  1331  000870  6F77               	movwf	?___ftdiv& (0+255),b
  1332  000872  0E00               	movlw	0
  1333  000874  0100               	movlb	0	; () banked
  1334  000876  6F78               	movwf	(?___ftdiv+1)& (0+255),b
  1335  000878  0E00               	movlw	0
  1336  00087A  0100               	movlb	0	; () banked
  1337  00087C  6F79               	movwf	(?___ftdiv+2)& (0+255),b
  1338                           
  1339                           ; BSR set to: 0
  1340  00087E  0012               	return	
  1341  000880                     l1726:
  1342                           
  1343                           ; BSR set to: 0
  1344  000880  0E00               	movlw	0
  1345  000882  0100               	movlb	0	; () banked
  1346  000884  6F81               	movwf	___ftdiv@f3& (0+255),b
  1347  000886  0E00               	movlw	0
  1348  000888  0100               	movlb	0	; () banked
  1349  00088A  6F82               	movwf	(___ftdiv@f3+1)& (0+255),b
  1350  00088C  0E00               	movlw	0
  1351  00088E  0100               	movlb	0	; () banked
  1352  000890  6F83               	movwf	(___ftdiv@f3+2)& (0+255),b
  1353                           
  1354                           ; BSR set to: 0
  1355  000892  0100               	movlb	0	; () banked
  1356  000894  5185               	movf	___ftdiv@sign& (0+255),w,b
  1357  000896  0F89               	addlw	137
  1358  000898  0100               	movlb	0	; () banked
  1359  00089A  5F84               	subwf	___ftdiv@exp& (0+255),f,b
  1360                           
  1361                           ; BSR set to: 0
  1362  00089C  C079  F085         	movff	___ftdiv@f1+2,___ftdiv@sign
  1363                           
  1364                           ; BSR set to: 0
  1365  0008A0  0100               	movlb	0	; () banked
  1366  0008A2  517C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  1367  0008A4  0100               	movlb	0	; () banked
  1368  0008A6  1B85               	xorwf	___ftdiv@sign& (0+255),f,b
  1369                           
  1370                           ; BSR set to: 0
  1371  0008A8  0E80               	movlw	128
  1372  0008AA  0100               	movlb	0	; () banked
  1373  0008AC  1785               	andwf	___ftdiv@sign& (0+255),f,b
  1374                           
  1375                           ; BSR set to: 0
  1376  0008AE  0100               	movlb	0	; () banked
  1377  0008B0  8F78               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  1378                           
  1379                           ; BSR set to: 0
  1380  0008B2  0EFF               	movlw	255
  1381  0008B4  0100               	movlb	0	; () banked
  1382  0008B6  1777               	andwf	___ftdiv@f1& (0+255),f,b
  1383  0008B8  0EFF               	movlw	255
  1384  0008BA  0100               	movlb	0	; () banked
  1385  0008BC  1778               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  1386  0008BE  0E00               	movlw	0
  1387  0008C0  0100               	movlb	0	; () banked
  1388  0008C2  1779               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  1389                           
  1390                           ; BSR set to: 0
  1391  0008C4  0100               	movlb	0	; () banked
  1392  0008C6  8F7B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  1393                           
  1394                           ; BSR set to: 0
  1395  0008C8  0EFF               	movlw	255
  1396  0008CA  0100               	movlb	0	; () banked
  1397  0008CC  177A               	andwf	___ftdiv@f2& (0+255),f,b
  1398  0008CE  0EFF               	movlw	255
  1399  0008D0  0100               	movlb	0	; () banked
  1400  0008D2  177B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  1401  0008D4  0E00               	movlw	0
  1402  0008D6  0100               	movlb	0	; () banked
  1403  0008D8  177C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  1404                           
  1405                           ; BSR set to: 0
  1406  0008DA  0E18               	movlw	24
  1407  0008DC  0100               	movlb	0	; () banked
  1408  0008DE  6F80               	movwf	___ftdiv@cntr& (0+255),b
  1409  0008E0                     l1746:
  1410                           
  1411                           ; BSR set to: 0
  1412  0008E0  0100               	movlb	0	; () banked
  1413  0008E2  90D8               	bcf	status,0,c
  1414  0008E4  3781               	rlcf	___ftdiv@f3& (0+255),f,b
  1415  0008E6  3782               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  1416  0008E8  3783               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  1417                           
  1418                           ; BSR set to: 0
  1419  0008EA  0100               	movlb	0	; () banked
  1420  0008EC  517A               	movf	___ftdiv@f2& (0+255),w,b
  1421  0008EE  0100               	movlb	0	; () banked
  1422  0008F0  5D77               	subwf	___ftdiv@f1& (0+255),w,b
  1423  0008F2  0100               	movlb	0	; () banked
  1424  0008F4  517B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  1425  0008F6  0100               	movlb	0	; () banked
  1426  0008F8  5978               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  1427  0008FA  0100               	movlb	0	; () banked
  1428  0008FC  517C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  1429  0008FE  0100               	movlb	0	; () banked
  1430  000900  5979               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  1431  000902  A0D8               	btfss	status,0,c
  1432  000904  D00E               	goto	l615
  1433                           
  1434                           ; BSR set to: 0
  1435  000906  0100               	movlb	0	; () banked
  1436  000908  517A               	movf	___ftdiv@f2& (0+255),w,b
  1437  00090A  0100               	movlb	0	; () banked
  1438  00090C  5F77               	subwf	___ftdiv@f1& (0+255),f,b
  1439  00090E  0100               	movlb	0	; () banked
  1440  000910  517B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  1441  000912  0100               	movlb	0	; () banked
  1442  000914  5B78               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  1443  000916  0100               	movlb	0	; () banked
  1444  000918  517C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  1445  00091A  0100               	movlb	0	; () banked
  1446  00091C  5B79               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  1447                           
  1448                           ; BSR set to: 0
  1449  00091E  0100               	movlb	0	; () banked
  1450  000920  8181               	bsf	___ftdiv@f3& (0+255),0,b
  1451  000922                     l615:
  1452                           
  1453                           ; BSR set to: 0
  1454  000922  0100               	movlb	0	; () banked
  1455  000924  90D8               	bcf	status,0,c
  1456  000926  3777               	rlcf	___ftdiv@f1& (0+255),f,b
  1457  000928  3778               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  1458  00092A  3779               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  1459                           
  1460                           ; BSR set to: 0
  1461  00092C  0100               	movlb	0	; () banked
  1462  00092E  2F80               	decfsz	___ftdiv@cntr& (0+255),f,b
  1463  000930  D7D7               	goto	l1746
  1464                           
  1465                           ; BSR set to: 0
  1466                           
  1467                           ; BSR set to: 0
  1468  000932  C081  F06C         	movff	___ftdiv@f3,___ftpack@arg
  1469  000936  C082  F06D         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1470  00093A  C083  F06E         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1471  00093E  C084  F06F         	movff	___ftdiv@exp,___ftpack@exp
  1472  000942  C085  F070         	movff	___ftdiv@sign,___ftpack@sign
  1473  000946  ECAC  F004         	call	___ftpack	;wreg free
  1474  00094A  C06C  F077         	movff	?___ftpack,?___ftdiv
  1475  00094E  C06D  F078         	movff	?___ftpack+1,?___ftdiv+1
  1476  000952  C06E  F079         	movff	?___ftpack+2,?___ftdiv+2
  1477  000956  0012               	return	
  1478  000958                     __end_of___ftdiv:
  1479                           	opt stack 0
  1480                           tblptru	equ	0xFF8
  1481                           tblptrh	equ	0xFF7
  1482                           tblptrl	equ	0xFF6
  1483                           tablat	equ	0xFF5
  1484                           intcon	equ	0xFF2
  1485                           intcon2	equ	0xFF1
  1486                           postinc0	equ	0xFEE
  1487                           wreg	equ	0xFE8
  1488                           status	equ	0xFD8
  1489                           
  1490 ;; *************** function ___ftpack *****************
  1491 ;; Defined at:
  1492 ;;		line 62 in file "/opt/microchip/xc8/v1.38/sources/common/float.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  arg             3   12[BANK0 ] unsigned um
  1495 ;;  exp             1   15[BANK0 ] unsigned char 
  1496 ;;  sign            1   16[BANK0 ] unsigned char 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  3   12[BANK0 ] float 
  1501 ;; Registers used:
  1502 ;;		wreg, status,2, status,0
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1508 ;;      Params:         0       5       0       0       0       0       0       0       0
  1509 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1510 ;;      Temps:          0       3       0       0       0       0       0       0       0
  1511 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1512 ;;Total ram usage:        8 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    4
  1515 ;; This function calls:
  1516 ;;		Nothing
  1517 ;; This function is called by:
  1518 ;;		___ftdiv
  1519 ;;		___lwtoft
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           	psect	text9
  1524  000958                     __ptext9:
  1525                           	opt stack 0
  1526  000958                     ___ftpack:
  1527                           	opt stack 24
  1528                           
  1529                           ;incstack = 0
  1530  000958  0100               	movlb	0	; () banked
  1531  00095A  516F               	movf	___ftpack@exp& (0+255),w,b
  1532  00095C  0100               	movlb	0	; () banked
  1533  00095E  B4D8               	btfsc	status,2,c
  1534  000960  D008               	goto	l1596
  1535                           
  1536                           ; BSR set to: 0
  1537  000962  0100               	movlb	0	; () banked
  1538  000964  516C               	movf	___ftpack@arg& (0+255),w,b
  1539  000966  0100               	movlb	0	; () banked
  1540  000968  116D               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  1541  00096A  0100               	movlb	0	; () banked
  1542  00096C  116E               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  1543  00096E  A4D8               	btfss	status,2,c
  1544  000970  D011               	goto	l1602
  1545  000972                     l1596:
  1546                           
  1547                           ; BSR set to: 0
  1548  000972  0E00               	movlw	0
  1549  000974  0100               	movlb	0	; () banked
  1550  000976  6F6C               	movwf	?___ftpack& (0+255),b
  1551  000978  0E00               	movlw	0
  1552  00097A  0100               	movlb	0	; () banked
  1553  00097C  6F6D               	movwf	(?___ftpack+1)& (0+255),b
  1554  00097E  0E00               	movlw	0
  1555  000980  0100               	movlb	0	; () banked
  1556  000982  6F6E               	movwf	(?___ftpack+2)& (0+255),b
  1557                           
  1558                           ; BSR set to: 0
  1559  000984  0012               	return	
  1560  000986                     l1600:
  1561                           
  1562                           ; BSR set to: 0
  1563  000986  0100               	movlb	0	; () banked
  1564  000988  2B6F               	incf	___ftpack@exp& (0+255),f,b
  1565  00098A  0100               	movlb	0	; () banked
  1566  00098C  90D8               	bcf	status,0,c
  1567  00098E  336E               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  1568  000990  336D               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  1569  000992  336C               	rrcf	___ftpack@arg& (0+255),f,b
  1570  000994                     l1602:
  1571                           
  1572                           ; BSR set to: 0
  1573  000994  0E00               	movlw	0
  1574  000996  0100               	movlb	0	; () banked
  1575  000998  156C               	andwf	___ftpack@arg& (0+255),w,b
  1576  00099A  0100               	movlb	0	; () banked
  1577  00099C  6F71               	movwf	??___ftpack& (0+255),b
  1578  00099E  0E00               	movlw	0
  1579  0009A0  0100               	movlb	0	; () banked
  1580  0009A2  156D               	andwf	(___ftpack@arg+1)& (0+255),w,b
  1581  0009A4  0100               	movlb	0	; () banked
  1582  0009A6  6F72               	movwf	(??___ftpack+1)& (0+255),b
  1583  0009A8  0EFE               	movlw	254
  1584  0009AA  0100               	movlb	0	; () banked
  1585  0009AC  156E               	andwf	(___ftpack@arg+2)& (0+255),w,b
  1586  0009AE  0100               	movlb	0	; () banked
  1587  0009B0  6F73               	movwf	(??___ftpack+2)& (0+255),b
  1588  0009B2  0100               	movlb	0	; () banked
  1589  0009B4  5171               	movf	??___ftpack& (0+255),w,b
  1590  0009B6  0100               	movlb	0	; () banked
  1591  0009B8  1172               	iorwf	(??___ftpack+1)& (0+255),w,b
  1592  0009BA  0100               	movlb	0	; () banked
  1593  0009BC  1173               	iorwf	(??___ftpack+2)& (0+255),w,b
  1594  0009BE  B4D8               	btfsc	status,2,c
  1595  0009C0  D011               	goto	l1608
  1596  0009C2  D7E1               	goto	l1600
  1597  0009C4                     l1604:
  1598                           
  1599                           ; BSR set to: 0
  1600  0009C4  0100               	movlb	0	; () banked
  1601  0009C6  2B6F               	incf	___ftpack@exp& (0+255),f,b
  1602                           
  1603                           ; BSR set to: 0
  1604  0009C8  0E01               	movlw	1
  1605  0009CA  0100               	movlb	0	; () banked
  1606  0009CC  276C               	addwf	___ftpack@arg& (0+255),f,b
  1607  0009CE  0E00               	movlw	0
  1608  0009D0  0100               	movlb	0	; () banked
  1609  0009D2  236D               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  1610  0009D4  0E00               	movlw	0
  1611  0009D6  0100               	movlb	0	; () banked
  1612  0009D8  236E               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  1613  0009DA  0100               	movlb	0	; () banked
  1614  0009DC  90D8               	bcf	status,0,c
  1615  0009DE  336E               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  1616  0009E0  336D               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  1617  0009E2  336C               	rrcf	___ftpack@arg& (0+255),f,b
  1618  0009E4                     l1608:
  1619                           
  1620                           ; BSR set to: 0
  1621  0009E4  0E00               	movlw	0
  1622  0009E6  0100               	movlb	0	; () banked
  1623  0009E8  156C               	andwf	___ftpack@arg& (0+255),w,b
  1624  0009EA  0100               	movlb	0	; () banked
  1625  0009EC  6F71               	movwf	??___ftpack& (0+255),b
  1626  0009EE  0E00               	movlw	0
  1627  0009F0  0100               	movlb	0	; () banked
  1628  0009F2  156D               	andwf	(___ftpack@arg+1)& (0+255),w,b
  1629  0009F4  0100               	movlb	0	; () banked
  1630  0009F6  6F72               	movwf	(??___ftpack+1)& (0+255),b
  1631  0009F8  0EFF               	movlw	255
  1632  0009FA  0100               	movlb	0	; () banked
  1633  0009FC  156E               	andwf	(___ftpack@arg+2)& (0+255),w,b
  1634  0009FE  0100               	movlb	0	; () banked
  1635  000A00  6F73               	movwf	(??___ftpack+2)& (0+255),b
  1636  000A02  0100               	movlb	0	; () banked
  1637  000A04  5171               	movf	??___ftpack& (0+255),w,b
  1638  000A06  0100               	movlb	0	; () banked
  1639  000A08  1172               	iorwf	(??___ftpack+1)& (0+255),w,b
  1640  000A0A  0100               	movlb	0	; () banked
  1641  000A0C  1173               	iorwf	(??___ftpack+2)& (0+255),w,b
  1642  000A0E  B4D8               	btfsc	status,2,c
  1643  000A10  D008               	goto	l1612
  1644  000A12  D7D8               	goto	l1604
  1645  000A14                     l1610:
  1646                           
  1647                           ; BSR set to: 0
  1648  000A14  0100               	movlb	0	; () banked
  1649  000A16  076F               	decf	___ftpack@exp& (0+255),f,b
  1650  000A18  0100               	movlb	0	; () banked
  1651  000A1A  90D8               	bcf	status,0,c
  1652  000A1C  376C               	rlcf	___ftpack@arg& (0+255),f,b
  1653  000A1E  376D               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  1654  000A20  376E               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  1655  000A22                     l1612:
  1656                           
  1657                           ; BSR set to: 0
  1658  000A22  0100               	movlb	0	; () banked
  1659  000A24  BF6D               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  1660  000A26  D004               	goto	l557
  1661                           
  1662                           ; BSR set to: 0
  1663  000A28  0E02               	movlw	2
  1664  000A2A  0100               	movlb	0	; () banked
  1665  000A2C  616F               	cpfslt	___ftpack@exp& (0+255),b
  1666  000A2E  D7F2               	goto	l1610
  1667  000A30                     l557:
  1668                           
  1669                           ; BSR set to: 0
  1670  000A30  0100               	movlb	0	; () banked
  1671  000A32  B16F               	btfsc	___ftpack@exp& (0+255),0,b
  1672  000A34  D002               	goto	l1618
  1673                           
  1674                           ; BSR set to: 0
  1675  000A36  0100               	movlb	0	; () banked
  1676  000A38  9F6D               	bcf	(___ftpack@arg+1)& (0+255),7,b
  1677  000A3A                     l1618:
  1678                           
  1679                           ; BSR set to: 0
  1680  000A3A  0100               	movlb	0	; () banked
  1681  000A3C  90D8               	bcf	status,0,c
  1682  000A3E  336F               	rrcf	___ftpack@exp& (0+255),f,b
  1683  000A40  0100               	movlb	0	; () banked
  1684  000A42  516F               	movf	___ftpack@exp& (0+255),w,b
  1685  000A44  0100               	movlb	0	; () banked
  1686  000A46  136E               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  1687                           
  1688                           ; BSR set to: 0
  1689  000A48  0100               	movlb	0	; () banked
  1690  000A4A  5170               	movf	___ftpack@sign& (0+255),w,b
  1691  000A4C  0100               	movlb	0	; () banked
  1692  000A4E  B4D8               	btfsc	status,2,c
  1693  000A50  D002               	goto	l1624
  1694                           
  1695                           ; BSR set to: 0
  1696  000A52  0100               	movlb	0	; () banked
  1697  000A54  8F6E               	bsf	(___ftpack@arg+2)& (0+255),7,b
  1698  000A56                     l1624:
  1699                           
  1700                           ; BSR set to: 0
  1701  000A56  C06C  F06C         	movff	___ftpack@arg,?___ftpack
  1702  000A5A  C06D  F06D         	movff	___ftpack@arg+1,?___ftpack+1
  1703  000A5E  C06E  F06E         	movff	___ftpack@arg+2,?___ftpack+2
  1704  000A62  0012               	return	
  1705  000A64                     __end_of___ftpack:
  1706                           	opt stack 0
  1707                           tblptru	equ	0xFF8
  1708                           tblptrh	equ	0xFF7
  1709                           tblptrl	equ	0xFF6
  1710                           tablat	equ	0xFF5
  1711                           intcon	equ	0xFF2
  1712                           intcon2	equ	0xFF1
  1713                           postinc0	equ	0xFEE
  1714                           wreg	equ	0xFE8
  1715                           status	equ	0xFD8
  1716                           
  1717 ;; *************** function _error *****************
  1718 ;; Defined at:
  1719 ;;		line 218 in file "main.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  code            1    wreg     unsigned char 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  code            1   14[BANK0 ] unsigned char 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1733 ;;      Params:         0       0       0       0       0       0       0       0       0
  1734 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1736 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1737 ;;Total ram usage:        1 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    5
  1740 ;; This function calls:
  1741 ;;		_num_to_disp
  1742 ;;		_set_digit
  1743 ;; This function is called by:
  1744 ;;		_main
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           	psect	text10
  1749  000F98                     __ptext10:
  1750                           	opt stack 0
  1751  000F98                     _error:
  1752                           	opt stack 25
  1753                           
  1754                           ; BSR set to: 0
  1755                           ;incstack = 0
  1756                           ;error@code stored from wreg
  1757  000F98  0100               	movlb	0	; () banked
  1758  000F9A  6F6E               	movwf	error@code& (0+255),b
  1759                           
  1760                           ;main.c: 221: disp[0] = num_to_disp('E');
  1761  000F9C  0E45               	movlw	69
  1762  000F9E  ECAF  F006         	call	_num_to_disp
  1763  000FA2  0100               	movlb	0	; () banked
  1764  000FA4  6F8F               	movwf	_disp& (0+255),b
  1765                           
  1766                           ;main.c: 222: disp[1] = num_to_disp(code);
  1767  000FA6  0100               	movlb	0	; () banked
  1768  000FA8  516E               	movf	error@code& (0+255),w,b
  1769  000FAA  ECAF  F006         	call	_num_to_disp
  1770  000FAE  0100               	movlb	0	; () banked
  1771  000FB0  6F90               	movwf	(_disp+1)& (0+255),b
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;main.c: 223: set_digit(disp[0], 0);
  1775  000FB2  0E00               	movlw	0
  1776  000FB4  0100               	movlb	0	; () banked
  1777  000FB6  6F6C               	movwf	set_digit@num& (0+255),b
  1778  000FB8  0100               	movlb	0	; () banked
  1779  000FBA  518F               	movf	_disp& (0+255),w,b
  1780  000FBC  ECEF  F006         	call	_set_digit
  1781                           
  1782                           ;main.c: 224: set_digit(disp[1], 1);
  1783  000FC0  0E01               	movlw	1
  1784  000FC2  0100               	movlb	0	; () banked
  1785  000FC4  6F6C               	movwf	set_digit@num& (0+255),b
  1786  000FC6  0100               	movlb	0	; () banked
  1787  000FC8  5190               	movf	(_disp+1)& (0+255),w,b
  1788  000FCA  ECEF  F006         	call	_set_digit
  1789  000FCE  0012               	return		;funcret
  1790  000FD0                     __end_of_error:
  1791                           	opt stack 0
  1792                           tblptru	equ	0xFF8
  1793                           tblptrh	equ	0xFF7
  1794                           tblptrl	equ	0xFF6
  1795                           tablat	equ	0xFF5
  1796                           intcon	equ	0xFF2
  1797                           intcon2	equ	0xFF1
  1798                           postinc0	equ	0xFEE
  1799                           wreg	equ	0xFE8
  1800                           status	equ	0xFD8
  1801                           
  1802 ;; *************** function _set_digit *****************
  1803 ;; Defined at:
  1804 ;;		line 278 in file "main.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  dig             1    wreg     unsigned char 
  1807 ;;  num             1   12[BANK0 ] unsigned char 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  dig             1   13[BANK0 ] unsigned char 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1819 ;;      Params:         0       1       0       0       0       0       0       0       0
  1820 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1822 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1823 ;;Total ram usage:        2 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    4
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_error
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text11
  1834  000DDE                     __ptext11:
  1835                           	opt stack 0
  1836  000DDE                     _set_digit:
  1837                           	opt stack 25
  1838                           
  1839                           ;incstack = 0
  1840                           ;set_digit@dig stored from wreg
  1841  000DDE  0100               	movlb	0	; () banked
  1842  000DE0  6F6D               	movwf	set_digit@dig& (0+255),b
  1843                           
  1844                           ;main.c: 281: TRISB = 0x00;
  1845  000DE2  0E00               	movlw	0
  1846  000DE4  6E93               	movwf	3987,c	;volatile
  1847                           
  1848                           ;main.c: 283: LATA3 = 1;
  1849  000DE6  8689               	bsf	3977,3,c	;volatile
  1850                           
  1851                           ;main.c: 285: LATA4 = num;
  1852  000DE8  0100               	movlb	0	; () banked
  1853  000DEA  A16C               	btfss	set_digit@num& (0+255),0,b
  1854  000DEC  D002               	goto	u1070
  1855  000DEE  8889               	bsf	3977,4,c	;volatile
  1856  000DF0  D001               	goto	l1698
  1857  000DF2                     u1070:
  1858  000DF2  9889               	bcf	3977,4,c	;volatile
  1859  000DF4                     l1698:
  1860                           
  1861                           ;main.c: 286: LATA5 = !num;
  1862  000DF4  0100               	movlb	0	; () banked
  1863  000DF6  516C               	movf	set_digit@num& (0+255),w,b
  1864  000DF8  0100               	movlb	0	; () banked
  1865  000DFA  A4D8               	btfss	status,2,c
  1866  000DFC  D002               	goto	u1090
  1867  000DFE  8A89               	bsf	3977,5,c	;volatile
  1868  000E00  D001               	goto	l1700
  1869  000E02                     u1090:
  1870  000E02  9A89               	bcf	3977,5,c	;volatile
  1871  000E04                     l1700:
  1872                           
  1873                           ;main.c: 288: LATB2 = 0!=(dig & 0b1);
  1874  000E04  0100               	movlb	0	; () banked
  1875  000E06  A16D               	btfss	set_digit@dig& (0+255),0,b
  1876  000E08  D002               	goto	u1110
  1877  000E0A  848A               	bsf	3978,2,c	;volatile
  1878  000E0C  D001               	goto	l1702
  1879  000E0E                     u1110:
  1880  000E0E  948A               	bcf	3978,2,c	;volatile
  1881  000E10                     l1702:
  1882                           
  1883                           ;main.c: 289: LATB5 = 0!=(dig & 0b10);
  1884  000E10  0100               	movlb	0	; () banked
  1885  000E12  A36D               	btfss	set_digit@dig& (0+255),1,b
  1886  000E14  D002               	goto	u1130
  1887  000E16  8A8A               	bsf	3978,5,c	;volatile
  1888  000E18  D001               	goto	l1704
  1889  000E1A                     u1130:
  1890  000E1A  9A8A               	bcf	3978,5,c	;volatile
  1891  000E1C                     l1704:
  1892                           
  1893                           ;main.c: 290: LATB3 = 0!=(dig & 0b100);
  1894  000E1C  0100               	movlb	0	; () banked
  1895  000E1E  A56D               	btfss	set_digit@dig& (0+255),2,b
  1896  000E20  D002               	goto	u1150
  1897  000E22  868A               	bsf	3978,3,c	;volatile
  1898  000E24  D001               	goto	l1706
  1899  000E26                     u1150:
  1900  000E26  968A               	bcf	3978,3,c	;volatile
  1901  000E28                     l1706:
  1902                           
  1903                           ;main.c: 291: LATB0 = 0!=(dig & 0b1000);
  1904  000E28  0100               	movlb	0	; () banked
  1905  000E2A  A76D               	btfss	set_digit@dig& (0+255),3,b
  1906  000E2C  D002               	goto	u1170
  1907  000E2E  808A               	bsf	3978,0,c	;volatile
  1908  000E30  D001               	goto	l1708
  1909  000E32                     u1170:
  1910  000E32  908A               	bcf	3978,0,c	;volatile
  1911  000E34                     l1708:
  1912                           
  1913                           ;main.c: 292: LATB4 = 0!=(dig & 0b10000);
  1914  000E34  0100               	movlb	0	; () banked
  1915  000E36  A96D               	btfss	set_digit@dig& (0+255),4,b
  1916  000E38  D002               	goto	u1190
  1917  000E3A  888A               	bsf	3978,4,c	;volatile
  1918  000E3C  D001               	goto	l1710
  1919  000E3E                     u1190:
  1920  000E3E  988A               	bcf	3978,4,c	;volatile
  1921  000E40                     l1710:
  1922                           
  1923                           ;main.c: 293: LATB1 = 0!=(dig & 0b100000);
  1924  000E40  0100               	movlb	0	; () banked
  1925  000E42  AB6D               	btfss	set_digit@dig& (0+255),5,b
  1926  000E44  D002               	goto	u1210
  1927  000E46  828A               	bsf	3978,1,c	;volatile
  1928  000E48  D001               	goto	l1712
  1929  000E4A                     u1210:
  1930  000E4A  928A               	bcf	3978,1,c	;volatile
  1931  000E4C                     l1712:
  1932                           
  1933                           ;main.c: 294: LATB6 = 0!=(dig & 0b1000000);
  1934  000E4C  0100               	movlb	0	; () banked
  1935  000E4E  AD6D               	btfss	set_digit@dig& (0+255),6,b
  1936  000E50  D002               	goto	u1230
  1937  000E52  8C8A               	bsf	3978,6,c	;volatile
  1938  000E54  0012               	return	
  1939  000E56                     u1230:
  1940  000E56  9C8A               	bcf	3978,6,c	;volatile
  1941  000E58  0012               	return		;funcret
  1942  000E5A                     __end_of_set_digit:
  1943                           	opt stack 0
  1944                           tblptru	equ	0xFF8
  1945                           tblptrh	equ	0xFF7
  1946                           tblptrl	equ	0xFF6
  1947                           tablat	equ	0xFF5
  1948                           intcon	equ	0xFF2
  1949                           intcon2	equ	0xFF1
  1950                           postinc0	equ	0xFEE
  1951                           wreg	equ	0xFE8
  1952                           status	equ	0xFD8
  1953                           
  1954 ;; *************** function _num_to_disp *****************
  1955 ;; Defined at:
  1956 ;;		line 258 in file "main.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  num             1    wreg     unsigned char 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  num             1   13[BANK0 ] unsigned char 
  1961 ;;  ret             1   12[BANK0 ] unsigned char 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      unsigned char 
  1964 ;; Registers used:
  1965 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1971 ;;      Params:         0       0       0       0       0       0       0       0       0
  1972 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1973 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1974 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1975 ;;Total ram usage:        2 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; Hardware stack levels required when called:    4
  1978 ;; This function calls:
  1979 ;;		Nothing
  1980 ;; This function is called by:
  1981 ;;		_error
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text12
  1986  000D5E                     __ptext12:
  1987                           	opt stack 0
  1988  000D5E                     _num_to_disp:
  1989                           	opt stack 25
  1990                           
  1991                           ;incstack = 0
  1992                           ;num_to_disp@num stored from wreg
  1993  000D5E  0100               	movlb	0	; () banked
  1994  000D60  6F6D               	movwf	num_to_disp@num& (0+255),b
  1995                           
  1996                           ;main.c: 260: unsigned char ret;
  1997                           ;main.c: 261: switch (num)
  1998  000D62  D013               	goto	l1686
  1999  000D64                     l1678:
  2000                           
  2001                           ;main.c: 264: ret = font[num];
  2002  000D64  0100               	movlb	0	; () banked
  2003  000D66  516D               	movf	num_to_disp@num& (0+255),w,b
  2004  000D68  0D01               	mullw	1
  2005  000D6A  0E01               	movlw	low _font
  2006  000D6C  24F3               	addwf	prodl,w,c
  2007  000D6E  6EF6               	movwf	tblptrl,c
  2008  000D70  0E08               	movlw	high _font
  2009  000D72  20F4               	addwfc	prodh,w,c
  2010  000D74  6EF7               	movwf	tblptrh,c
  2011  000D76                     	if	0	;There are less than 3 active tblptr bytes
  2012  000D76                     	endif
  2013  000D76  0008               	tblrd		*
  2014  000D78  CFF5 F06C          	movff	tablat,num_to_disp@ret
  2015                           
  2016                           ;main.c: 265: break;
  2017  000D7C  D02D               	goto	l1688
  2018  000D7E                     l1680:
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;main.c: 267: case 'e':
  2022                           ;main.c: 268: ret = (0b1 | 0 | 0 | 0b1000 | 0b10000 | 0b100000 | 0b1000000);
  2023  000D7E  0E79               	movlw	121
  2024  000D80  D001               	goto	L1
  2025  000D82                     l1682:
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;main.c: 271: ret = (0);
  2029  000D82  0E00               	movlw	0
  2030  000D84                     L1:
  2031  000D84  0100               	movlb	0	; () banked
  2032  000D86  6F6C               	movwf	num_to_disp@ret& (0+255),b
  2033                           
  2034                           ; BSR set to: 0
  2035                           ;main.c: 273: }
  2036                           
  2037                           ;main.c: 272: break;
  2038  000D88  D027               	goto	l1688
  2039  000D8A                     l1686:
  2040  000D8A  0100               	movlb	0	; () banked
  2041  000D8C  516D               	movf	num_to_disp@num& (0+255),w,b
  2042                           
  2043                           ; Switch size 1, requested type "space"
  2044                           ; Number of cases is 12, Range of values is 0 to 101
  2045                           ; switch strategies available:
  2046                           ; Name         Instructions Cycles
  2047                           ; simple_byte           37    19 (average)
  2048                           ;	Chosen strategy is simple_byte
  2049  000D8E  0A00               	xorlw	0	; case 0
  2050  000D90  B4D8               	btfsc	status,2,c
  2051  000D92  D7E8               	goto	l1678
  2052  000D94  0A01               	xorlw	1	; case 1
  2053  000D96  B4D8               	btfsc	status,2,c
  2054  000D98  D7E5               	goto	l1678
  2055  000D9A  0A03               	xorlw	3	; case 2
  2056  000D9C  B4D8               	btfsc	status,2,c
  2057  000D9E  D7E2               	goto	l1678
  2058  000DA0  0A01               	xorlw	1	; case 3
  2059  000DA2  B4D8               	btfsc	status,2,c
  2060  000DA4  D7DF               	goto	l1678
  2061  000DA6  0A07               	xorlw	7	; case 4
  2062  000DA8  B4D8               	btfsc	status,2,c
  2063  000DAA  D7DC               	goto	l1678
  2064  000DAC  0A01               	xorlw	1	; case 5
  2065  000DAE  B4D8               	btfsc	status,2,c
  2066  000DB0  D7D9               	goto	l1678
  2067  000DB2  0A03               	xorlw	3	; case 6
  2068  000DB4  B4D8               	btfsc	status,2,c
  2069  000DB6  D7D6               	goto	l1678
  2070  000DB8  0A01               	xorlw	1	; case 7
  2071  000DBA  B4D8               	btfsc	status,2,c
  2072  000DBC  D7D3               	goto	l1678
  2073  000DBE  0A0F               	xorlw	15	; case 8
  2074  000DC0  B4D8               	btfsc	status,2,c
  2075  000DC2  D7D0               	goto	l1678
  2076  000DC4  0A01               	xorlw	1	; case 9
  2077  000DC6  B4D8               	btfsc	status,2,c
  2078  000DC8  D7CD               	goto	l1678
  2079  000DCA  0A4C               	xorlw	76	; case 69
  2080  000DCC  B4D8               	btfsc	status,2,c
  2081  000DCE  D7D7               	goto	l1680
  2082  000DD0  0A20               	xorlw	32	; case 101
  2083  000DD2  B4D8               	btfsc	status,2,c
  2084  000DD4  D7D4               	goto	l1680
  2085  000DD6  D7D5               	goto	l1682
  2086  000DD8                     l1688:
  2087                           
  2088                           ; BSR set to: 0
  2089                           ;main.c: 274: return ret;
  2090  000DD8  0100               	movlb	0	; () banked
  2091  000DDA  516C               	movf	num_to_disp@ret& (0+255),w,b
  2092  000DDC  0012               	return	
  2093  000DDE                     __end_of_num_to_disp:
  2094                           	opt stack 0
  2095                           tblptru	equ	0xFF8
  2096                           tblptrh	equ	0xFF7
  2097                           tblptrl	equ	0xFF6
  2098                           tablat	equ	0xFF5
  2099                           prodh	equ	0xFF4
  2100                           prodl	equ	0xFF3
  2101                           intcon	equ	0xFF2
  2102                           intcon2	equ	0xFF1
  2103                           postinc0	equ	0xFEE
  2104                           wreg	equ	0xFE8
  2105                           status	equ	0xFD8
  2106                           
  2107 ;; *************** function ___ftge *****************
  2108 ;; Defined at:
  2109 ;;		line 4 in file "/opt/microchip/xc8/v1.38/sources/common/ftge.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  ff1             3   12[BANK0 ] float 
  2112 ;;  ff2             3   15[BANK0 ] float 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;		None               void
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2124 ;;      Params:         0       6       0       0       0       0       0       0       0
  2125 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2126 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2127 ;;      Totals:         0       9       0       0       0       0       0       0       0
  2128 ;;Total ram usage:        9 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    4
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_main
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text13
  2139  000B30                     __ptext13:
  2140                           	opt stack 0
  2141  000B30                     ___ftge:
  2142                           	opt stack 26
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;incstack = 0
  2146  000B30  0100               	movlb	0	; () banked
  2147  000B32  AF6E               	btfss	(___ftge@ff1+2)& (0+255),7,b
  2148  000B34  D01D               	goto	l1904
  2149                           
  2150                           ; BSR set to: 0
  2151  000B36  C06C  F072         	movff	___ftge@ff1,??___ftge
  2152  000B3A  C06D  F073         	movff	___ftge@ff1+1,??___ftge+1
  2153  000B3E  C06E  F074         	movff	___ftge@ff1+2,??___ftge+2
  2154  000B42  0100               	movlb	0	; () banked
  2155  000B44  1F72               	comf	??___ftge& (0+255),f,b
  2156  000B46  1F73               	comf	(??___ftge+1)& (0+255),f,b
  2157  000B48  1F74               	comf	(??___ftge+2)& (0+255),f,b
  2158  000B4A  2B72               	incf	??___ftge& (0+255),f,b
  2159  000B4C  0E00               	movlw	0
  2160  000B4E  2373               	addwfc	(??___ftge+1)& (0+255),f,b
  2161  000B50  2374               	addwfc	(??___ftge+2)& (0+255),f,b
  2162  000B52  0E00               	movlw	0
  2163  000B54  0100               	movlb	0	; () banked
  2164  000B56  2572               	addwf	??___ftge& (0+255),w,b
  2165  000B58  0100               	movlb	0	; () banked
  2166  000B5A  6F6C               	movwf	___ftge@ff1& (0+255),b
  2167  000B5C  0E00               	movlw	0
  2168  000B5E  0100               	movlb	0	; () banked
  2169  000B60  2173               	addwfc	(??___ftge+1)& (0+255),w,b
  2170  000B62  0100               	movlb	0	; () banked
  2171  000B64  6F6D               	movwf	(___ftge@ff1+1)& (0+255),b
  2172  000B66  0E80               	movlw	128
  2173  000B68  0100               	movlb	0	; () banked
  2174  000B6A  2174               	addwfc	(??___ftge+2)& (0+255),w,b
  2175  000B6C  0100               	movlb	0	; () banked
  2176  000B6E  6F6E               	movwf	(___ftge@ff1+2)& (0+255),b
  2177  000B70                     l1904:
  2178                           
  2179                           ; BSR set to: 0
  2180  000B70  0100               	movlb	0	; () banked
  2181  000B72  AF71               	btfss	(___ftge@ff2+2)& (0+255),7,b
  2182  000B74  D01D               	goto	l1908
  2183                           
  2184                           ; BSR set to: 0
  2185  000B76  C06F  F072         	movff	___ftge@ff2,??___ftge
  2186  000B7A  C070  F073         	movff	___ftge@ff2+1,??___ftge+1
  2187  000B7E  C071  F074         	movff	___ftge@ff2+2,??___ftge+2
  2188  000B82  0100               	movlb	0	; () banked
  2189  000B84  1F72               	comf	??___ftge& (0+255),f,b
  2190  000B86  1F73               	comf	(??___ftge+1)& (0+255),f,b
  2191  000B88  1F74               	comf	(??___ftge+2)& (0+255),f,b
  2192  000B8A  2B72               	incf	??___ftge& (0+255),f,b
  2193  000B8C  0E00               	movlw	0
  2194  000B8E  2373               	addwfc	(??___ftge+1)& (0+255),f,b
  2195  000B90  2374               	addwfc	(??___ftge+2)& (0+255),f,b
  2196  000B92  0E00               	movlw	0
  2197  000B94  0100               	movlb	0	; () banked
  2198  000B96  2572               	addwf	??___ftge& (0+255),w,b
  2199  000B98  0100               	movlb	0	; () banked
  2200  000B9A  6F6F               	movwf	___ftge@ff2& (0+255),b
  2201  000B9C  0E00               	movlw	0
  2202  000B9E  0100               	movlb	0	; () banked
  2203  000BA0  2173               	addwfc	(??___ftge+1)& (0+255),w,b
  2204  000BA2  0100               	movlb	0	; () banked
  2205  000BA4  6F70               	movwf	(___ftge@ff2+1)& (0+255),b
  2206  000BA6  0E80               	movlw	128
  2207  000BA8  0100               	movlb	0	; () banked
  2208  000BAA  2174               	addwfc	(??___ftge+2)& (0+255),w,b
  2209  000BAC  0100               	movlb	0	; () banked
  2210  000BAE  6F71               	movwf	(___ftge@ff2+2)& (0+255),b
  2211  000BB0                     l1908:
  2212                           
  2213                           ; BSR set to: 0
  2214  000BB0  0E00               	movlw	0
  2215  000BB2  0100               	movlb	0	; () banked
  2216  000BB4  1B6C               	xorwf	___ftge@ff1& (0+255),f,b
  2217  000BB6  0E00               	movlw	0
  2218  000BB8  0100               	movlb	0	; () banked
  2219  000BBA  1B6D               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  2220  000BBC  0E80               	movlw	128
  2221  000BBE  0100               	movlb	0	; () banked
  2222  000BC0  1B6E               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  2223                           
  2224                           ; BSR set to: 0
  2225  000BC2  0E00               	movlw	0
  2226  000BC4  0100               	movlb	0	; () banked
  2227  000BC6  1B6F               	xorwf	___ftge@ff2& (0+255),f,b
  2228  000BC8  0E00               	movlw	0
  2229  000BCA  0100               	movlb	0	; () banked
  2230  000BCC  1B70               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  2231  000BCE  0E80               	movlw	128
  2232  000BD0  0100               	movlb	0	; () banked
  2233  000BD2  1B71               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  2234  000BD4  0100               	movlb	0	; () banked
  2235  000BD6  516F               	movf	___ftge@ff2& (0+255),w,b
  2236  000BD8  0100               	movlb	0	; () banked
  2237  000BDA  5D6C               	subwf	___ftge@ff1& (0+255),w,b
  2238  000BDC  0100               	movlb	0	; () banked
  2239  000BDE  5170               	movf	(___ftge@ff2+1)& (0+255),w,b
  2240  000BE0  0100               	movlb	0	; () banked
  2241  000BE2  596D               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  2242  000BE4  0100               	movlb	0	; () banked
  2243  000BE6  5171               	movf	(___ftge@ff2+2)& (0+255),w,b
  2244  000BE8  0100               	movlb	0	; () banked
  2245  000BEA  596E               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  2246  000BEC  B0D8               	btfsc	status,0,c
  2247  000BEE  D002               	goto	l1914
  2248                           
  2249                           ; BSR set to: 0
  2250  000BF0  90D8               	bcf	status,0,c
  2251  000BF2  0012               	return	
  2252  000BF4                     l1914:
  2253                           
  2254                           ; BSR set to: 0
  2255  000BF4  80D8               	bsf	status,0,c
  2256                           
  2257                           ; BSR set to: 0
  2258  000BF6  0012               	return	
  2259  000BF8                     __end_of___ftge:
  2260                           	opt stack 0
  2261                           tblptru	equ	0xFF8
  2262                           tblptrh	equ	0xFF7
  2263                           tblptrl	equ	0xFF6
  2264                           tablat	equ	0xFF5
  2265                           prodh	equ	0xFF4
  2266                           prodl	equ	0xFF3
  2267                           intcon	equ	0xFF2
  2268                           intcon2	equ	0xFF1
  2269                           postinc0	equ	0xFEE
  2270                           wreg	equ	0xFE8
  2271                           status	equ	0xFD8
  2272                           
  2273 ;; *************** function _ISR_low *****************
  2274 ;; Defined at:
  2275 ;;		line 317 in file "main.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;		None
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  ins             1   11[BANK0 ] unsigned char 
  2280 ;;  mask_leds       1    5[BANK0 ] unsigned char 
  2281 ;;  cur             1    4[BANK0 ] enum E3760
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2291 ;;      Params:         0       0       0       0       0       0       0       0       0
  2292 ;;      Locals:         0      12       0       0       0       0       0       0       0
  2293 ;;      Temps:         22       0       0       0       0       0       0       0       0
  2294 ;;      Totals:        22      12       0       0       0       0       0       0       0
  2295 ;;Total ram usage:       34 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    3
  2298 ;; This function calls:
  2299 ;;		___aldiv
  2300 ;;		_buzzer
  2301 ;;		_sample_inputs
  2302 ;;		_set_LEDs
  2303 ;;		i1_set_digit
  2304 ;; This function is called by:
  2305 ;;		Interrupt level 1
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	intcodelo
  2310  000018                     __pintcodelo:
  2311                           	opt stack 0
  2312  000018                     _ISR_low:
  2313                           	opt stack 24
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;incstack = 0
  2317  000018  8044               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2318  00001A  CFD8 F02C          	movff	status,??_ISR_low+5
  2319  00001E  CFE8 F02D          	movff	wreg,??_ISR_low+6
  2320  000022  CFE0 F02E          	movff	bsr,??_ISR_low+7
  2321  000026  CFFA F02F          	movff	pclath,??_ISR_low+8
  2322  00002A  CFFB F030          	movff	pclatu,??_ISR_low+9
  2323  00002E  CFE9 F031          	movff	fsr0l,??_ISR_low+10
  2324  000032  CFEA F032          	movff	fsr0h,??_ISR_low+11
  2325  000036  CFE1 F033          	movff	fsr1l,??_ISR_low+12
  2326  00003A  CFE2 F034          	movff	fsr1h,??_ISR_low+13
  2327  00003E  CFD9 F035          	movff	fsr2l,??_ISR_low+14
  2328  000042  CFDA F036          	movff	fsr2h,??_ISR_low+15
  2329  000046  CFF3 F037          	movff	prodl,??_ISR_low+16
  2330  00004A  CFF4 F038          	movff	prodh,??_ISR_low+17
  2331  00004E  CFF6 F039          	movff	tblptrl,??_ISR_low+18
  2332  000052  CFF7 F03A          	movff	tblptrh,??_ISR_low+19
  2333  000056  CFF8 F03B          	movff	tblptru,??_ISR_low+20
  2334  00005A  CFF5 F03C          	movff	tablat,??_ISR_low+21
  2335                           
  2336                           ;main.c: 320: if (TMR0IE && TMR0IF)
  2337  00005E  AAF2               	btfss	intcon,5,c	;volatile
  2338  000060  D000               	goto	i1l1972
  2339  000062                     i1l1972:
  2340                           
  2341                           ;main.c: 323: }
  2342                           ;main.c: 325: scan_state cur = KEYS;
  2343  000062  0E00               	movlw	0
  2344  000064  0100               	movlb	0	; () banked
  2345  000066  6F64               	movwf	ISR_low@cur& (0+255),b
  2346                           
  2347                           ;main.c: 326: unsigned char ins = 0;
  2348  000068  0E00               	movlw	0
  2349  00006A  0100               	movlb	0	; () banked
  2350  00006C  6F6B               	movwf	ISR_low@ins& (0+255),b
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;main.c: 327: static unsigned char ins_prev = 0;
  2354                           ;main.c: 328: unsigned char mask_leds;
  2355                           ;main.c: 330: if (TMR2IE && TMR2IF)
  2356  00006E  B29D               	btfsc	3997,1,c	;volatile
  2357                           
  2358                           ; BSR set to: 0
  2359  000070  A29E               	btfss	3998,1,c	;volatile
  2360  000072  D16D               	goto	i1l332
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;main.c: 331: {
  2364                           ;main.c: 332: TMR2IF = 0;
  2365  000074  929E               	bcf	3998,1,c	;volatile
  2366                           
  2367                           ;main.c: 333: switch (cur)
  2368  000076  D15D               	goto	i1l2080
  2369  000078                     i1l288:
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;main.c: 337: ins_prev = ins;
  2373  000078  C06B  F091         	movff	ISR_low@ins,ISR_low@ins_prev
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;main.c: 339: ins = sample_inputs();
  2377  00007C  EC5E  F008         	call	_sample_inputs	;wreg free
  2378  000080  0100               	movlb	0	; () banked
  2379  000082  6F6B               	movwf	ISR_low@ins& (0+255),b
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;main.c: 342: if ((ins & 0b10000) && !(ins_prev && 0b10000))
  2383  000084  0100               	movlb	0	; () banked
  2384  000086  A96B               	btfss	ISR_low@ins& (0+255),4,b
  2385  000088  D014               	goto	i1l289
  2386                           
  2387                           ; BSR set to: 0
  2388  00008A  0100               	movlb	0	; () banked
  2389  00008C  5191               	movf	ISR_low@ins_prev& (0+255),w,b
  2390  00008E  A4D8               	btfss	status,2,c
  2391  000090  D010               	goto	i1l289
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;main.c: 343: {
  2395                           ;main.c: 344: state = ((state != OFF) ? OFF : IDLE);
  2396                           
  2397                           ; BSR set to: 0
  2398                           
  2399                           ; BSR set to: 0
  2400  000092  0100               	movlb	0	; () banked
  2401  000094  5195               	movf	_state& (0+255),w,b
  2402  000096  A4D8               	btfss	status,2,c
  2403  000098  D005               	goto	i1l1992
  2404                           
  2405                           ; BSR set to: 0
  2406  00009A  0E00               	movlw	0
  2407  00009C  0100               	movlb	0	; () banked
  2408  00009E  6F68               	movwf	(_ISR_low$207+1)& (0+255),b
  2409  0000A0  0E02               	movlw	2
  2410  0000A2  D004               	goto	L2
  2411  0000A4                     i1l1992:
  2412                           
  2413                           ; BSR set to: 0
  2414  0000A4  0E00               	movlw	0
  2415  0000A6  0100               	movlb	0	; () banked
  2416  0000A8  6F68               	movwf	(_ISR_low$207+1)& (0+255),b
  2417  0000AA  0E00               	movlw	0
  2418  0000AC                     L2:
  2419  0000AC  6F67               	movwf	_ISR_low$207& (0+255),b
  2420                           
  2421                           ; BSR set to: 0
  2422                           
  2423                           ; BSR set to: 0
  2424  0000AE  C067  F095         	movff	_ISR_low$207,_state
  2425  0000B2                     i1l289:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;main.c: 345: }
  2429                           ;main.c: 347: if (state == OFF) break;
  2430  0000B2  0100               	movlb	0	; () banked
  2431  0000B4  5195               	movf	_state& (0+255),w,b
  2432  0000B6  B4D8               	btfsc	status,2,c
  2433  0000B8  D14A               	goto	i1l332
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;main.c: 352: }
  2437                           ;main.c: 355: if ((ins & 0b10) && !(ins_prev && 0b10))
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;main.c: 350: {
  2441                           
  2442                           ; BSR set to: 0
  2443                           
  2444                           ; BSR set to: 0
  2445                           
  2446                           ; BSR set to: 0
  2447                           
  2448                           ; BSR set to: 0
  2449  0000BA  0100               	movlb	0	; () banked
  2450  0000BC  A36B               	btfss	ISR_low@ins& (0+255),1,b
  2451  0000BE  D009               	goto	i1l2008
  2452                           
  2453                           ; BSR set to: 0
  2454  0000C0  0100               	movlb	0	; () banked
  2455  0000C2  5191               	movf	ISR_low@ins_prev& (0+255),w,b
  2456  0000C4  A4D8               	btfss	status,2,c
  2457  0000C6  D005               	goto	i1l2008
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;main.c: 356: {
  2461                           ;main.c: 357: (*cur_number)++;
  2462                           
  2463                           ; BSR set to: 0
  2464                           
  2465                           ; BSR set to: 0
  2466  0000C8  C097  FFD9         	movff	_cur_number,fsr2l
  2467  0000CC  C098  FFDA         	movff	_cur_number+1,fsr2h
  2468  0000D0  2ADF               	incf	indf2,f,c
  2469  0000D2                     i1l2008:
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;main.c: 358: }
  2473                           ;main.c: 361: if ((ins & 0b100) && !(ins_prev && 0b100))
  2474  0000D2  0100               	movlb	0	; () banked
  2475  0000D4  A56B               	btfss	ISR_low@ins& (0+255),2,b
  2476  0000D6  D009               	goto	i1l2016
  2477                           
  2478                           ; BSR set to: 0
  2479  0000D8  0100               	movlb	0	; () banked
  2480  0000DA  5191               	movf	ISR_low@ins_prev& (0+255),w,b
  2481  0000DC  A4D8               	btfss	status,2,c
  2482  0000DE  D005               	goto	i1l2016
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;main.c: 362: {
  2486                           ;main.c: 363: (*cur_number)--;
  2487                           
  2488                           ; BSR set to: 0
  2489                           
  2490                           ; BSR set to: 0
  2491  0000E0  C097  FFD9         	movff	_cur_number,fsr2l
  2492  0000E4  C098  FFDA         	movff	_cur_number+1,fsr2h
  2493  0000E8  06DF               	decf	indf2,f,c
  2494  0000EA                     i1l2016:
  2495                           
  2496                           ; BSR set to: 0
  2497                           ;main.c: 364: }
  2498                           ;main.c: 366: if ((ins & 0b1000) && !(ins_prev && 0b1000))
  2499  0000EA  0100               	movlb	0	; () banked
  2500  0000EC  A76B               	btfss	ISR_low@ins& (0+255),3,b
  2501  0000EE  D009               	goto	i1l307
  2502                           
  2503                           ; BSR set to: 0
  2504  0000F0  0100               	movlb	0	; () banked
  2505  0000F2  5191               	movf	ISR_low@ins_prev& (0+255),w,b
  2506  0000F4  A4D8               	btfss	status,2,c
  2507  0000F6  D005               	goto	i1l307
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;main.c: 367: {
  2511                           ;main.c: 368: unit = 1 - unit;
  2512                           
  2513                           ; BSR set to: 0
  2514  0000F8  B443               	btfsc	_unit/(0+8),_unit& (0+7),c
  2515  0000FA  D002               	goto	i1u180_20
  2516  0000FC  8443               	bsf	_unit/(0+8),_unit& (0+7),c
  2517  0000FE  D001               	goto	i1l307
  2518  000100                     i1u180_20:
  2519  000100  9443               	bcf	_unit/(0+8),_unit& (0+7),c
  2520  000102                     i1l307:
  2521                           
  2522                           ;main.c: 369: }
  2523                           ;main.c: 371: if ((ins & 0b100000) && !(ins_prev && 0b100000))
  2524  000102  0100               	movlb	0	; () banked
  2525  000104  AB6B               	btfss	ISR_low@ins& (0+255),5,b
  2526  000106  D123               	goto	i1l332
  2527                           
  2528                           ; BSR set to: 0
  2529  000108  0100               	movlb	0	; () banked
  2530  00010A  5191               	movf	ISR_low@ins_prev& (0+255),w,b
  2531  00010C  A4D8               	btfss	status,2,c
  2532  00010E  D11F               	goto	i1l332
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;main.c: 372: buzzer(1);
  2536                           
  2537                           ; BSR set to: 0
  2538                           
  2539                           ; BSR set to: 0
  2540  000110  0E01               	movlw	1
  2541  000112  EC65  F008         	call	_buzzer
  2542                           
  2543                           ;main.c: 373: break;
  2544  000116  D11B               	goto	i1l332
  2545  000118                     i1l313:
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;main.c: 375: mask_leds = (timer_led ? 0b1 : 0) |
  2549                           ;main.c: 376: (timer && (((time / 3600) >= high_hour && (time / 3600) < low_hour) ? 0b10
      +                           : 0)) |
  2550                           ;main.c: 377: (timer && (((time / 3600) < high_hour || (time / 3600) >= low_hour) ? 0b10
      +                          0 : 0)) |
  2551                           ;main.c: 378: ((heat_mode != LATC0 && heat_mode != LATC1) ? 0b1000 : 0) |
  2552                           ;main.c: 379: (power_led ? 0b10000 : 0) |
  2553                           ;main.c: 380: (unit ? 0b1000000 : 0b100000);
  2554  000118  B443               	btfsc	_unit/(0+8),_unit& (0+7),c
  2555  00011A  D005               	goto	i1l2030
  2556                           
  2557                           ; BSR set to: 0
  2558  00011C  0E00               	movlw	0
  2559  00011E  0100               	movlb	0	; () banked
  2560  000120  6F6A               	movwf	(_ISR_low$209+1)& (0+255),b
  2561  000122  0E20               	movlw	32
  2562  000124  D004               	goto	L3
  2563  000126                     i1l2030:
  2564                           
  2565                           ; BSR set to: 0
  2566  000126  0E00               	movlw	0
  2567  000128  0100               	movlb	0	; () banked
  2568  00012A  6F6A               	movwf	(_ISR_low$209+1)& (0+255),b
  2569  00012C  0E40               	movlw	64
  2570  00012E                     L3:
  2571  00012E  6F69               	movwf	_ISR_low$209& (0+255),b
  2572                           
  2573                           ; BSR set to: 0
  2574                           
  2575                           ; BSR set to: 0
  2576  000130  B043               	btfsc	_power_led/(0+8),_power_led& (0+7),c
  2577  000132  D005               	goto	i1l2036
  2578                           
  2579                           ; BSR set to: 0
  2580  000134  0E00               	movlw	0
  2581  000136  0100               	movlb	0	; () banked
  2582  000138  6F61               	movwf	(_ISR_low$210+1)& (0+255),b
  2583  00013A  0E00               	movlw	0
  2584  00013C  D004               	goto	L4
  2585  00013E                     i1l2036:
  2586                           
  2587                           ; BSR set to: 0
  2588  00013E  0E00               	movlw	0
  2589  000140  0100               	movlb	0	; () banked
  2590  000142  6F61               	movwf	(_ISR_low$210+1)& (0+255),b
  2591  000144  0E10               	movlw	16
  2592  000146                     L4:
  2593  000146  6F60               	movwf	_ISR_low$210& (0+255),b
  2594                           
  2595                           ; BSR set to: 0
  2596  000148  0E00               	movlw	0
  2597  00014A  B08B               	btfsc	3979,0,c	;volatile
  2598  00014C  0E01               	movlw	1
  2599  00014E  0100               	movlb	0	; () banked
  2600  000150  1992               	xorwf	_heat_mode& (0+255),w,b
  2601  000152  B4D8               	btfsc	status,2,c
  2602  000154  D007               	goto	i1l2040
  2603                           
  2604                           ; BSR set to: 0
  2605  000156  0E00               	movlw	0
  2606  000158  B28B               	btfsc	3979,1,c	;volatile
  2607  00015A  0E01               	movlw	1
  2608  00015C  0100               	movlb	0	; () banked
  2609  00015E  1992               	xorwf	_heat_mode& (0+255),w,b
  2610  000160  A4D8               	btfss	status,2,c
  2611  000162  D005               	goto	i1l2042
  2612  000164                     i1l2040:
  2613                           
  2614                           ; BSR set to: 0
  2615  000164  0E00               	movlw	0
  2616  000166  0100               	movlb	0	; () banked
  2617  000168  6F63               	movwf	(_ISR_low$211+1)& (0+255),b
  2618  00016A  0E00               	movlw	0
  2619  00016C  D004               	goto	L5
  2620  00016E                     i1l2042:
  2621                           
  2622                           ; BSR set to: 0
  2623  00016E  0E00               	movlw	0
  2624  000170  0100               	movlb	0	; () banked
  2625  000172  6F63               	movwf	(_ISR_low$211+1)& (0+255),b
  2626  000174  0E08               	movlw	8
  2627  000176                     L5:
  2628  000176  6F62               	movwf	_ISR_low$211& (0+255),b
  2629                           
  2630                           ; BSR set to: 0
  2631  000178  0E01               	movlw	1
  2632  00017A  0100               	movlb	0	; () banked
  2633  00017C  6F66               	movwf	_ISR_low$212& (0+255),b
  2634                           
  2635                           ; BSR set to: 0
  2636  00017E  B243               	btfsc	_timer_led/(0+8),_timer_led& (0+7),c
  2637  000180  D0BB               	goto	i1l2070
  2638                           
  2639                           ; BSR set to: 0
  2640  000182  A643               	btfss	_timer/(0+8),_timer& (0+7),c
  2641  000184  D05A               	goto	i1l1574
  2642                           
  2643                           ; BSR set to: 0
  2644  000186  C093  F027         	movff	_high_hour,??_ISR_low
  2645  00018A  6A28               	clrf	(??_ISR_low+1)& (0+255),c
  2646  00018C  6A29               	clrf	(??_ISR_low+2)& (0+255),c
  2647  00018E  6A2A               	clrf	(??_ISR_low+3)& (0+255),c
  2648  000190  C03D  F019         	movff	_time,___aldiv@dividend
  2649  000194  C03E  F01A         	movff	_time+1,___aldiv@dividend+1
  2650  000198  C03F  F01B         	movff	_time+2,___aldiv@dividend+2
  2651  00019C  C040  F01C         	movff	_time+3,___aldiv@dividend+3
  2652  0001A0  0E10               	movlw	16
  2653  0001A2  6E1D               	movwf	___aldiv@divisor,c
  2654  0001A4  0E0E               	movlw	14
  2655  0001A6  6E1E               	movwf	___aldiv@divisor+1,c
  2656  0001A8  0E00               	movlw	0
  2657  0001AA  6E1F               	movwf	___aldiv@divisor+2,c
  2658  0001AC  0E00               	movlw	0
  2659  0001AE  6E20               	movwf	___aldiv@divisor+3,c
  2660  0001B0  EC32  F005         	call	___aldiv	;wreg free
  2661  0001B4  5027               	movf	??_ISR_low,w,c
  2662  0001B6  5C19               	subwf	?___aldiv,w,c
  2663  0001B8  5028               	movf	??_ISR_low+1,w,c
  2664  0001BA  581A               	subwfb	?___aldiv+1,w,c
  2665  0001BC  5029               	movf	??_ISR_low+2,w,c
  2666  0001BE  581B               	subwfb	?___aldiv+2,w,c
  2667  0001C0  501C               	movf	?___aldiv+3,w,c
  2668  0001C2  0A80               	xorlw	128
  2669  0001C4  6E2B               	movwf	(??_ISR_low+4)& (0+255),c
  2670  0001C6  502A               	movf	??_ISR_low+3,w,c
  2671  0001C8  0A80               	xorlw	128
  2672  0001CA  582B               	subwfb	(??_ISR_low+4)& (0+255),w,c
  2673  0001CC  A0D8               	btfss	status,0,c
  2674  0001CE  D025               	goto	i1l2052
  2675  0001D0  C094  F027         	movff	_low_hour,??_ISR_low
  2676  0001D4  6A28               	clrf	(??_ISR_low+1)& (0+255),c
  2677  0001D6  6A29               	clrf	(??_ISR_low+2)& (0+255),c
  2678  0001D8  6A2A               	clrf	(??_ISR_low+3)& (0+255),c
  2679  0001DA  C03D  F019         	movff	_time,___aldiv@dividend
  2680  0001DE  C03E  F01A         	movff	_time+1,___aldiv@dividend+1
  2681  0001E2  C03F  F01B         	movff	_time+2,___aldiv@dividend+2
  2682  0001E6  C040  F01C         	movff	_time+3,___aldiv@dividend+3
  2683  0001EA  0E10               	movlw	16
  2684  0001EC  6E1D               	movwf	___aldiv@divisor,c
  2685  0001EE  0E0E               	movlw	14
  2686  0001F0  6E1E               	movwf	___aldiv@divisor+1,c
  2687  0001F2  0E00               	movlw	0
  2688  0001F4  6E1F               	movwf	___aldiv@divisor+2,c
  2689  0001F6  0E00               	movlw	0
  2690  0001F8  6E20               	movwf	___aldiv@divisor+3,c
  2691  0001FA  EC32  F005         	call	___aldiv	;wreg free
  2692  0001FE  5027               	movf	??_ISR_low,w,c
  2693  000200  5C19               	subwf	?___aldiv,w,c
  2694  000202  5028               	movf	??_ISR_low+1,w,c
  2695  000204  581A               	subwfb	?___aldiv+1,w,c
  2696  000206  5029               	movf	??_ISR_low+2,w,c
  2697  000208  581B               	subwfb	?___aldiv+2,w,c
  2698  00020A  501C               	movf	?___aldiv+3,w,c
  2699  00020C  0A80               	xorlw	128
  2700  00020E  6E2B               	movwf	(??_ISR_low+4)& (0+255),c
  2701  000210  502A               	movf	??_ISR_low+3,w,c
  2702  000212  0A80               	xorlw	128
  2703  000214  582B               	subwfb	(??_ISR_low+4)& (0+255),w,c
  2704  000216  A0D8               	btfss	status,0,c
  2705  000218  D005               	goto	i1l2054
  2706  00021A                     i1l2052:
  2707  00021A  0E00               	movlw	0
  2708  00021C  0100               	movlb	0	; () banked
  2709  00021E  6F68               	movwf	(_ISR_low$207+1)& (0+255),b
  2710  000220  0E00               	movlw	0
  2711  000222  D004               	goto	L6
  2712  000224                     i1l2054:
  2713  000224  0E00               	movlw	0
  2714  000226  0100               	movlb	0	; () banked
  2715  000228  6F68               	movwf	(_ISR_low$207+1)& (0+255),b
  2716  00022A  0E02               	movlw	2
  2717  00022C                     L6:
  2718  00022C  6F67               	movwf	_ISR_low$207& (0+255),b
  2719                           
  2720                           ; BSR set to: 0
  2721                           
  2722                           ; BSR set to: 0
  2723  00022E  0100               	movlb	0	; () banked
  2724  000230  5167               	movf	_ISR_low$207& (0+255),w,b
  2725  000232  0100               	movlb	0	; () banked
  2726  000234  1168               	iorwf	(_ISR_low$207+1)& (0+255),w,b
  2727  000236  A4D8               	btfss	status,2,c
  2728  000238  D05F               	goto	i1l2070
  2729  00023A                     i1l1574:
  2730                           
  2731                           ; BSR set to: 0
  2732  00023A  A643               	btfss	_timer/(0+8),_timer& (0+7),c
  2733  00023C  D05A               	goto	i1l2068
  2734                           
  2735                           ; BSR set to: 0
  2736  00023E  C093  F027         	movff	_high_hour,??_ISR_low
  2737  000242  6A28               	clrf	(??_ISR_low+1)& (0+255),c
  2738  000244  6A29               	clrf	(??_ISR_low+2)& (0+255),c
  2739  000246  6A2A               	clrf	(??_ISR_low+3)& (0+255),c
  2740  000248  C03D  F019         	movff	_time,___aldiv@dividend
  2741  00024C  C03E  F01A         	movff	_time+1,___aldiv@dividend+1
  2742  000250  C03F  F01B         	movff	_time+2,___aldiv@dividend+2
  2743  000254  C040  F01C         	movff	_time+3,___aldiv@dividend+3
  2744  000258  0E10               	movlw	16
  2745  00025A  6E1D               	movwf	___aldiv@divisor,c
  2746  00025C  0E0E               	movlw	14
  2747  00025E  6E1E               	movwf	___aldiv@divisor+1,c
  2748  000260  0E00               	movlw	0
  2749  000262  6E1F               	movwf	___aldiv@divisor+2,c
  2750  000264  0E00               	movlw	0
  2751  000266  6E20               	movwf	___aldiv@divisor+3,c
  2752  000268  EC32  F005         	call	___aldiv	;wreg free
  2753  00026C  5027               	movf	??_ISR_low,w,c
  2754  00026E  5C19               	subwf	?___aldiv,w,c
  2755  000270  5028               	movf	??_ISR_low+1,w,c
  2756  000272  581A               	subwfb	?___aldiv+1,w,c
  2757  000274  5029               	movf	??_ISR_low+2,w,c
  2758  000276  581B               	subwfb	?___aldiv+2,w,c
  2759  000278  501C               	movf	?___aldiv+3,w,c
  2760  00027A  0A80               	xorlw	128
  2761  00027C  6E2B               	movwf	(??_ISR_low+4)& (0+255),c
  2762  00027E  502A               	movf	??_ISR_low+3,w,c
  2763  000280  0A80               	xorlw	128
  2764  000282  582B               	subwfb	(??_ISR_low+4)& (0+255),w,c
  2765  000284  A0D8               	btfss	status,0,c
  2766  000286  D02A               	goto	i1l2064
  2767  000288  C094  F027         	movff	_low_hour,??_ISR_low
  2768  00028C  6A28               	clrf	(??_ISR_low+1)& (0+255),c
  2769  00028E  6A29               	clrf	(??_ISR_low+2)& (0+255),c
  2770  000290  6A2A               	clrf	(??_ISR_low+3)& (0+255),c
  2771  000292  C03D  F019         	movff	_time,___aldiv@dividend
  2772  000296  C03E  F01A         	movff	_time+1,___aldiv@dividend+1
  2773  00029A  C03F  F01B         	movff	_time+2,___aldiv@dividend+2
  2774  00029E  C040  F01C         	movff	_time+3,___aldiv@dividend+3
  2775  0002A2  0E10               	movlw	16
  2776  0002A4  6E1D               	movwf	___aldiv@divisor,c
  2777  0002A6  0E0E               	movlw	14
  2778  0002A8  6E1E               	movwf	___aldiv@divisor+1,c
  2779  0002AA  0E00               	movlw	0
  2780  0002AC  6E1F               	movwf	___aldiv@divisor+2,c
  2781  0002AE  0E00               	movlw	0
  2782  0002B0  6E20               	movwf	___aldiv@divisor+3,c
  2783  0002B2  EC32  F005         	call	___aldiv	;wreg free
  2784  0002B6  5027               	movf	??_ISR_low,w,c
  2785  0002B8  5C19               	subwf	?___aldiv,w,c
  2786  0002BA  5028               	movf	??_ISR_low+1,w,c
  2787  0002BC  581A               	subwfb	?___aldiv+1,w,c
  2788  0002BE  5029               	movf	??_ISR_low+2,w,c
  2789  0002C0  581B               	subwfb	?___aldiv+2,w,c
  2790  0002C2  501C               	movf	?___aldiv+3,w,c
  2791  0002C4  0A80               	xorlw	128
  2792  0002C6  6E2B               	movwf	(??_ISR_low+4)& (0+255),c
  2793  0002C8  502A               	movf	??_ISR_low+3,w,c
  2794  0002CA  0A80               	xorlw	128
  2795  0002CC  582B               	subwfb	(??_ISR_low+4)& (0+255),w,c
  2796  0002CE  B0D8               	btfsc	status,0,c
  2797  0002D0  D005               	goto	i1l2064
  2798  0002D2  0E00               	movlw	0
  2799  0002D4  0100               	movlb	0	; () banked
  2800  0002D6  6F6A               	movwf	(_ISR_low$209+1)& (0+255),b
  2801  0002D8  0E00               	movlw	0
  2802  0002DA  D004               	goto	L7
  2803  0002DC                     i1l2064:
  2804  0002DC  0E00               	movlw	0
  2805  0002DE  0100               	movlb	0	; () banked
  2806  0002E0  6F6A               	movwf	(_ISR_low$209+1)& (0+255),b
  2807  0002E2  0E04               	movlw	4
  2808  0002E4                     L7:
  2809  0002E4  6F69               	movwf	_ISR_low$209& (0+255),b
  2810                           
  2811                           ; BSR set to: 0
  2812                           
  2813                           ; BSR set to: 0
  2814  0002E6  0100               	movlb	0	; () banked
  2815  0002E8  5169               	movf	_ISR_low$209& (0+255),w,b
  2816  0002EA  0100               	movlb	0	; () banked
  2817  0002EC  116A               	iorwf	(_ISR_low$209+1)& (0+255),w,b
  2818  0002EE  A4D8               	btfss	status,2,c
  2819  0002F0  D003               	goto	i1l2070
  2820  0002F2                     i1l2068:
  2821                           
  2822                           ; BSR set to: 0
  2823  0002F2  0E00               	movlw	0
  2824  0002F4  0100               	movlb	0	; () banked
  2825  0002F6  6F66               	movwf	_ISR_low$212& (0+255),b
  2826  0002F8                     i1l2070:
  2827                           
  2828                           ; BSR set to: 0
  2829  0002F8  0100               	movlb	0	; () banked
  2830  0002FA  5166               	movf	_ISR_low$212& (0+255),w,b
  2831  0002FC  0100               	movlb	0	; () banked
  2832  0002FE  1162               	iorwf	_ISR_low$211& (0+255),w,b
  2833  000300  0100               	movlb	0	; () banked
  2834  000302  1160               	iorwf	_ISR_low$210& (0+255),w,b
  2835  000304  0100               	movlb	0	; () banked
  2836  000306  1169               	iorwf	_ISR_low$209& (0+255),w,b
  2837  000308  0100               	movlb	0	; () banked
  2838  00030A  6F65               	movwf	ISR_low@mask_leds& (0+255),b
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;main.c: 381: set_LEDs(mask_leds);
  2842  00030C  0100               	movlb	0	; () banked
  2843  00030E  5165               	movf	ISR_low@mask_leds& (0+255),w,b
  2844  000310  EC55  F008         	call	_set_LEDs
  2845                           
  2846                           ;main.c: 382: break;
  2847  000314  D01C               	goto	i1l332
  2848  000316                     i1l2074:
  2849                           
  2850                           ;main.c: 384: set_digit(disp[0], 0);
  2851  000316  0E00               	movlw	0
  2852  000318  6E19               	movwf	i1set_digit@num,c
  2853  00031A  0100               	movlb	0	; () banked
  2854  00031C  518F               	movf	_disp& (0+255),w,b
  2855  00031E  EC2D  F007         	call	i1_set_digit
  2856                           
  2857                           ;main.c: 385: break;
  2858  000322  D015               	goto	i1l332
  2859  000324                     i1l2076:
  2860                           
  2861                           ;main.c: 387: set_digit(disp[1], 1);
  2862  000324  0E01               	movlw	1
  2863  000326  6E19               	movwf	i1set_digit@num,c
  2864  000328  0100               	movlb	0	; () banked
  2865  00032A  5190               	movf	(_disp+1)& (0+255),w,b
  2866  00032C  EC2D  F007         	call	i1_set_digit
  2867                           
  2868                           ;main.c: 389: }
  2869                           
  2870                           ;main.c: 388: break;
  2871  000330  D00E               	goto	i1l332
  2872  000332                     i1l2080:
  2873  000332  0100               	movlb	0	; () banked
  2874  000334  5164               	movf	ISR_low@cur& (0+255),w,b
  2875                           
  2876                           ; Switch size 1, requested type "space"
  2877                           ; Number of cases is 4, Range of values is 0 to 3
  2878                           ; switch strategies available:
  2879                           ; Name         Instructions Cycles
  2880                           ; simple_byte           13     7 (average)
  2881                           ;	Chosen strategy is simple_byte
  2882  000336  0A00               	xorlw	0	; case 0
  2883  000338  B4D8               	btfsc	status,2,c
  2884  00033A  D69E               	goto	i1l288
  2885  00033C  0A01               	xorlw	1	; case 1
  2886  00033E  B4D8               	btfsc	status,2,c
  2887  000340  D6EB               	goto	i1l313
  2888  000342  0A03               	xorlw	3	; case 2
  2889  000344  B4D8               	btfsc	status,2,c
  2890  000346  D7E7               	goto	i1l2074
  2891  000348  0A01               	xorlw	1	; case 3
  2892  00034A  B4D8               	btfsc	status,2,c
  2893  00034C  D7EB               	goto	i1l2076
  2894  00034E                     i1l332:
  2895  00034E  C03C  FFF5         	movff	??_ISR_low+21,tablat
  2896  000352  C03B  FFF8         	movff	??_ISR_low+20,tblptru
  2897  000356  C03A  FFF7         	movff	??_ISR_low+19,tblptrh
  2898  00035A  C039  FFF6         	movff	??_ISR_low+18,tblptrl
  2899  00035E  C038  FFF4         	movff	??_ISR_low+17,prodh
  2900  000362  C037  FFF3         	movff	??_ISR_low+16,prodl
  2901  000366  C036  FFDA         	movff	??_ISR_low+15,fsr2h
  2902  00036A  C035  FFD9         	movff	??_ISR_low+14,fsr2l
  2903  00036E  C034  FFE2         	movff	??_ISR_low+13,fsr1h
  2904  000372  C033  FFE1         	movff	??_ISR_low+12,fsr1l
  2905  000376  C032  FFEA         	movff	??_ISR_low+11,fsr0h
  2906  00037A  C031  FFE9         	movff	??_ISR_low+10,fsr0l
  2907  00037E  C030  FFFB         	movff	??_ISR_low+9,pclatu
  2908  000382  C02F  FFFA         	movff	??_ISR_low+8,pclath
  2909  000386  C02E  FFE0         	movff	??_ISR_low+7,bsr
  2910  00038A  C02D  FFE8         	movff	??_ISR_low+6,wreg
  2911  00038E  C02C  FFD8         	movff	??_ISR_low+5,status
  2912  000392  9044               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2913  000394  0010               	retfie	
  2914  000396                     __end_of_ISR_low:
  2915                           	opt stack 0
  2916                           pclatu	equ	0xFFB
  2917                           pclath	equ	0xFFA
  2918                           tblptru	equ	0xFF8
  2919                           tblptrh	equ	0xFF7
  2920                           tblptrl	equ	0xFF6
  2921                           tablat	equ	0xFF5
  2922                           prodh	equ	0xFF4
  2923                           prodl	equ	0xFF3
  2924                           intcon	equ	0xFF2
  2925                           intcon2	equ	0xFF1
  2926                           postinc0	equ	0xFEE
  2927                           fsr0h	equ	0xFEA
  2928                           fsr0l	equ	0xFE9
  2929                           wreg	equ	0xFE8
  2930                           fsr1h	equ	0xFE2
  2931                           fsr1l	equ	0xFE1
  2932                           bsr	equ	0xFE0
  2933                           indf2	equ	0xFDF
  2934                           fsr2h	equ	0xFDA
  2935                           fsr2l	equ	0xFD9
  2936                           status	equ	0xFD8
  2937                           
  2938 ;; *************** function i1_set_digit *****************
  2939 ;; Defined at:
  2940 ;;		line 278 in file "main.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  dig             1    wreg     unsigned char 
  2943 ;;  num             1   24[COMRAM] unsigned char 
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  dig             1   25[COMRAM] unsigned char 
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      void 
  2948 ;; Registers used:
  2949 ;;		wreg, status,2
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2955 ;;      Params:         1       0       0       0       0       0       0       0       0
  2956 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2957 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2958 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2959 ;;Total ram usage:        2 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; Hardware stack levels required when called:    2
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_ISR_low
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text15
  2970  000E5A                     __ptext15:
  2971                           	opt stack 0
  2972  000E5A                     i1_set_digit:
  2973                           	opt stack 24
  2974                           
  2975                           ;incstack = 0
  2976                           ;i1set_digit@dig stored from wreg
  2977  000E5A  6E1A               	movwf	i1set_digit@dig,c
  2978                           
  2979                           ;main.c: 281: TRISB = 0x00;
  2980  000E5C  0E00               	movlw	0
  2981  000E5E  6E93               	movwf	3987,c	;volatile
  2982                           
  2983                           ;main.c: 283: LATA3 = 1;
  2984  000E60  8689               	bsf	3977,3,c	;volatile
  2985                           
  2986                           ;main.c: 285: LATA4 = num;
  2987  000E62  A019               	btfss	i1set_digit@num,0,c
  2988  000E64  D002               	goto	i1u146_20
  2989  000E66  8889               	bsf	3977,4,c	;volatile
  2990  000E68  D001               	goto	i1l1924
  2991  000E6A                     i1u146_20:
  2992  000E6A  9889               	bcf	3977,4,c	;volatile
  2993  000E6C                     i1l1924:
  2994                           
  2995                           ;main.c: 286: LATA5 = !num;
  2996  000E6C  5019               	movf	i1set_digit@num,w,c
  2997  000E6E  A4D8               	btfss	status,2,c
  2998  000E70  D002               	goto	i1u148_20
  2999  000E72  8A89               	bsf	3977,5,c	;volatile
  3000  000E74  D001               	goto	i1l1926
  3001  000E76                     i1u148_20:
  3002  000E76  9A89               	bcf	3977,5,c	;volatile
  3003  000E78                     i1l1926:
  3004                           
  3005                           ;main.c: 288: LATB2 = 0!=(dig & 0b1);
  3006  000E78  A01A               	btfss	i1set_digit@dig,0,c
  3007  000E7A  D002               	goto	i1u150_20
  3008  000E7C  848A               	bsf	3978,2,c	;volatile
  3009  000E7E  D001               	goto	i1l1928
  3010  000E80                     i1u150_20:
  3011  000E80  948A               	bcf	3978,2,c	;volatile
  3012  000E82                     i1l1928:
  3013                           
  3014                           ;main.c: 289: LATB5 = 0!=(dig & 0b10);
  3015  000E82  A21A               	btfss	i1set_digit@dig,1,c
  3016  000E84  D002               	goto	i1u152_20
  3017  000E86  8A8A               	bsf	3978,5,c	;volatile
  3018  000E88  D001               	goto	i1l1930
  3019  000E8A                     i1u152_20:
  3020  000E8A  9A8A               	bcf	3978,5,c	;volatile
  3021  000E8C                     i1l1930:
  3022                           
  3023                           ;main.c: 290: LATB3 = 0!=(dig & 0b100);
  3024  000E8C  A41A               	btfss	i1set_digit@dig,2,c
  3025  000E8E  D002               	goto	i1u154_20
  3026  000E90  868A               	bsf	3978,3,c	;volatile
  3027  000E92  D001               	goto	i1l1932
  3028  000E94                     i1u154_20:
  3029  000E94  968A               	bcf	3978,3,c	;volatile
  3030  000E96                     i1l1932:
  3031                           
  3032                           ;main.c: 291: LATB0 = 0!=(dig & 0b1000);
  3033  000E96  A61A               	btfss	i1set_digit@dig,3,c
  3034  000E98  D002               	goto	i1u156_20
  3035  000E9A  808A               	bsf	3978,0,c	;volatile
  3036  000E9C  D001               	goto	i1l1934
  3037  000E9E                     i1u156_20:
  3038  000E9E  908A               	bcf	3978,0,c	;volatile
  3039  000EA0                     i1l1934:
  3040                           
  3041                           ;main.c: 292: LATB4 = 0!=(dig & 0b10000);
  3042  000EA0  A81A               	btfss	i1set_digit@dig,4,c
  3043  000EA2  D002               	goto	i1u158_20
  3044  000EA4  888A               	bsf	3978,4,c	;volatile
  3045  000EA6  D001               	goto	i1l1936
  3046  000EA8                     i1u158_20:
  3047  000EA8  988A               	bcf	3978,4,c	;volatile
  3048  000EAA                     i1l1936:
  3049                           
  3050                           ;main.c: 293: LATB1 = 0!=(dig & 0b100000);
  3051  000EAA  AA1A               	btfss	i1set_digit@dig,5,c
  3052  000EAC  D002               	goto	i1u160_20
  3053  000EAE  828A               	bsf	3978,1,c	;volatile
  3054  000EB0  D001               	goto	i1l1938
  3055  000EB2                     i1u160_20:
  3056  000EB2  928A               	bcf	3978,1,c	;volatile
  3057  000EB4                     i1l1938:
  3058                           
  3059                           ;main.c: 294: LATB6 = 0!=(dig & 0b1000000);
  3060  000EB4  AC1A               	btfss	i1set_digit@dig,6,c
  3061  000EB6  D002               	goto	i1u162_20
  3062  000EB8  8C8A               	bsf	3978,6,c	;volatile
  3063  000EBA  0012               	return	
  3064  000EBC                     i1u162_20:
  3065  000EBC  9C8A               	bcf	3978,6,c	;volatile
  3066  000EBE  0012               	return		;funcret
  3067  000EC0                     __end_ofi1_set_digit:
  3068                           	opt stack 0
  3069                           pclatu	equ	0xFFB
  3070                           pclath	equ	0xFFA
  3071                           tblptru	equ	0xFF8
  3072                           tblptrh	equ	0xFF7
  3073                           tblptrl	equ	0xFF6
  3074                           tablat	equ	0xFF5
  3075                           prodh	equ	0xFF4
  3076                           prodl	equ	0xFF3
  3077                           intcon	equ	0xFF2
  3078                           intcon2	equ	0xFF1
  3079                           postinc0	equ	0xFEE
  3080                           fsr0h	equ	0xFEA
  3081                           fsr0l	equ	0xFE9
  3082                           wreg	equ	0xFE8
  3083                           fsr1h	equ	0xFE2
  3084                           fsr1l	equ	0xFE1
  3085                           bsr	equ	0xFE0
  3086                           indf2	equ	0xFDF
  3087                           fsr2h	equ	0xFDA
  3088                           fsr2l	equ	0xFD9
  3089                           status	equ	0xFD8
  3090                           
  3091 ;; *************** function _set_LEDs *****************
  3092 ;; Defined at:
  3093 ;;		line 249 in file "main.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  mask            1    wreg     unsigned char 
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;  mask            1   24[COMRAM] unsigned char 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      void 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3107 ;;      Params:         0       0       0       0       0       0       0       0       0
  3108 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3110 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3111 ;;Total ram usage:        1 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; Hardware stack levels required when called:    2
  3114 ;; This function calls:
  3115 ;;		Nothing
  3116 ;; This function is called by:
  3117 ;;		_ISR_low
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           	psect	text16
  3122  0010AA                     __ptext16:
  3123                           	opt stack 0
  3124  0010AA                     _set_LEDs:
  3125                           	opt stack 24
  3126                           
  3127                           ;incstack = 0
  3128                           ;set_LEDs@mask stored from wreg
  3129  0010AA  6E19               	movwf	set_LEDs@mask,c
  3130                           
  3131                           ;main.c: 251: TRISB = 0;
  3132  0010AC  0E00               	movlw	0
  3133  0010AE  6E93               	movwf	3987,c	;volatile
  3134                           
  3135                           ;main.c: 252: LATA4 = 1;
  3136  0010B0  8889               	bsf	3977,4,c	;volatile
  3137                           
  3138                           ;main.c: 253: LATA5 = 1;
  3139  0010B2  8A89               	bsf	3977,5,c	;volatile
  3140                           
  3141                           ;main.c: 254: LATA3 = 0;
  3142  0010B4  9689               	bcf	3977,3,c	;volatile
  3143                           
  3144                           ;main.c: 255: LATB = mask;
  3145  0010B6  C019  FF8A         	movff	set_LEDs@mask,3978	;volatile
  3146  0010BA  0012               	return		;funcret
  3147  0010BC                     __end_of_set_LEDs:
  3148                           	opt stack 0
  3149                           pclatu	equ	0xFFB
  3150                           pclath	equ	0xFFA
  3151                           tblptru	equ	0xFF8
  3152                           tblptrh	equ	0xFF7
  3153                           tblptrl	equ	0xFF6
  3154                           tablat	equ	0xFF5
  3155                           prodh	equ	0xFF4
  3156                           prodl	equ	0xFF3
  3157                           intcon	equ	0xFF2
  3158                           intcon2	equ	0xFF1
  3159                           postinc0	equ	0xFEE
  3160                           fsr0h	equ	0xFEA
  3161                           fsr0l	equ	0xFE9
  3162                           wreg	equ	0xFE8
  3163                           fsr1h	equ	0xFE2
  3164                           fsr1l	equ	0xFE1
  3165                           bsr	equ	0xFE0
  3166                           indf2	equ	0xFDF
  3167                           fsr2h	equ	0xFDA
  3168                           fsr2l	equ	0xFD9
  3169                           status	equ	0xFD8
  3170                           
  3171 ;; *************** function _sample_inputs *****************
  3172 ;; Defined at:
  3173 ;;		line 238 in file "main.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;		None
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;		None
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  1    wreg      unsigned char 
  3180 ;; Registers used:
  3181 ;;		wreg, status,2
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3187 ;;      Params:         0       0       0       0       0       0       0       0       0
  3188 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3189 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3190 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3191 ;;Total ram usage:        0 bytes
  3192 ;; Hardware stack levels used:    1
  3193 ;; Hardware stack levels required when called:    2
  3194 ;; This function calls:
  3195 ;;		Nothing
  3196 ;; This function is called by:
  3197 ;;		_ISR_low
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           	psect	text17
  3202  0010BC                     __ptext17:
  3203                           	opt stack 0
  3204  0010BC                     _sample_inputs:
  3205                           	opt stack 24
  3206                           
  3207                           ;main.c: 241: LATA3 = 1;
  3208                           
  3209                           ;incstack = 0
  3210  0010BC  8689               	bsf	3977,3,c	;volatile
  3211                           
  3212                           ;main.c: 242: LATA4 = 1;
  3213  0010BE  8889               	bsf	3977,4,c	;volatile
  3214                           
  3215                           ;main.c: 243: LATA5 = 1;
  3216  0010C0  8A89               	bsf	3977,5,c	;volatile
  3217                           
  3218                           ;main.c: 245: TRISB = 0xFF;
  3219  0010C2  6893               	setf	3987,c	;volatile
  3220                           
  3221                           ;main.c: 246: return PORTB;
  3222  0010C4  5081               	movf	3969,w,c	;volatile
  3223  0010C6  0012               	return	
  3224  0010C8                     __end_of_sample_inputs:
  3225                           	opt stack 0
  3226                           pclatu	equ	0xFFB
  3227                           pclath	equ	0xFFA
  3228                           tblptru	equ	0xFF8
  3229                           tblptrh	equ	0xFF7
  3230                           tblptrl	equ	0xFF6
  3231                           tablat	equ	0xFF5
  3232                           prodh	equ	0xFF4
  3233                           prodl	equ	0xFF3
  3234                           intcon	equ	0xFF2
  3235                           intcon2	equ	0xFF1
  3236                           postinc0	equ	0xFEE
  3237                           fsr0h	equ	0xFEA
  3238                           fsr0l	equ	0xFE9
  3239                           wreg	equ	0xFE8
  3240                           fsr1h	equ	0xFE2
  3241                           fsr1l	equ	0xFE1
  3242                           bsr	equ	0xFE0
  3243                           indf2	equ	0xFDF
  3244                           fsr2h	equ	0xFDA
  3245                           fsr2l	equ	0xFD9
  3246                           status	equ	0xFD8
  3247                           
  3248 ;; *************** function _buzzer *****************
  3249 ;; Defined at:
  3250 ;;		line 297 in file "main.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  duration        1    wreg     unsigned char 
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;  duration        1    0[COMRAM] unsigned char 
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      void 
  3257 ;; Registers used:
  3258 ;;		wreg
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3264 ;;      Params:         0       0       0       0       0       0       0       0       0
  3265 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3266 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3267 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3268 ;;Total ram usage:        0 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; Hardware stack levels required when called:    2
  3271 ;; This function calls:
  3272 ;;		Nothing
  3273 ;; This function is called by:
  3274 ;;		_ISR_low
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           	psect	text18
  3279  0010CA                     __ptext18:
  3280                           	opt stack 0
  3281  0010CA                     _buzzer:
  3282                           	opt stack 24
  3283                           
  3284                           ;incstack = 0
  3285  0010CA  0012               	return		;funcret
  3286  0010CC                     __end_of_buzzer:
  3287                           	opt stack 0
  3288                           pclatu	equ	0xFFB
  3289                           pclath	equ	0xFFA
  3290                           tblptru	equ	0xFF8
  3291                           tblptrh	equ	0xFF7
  3292                           tblptrl	equ	0xFF6
  3293                           tablat	equ	0xFF5
  3294                           prodh	equ	0xFF4
  3295                           prodl	equ	0xFF3
  3296                           intcon	equ	0xFF2
  3297                           intcon2	equ	0xFF1
  3298                           postinc0	equ	0xFEE
  3299                           fsr0h	equ	0xFEA
  3300                           fsr0l	equ	0xFE9
  3301                           wreg	equ	0xFE8
  3302                           fsr1h	equ	0xFE2
  3303                           fsr1l	equ	0xFE1
  3304                           bsr	equ	0xFE0
  3305                           indf2	equ	0xFDF
  3306                           fsr2h	equ	0xFDA
  3307                           fsr2l	equ	0xFD9
  3308                           status	equ	0xFD8
  3309                           
  3310 ;; *************** function ___aldiv *****************
  3311 ;; Defined at:
  3312 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/aldiv.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  dividend        4   24[COMRAM] long 
  3315 ;;  divisor         4   28[COMRAM] long 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  quotient        4   34[COMRAM] long 
  3318 ;;  sign            1   33[COMRAM] unsigned char 
  3319 ;;  counter         1   32[COMRAM] unsigned char 
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  4   24[COMRAM] long 
  3322 ;; Registers used:
  3323 ;;		wreg, status,2, status,0
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3329 ;;      Params:         8       0       0       0       0       0       0       0       0
  3330 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3331 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3332 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3333 ;;Total ram usage:       14 bytes
  3334 ;; Hardware stack levels used:    1
  3335 ;; Hardware stack levels required when called:    2
  3336 ;; This function calls:
  3337 ;;		Nothing
  3338 ;; This function is called by:
  3339 ;;		_ISR_low
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text19
  3344  000A64                     __ptext19:
  3345                           	opt stack 0
  3346  000A64                     ___aldiv:
  3347                           	opt stack 24
  3348                           
  3349                           ;incstack = 0
  3350  000A64  0E00               	movlw	0
  3351  000A66  6E22               	movwf	___aldiv@sign,c
  3352  000A68  AE20               	btfss	___aldiv@divisor+3,7,c
  3353  000A6A  D00A               	goto	i1l1828
  3354  000A6C  1E20               	comf	___aldiv@divisor+3,f,c
  3355  000A6E  1E1F               	comf	___aldiv@divisor+2,f,c
  3356  000A70  1E1E               	comf	___aldiv@divisor+1,f,c
  3357  000A72  6C1D               	negf	___aldiv@divisor,c
  3358  000A74  0E00               	movlw	0
  3359  000A76  221E               	addwfc	___aldiv@divisor+1,f,c
  3360  000A78  221F               	addwfc	___aldiv@divisor+2,f,c
  3361  000A7A  2220               	addwfc	___aldiv@divisor+3,f,c
  3362  000A7C  0E01               	movlw	1
  3363  000A7E  6E22               	movwf	___aldiv@sign,c
  3364  000A80                     i1l1828:
  3365  000A80  AE1C               	btfss	___aldiv@dividend+3,7,c
  3366  000A82  D00A               	goto	i1l1834
  3367  000A84  1E1C               	comf	___aldiv@dividend+3,f,c
  3368  000A86  1E1B               	comf	___aldiv@dividend+2,f,c
  3369  000A88  1E1A               	comf	___aldiv@dividend+1,f,c
  3370  000A8A  6C19               	negf	___aldiv@dividend,c
  3371  000A8C  0E00               	movlw	0
  3372  000A8E  221A               	addwfc	___aldiv@dividend+1,f,c
  3373  000A90  221B               	addwfc	___aldiv@dividend+2,f,c
  3374  000A92  221C               	addwfc	___aldiv@dividend+3,f,c
  3375  000A94  0E01               	movlw	1
  3376  000A96  1A22               	xorwf	___aldiv@sign,f,c
  3377  000A98                     i1l1834:
  3378  000A98  0E00               	movlw	0
  3379  000A9A  6E23               	movwf	___aldiv@quotient,c
  3380  000A9C  0E00               	movlw	0
  3381  000A9E  6E24               	movwf	___aldiv@quotient+1,c
  3382  000AA0  0E00               	movlw	0
  3383  000AA2  6E25               	movwf	___aldiv@quotient+2,c
  3384  000AA4  0E00               	movlw	0
  3385  000AA6  6E26               	movwf	___aldiv@quotient+3,c
  3386  000AA8  501D               	movf	___aldiv@divisor,w,c
  3387  000AAA  101E               	iorwf	___aldiv@divisor+1,w,c
  3388  000AAC  101F               	iorwf	___aldiv@divisor+2,w,c
  3389  000AAE  1020               	iorwf	___aldiv@divisor+3,w,c
  3390  000AB0  B4D8               	btfsc	status,2,c
  3391  000AB2  D02A               	goto	i1l1856
  3392  000AB4  0E01               	movlw	1
  3393  000AB6  6E21               	movwf	___aldiv@counter,c
  3394  000AB8  D006               	goto	i1l1842
  3395  000ABA                     i1l1840:
  3396  000ABA  90D8               	bcf	status,0,c
  3397  000ABC  361D               	rlcf	___aldiv@divisor,f,c
  3398  000ABE  361E               	rlcf	___aldiv@divisor+1,f,c
  3399  000AC0  361F               	rlcf	___aldiv@divisor+2,f,c
  3400  000AC2  3620               	rlcf	___aldiv@divisor+3,f,c
  3401  000AC4  2A21               	incf	___aldiv@counter,f,c
  3402  000AC6                     i1l1842:
  3403  000AC6  AE20               	btfss	___aldiv@divisor+3,7,c
  3404  000AC8  D7F8               	goto	i1l1840
  3405  000ACA                     i1l1844:
  3406  000ACA  90D8               	bcf	status,0,c
  3407  000ACC  3623               	rlcf	___aldiv@quotient,f,c
  3408  000ACE  3624               	rlcf	___aldiv@quotient+1,f,c
  3409  000AD0  3625               	rlcf	___aldiv@quotient+2,f,c
  3410  000AD2  3626               	rlcf	___aldiv@quotient+3,f,c
  3411  000AD4  501D               	movf	___aldiv@divisor,w,c
  3412  000AD6  5C19               	subwf	___aldiv@dividend,w,c
  3413  000AD8  501E               	movf	___aldiv@divisor+1,w,c
  3414  000ADA  581A               	subwfb	___aldiv@dividend+1,w,c
  3415  000ADC  501F               	movf	___aldiv@divisor+2,w,c
  3416  000ADE  581B               	subwfb	___aldiv@dividend+2,w,c
  3417  000AE0  5020               	movf	___aldiv@divisor+3,w,c
  3418  000AE2  581C               	subwfb	___aldiv@dividend+3,w,c
  3419  000AE4  A0D8               	btfss	status,0,c
  3420  000AE6  D009               	goto	i1l1852
  3421  000AE8  501D               	movf	___aldiv@divisor,w,c
  3422  000AEA  5E19               	subwf	___aldiv@dividend,f,c
  3423  000AEC  501E               	movf	___aldiv@divisor+1,w,c
  3424  000AEE  5A1A               	subwfb	___aldiv@dividend+1,f,c
  3425  000AF0  501F               	movf	___aldiv@divisor+2,w,c
  3426  000AF2  5A1B               	subwfb	___aldiv@dividend+2,f,c
  3427  000AF4  5020               	movf	___aldiv@divisor+3,w,c
  3428  000AF6  5A1C               	subwfb	___aldiv@dividend+3,f,c
  3429  000AF8  8023               	bsf	___aldiv@quotient,0,c
  3430  000AFA                     i1l1852:
  3431  000AFA  90D8               	bcf	status,0,c
  3432  000AFC  3220               	rrcf	___aldiv@divisor+3,f,c
  3433  000AFE  321F               	rrcf	___aldiv@divisor+2,f,c
  3434  000B00  321E               	rrcf	___aldiv@divisor+1,f,c
  3435  000B02  321D               	rrcf	___aldiv@divisor,f,c
  3436  000B04  2E21               	decfsz	___aldiv@counter,f,c
  3437  000B06  D7E1               	goto	i1l1844
  3438  000B08                     i1l1856:
  3439  000B08  5022               	movf	___aldiv@sign,w,c
  3440  000B0A  B4D8               	btfsc	status,2,c
  3441  000B0C  D008               	goto	i1l1860
  3442  000B0E  1E26               	comf	___aldiv@quotient+3,f,c
  3443  000B10  1E25               	comf	___aldiv@quotient+2,f,c
  3444  000B12  1E24               	comf	___aldiv@quotient+1,f,c
  3445  000B14  6C23               	negf	___aldiv@quotient,c
  3446  000B16  0E00               	movlw	0
  3447  000B18  2224               	addwfc	___aldiv@quotient+1,f,c
  3448  000B1A  2225               	addwfc	___aldiv@quotient+2,f,c
  3449  000B1C  2226               	addwfc	___aldiv@quotient+3,f,c
  3450  000B1E                     i1l1860:
  3451  000B1E  C023  F019         	movff	___aldiv@quotient,?___aldiv
  3452  000B22  C024  F01A         	movff	___aldiv@quotient+1,?___aldiv+1
  3453  000B26  C025  F01B         	movff	___aldiv@quotient+2,?___aldiv+2
  3454  000B2A  C026  F01C         	movff	___aldiv@quotient+3,?___aldiv+3
  3455  000B2E  0012               	return	
  3456  000B30                     __end_of___aldiv:
  3457                           	opt stack 0
  3458                           pclatu	equ	0xFFB
  3459                           pclath	equ	0xFFA
  3460                           tblptru	equ	0xFF8
  3461                           tblptrh	equ	0xFF7
  3462                           tblptrl	equ	0xFF6
  3463                           tablat	equ	0xFF5
  3464                           prodh	equ	0xFF4
  3465                           prodl	equ	0xFF3
  3466                           intcon	equ	0xFF2
  3467                           intcon2	equ	0xFF1
  3468                           postinc0	equ	0xFEE
  3469                           fsr0h	equ	0xFEA
  3470                           fsr0l	equ	0xFE9
  3471                           wreg	equ	0xFE8
  3472                           fsr1h	equ	0xFE2
  3473                           fsr1l	equ	0xFE1
  3474                           bsr	equ	0xFE0
  3475                           indf2	equ	0xFDF
  3476                           fsr2h	equ	0xFDA
  3477                           fsr2l	equ	0xFD9
  3478                           status	equ	0xFD8
  3479                           
  3480 ;; *************** function _ISR_high *****************
  3481 ;; Defined at:
  3482 ;;		line 304 in file "main.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0, cstack
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3496 ;;      Params:         0       0       0       0       0       0       0       0       0
  3497 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3498 ;;      Temps:         14       0       0       0       0       0       0       0       0
  3499 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3500 ;;Total ram usage:       14 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    1
  3503 ;; This function calls:
  3504 ;;		___almod
  3505 ;; This function is called by:
  3506 ;;		Interrupt level 2
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           	psect	intcode
  3511  000008                     __pintcode:
  3512                           	opt stack 0
  3513  000008                     _ISR_high:
  3514                           	opt stack 24
  3515                           
  3516                           ;incstack = 0
  3517  000008  8244               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3518  00000A  CFFA F00B          	movff	pclath,??_ISR_high
  3519  00000E  CFFB F00C          	movff	pclatu,??_ISR_high+1
  3520  000012  EDFC  F005         	call	int_func,f	;refresh shadow registers
  3521                           pclatu	equ	0xFFB
  3522                           pclath	equ	0xFFA
  3523                           tblptru	equ	0xFF8
  3524                           tblptrh	equ	0xFF7
  3525                           tblptrl	equ	0xFF6
  3526                           tablat	equ	0xFF5
  3527                           prodh	equ	0xFF4
  3528                           prodl	equ	0xFF3
  3529                           intcon	equ	0xFF2
  3530                           intcon2	equ	0xFF1
  3531                           postinc0	equ	0xFEE
  3532                           fsr0h	equ	0xFEA
  3533                           fsr0l	equ	0xFE9
  3534                           wreg	equ	0xFE8
  3535                           fsr1h	equ	0xFE2
  3536                           fsr1l	equ	0xFE1
  3537                           bsr	equ	0xFE0
  3538                           indf2	equ	0xFDF
  3539                           fsr2h	equ	0xFDA
  3540                           fsr2l	equ	0xFD9
  3541                           status	equ	0xFD8
  3542                           
  3543                           	psect	intcode_body
  3544  000BF8                     __pintcode_body:
  3545                           	opt stack 24
  3546  000BF8                     int_func:
  3547                           	opt stack 24
  3548  000BF8  0006               	pop		; remove dummy address from shadow register refresh
  3549  000BFA  CFE9 F00D          	movff	fsr0l,??_ISR_high+2
  3550  000BFE  CFEA F00E          	movff	fsr0h,??_ISR_high+3
  3551  000C02  CFE1 F00F          	movff	fsr1l,??_ISR_high+4
  3552  000C06  CFE2 F010          	movff	fsr1h,??_ISR_high+5
  3553  000C0A  CFD9 F011          	movff	fsr2l,??_ISR_high+6
  3554  000C0E  CFDA F012          	movff	fsr2h,??_ISR_high+7
  3555  000C12  CFF3 F013          	movff	prodl,??_ISR_high+8
  3556  000C16  CFF4 F014          	movff	prodh,??_ISR_high+9
  3557  000C1A  CFF6 F015          	movff	tblptrl,??_ISR_high+10
  3558  000C1E  CFF7 F016          	movff	tblptrh,??_ISR_high+11
  3559  000C22  CFF8 F017          	movff	tblptru,??_ISR_high+12
  3560  000C26  CFF5 F018          	movff	tablat,??_ISR_high+13
  3561                           
  3562                           ;main.c: 306: if (TMR1IE && TMR1IF)
  3563  000C2A  B09D               	btfsc	3997,0,c	;volatile
  3564  000C2C  A09E               	btfss	3998,0,c	;volatile
  3565  000C2E  D023               	goto	i2l280
  3566                           
  3567                           ;main.c: 307: {
  3568                           ;main.c: 308: TMR1IF = 0;
  3569  000C30  909E               	bcf	3998,0,c	;volatile
  3570                           
  3571                           ;main.c: 310: TMR1 = 0xFFFF - 15625;
  3572  000C32  0EC2               	movlw	194
  3573  000C34  6ECF               	movwf	4047,c	;volatile
  3574  000C36  0EF6               	movlw	246
  3575  000C38  6ECE               	movwf	4046,c	;volatile
  3576                           
  3577                           ;main.c: 311: time = (long)(time + 1) % (3600L * 24L);
  3578  000C3A  0E01               	movlw	1
  3579  000C3C  243D               	addwf	_time,w,c
  3580  000C3E  6E01               	movwf	___almod@dividend,c
  3581  000C40  0E00               	movlw	0
  3582  000C42  203E               	addwfc	_time+1,w,c
  3583  000C44  6E02               	movwf	___almod@dividend+1,c
  3584  000C46  0E00               	movlw	0
  3585  000C48  203F               	addwfc	_time+2,w,c
  3586  000C4A  6E03               	movwf	___almod@dividend+2,c
  3587  000C4C  0E00               	movlw	0
  3588  000C4E  2040               	addwfc	_time+3,w,c
  3589  000C50  6E04               	movwf	___almod@dividend+3,c
  3590  000C52  0E80               	movlw	128
  3591  000C54  6E05               	movwf	___almod@divisor,c
  3592  000C56  0E51               	movlw	81
  3593  000C58  6E06               	movwf	___almod@divisor+1,c
  3594  000C5A  0E01               	movlw	1
  3595  000C5C  6E07               	movwf	___almod@divisor+2,c
  3596  000C5E  0E00               	movlw	0
  3597  000C60  6E08               	movwf	___almod@divisor+3,c
  3598  000C62  EC59  F006         	call	___almod	;wreg free
  3599  000C66  C001  F03D         	movff	?___almod,_time
  3600  000C6A  C002  F03E         	movff	?___almod+1,_time+1
  3601  000C6E  C003  F03F         	movff	?___almod+2,_time+2
  3602  000C72  C004  F040         	movff	?___almod+3,_time+3
  3603  000C76                     i2l280:
  3604  000C76  C018  FFF5         	movff	??_ISR_high+13,tablat
  3605  000C7A  C017  FFF8         	movff	??_ISR_high+12,tblptru
  3606  000C7E  C016  FFF7         	movff	??_ISR_high+11,tblptrh
  3607  000C82  C015  FFF6         	movff	??_ISR_high+10,tblptrl
  3608  000C86  C014  FFF4         	movff	??_ISR_high+9,prodh
  3609  000C8A  C013  FFF3         	movff	??_ISR_high+8,prodl
  3610  000C8E  C012  FFDA         	movff	??_ISR_high+7,fsr2h
  3611  000C92  C011  FFD9         	movff	??_ISR_high+6,fsr2l
  3612  000C96  C010  FFE2         	movff	??_ISR_high+5,fsr1h
  3613  000C9A  C00F  FFE1         	movff	??_ISR_high+4,fsr1l
  3614  000C9E  C00E  FFEA         	movff	??_ISR_high+3,fsr0h
  3615  000CA2  C00D  FFE9         	movff	??_ISR_high+2,fsr0l
  3616  000CA6  C00C  FFFB         	movff	??_ISR_high+1,pclatu
  3617  000CAA  C00B  FFFA         	movff	??_ISR_high,pclath
  3618  000CAE  9244               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3619  000CB0  0011               	retfie		f
  3620  000CB2                     __end_of_ISR_high:
  3621                           	opt stack 0
  3622                           pclatu	equ	0xFFB
  3623                           pclath	equ	0xFFA
  3624                           tblptru	equ	0xFF8
  3625                           tblptrh	equ	0xFF7
  3626                           tblptrl	equ	0xFF6
  3627                           tablat	equ	0xFF5
  3628                           prodh	equ	0xFF4
  3629                           prodl	equ	0xFF3
  3630                           intcon	equ	0xFF2
  3631                           intcon2	equ	0xFF1
  3632                           postinc0	equ	0xFEE
  3633                           fsr0h	equ	0xFEA
  3634                           fsr0l	equ	0xFE9
  3635                           wreg	equ	0xFE8
  3636                           fsr1h	equ	0xFE2
  3637                           fsr1l	equ	0xFE1
  3638                           bsr	equ	0xFE0
  3639                           indf2	equ	0xFDF
  3640                           fsr2h	equ	0xFDA
  3641                           fsr2l	equ	0xFD9
  3642                           status	equ	0xFD8
  3643                           
  3644 ;; *************** function ___almod *****************
  3645 ;; Defined at:
  3646 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/almod.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  dividend        4    0[COMRAM] long 
  3649 ;;  divisor         4    4[COMRAM] long 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;  sign            1    9[COMRAM] unsigned char 
  3652 ;;  counter         1    8[COMRAM] unsigned char 
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  4    0[COMRAM] long 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2, status,0
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3662 ;;      Params:         8       0       0       0       0       0       0       0       0
  3663 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3664 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3665 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3666 ;;Total ram usage:       10 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; This function calls:
  3669 ;;		Nothing
  3670 ;; This function is called by:
  3671 ;;		_ISR_high
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text21
  3676  000CB2                     __ptext21:
  3677                           	opt stack 0
  3678  000CB2                     ___almod:
  3679                           	opt stack 24
  3680                           
  3681                           ;incstack = 0
  3682  000CB2  0E00               	movlw	0
  3683  000CB4  6E0A               	movwf	___almod@sign,c
  3684  000CB6  AE04               	btfss	___almod@dividend+3,7,c
  3685  000CB8  D00A               	goto	i2l1872
  3686  000CBA  1E04               	comf	___almod@dividend+3,f,c
  3687  000CBC  1E03               	comf	___almod@dividend+2,f,c
  3688  000CBE  1E02               	comf	___almod@dividend+1,f,c
  3689  000CC0  6C01               	negf	___almod@dividend,c
  3690  000CC2  0E00               	movlw	0
  3691  000CC4  2202               	addwfc	___almod@dividend+1,f,c
  3692  000CC6  2203               	addwfc	___almod@dividend+2,f,c
  3693  000CC8  2204               	addwfc	___almod@dividend+3,f,c
  3694  000CCA  0E01               	movlw	1
  3695  000CCC  6E0A               	movwf	___almod@sign,c
  3696  000CCE                     i2l1872:
  3697  000CCE  AE08               	btfss	___almod@divisor+3,7,c
  3698  000CD0  D008               	goto	i2l1876
  3699  000CD2  1E08               	comf	___almod@divisor+3,f,c
  3700  000CD4  1E07               	comf	___almod@divisor+2,f,c
  3701  000CD6  1E06               	comf	___almod@divisor+1,f,c
  3702  000CD8  6C05               	negf	___almod@divisor,c
  3703  000CDA  0E00               	movlw	0
  3704  000CDC  2206               	addwfc	___almod@divisor+1,f,c
  3705  000CDE  2207               	addwfc	___almod@divisor+2,f,c
  3706  000CE0  2208               	addwfc	___almod@divisor+3,f,c
  3707  000CE2                     i2l1876:
  3708  000CE2  5005               	movf	___almod@divisor,w,c
  3709  000CE4  1006               	iorwf	___almod@divisor+1,w,c
  3710  000CE6  1007               	iorwf	___almod@divisor+2,w,c
  3711  000CE8  1008               	iorwf	___almod@divisor+3,w,c
  3712  000CEA  B4D8               	btfsc	status,2,c
  3713  000CEC  D024               	goto	i2l1892
  3714  000CEE  0E01               	movlw	1
  3715  000CF0  6E09               	movwf	___almod@counter,c
  3716  000CF2  D006               	goto	i2l1882
  3717  000CF4                     i2l1880:
  3718  000CF4  90D8               	bcf	status,0,c
  3719  000CF6  3605               	rlcf	___almod@divisor,f,c
  3720  000CF8  3606               	rlcf	___almod@divisor+1,f,c
  3721  000CFA  3607               	rlcf	___almod@divisor+2,f,c
  3722  000CFC  3608               	rlcf	___almod@divisor+3,f,c
  3723  000CFE  2A09               	incf	___almod@counter,f,c
  3724  000D00                     i2l1882:
  3725  000D00  AE08               	btfss	___almod@divisor+3,7,c
  3726  000D02  D7F8               	goto	i2l1880
  3727  000D04                     i2l1884:
  3728  000D04  5005               	movf	___almod@divisor,w,c
  3729  000D06  5C01               	subwf	___almod@dividend,w,c
  3730  000D08  5006               	movf	___almod@divisor+1,w,c
  3731  000D0A  5802               	subwfb	___almod@dividend+1,w,c
  3732  000D0C  5007               	movf	___almod@divisor+2,w,c
  3733  000D0E  5803               	subwfb	___almod@dividend+2,w,c
  3734  000D10  5008               	movf	___almod@divisor+3,w,c
  3735  000D12  5804               	subwfb	___almod@dividend+3,w,c
  3736  000D14  A0D8               	btfss	status,0,c
  3737  000D16  D008               	goto	i2l1888
  3738  000D18  5005               	movf	___almod@divisor,w,c
  3739  000D1A  5E01               	subwf	___almod@dividend,f,c
  3740  000D1C  5006               	movf	___almod@divisor+1,w,c
  3741  000D1E  5A02               	subwfb	___almod@dividend+1,f,c
  3742  000D20  5007               	movf	___almod@divisor+2,w,c
  3743  000D22  5A03               	subwfb	___almod@dividend+2,f,c
  3744  000D24  5008               	movf	___almod@divisor+3,w,c
  3745  000D26  5A04               	subwfb	___almod@dividend+3,f,c
  3746  000D28                     i2l1888:
  3747  000D28  90D8               	bcf	status,0,c
  3748  000D2A  3208               	rrcf	___almod@divisor+3,f,c
  3749  000D2C  3207               	rrcf	___almod@divisor+2,f,c
  3750  000D2E  3206               	rrcf	___almod@divisor+1,f,c
  3751  000D30  3205               	rrcf	___almod@divisor,f,c
  3752  000D32  2E09               	decfsz	___almod@counter,f,c
  3753  000D34  D7E7               	goto	i2l1884
  3754  000D36                     i2l1892:
  3755  000D36  500A               	movf	___almod@sign,w,c
  3756  000D38  B4D8               	btfsc	status,2,c
  3757  000D3A  D008               	goto	i2l1896
  3758  000D3C  1E04               	comf	___almod@dividend+3,f,c
  3759  000D3E  1E03               	comf	___almod@dividend+2,f,c
  3760  000D40  1E02               	comf	___almod@dividend+1,f,c
  3761  000D42  6C01               	negf	___almod@dividend,c
  3762  000D44  0E00               	movlw	0
  3763  000D46  2202               	addwfc	___almod@dividend+1,f,c
  3764  000D48  2203               	addwfc	___almod@dividend+2,f,c
  3765  000D4A  2204               	addwfc	___almod@dividend+3,f,c
  3766  000D4C                     i2l1896:
  3767  000D4C  C001  F001         	movff	___almod@dividend,?___almod
  3768  000D50  C002  F002         	movff	___almod@dividend+1,?___almod+1
  3769  000D54  C003  F003         	movff	___almod@dividend+2,?___almod+2
  3770  000D58  C004  F004         	movff	___almod@dividend+3,?___almod+3
  3771  000D5C  0012               	return	
  3772  000D5E                     __end_of___almod:
  3773                           	opt stack 0
  3774                           pclatu	equ	0xFFB
  3775                           pclath	equ	0xFFA
  3776                           tblptru	equ	0xFF8
  3777                           tblptrh	equ	0xFF7
  3778                           tblptrl	equ	0xFF6
  3779                           tablat	equ	0xFF5
  3780                           prodh	equ	0xFF4
  3781                           prodl	equ	0xFF3
  3782                           intcon	equ	0xFF2
  3783                           intcon2	equ	0xFF1
  3784                           postinc0	equ	0xFEE
  3785                           fsr0h	equ	0xFEA
  3786                           fsr0l	equ	0xFE9
  3787                           wreg	equ	0xFE8
  3788                           fsr1h	equ	0xFE2
  3789                           fsr1l	equ	0xFE1
  3790                           bsr	equ	0xFE0
  3791                           indf2	equ	0xFDF
  3792                           fsr2h	equ	0xFDA
  3793                           fsr2l	equ	0xFD9
  3794                           status	equ	0xFD8
  3795                           pclatu	equ	0xFFB
  3796                           pclath	equ	0xFFA
  3797                           tblptru	equ	0xFF8
  3798                           tblptrh	equ	0xFF7
  3799                           tblptrl	equ	0xFF6
  3800                           tablat	equ	0xFF5
  3801                           prodh	equ	0xFF4
  3802                           prodl	equ	0xFF3
  3803                           intcon	equ	0xFF2
  3804                           intcon2	equ	0xFF1
  3805                           postinc0	equ	0xFEE
  3806                           fsr0h	equ	0xFEA
  3807                           fsr0l	equ	0xFE9
  3808                           wreg	equ	0xFE8
  3809                           fsr1h	equ	0xFE2
  3810                           fsr1l	equ	0xFE1
  3811                           bsr	equ	0xFE0
  3812                           indf2	equ	0xFDF
  3813                           fsr2h	equ	0xFDA
  3814                           fsr2l	equ	0xFD9
  3815                           status	equ	0xFD8
  3816                           
  3817                           	psect	rparam
  3818  0000                     pclatu	equ	0xFFB
  3819                           pclath	equ	0xFFA
  3820                           tblptru	equ	0xFF8
  3821                           tblptrh	equ	0xFF7
  3822                           tblptrl	equ	0xFF6
  3823                           tablat	equ	0xFF5
  3824                           prodh	equ	0xFF4
  3825                           prodl	equ	0xFF3
  3826                           intcon	equ	0xFF2
  3827                           intcon2	equ	0xFF1
  3828                           postinc0	equ	0xFEE
  3829                           fsr0h	equ	0xFEA
  3830                           fsr0l	equ	0xFE9
  3831                           wreg	equ	0xFE8
  3832                           fsr1h	equ	0xFE2
  3833                           fsr1l	equ	0xFE1
  3834                           bsr	equ	0xFE0
  3835                           indf2	equ	0xFDF
  3836                           fsr2h	equ	0xFDA
  3837                           fsr2l	equ	0xFD9
  3838                           status	equ	0xFD8
  3839                           
  3840                           	psect	temp
  3841  000044                     btemp:
  3842                           	opt stack 0
  3843  000044                     	ds	1
  3844  0000                     int$flags	set	btemp
  3845                           pclatu	equ	0xFFB
  3846                           pclath	equ	0xFFA
  3847                           tblptru	equ	0xFF8
  3848                           tblptrh	equ	0xFF7
  3849                           tblptrl	equ	0xFF6
  3850                           tablat	equ	0xFF5
  3851                           prodh	equ	0xFF4
  3852                           prodl	equ	0xFF3
  3853                           intcon	equ	0xFF2
  3854                           intcon2	equ	0xFF1
  3855                           postinc0	equ	0xFEE
  3856                           fsr0h	equ	0xFEA
  3857                           fsr0l	equ	0xFE9
  3858                           wreg	equ	0xFE8
  3859                           fsr1h	equ	0xFE2
  3860                           fsr1l	equ	0xFE1
  3861                           bsr	equ	0xFE0
  3862                           indf2	equ	0xFDF
  3863                           fsr2h	equ	0xFDA
  3864                           fsr2l	equ	0xFD9
  3865                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    10
    Data        2
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      67
    BANK0           160     44      57
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    cur_number	PTR unsigned char  size(2) Largest target is 1
		 -> temp_want(BANK0[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_low in COMRAM

    _ISR_low->___aldiv

Critical Paths under _ISR_high in COMRAM

    _ISR_high->___almod

Critical Paths under _main in BANK0

    _main->_get_temp
    _get_temp->___ftdiv
    ___lwtoft->___ftpack
    ___ftdiv->___lwtoft
    _error->_num_to_disp
    _error->_set_digit

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5360
                             ___ftge
                              _error
                           _get_temp
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                        _setup_therm
                       _setup_timer0
                       _setup_timer1
                       _setup_timer2
 ---------------------------------------------------------------------------------
 (2) _setup_timer2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_timer1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_therm                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             6     3      3    4603
                                             38 BANK0      6     3      3
                            ___ftdiv
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2078
                                             20 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2502
                                             23 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1992
                                             12 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _error                                                1     1      0     493
                                             14 BANK0      1     1      0
                        _num_to_disp
                          _set_digit
 ---------------------------------------------------------------------------------
 (2) _set_digit                                            2     1      1     402
                                             12 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _num_to_disp                                          2     2      0      69
                                             12 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     264
                                             12 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_low                                             74    74      0    2298
                                             38 COMRAM    22    22      0
                                              0 BANK0     12    12      0
                            ___aldiv
                             _buzzer
                      _sample_inputs
                           _set_LEDs
                        i1_set_digit
 ---------------------------------------------------------------------------------
 (5) i1_set_digit                                          2     1      1     250
                                             24 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (5) _set_LEDs                                             1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _sample_inputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _buzzer                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     812
                                             24 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_high                                            14    14      0     424
                                             10 COMRAM    14    14      0
                            ___almod
 ---------------------------------------------------------------------------------
 (7) ___almod                                             10     2      8     424
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftge
   _error
     _num_to_disp
     _set_digit
   _get_temp
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _setup
     _setup_therm
     _setup_timer0
     _setup_timer1
     _setup_timer2

 _ISR_low (ROOT)
   ___aldiv
   _buzzer
   _sample_inputs
   _set_LEDs
   i1_set_digit

 _ISR_high (ROOT)
   ___almod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      39       5       35.6%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     3C      43       1       71.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7C      20        0.0%
DATA                 0      0      7C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Oct 11 02:16:02 2016

                     _GO 007E11                       bsr 000FE0                      l252 0EC2  
                    l615 0922                      l557 0A30                      _PR2 000FCB  
                    _PSA 007EAB                      wreg 000FE8             ___ftdiv@cntr 0080  
           ___ftdiv@sign 0085             __CFG_WDT$OFF 000000                     l1600 0986  
                   l1610 0A14                     l1602 0994                     l1700 0E04  
                   l1612 0A22                     l1604 09C4                     l1710 0E40  
                   l1702 0E10                     l1712 0E4C                     l1704 0E1C  
                   l1624 0A56                     l1608 09E4                     l1720 0846  
                   l1706 0E28                     l1618 0A3A                     l1708 0E34  
                   l1726 0880                     l1904 0B70                     l1680 0D7E  
                   l1914 0BF4                     l1682 0D82                     l1746 08E0  
                   l1908 0BB0                     l1596 0972                     l1678 0D64  
                   l1686 0D8A                     l1688 0DD8                     l1944 0F12  
                   l1698 0DF4                     _ADIE 007CEE                     _ADIF 007CF6  
                   _ADIP 007CFE                     _ADON 007E10                     _CHS0 007E12  
                   _CHS1 007E13                     _CHS2 007E14                     _CHS3 007E15  
                   _GIEH 007F97                     _GIEL 007F96                     _T0IE 007F95  
                   _T0IF 007F92                     _T0CS 007EAD                     u1110 0E0E  
                   u1210 0E4A                     u1130 0E1A                     _T0IP 007F8A  
                   u1230 0E56                     u1150 0E26                     u1070 0DF2  
                   u1170 0E32                     u1090 0E02                     u1251 0822  
                   u1190 0E3E                     _LATB 000F8A                     u1271 085C  
          __CFG_DEBUG$ON 000000                     _IPEN 007E87                     _SCS0 007E98  
                   _SCS1 007E99                     _TMR0 000FD6                     _TMR1 000FCE  
                   _TMR2 000FCC          __end_of_ISR_low 0396                     _disp 008F  
                   _main 0F0E                     _font 0801             ___ftpack@arg 006C  
           ___ftpack@exp 006F                     _time 003D                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     indf2 000FDF                     fsr2l 000FD9  
                   _unit 021A                     btemp 0044                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 0396  
          __CFG_MCLRE$ON 000000             ___param_bank 000010          __end_of___aldiv 0B30  
        __end_of___almod 0D5E                    _ADCS0 007E00                    _ADCS1 007E01  
                  _ADCS2 007E02                    ?_main 0001             get_temp@temp 0089  
                  _ACQT0 007E03                    _ACQT1 007E04                    _ACQT2 007E05  
                  _ADRES 000FC3          __end_of___ftdiv 0958                    _LATB0 007C50  
                  _LATB1 007C51                    _LATA3 007C4B                    _LATC0 007C58  
                  _LATB2 007C52                    _LATA4 007C4C                    _LATC1 007C59  
                  _LATB3 007C53                    _LATA5 007C4D                    _LATB4 007C54  
                  _LATB5 007C55                    _LATB6 007C56                    _T0PS0 007EA8  
                  _T0PS1 007EA9                    _T0PS2 007EAA                    _IRCF0 007E9C  
                  _IRCF1 007E9D                    _IRCF2 007E9E                    _PCFG0 007E08  
                  _PCFG1 007E09                    _PCFG2 007E0A                    _PCFG3 007E0B  
                  _T1RUN 007E6E                    i1l313 0118                    i1l307 0102  
                  i1l332 034E                    i1l288 0078                    i1l289 00B2  
                  i2l280 0C76                    _PORTB 000F81                    _TRISB 000F93  
          __CFG_PWRT$OFF 000000                    _nRBPU 007F8F         __end_of_ISR_high 0CB2  
                  _error 0F98            ___ftpack@sign 0070                    _timer 021B  
                  _setup 0FD0                    _state 0095           __pbitbssCOMRAM 0218  
                  tablat 000FF5              i1_set_digit 0E5A                    status 000FD8  
         __CFG_PBADEN$ON 000000          __initialization 0F58             __end_of_main 0F58  
           __end_of_font 080B    __end_of_sample_inputs 10C8                   ??_main 008C  
          __activetblptr 000002                ??_ISR_low 0027                   ?_error 0001  
         buzzer@duration 0001                   _T08BIT 007EAE                   ?_setup 0001  
       __end_of___ftpack 0A64                   _T1RD16 007E6F                   i1l2030 0126  
                 i1l2040 0164                   i1l2016 00EA                   i1l2008 00D2  
                 i1l2042 016E                   i1l2052 021A                   i1l2036 013E  
                 i1l2054 0224                   i1l2070 02F8                   i1l2064 02DC  
                 i1l2080 0332                   i1l2074 0316                   i1l2076 0324  
                 i1l2068 02F2                   i1l1574 023A                   i1l1840 0ABA  
                 i1l1842 0AC6                   i1l1834 0A98                   i1l1930 0E8C  
                 i1l1860 0B1E                   i1l1852 0AFA                   i1l1844 0ACA  
                 i1l1828 0A80                   i1l1932 0E96                   i1l1924 0E6C  
                 i1l1934 0EA0                   i1l1926 0E78                   i1l1856 0B08  
                 i1l1936 0EAA                   i1l1928 0E82                   i1l1938 0EB4  
                 i1l1972 0062                   i1l1992 00A4                   i2l1880 0CF4  
                 i2l1872 0CCE                   i2l1882 0D00                   i2l1884 0D04  
                 i2l1892 0D36                   i2l1876 0CE2                   i2l1896 0D4C  
                 i2l1888 0D28                   _INTSRC 007CDF         __end_of___lwtoft 1028  
                 _TMR0IE 007F95                   _TMR0IF 007F92                   _TMR1IE 007CE8  
                 _TMR1IF 007CF0                   _TMR1CS 007E69                   _TMR2IE 007CE9  
                 _TMR2IF 007CF1                   _TMR1IP 007CF8                   _TMR2IP 007CF9  
                 _TMR0ON 007EAF                   _TMR1ON 007E68                   _TMR2ON 007E52  
                 _TRISA0 007C90                   _TRISA2 007C92                   _TRISA3 007C93  
                 _TRISA4 007C94                   _TRISA5 007C95         __end_of_get_temp 0F0E  
                 ___ftge 0B30                ??___aldiv 0021                ??___almod 0009  
              ??___ftdiv 007D                   _buzzer 10CA                   clear_0 0F76  
       __end_of_set_LEDs 10BC             ?_num_to_disp 0001             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
           ?_setup_therm 0001               __accesstop 0060  __end_of__initialization 0F8A  
             ___ftge@ff1 006C               ___ftge@ff2 006F            ___rparam_used 000001  
             ___ftdiv@f1 0077               ___ftdiv@f2 007A               ___ftdiv@f3 0081  
         __pcstackCOMRAM 0001             __pidataBANK0 10C8                ?_ISR_high 0001  
          __end_of_error 0FD0            __end_of_setup 0FFE               ___lwtoft@c 0074  
                ??_error 006E                  ??_setup 006C               __pbssBANK0 008C  
                ?___ftge 006C               ??_ISR_high 000B                  ?_buzzer 0001  
              ?___ftpack 006C       __size_of_set_digit 007C                  _T1CKPS0 007E6C  
                _T1CKPS1 007E6D                  _T2CKPS0 007E50                  _T2CKPS1 007E51  
              ?___lwtoft 0074                  _ISR_low 0018                ?_get_temp 0086  
           ?i1_set_digit 0019                ?_set_LEDs 0001                  __Hparam 0000  
                __Lparam 0000               _cur_number 0097                  ___aldiv 0A64  
                ___almod 0CB2          __size_of___ftge 00C8                  ___ftdiv 080C  
           __psmallconst 0800                  __pcinit 0F58               ??___ftpack 0071  
        __size_of_buzzer 0002                  __ramtop 0800                  __ptext0 0F0E  
                __ptext1 0FD0                  __ptext2 1050                  __ptext3 106E  
                __ptext4 108C                  __ptext5 1028                  __ptext6 0EC0  
                __ptext7 0FFE                  __ptext8 080C                  __ptext9 0958  
             ??___lwtoft 0077         ___aldiv@dividend 0019     __size_of_num_to_disp 0080  
             ??_get_temp 0089           __pintcode_body 0BF8     end_of_initialization 0F8A  
      __end_of_set_digit 0E5A            __Lmediumconst 0000                  int_func 0BF8  
   __size_of_setup_therm 0028               ??_set_LEDs 0019         ___aldiv@quotient 0023  
                postinc0 000FEE            ?_setup_timer0 0001            ?_setup_timer1 0001  
          ?_setup_timer2 0001   __size_of_sample_inputs 000C              ___ftdiv@exp 0084  
         __end_of___ftge 0BF8        __size_of_ISR_high 0CAA           __end_of_buzzer 10CC  
         ??_setup_timer0 006C           ??_setup_timer1 006C           ??_setup_timer2 006C  
    start_initialization 0F58     __size_ofi1_set_digit 0066                 ??___ftge 0072  
            __pdataBANK0 0097         __CFG_LPT1OSC$OFF 000000                 ??_buzzer 0019  
          _sample_inputs 10BC             set_LEDs@mask 0019        __size_of___ftpack 010C  
            __pbssCOMRAM 003D        __size_of___lwtoft 002A            __pcstackBANK0 0060  
               ?_ISR_low 0001         ISR_low@mask_leds 0065        __size_of_get_temp 004E  
      __size_of_set_LEDs 0012                __pintcode 0008                 ?___aldiv 0019  
               ?___almod 0001                 ?___ftdiv 0077                _heat_mode 0092  
         ?_sample_inputs 0001              __pintcodelo 0018                _high_hour 0093  
       ___almod@dividend 0001                _high_temp 0041              __smallconst 0800  
         __size_of_error 0038           __size_of_setup 002E               ISR_low@cur 0064  
             ISR_low@ins 006B          ___aldiv@divisor 001D                 _T2OUTPS0 007E53  
               _T2OUTPS1 007E54                 _T2OUTPS2 007E55                 _T2OUTPS3 007E56  
        ___aldiv@counter 0021                 i1u150_20 0E80                 i1u160_20 0EB2  
               i1u152_20 0E8A                 i1u162_20 0EBC                 i1u154_20 0E94  
               i1u146_20 0E6A                 i1u156_20 0E9E                 i1u148_20 0E76  
               i1u180_20 0100                 i1u158_20 0EA8     __end_of_setup_timer0 10AA  
   __end_of_setup_timer1 108C     __end_of_setup_timer2 106E                _set_digit 0DDE  
              _temp_want 0096                 _ISR_high 0008                _timer_led 0219  
              _power_led 0218            ??_num_to_disp 006C         __size_of_ISR_low 037E  
          ??_setup_therm 006C                 __Hrparam 0000               ?_set_digit 006C  
              error@code 006E                 __Lrparam 0000          ??_sample_inputs 0019  
       __size_of___aldiv 00CC         __size_of___almod 00AC         __size_of___ftdiv 014C  
               ___ftpack 0958    __CFG_FOSC$INTOSCIO_EC 000000                 ___lwtoft 0FFE  
        ISR_low@ins_prev 0091             set_digit@dig 006D                 __ptext10 0F98  
               __ptext11 0DDE                 __ptext12 0D5E                 __ptext21 0CB2  
               __ptext13 0B30                 __ptext15 0E5A                 __ptext16 10AA  
               __ptext17 10BC             set_digit@num 006C                 __ptext18 10CA  
               __ptext19 0A64                 _get_temp 0EC0          ___almod@divisor 0005  
        ___almod@counter 0009      __end_of_num_to_disp 0DDE            __size_of_main 004A  
               _set_LEDs 10AA                 _low_hour 0094                 _low_temp 0042  
    __end_of_setup_therm 1050                 _temp_cur 008C                 int$flags 0044  
         i1set_digit@dig 001A           i1set_digit@num 0019                 intlevel1 0000  
               intlevel2 0000            ??i1_set_digit 001A    __size_of_setup_timer0 001E  
  __size_of_setup_timer1 001E    __size_of_setup_timer2 001E              _ISR_low$210 0060  
            _ISR_low$211 0062              _ISR_low$212 0066              _ISR_low$207 0067  
            _ISR_low$209 0069              ??_set_digit 006D              _num_to_disp 0D5E  
           ___aldiv@sign 0022             _setup_timer0 108C             _setup_timer1 106E  
           _setup_timer2 1050           num_to_disp@ret 006C           num_to_disp@num 006D  
           ___almod@sign 000A              _setup_therm 1028      __end_ofi1_set_digit 0EC0  
