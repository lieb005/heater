

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Oct 12 22:31:22 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           	psect	idataBANK0
    50  001D12                     __pidataBANK0:
    51                           	opt stack 0
    52                           
    53                           ;initializer for _cur_number
    54  001D12  E0                 	db	low _temp_want
    55  001D13  00                 	db	high _temp_want
    56                           
    57                           ;initializer for _climate_control
    58  001D14  01                 	db	1
    59                           
    60                           ;initializer for _heat_mode
    61  001D15  03                 	db	3
    62                           
    63                           	psect	smallconst
    64  000800                     __psmallconst:
    65                           	opt stack 0
    66  000800  00                 	db	0
    67  000801                     _font:
    68                           	opt stack 0
    69  000801  3F                 	db	63
    70  000802  06                 	db	6
    71  000803  5B                 	db	91
    72  000804  4F                 	db	79
    73  000805  66                 	db	102
    74  000806  6D                 	db	109
    75  000807  7D                 	db	125
    76  000808  07                 	db	7
    77  000809  7F                 	db	127
    78  00080A  67                 	db	103
    79  00080B                     __end_of_font:
    80                           	opt stack 0
    81  0000                     _ADRES	set	4035
    82  0000                     _TMR0	set	4054
    83  0000                     _TMR1	set	4046
    84  0000                     _LATB	set	3978
    85  0000                     _PORTB	set	3969
    86  0000                     _PR2	set	4043
    87  0000                     _TMR2	set	4044
    88  0000                     _TRISB	set	3987
    89  0000                     _ACQT0	set	32259
    90  0000                     _ACQT1	set	32260
    91  0000                     _ACQT2	set	32261
    92  0000                     _ADCS0	set	32256
    93  0000                     _ADCS1	set	32257
    94  0000                     _ADCS2	set	32258
    95  0000                     _ADIE	set	31982
    96  0000                     _ADIF	set	31990
    97  0000                     _ADIP	set	31998
    98  0000                     _ADON	set	32272
    99  0000                     _CHS0	set	32274
   100  0000                     _CHS1	set	32275
   101  0000                     _CHS2	set	32276
   102  0000                     _CHS3	set	32277
   103  0000                     _GIEH	set	32663
   104  0000                     _GIEL	set	32662
   105  0000                     _GO	set	32273
   106  0000                     _INTSRC	set	31967
   107  0000                     _IPEN	set	32391
   108  0000                     _IRCF0	set	32412
   109  0000                     _IRCF1	set	32413
   110  0000                     _IRCF2	set	32414
   111  0000                     _LATA2	set	31818
   112  0000                     _LATA3	set	31819
   113  0000                     _LATA4	set	31820
   114  0000                     _LATA5	set	31821
   115  0000                     _LATA6	set	31822
   116  0000                     _LATB0	set	31824
   117  0000                     _LATB1	set	31825
   118  0000                     _LATB2	set	31826
   119  0000                     _LATB4	set	31828
   120  0000                     _LATB5	set	31829
   121  0000                     _LATC0	set	31832
   122  0000                     _LATC1	set	31833
   123  0000                     _LATC2	set	31834
   124  0000                     _PCFG0	set	32264
   125  0000                     _PCFG1	set	32265
   126  0000                     _PCFG2	set	32266
   127  0000                     _PCFG3	set	32267
   128  0000                     _PSA	set	32427
   129  0000                     _SCS0	set	32408
   130  0000                     _SCS1	set	32409
   131  0000                     _T08BIT	set	32430
   132  0000                     _T0CS	set	32429
   133  0000                     _T0IE	set	32661
   134  0000                     _T0IF	set	32658
   135  0000                     _T0IP	set	32650
   136  0000                     _T0PS0	set	32424
   137  0000                     _T0PS1	set	32425
   138  0000                     _T0PS2	set	32426
   139  0000                     _T1CKPS0	set	32364
   140  0000                     _T1CKPS1	set	32365
   141  0000                     _T1RD16	set	32367
   142  0000                     _T1RUN	set	32366
   143  0000                     _T2CKPS0	set	32336
   144  0000                     _T2CKPS1	set	32337
   145  0000                     _T2OUTPS0	set	32339
   146  0000                     _T2OUTPS1	set	32340
   147  0000                     _T2OUTPS2	set	32341
   148  0000                     _T2OUTPS3	set	32342
   149  0000                     _TMR0IE	set	32661
   150  0000                     _TMR0IF	set	32658
   151  0000                     _TMR0ON	set	32431
   152  0000                     _TMR1CS	set	32361
   153  0000                     _TMR1IE	set	31976
   154  0000                     _TMR1IF	set	31984
   155  0000                     _TMR1IP	set	31992
   156  0000                     _TMR1ON	set	32360
   157  0000                     _TMR2IE	set	31977
   158  0000                     _TMR2IF	set	31985
   159  0000                     _TMR2IP	set	31993
   160  0000                     _TMR2ON	set	32338
   161  0000                     _TRISA0	set	31888
   162  0000                     _TRISA2	set	31890
   163  0000                     _TRISA3	set	31891
   164  0000                     _TRISA4	set	31892
   165  0000                     _TRISA5	set	31893
   166  0000                     _TRISA6	set	31894
   167  0000                     _TRISB0	set	31896
   168  0000                     _TRISB1	set	31897
   169  0000                     _TRISB2	set	31898
   170  0000                     _TRISB3	set	31899
   171  0000                     _TRISB4	set	31900
   172  0000                     _TRISB5	set	31901
   173  0000                     _TRISC0	set	31904
   174  0000                     _TRISC1	set	31905
   175  0000                     _TRISC2	set	31906
   176  0000                     _nRBPU	set	32655
   177                           
   178                           ; #config settings
   179  00080B  00                 	db	0	; dummy byte at the end
   180  0000                     
   181                           	psect	cinit
   182  001B52                     __pcinit:
   183                           	opt stack 0
   184  001B52                     start_initialization:
   185                           	opt stack 0
   186  001B52                     __initialization:
   187                           	opt stack 0
   188                           
   189                           ; Initialize objects allocated to BANK0 (4 bytes)
   190                           ; load TBLPTR registers with __pidataBANK0
   191  001B52  0E12               	movlw	low __pidataBANK0
   192  001B54  6EF6               	movwf	tblptrl,c
   193  001B56  0E1D               	movlw	high __pidataBANK0
   194  001B58  6EF7               	movwf	tblptrh,c
   195  001B5A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   196  001B5C  6EF8               	movwf	tblptru,c
   197  001B5E  EE00  F0E1         	lfsr	0,__pdataBANK0
   198  001B62  EE10 F004          	lfsr	1,4
   199  001B66                     copy_data0:
   200  001B66  0009               	tblrd		*+
   201  001B68  CFF5 FFEE          	movff	tablat,postinc0
   202  001B6C  50E5               	movf	postdec1,w,c
   203  001B6E  50E1               	movf	fsr1l,w,c
   204  001B70  E1FA               	bnz	copy_data0
   205                           
   206                           ; Clear objects allocated to BANK0 (22 bytes)
   207  001B72  EE00  F0CB         	lfsr	0,__pbssBANK0
   208  001B76  0E16               	movlw	22
   209  001B78                     clear_0:
   210  001B78  6AEE               	clrf	postinc0,c
   211  001B7A  06E8               	decf	wreg,f,c
   212  001B7C  E1FD               	bnz	clear_0
   213                           
   214                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   215  001B7E  6A3D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   216  001B80                     end_of_initialization:
   217                           	opt stack 0
   218  001B80                     __end_of__initialization:
   219                           	opt stack 0
   220  001B80  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   221  001B82  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   222  001B84  0E00               	movlw	low (__Lmediumconst shr (0+16))
   223  001B86  6EF8               	movwf	tblptru,c
   224  001B88  0100               	movlb	0
   225  001B8A  EF06  F004         	goto	_main	;jump to C main() function
   226                           tblptru	equ	0xFF8
   227                           tblptrh	equ	0xFF7
   228                           tblptrl	equ	0xFF6
   229                           tablat	equ	0xFF5
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           postdec1	equ	0xFE5
   233                           fsr1l	equ	0xFE1
   234                           
   235                           	psect	bitbssCOMRAM
   236  0001E8                     __pbitbssCOMRAM:
   237                           	opt stack 0
   238  0001E8                     _power_led:
   239                           	opt stack 0
   240  0001E8                     	ds	1
   241  0001E9                     _timer_led:
   242                           	opt stack 0
   243  0001E9                     	ds	1
   244  0001EA                     _unit:
   245                           	opt stack 0
   246  0001EA                     	ds	1
   247  0001EB                     _timer:
   248                           	opt stack 0
   249  0001EB                     	ds	1
   250                           tblptru	equ	0xFF8
   251                           tblptrh	equ	0xFF7
   252                           tblptrl	equ	0xFF6
   253                           tablat	equ	0xFF5
   254                           postinc0	equ	0xFEE
   255                           wreg	equ	0xFE8
   256                           postdec1	equ	0xFE5
   257                           fsr1l	equ	0xFE1
   258                           
   259                           	psect	bssBANK0
   260  0000CB                     __pbssBANK0:
   261                           	opt stack 0
   262  0000CB                     _time:
   263                           	opt stack 0
   264  0000CB                     	ds	4
   265  0000CF                     _temp_cur:
   266                           	opt stack 0
   267  0000CF                     	ds	3
   268  0000D2                     _disp:
   269                           	opt stack 0
   270  0000D2                     	ds	2
   271  0000D4                     _errno:
   272                           	opt stack 0
   273  0000D4                     	ds	2
   274  0000D6                     ISR_low@ins_prev:
   275                           	opt stack 0
   276  0000D6                     	ds	1
   277  0000D7                     _blink:
   278                           	opt stack 0
   279  0000D7                     	ds	1
   280  0000D8                     _buzz:
   281                           	opt stack 0
   282  0000D8                     	ds	1
   283  0000D9                     _day_hour:
   284                           	opt stack 0
   285  0000D9                     	ds	1
   286  0000DA                     _day_temp:
   287                           	opt stack 0
   288  0000DA                     	ds	1
   289  0000DB                     _fan_timeout:
   290                           	opt stack 0
   291  0000DB                     	ds	1
   292  0000DC                     _heat_cur:
   293                           	opt stack 0
   294  0000DC                     	ds	1
   295  0000DD                     _night_hour:
   296                           	opt stack 0
   297  0000DD                     	ds	1
   298  0000DE                     _night_temp:
   299                           	opt stack 0
   300  0000DE                     	ds	1
   301  0000DF                     _state:
   302                           	opt stack 0
   303  0000DF                     	ds	1
   304  0000E0                     _temp_want:
   305                           	opt stack 0
   306  0000E0                     	ds	1
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           postdec1	equ	0xFE5
   314                           fsr1l	equ	0xFE1
   315                           
   316                           	psect	dataBANK0
   317  0000E1                     __pdataBANK0:
   318                           	opt stack 0
   319  0000E1                     _cur_number:
   320                           	opt stack 0
   321  0000E1                     	ds	2
   322  0000E3                     _climate_control:
   323                           	opt stack 0
   324  0000E3                     	ds	1
   325  0000E4                     _heat_mode:
   326                           	opt stack 0
   327  0000E4                     	ds	1
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           postdec1	equ	0xFE5
   335                           fsr1l	equ	0xFE1
   336                           
   337                           	psect	cstackBANK0
   338  000060                     __pcstackBANK0:
   339                           	opt stack 0
   340  000060                     _ISR_low$238:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x0
   344  000060                     	ds	2
   345  000062                     _ISR_low$239:
   346                           	opt stack 0
   347                           
   348                           ; 2 bytes @ 0x2
   349  000062                     	ds	2
   350  000064                     ISR_low@cur:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x4
   354  000064                     	ds	1
   355  000065                     ISR_low@mask_leds:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0x5
   359  000065                     	ds	1
   360  000066                     _ISR_low$240:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x6
   364  000066                     	ds	1
   365  000067                     _ISR_low$235:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x7
   369  000067                     	ds	2
   370  000069                     _ISR_low$237:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x9
   374  000069                     	ds	2
   375  00006B                     ISR_low@ins:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0xB
   379  00006B                     	ds	1
   380  00006C                     ?___ftpack:
   381                           	opt stack 0
   382  00006C                     ?___aldiv:
   383                           	opt stack 0
   384  00006C                     num_to_disp@ret:
   385                           	opt stack 0
   386  00006C                     set_digit@num:
   387                           	opt stack 0
   388  00006C                     ___ftpack@arg:
   389                           	opt stack 0
   390  00006C                     ___aldiv@dividend:
   391                           	opt stack 0
   392                           
   393                           ; 4 bytes @ 0xC
   394  00006C                     	ds	1
   395  00006D                     num_to_disp@num:
   396                           	opt stack 0
   397  00006D                     set_digit@dig:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0xD
   401  00006D                     	ds	1
   402  00006E                     error@code:
   403                           	opt stack 0
   404                           
   405                           ; 1 bytes @ 0xE
   406  00006E                     	ds	1
   407  00006F                     ___ftpack@exp:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0xF
   411  00006F                     	ds	1
   412  000070                     ___ftpack@sign:
   413                           	opt stack 0
   414  000070                     ___aldiv@divisor:
   415                           	opt stack 0
   416                           
   417                           ; 4 bytes @ 0x10
   418  000070                     	ds	1
   419  000071                     ??___ftpack:
   420                           
   421                           ; 1 bytes @ 0x11
   422  000071                     	ds	3
   423  000074                     ?___awtoft:
   424                           	opt stack 0
   425  000074                     ?___ftneg:
   426                           	opt stack 0
   427  000074                     ?___lwtoft:
   428                           	opt stack 0
   429  000074                     ___aldiv@counter:
   430                           	opt stack 0
   431  000074                     ___awtoft@c:
   432                           	opt stack 0
   433  000074                     ___lwtoft@c:
   434                           	opt stack 0
   435  000074                     ___ftneg@f1:
   436                           	opt stack 0
   437                           
   438                           ; 3 bytes @ 0x14
   439  000074                     	ds	1
   440  000075                     ___aldiv@sign:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x15
   444  000075                     	ds	1
   445  000076                     ___aldiv@quotient:
   446                           	opt stack 0
   447                           
   448                           ; 4 bytes @ 0x16
   449  000076                     	ds	1
   450  000077                     ?___ftadd:
   451                           	opt stack 0
   452  000077                     ___awtoft@sign:
   453                           	opt stack 0
   454  000077                     ___ftadd@f1:
   455                           	opt stack 0
   456                           
   457                           ; 3 bytes @ 0x17
   458  000077                     	ds	1
   459  000078                     ___ftge@ff1:
   460                           	opt stack 0
   461                           
   462                           ; 3 bytes @ 0x18
   463  000078                     	ds	2
   464  00007A                     ___ftadd@f2:
   465                           	opt stack 0
   466                           
   467                           ; 3 bytes @ 0x1A
   468  00007A                     	ds	1
   469  00007B                     ___ftge@ff2:
   470                           	opt stack 0
   471                           
   472                           ; 3 bytes @ 0x1B
   473  00007B                     	ds	2
   474  00007D                     ??___ftadd:
   475                           
   476                           ; 1 bytes @ 0x1D
   477  00007D                     	ds	1
   478  00007E                     ??___ftge:
   479                           
   480                           ; 1 bytes @ 0x1E
   481  00007E                     	ds	2
   482  000080                     ___ftadd@sign:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x20
   486  000080                     	ds	1
   487  000081                     ___ftadd@exp2:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x21
   491  000081                     	ds	1
   492  000082                     ___ftadd@exp1:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x22
   496  000082                     	ds	1
   497  000083                     ?___ftmul:
   498                           	opt stack 0
   499  000083                     ?___ftsub:
   500                           	opt stack 0
   501  000083                     ___ftmul@f1:
   502                           	opt stack 0
   503  000083                     ___ftsub@f1:
   504                           	opt stack 0
   505                           
   506                           ; 3 bytes @ 0x23
   507  000083                     	ds	3
   508  000086                     ___ftmul@f2:
   509                           	opt stack 0
   510  000086                     ___ftsub@f2:
   511                           	opt stack 0
   512                           
   513                           ; 3 bytes @ 0x26
   514  000086                     	ds	3
   515  000089                     ??___ftmul:
   516  000089                     
   517                           ; 1 bytes @ 0x29
   518  000089                     	ds	3
   519  00008C                     ___ftmul@exp:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x2C
   523  00008C                     	ds	1
   524  00008D                     ___ftmul@f3_as_product:
   525                           	opt stack 0
   526                           
   527                           ; 3 bytes @ 0x2D
   528  00008D                     	ds	3
   529  000090                     ___ftmul@cntr:
   530                           	opt stack 0
   531                           
   532                           ; 1 bytes @ 0x30
   533  000090                     	ds	1
   534  000091                     ___ftmul@sign:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x31
   538  000091                     	ds	1
   539  000092                     ?___ftdiv:
   540                           	opt stack 0
   541  000092                     ___ftdiv@f1:
   542                           	opt stack 0
   543                           
   544                           ; 3 bytes @ 0x32
   545  000092                     	ds	3
   546  000095                     ___ftdiv@f2:
   547                           	opt stack 0
   548                           
   549                           ; 3 bytes @ 0x35
   550  000095                     	ds	3
   551  000098                     ??___ftdiv:
   552                           
   553                           ; 1 bytes @ 0x38
   554  000098                     	ds	3
   555  00009B                     ___ftdiv@cntr:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x3B
   559  00009B                     	ds	1
   560  00009C                     ___ftdiv@f3:
   561                           	opt stack 0
   562                           
   563                           ; 3 bytes @ 0x3C
   564  00009C                     	ds	3
   565  00009F                     ___ftdiv@exp:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x3F
   569  00009F                     	ds	1
   570  0000A0                     ___ftdiv@sign:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x40
   574  0000A0                     	ds	1
   575  0000A1                     ?_sqrt:
   576                           	opt stack 0
   577  0000A1                     sqrt@a:
   578                           	opt stack 0
   579                           
   580                           ; 3 bytes @ 0x41
   581  0000A1                     	ds	3
   582  0000A4                     ??_sqrt:
   583                           
   584                           ; 1 bytes @ 0x44
   585  0000A4                     	ds	3
   586  0000A7                     sqrt@og:
   587                           	opt stack 0
   588                           
   589                           ; 3 bytes @ 0x47
   590  0000A7                     	ds	3
   591  0000AA                     sqrt@z:
   592                           	opt stack 0
   593                           
   594                           ; 3 bytes @ 0x4A
   595  0000AA                     	ds	3
   596  0000AD                     sqrt@i:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0x4D
   600  0000AD                     	ds	1
   601  0000AE                     sqrt@q:
   602                           	opt stack 0
   603                           
   604                           ; 3 bytes @ 0x4E
   605  0000AE                     	ds	3
   606  0000B1                     sqrt@x:
   607                           	opt stack 0
   608                           
   609                           ; 3 bytes @ 0x51
   610  0000B1                     	ds	3
   611  0000B4                     ?_get_temp:
   612                           	opt stack 0
   613                           
   614                           ; 3 bytes @ 0x54
   615  0000B4                     	ds	3
   616  0000B7                     get_temp@resistance:
   617                           	opt stack 0
   618                           
   619                           ; 3 bytes @ 0x57
   620  0000B7                     	ds	3
   621  0000BA                     _get_temp$805:
   622                           	opt stack 0
   623                           
   624                           ; 3 bytes @ 0x5A
   625  0000BA                     	ds	3
   626  0000BD                     _get_temp$806:
   627                           	opt stack 0
   628                           
   629                           ; 3 bytes @ 0x5D
   630  0000BD                     	ds	3
   631  0000C0                     get_temp@voltage:
   632                           	opt stack 0
   633                           
   634                           ; 3 bytes @ 0x60
   635  0000C0                     	ds	3
   636  0000C3                     get_temp@temp:
   637                           	opt stack 0
   638                           
   639                           ; 3 bytes @ 0x63
   640  0000C3                     	ds	3
   641  0000C6                     ??_main:
   642                           
   643                           ; 1 bytes @ 0x66
   644  0000C6                     	ds	5
   645                           tblptru	equ	0xFF8
   646                           tblptrh	equ	0xFF7
   647                           tblptrl	equ	0xFF6
   648                           tablat	equ	0xFF5
   649                           postinc0	equ	0xFEE
   650                           wreg	equ	0xFE8
   651                           postdec1	equ	0xFE5
   652                           fsr1l	equ	0xFE1
   653                           
   654                           	psect	cstackCOMRAM
   655  000001                     __pcstackCOMRAM:
   656                           	opt stack 0
   657  000001                     ?___almod:
   658                           	opt stack 0
   659  000001                     ___almod@dividend:
   660                           	opt stack 0
   661                           
   662                           ; 4 bytes @ 0x0
   663  000001                     	ds	4
   664  000005                     ___almod@divisor:
   665                           	opt stack 0
   666                           
   667                           ; 4 bytes @ 0x4
   668  000005                     	ds	4
   669  000009                     ___almod@counter:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x8
   673  000009                     	ds	1
   674  00000A                     ___almod@sign:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x9
   678  00000A                     	ds	1
   679  00000B                     ??_ISR_high:
   680                           
   681                           ; 1 bytes @ 0xA
   682  00000B                     	ds	14
   683  000019                     ?i1___aldiv:
   684                           	opt stack 0
   685  000019                     set_LEDs@mask:
   686                           	opt stack 0
   687  000019                     buzzer@duration:
   688                           	opt stack 0
   689  000019                     set_key_led_disp_tris@dir:
   690                           	opt stack 0
   691  000019                     i1set_digit@num:
   692                           	opt stack 0
   693  000019                     i1___aldiv@dividend:
   694                           	opt stack 0
   695                           
   696                           ; 4 bytes @ 0x18
   697  000019                     	ds	1
   698  00001A                     i1set_digit@dig:
   699                           	opt stack 0
   700                           
   701                           ; 1 bytes @ 0x19
   702  00001A                     	ds	3
   703  00001D                     i1___aldiv@divisor:
   704                           	opt stack 0
   705                           
   706                           ; 4 bytes @ 0x1C
   707  00001D                     	ds	4
   708  000021                     i1___aldiv@counter:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x20
   712  000021                     	ds	1
   713  000022                     i1___aldiv@sign:
   714                           	opt stack 0
   715                           
   716                           ; 1 bytes @ 0x21
   717  000022                     	ds	1
   718  000023                     i1___aldiv@quotient:
   719                           	opt stack 0
   720                           
   721                           ; 4 bytes @ 0x22
   722  000023                     	ds	4
   723  000027                     ??_ISR_low:
   724                           
   725                           ; 1 bytes @ 0x26
   726  000027                     	ds	22
   727                           tblptru	equ	0xFF8
   728                           tblptrh	equ	0xFF7
   729                           tblptrl	equ	0xFF6
   730                           tablat	equ	0xFF5
   731                           postinc0	equ	0xFEE
   732                           wreg	equ	0xFE8
   733                           postdec1	equ	0xFE5
   734                           fsr1l	equ	0xFE1
   735                           
   736 ;;
   737 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   738 ;;
   739 ;; *************** function _main *****************
   740 ;; Defined at:
   741 ;;		line 73 in file "main.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   755 ;;      Params:         0       0       0       0       0       0       0       0       0
   756 ;;      Locals:         0       0       0       0       0       0       0       0       0
   757 ;;      Temps:          0       5       0       0       0       0       0       0       0
   758 ;;      Totals:         0       5       0       0       0       0       0       0       0
   759 ;;Total ram usage:        5 bytes
   760 ;; Hardware stack levels required when called:   10
   761 ;; This function calls:
   762 ;;		___aldiv
   763 ;;		___awtoft
   764 ;;		___ftge
   765 ;;		_error
   766 ;;		_get_temp
   767 ;;		_setup
   768 ;; This function is called by:
   769 ;;		Startup code after reset
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           	psect	text0
   774  00080C                     __ptext0:
   775                           	opt stack 0
   776  00080C                     _main:
   777                           	opt stack 21
   778                           
   779                           ;main.c: 75: setup();
   780                           
   781                           ;incstack = 0
   782  00080C  EC10  F00E         	call	_setup	;wreg free
   783  000810                     l2547:
   784                           
   785                           ;main.c: 77: {
   786                           ;main.c: 78: if (state == _ERR)
   787  000810  0100               	movlb	0	; () banked
   788  000812  05DF               	decf	_state& (0+255),w,b
   789  000814  A4D8               	btfss	status,2,c
   790  000816  D003               	goto	l2551
   791                           
   792                           ; BSR set to: 0
   793                           ;main.c: 79: {
   794                           ;main.c: 80: LATC1 = 0;
   795  000818  928B               	bcf	3979,1,c	;volatile
   796                           
   797                           ;main.c: 81: LATC2 = 0;
   798  00081A  948B               	bcf	3979,2,c	;volatile
   799                           
   800                           ;main.c: 82: LATC0 = 0;
   801  00081C  908B               	bcf	3979,0,c	;volatile
   802  00081E                     l2551:
   803                           
   804                           ; BSR set to: 0
   805                           ;main.c: 86: }
   806                           ;main.c: 87: temp_cur = get_temp();
   807  00081E  ECAD  F006         	call	_get_temp	;wreg free
   808  000822  C0B4  F0CF         	movff	?_get_temp,_temp_cur
   809  000826  C0B5  F0D0         	movff	?_get_temp+1,_temp_cur+1
   810  00082A  C0B6  F0D1         	movff	?_get_temp+2,_temp_cur+2
   811                           
   812                           ;main.c: 88: if (temp_cur > 40)
   813  00082E  0E00               	movlw	0
   814  000830  0100               	movlb	0	; () banked
   815  000832  6F78               	movwf	___ftge@ff1& (0+255),b
   816  000834  0E20               	movlw	32
   817  000836  0100               	movlb	0	; () banked
   818  000838  6F79               	movwf	(___ftge@ff1+1)& (0+255),b
   819  00083A  0E42               	movlw	66
   820  00083C  0100               	movlb	0	; () banked
   821  00083E  6F7A               	movwf	(___ftge@ff1+2)& (0+255),b
   822  000840  C0CF  F07B         	movff	_temp_cur,___ftge@ff2
   823  000844  C0D0  F07C         	movff	_temp_cur+1,___ftge@ff2+1
   824  000848  C0D1  F07D         	movff	_temp_cur+2,___ftge@ff2+2
   825  00084C  EC66  F00B         	call	___ftge	;wreg free
   826  000850  0100               	movlb	0	; () banked
   827  000852  B0D8               	btfsc	status,0,c
   828  000854  D007               	goto	l2557
   829                           
   830                           ; BSR set to: 0
   831                           ;main.c: 89: {
   832                           ;main.c: 90: state = _ERR;
   833  000856  0E01               	movlw	1
   834  000858  0100               	movlb	0	; () banked
   835  00085A  6FDF               	movwf	_state& (0+255),b
   836                           
   837                           ; BSR set to: 0
   838                           ;main.c: 91: error(1);
   839  00085C  0E01               	movlw	1
   840  00085E  ECC7  F00D         	call	_error
   841                           
   842                           ;main.c: 92: continue;
   843  000862  D7D6               	goto	l2547
   844  000864                     l2557:
   845                           
   846                           ;main.c: 93: }
   847                           ;main.c: 94: if (state != _OFF) continue;
   848  000864  0100               	movlb	0	; () banked
   849  000866  51DF               	movf	_state& (0+255),w,b
   850  000868  A4D8               	btfss	status,2,c
   851  00086A  D7D2               	goto	l2547
   852                           
   853                           ; BSR set to: 0
   854                           ;main.c: 95: if (timer)
   855                           
   856                           ; BSR set to: 0
   857  00086C  A63D               	btfss	_timer/(0+8),_timer& (0+7),c
   858  00086E  D0E8               	goto	l2589
   859                           
   860                           ; BSR set to: 0
   861                           ;main.c: 96: {
   862                           ;main.c: 98: if (time / 3600 >= day_hour && time / 3600 < night_hour)
   863  000870  C0D9  F0C6         	movff	_day_hour,??_main
   864  000874  0100               	movlb	0	; () banked
   865  000876  6BC7               	clrf	(??_main+1)& (0+255),b
   866  000878  6BC8               	clrf	(??_main+2)& (0+255),b
   867  00087A  6BC9               	clrf	(??_main+3)& (0+255),b
   868  00087C  C0CB  F06C         	movff	_time,___aldiv@dividend
   869  000880  C0CC  F06D         	movff	_time+1,___aldiv@dividend+1
   870  000884  C0CD  F06E         	movff	_time+2,___aldiv@dividend+2
   871  000888  C0CE  F06F         	movff	_time+3,___aldiv@dividend+3
   872  00088C  0E10               	movlw	16
   873  00088E  0100               	movlb	0	; () banked
   874  000890  6F70               	movwf	___aldiv@divisor& (0+255),b
   875  000892  0E0E               	movlw	14
   876  000894  6F71               	movwf	(___aldiv@divisor+1)& (0+255),b
   877  000896  0E00               	movlw	0
   878  000898  6F72               	movwf	(___aldiv@divisor+2)& (0+255),b
   879  00089A  0E00               	movlw	0
   880  00089C  6F73               	movwf	(___aldiv@divisor+3)& (0+255),b
   881  00089E  ECED  F009         	call	___aldiv	;wreg free
   882  0008A2  0100               	movlb	0	; () banked
   883  0008A4  51C6               	movf	??_main& (0+255),w,b
   884  0008A6  0100               	movlb	0	; () banked
   885  0008A8  5D6C               	subwf	?___aldiv& (0+255),w,b
   886  0008AA  0100               	movlb	0	; () banked
   887  0008AC  51C7               	movf	(??_main+1)& (0+255),w,b
   888  0008AE  0100               	movlb	0	; () banked
   889  0008B0  596D               	subwfb	(?___aldiv+1)& (0+255),w,b
   890  0008B2  0100               	movlb	0	; () banked
   891  0008B4  51C8               	movf	(??_main+2)& (0+255),w,b
   892  0008B6  0100               	movlb	0	; () banked
   893  0008B8  596E               	subwfb	(?___aldiv+2)& (0+255),w,b
   894  0008BA  0100               	movlb	0	; () banked
   895  0008BC  516F               	movf	(?___aldiv+3)& (0+255),w,b
   896  0008BE  0A80               	xorlw	128
   897  0008C0  0100               	movlb	0	; () banked
   898  0008C2  6FCA               	movwf	(??_main+4)& (0+255),b
   899  0008C4  0100               	movlb	0	; () banked
   900  0008C6  51C9               	movf	(??_main+3)& (0+255),w,b
   901  0008C8  0A80               	xorlw	128
   902  0008CA  0100               	movlb	0	; () banked
   903  0008CC  59CA               	subwfb	(??_main+4)& (0+255),w,b
   904  0008CE  A0D8               	btfss	status,0,c
   905  0008D0  D078               	goto	l2577
   906                           
   907                           ; BSR set to: 0
   908  0008D2  C0DD  F0C6         	movff	_night_hour,??_main
   909  0008D6  0100               	movlb	0	; () banked
   910  0008D8  6BC7               	clrf	(??_main+1)& (0+255),b
   911  0008DA  6BC8               	clrf	(??_main+2)& (0+255),b
   912  0008DC  6BC9               	clrf	(??_main+3)& (0+255),b
   913  0008DE  C0CB  F06C         	movff	_time,___aldiv@dividend
   914  0008E2  C0CC  F06D         	movff	_time+1,___aldiv@dividend+1
   915  0008E6  C0CD  F06E         	movff	_time+2,___aldiv@dividend+2
   916  0008EA  C0CE  F06F         	movff	_time+3,___aldiv@dividend+3
   917  0008EE  0E10               	movlw	16
   918  0008F0  0100               	movlb	0	; () banked
   919  0008F2  6F70               	movwf	___aldiv@divisor& (0+255),b
   920  0008F4  0E0E               	movlw	14
   921  0008F6  6F71               	movwf	(___aldiv@divisor+1)& (0+255),b
   922  0008F8  0E00               	movlw	0
   923  0008FA  6F72               	movwf	(___aldiv@divisor+2)& (0+255),b
   924  0008FC  0E00               	movlw	0
   925  0008FE  6F73               	movwf	(___aldiv@divisor+3)& (0+255),b
   926  000900  ECED  F009         	call	___aldiv	;wreg free
   927  000904  0100               	movlb	0	; () banked
   928  000906  51C6               	movf	??_main& (0+255),w,b
   929  000908  0100               	movlb	0	; () banked
   930  00090A  5D6C               	subwf	?___aldiv& (0+255),w,b
   931  00090C  0100               	movlb	0	; () banked
   932  00090E  51C7               	movf	(??_main+1)& (0+255),w,b
   933  000910  0100               	movlb	0	; () banked
   934  000912  596D               	subwfb	(?___aldiv+1)& (0+255),w,b
   935  000914  0100               	movlb	0	; () banked
   936  000916  51C8               	movf	(??_main+2)& (0+255),w,b
   937  000918  0100               	movlb	0	; () banked
   938  00091A  596E               	subwfb	(?___aldiv+2)& (0+255),w,b
   939  00091C  0100               	movlb	0	; () banked
   940  00091E  516F               	movf	(?___aldiv+3)& (0+255),w,b
   941  000920  0A80               	xorlw	128
   942  000922  0100               	movlb	0	; () banked
   943  000924  6FCA               	movwf	(??_main+4)& (0+255),b
   944  000926  0100               	movlb	0	; () banked
   945  000928  51C9               	movf	(??_main+3)& (0+255),w,b
   946  00092A  0A80               	xorlw	128
   947  00092C  0100               	movlb	0	; () banked
   948  00092E  59CA               	subwfb	(??_main+4)& (0+255),w,b
   949  000930  B0D8               	btfsc	status,0,c
   950  000932  D047               	goto	l2577
   951                           
   952                           ; BSR set to: 0
   953                           ;main.c: 99: {
   954                           ;main.c: 101: if (temp_cur > (day_temp + 3))
   955  000934  0E03               	movlw	3
   956  000936  0100               	movlb	0	; () banked
   957  000938  25DA               	addwf	_day_temp& (0+255),w,b
   958  00093A  0100               	movlb	0	; () banked
   959  00093C  6F74               	movwf	___awtoft@c& (0+255),b
   960  00093E  0100               	movlb	0	; () banked
   961  000940  6B75               	clrf	(___awtoft@c+1)& (0+255),b
   962  000942  0E00               	movlw	0
   963  000944  2375               	addwfc	(___awtoft@c+1)& (0+255),f,b
   964  000946  EC87  F00D         	call	___awtoft	;wreg free
   965  00094A  C074  F078         	movff	?___awtoft,___ftge@ff1
   966  00094E  C075  F079         	movff	?___awtoft+1,___ftge@ff1+1
   967  000952  C076  F07A         	movff	?___awtoft+2,___ftge@ff1+2
   968  000956  C0CF  F07B         	movff	_temp_cur,___ftge@ff2
   969  00095A  C0D0  F07C         	movff	_temp_cur+1,___ftge@ff2+1
   970  00095E  C0D1  F07D         	movff	_temp_cur+2,___ftge@ff2+2
   971  000962  EC66  F00B         	call	___ftge	;wreg free
   972  000966  0100               	movlb	0	; () banked
   973  000968  B0D8               	btfsc	status,0,c
   974  00096A  D008               	goto	l2571
   975  00096C                     l2567:
   976                           
   977                           ; BSR set to: 0
   978                           ;main.c: 102: {
   979                           ;main.c: 105: if (climate_control != _HEAT)
   980  00096C  0100               	movlb	0	; () banked
   981  00096E  05E3               	decf	_climate_control& (0+255),w,b
   982  000970  B4D8               	btfsc	status,2,c
   983  000972  D0AC               	goto	l2609
   984                           
   985                           ; BSR set to: 0
   986                           ;main.c: 106: {
   987                           ;main.c: 107: heat_cur = _FAN;
   988  000974  0E01               	movlw	1
   989  000976  0100               	movlb	0	; () banked
   990  000978  6FDC               	movwf	_heat_cur& (0+255),b
   991                           
   992                           ; BSR set to: 0
   993                           ;main.c: 108: }
   994                           ;main.c: 109: }
   995  00097A  D0A8               	goto	l2609
   996  00097C                     l2571:
   997                           
   998                           ; BSR set to: 0
   999                           ;main.c: 110: else if (temp_cur <= (day_temp + 3))
  1000  00097C  0E03               	movlw	3
  1001  00097E  0100               	movlb	0	; () banked
  1002  000980  25DA               	addwf	_day_temp& (0+255),w,b
  1003  000982  0100               	movlb	0	; () banked
  1004  000984  6F74               	movwf	___awtoft@c& (0+255),b
  1005  000986  0100               	movlb	0	; () banked
  1006  000988  6B75               	clrf	(___awtoft@c+1)& (0+255),b
  1007  00098A  0E00               	movlw	0
  1008  00098C  2375               	addwfc	(___awtoft@c+1)& (0+255),f,b
  1009  00098E  EC87  F00D         	call	___awtoft	;wreg free
  1010  000992  C074  F078         	movff	?___awtoft,___ftge@ff1
  1011  000996  C075  F079         	movff	?___awtoft+1,___ftge@ff1+1
  1012  00099A  C076  F07A         	movff	?___awtoft+2,___ftge@ff1+2
  1013  00099E  C0CF  F07B         	movff	_temp_cur,___ftge@ff2
  1014  0009A2  C0D0  F07C         	movff	_temp_cur+1,___ftge@ff2+1
  1015  0009A6  C0D1  F07D         	movff	_temp_cur+2,___ftge@ff2+2
  1016  0009AA  EC66  F00B         	call	___ftge	;wreg free
  1017  0009AE  0100               	movlb	0	; () banked
  1018  0009B0  A0D8               	btfss	status,0,c
  1019  0009B2  D08C               	goto	l2609
  1020                           
  1021                           ; BSR set to: 0
  1022                           ;main.c: 111: {
  1023                           ;main.c: 114: if (climate_control != _FAN)
  1024  0009B4  0100               	movlb	0	; () banked
  1025  0009B6  05E3               	decf	_climate_control& (0+255),w,b
  1026  0009B8  B4D8               	btfsc	status,2,c
  1027  0009BA  D088               	goto	l2609
  1028                           
  1029                           ; BSR set to: 0
  1030                           ;main.c: 115: {
  1031                           ;main.c: 117: heat_cur = heat_mode;
  1032  0009BC  C0E4  F0DC         	movff	_heat_mode,_heat_cur
  1033                           
  1034                           ; BSR set to: 0
  1035                           ;main.c: 118: }
  1036                           ;main.c: 119: }
  1037                           ;main.c: 120: }
  1038                           
  1039                           ; BSR set to: 0
  1040                           
  1041                           ; BSR set to: 0
  1042  0009C0  D085               	goto	l2609
  1043  0009C2                     l2577:
  1044                           
  1045                           ; BSR set to: 0
  1046                           ;main.c: 122: else
  1047                           ;main.c: 123: {
  1048                           ;main.c: 125: if (temp_cur > (night_temp + 3))
  1049  0009C2  0E03               	movlw	3
  1050  0009C4  0100               	movlb	0	; () banked
  1051  0009C6  25DE               	addwf	_night_temp& (0+255),w,b
  1052  0009C8  0100               	movlb	0	; () banked
  1053  0009CA  6F74               	movwf	___awtoft@c& (0+255),b
  1054  0009CC  0100               	movlb	0	; () banked
  1055  0009CE  6B75               	clrf	(___awtoft@c+1)& (0+255),b
  1056  0009D0  0E00               	movlw	0
  1057  0009D2  2375               	addwfc	(___awtoft@c+1)& (0+255),f,b
  1058  0009D4  EC87  F00D         	call	___awtoft	;wreg free
  1059  0009D8  C074  F078         	movff	?___awtoft,___ftge@ff1
  1060  0009DC  C075  F079         	movff	?___awtoft+1,___ftge@ff1+1
  1061  0009E0  C076  F07A         	movff	?___awtoft+2,___ftge@ff1+2
  1062  0009E4  C0CF  F07B         	movff	_temp_cur,___ftge@ff2
  1063  0009E8  C0D0  F07C         	movff	_temp_cur+1,___ftge@ff2+1
  1064  0009EC  C0D1  F07D         	movff	_temp_cur+2,___ftge@ff2+2
  1065  0009F0  EC66  F00B         	call	___ftge	;wreg free
  1066  0009F4  0100               	movlb	0	; () banked
  1067  0009F6  A0D8               	btfss	status,0,c
  1068  0009F8  D7B9               	goto	l2567
  1069                           
  1070                           ; BSR set to: 0
  1071                           ;main.c: 133: else if (temp_cur < (night_temp + 3))
  1072                           
  1073                           ; BSR set to: 0
  1074                           
  1075                           ; BSR set to: 0
  1076                           ;main.c: 131: }
  1077                           ;main.c: 132: }
  1078                           
  1079                           ; BSR set to: 0
  1080                           ;main.c: 129: {
  1081                           ;main.c: 130: heat_cur = _FAN;
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;main.c: 126: {
  1085                           ;main.c: 128: if (climate_control != _HEAT)
  1086  0009FA  C0CF  F078         	movff	_temp_cur,___ftge@ff1
  1087  0009FE  C0D0  F079         	movff	_temp_cur+1,___ftge@ff1+1
  1088  000A02  C0D1  F07A         	movff	_temp_cur+2,___ftge@ff1+2
  1089  000A06  0E03               	movlw	3
  1090  000A08  0100               	movlb	0	; () banked
  1091  000A0A  25DE               	addwf	_night_temp& (0+255),w,b
  1092  000A0C  0100               	movlb	0	; () banked
  1093  000A0E  6F74               	movwf	___awtoft@c& (0+255),b
  1094  000A10  0100               	movlb	0	; () banked
  1095  000A12  6B75               	clrf	(___awtoft@c+1)& (0+255),b
  1096  000A14  0E00               	movlw	0
  1097  000A16  2375               	addwfc	(___awtoft@c+1)& (0+255),f,b
  1098  000A18  EC87  F00D         	call	___awtoft	;wreg free
  1099  000A1C  C074  F07B         	movff	?___awtoft,___ftge@ff2
  1100  000A20  C075  F07C         	movff	?___awtoft+1,___ftge@ff2+1
  1101  000A24  C076  F07D         	movff	?___awtoft+2,___ftge@ff2+2
  1102  000A28  EC66  F00B         	call	___ftge	;wreg free
  1103  000A2C  0100               	movlb	0	; () banked
  1104  000A2E  B0D8               	btfsc	status,0,c
  1105  000A30  D04D               	goto	l2609
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;main.c: 134: {
  1109                           ;main.c: 136: if (climate_control != _FAN)
  1110  000A32  0100               	movlb	0	; () banked
  1111  000A34  05E3               	decf	_climate_control& (0+255),w,b
  1112  000A36  B4D8               	btfsc	status,2,c
  1113  000A38  D049               	goto	l2609
  1114                           
  1115                           ; BSR set to: 0
  1116                           ;main.c: 137: {
  1117                           ;main.c: 138: heat_cur = heat_mode;
  1118  000A3A  C0E4  F0DC         	movff	_heat_mode,_heat_cur
  1119                           
  1120                           ; BSR set to: 0
  1121                           ;main.c: 139: }
  1122                           ;main.c: 140: }
  1123                           ;main.c: 141: }
  1124                           ;main.c: 142: }
  1125                           
  1126                           ; BSR set to: 0
  1127                           
  1128                           ; BSR set to: 0
  1129                           
  1130                           ; BSR set to: 0
  1131  000A3E  D046               	goto	l2609
  1132  000A40                     l2589:
  1133                           
  1134                           ; BSR set to: 0
  1135                           ;main.c: 144: else
  1136                           ;main.c: 145: {
  1137                           ;main.c: 147: if (temp_cur > (temp_want + 3))
  1138  000A40  0E03               	movlw	3
  1139  000A42  0100               	movlb	0	; () banked
  1140  000A44  25E0               	addwf	_temp_want& (0+255),w,b
  1141  000A46  0100               	movlb	0	; () banked
  1142  000A48  6F74               	movwf	___awtoft@c& (0+255),b
  1143  000A4A  0100               	movlb	0	; () banked
  1144  000A4C  6B75               	clrf	(___awtoft@c+1)& (0+255),b
  1145  000A4E  0E00               	movlw	0
  1146  000A50  2375               	addwfc	(___awtoft@c+1)& (0+255),f,b
  1147  000A52  EC87  F00D         	call	___awtoft	;wreg free
  1148  000A56  C074  F078         	movff	?___awtoft,___ftge@ff1
  1149  000A5A  C075  F079         	movff	?___awtoft+1,___ftge@ff1+1
  1150  000A5E  C076  F07A         	movff	?___awtoft+2,___ftge@ff1+2
  1151  000A62  C0CF  F07B         	movff	_temp_cur,___ftge@ff2
  1152  000A66  C0D0  F07C         	movff	_temp_cur+1,___ftge@ff2+1
  1153  000A6A  C0D1  F07D         	movff	_temp_cur+2,___ftge@ff2+2
  1154  000A6E  EC66  F00B         	call	___ftge	;wreg free
  1155  000A72  0100               	movlb	0	; () banked
  1156  000A74  A0D8               	btfss	status,0,c
  1157  000A76  D77A               	goto	l2567
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;main.c: 155: else if (temp_cur < (temp_want + 3))
  1161                           
  1162                           ; BSR set to: 0
  1163                           
  1164                           ; BSR set to: 0
  1165                           ;main.c: 153: }
  1166                           ;main.c: 154: }
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;main.c: 151: {
  1170                           ;main.c: 152: heat_cur = _FAN;
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;main.c: 148: {
  1174                           ;main.c: 150: if (climate_control != _HEAT)
  1175  000A78  C0CF  F078         	movff	_temp_cur,___ftge@ff1
  1176  000A7C  C0D0  F079         	movff	_temp_cur+1,___ftge@ff1+1
  1177  000A80  C0D1  F07A         	movff	_temp_cur+2,___ftge@ff1+2
  1178  000A84  0E03               	movlw	3
  1179  000A86  0100               	movlb	0	; () banked
  1180  000A88  25E0               	addwf	_temp_want& (0+255),w,b
  1181  000A8A  0100               	movlb	0	; () banked
  1182  000A8C  6F74               	movwf	___awtoft@c& (0+255),b
  1183  000A8E  0100               	movlb	0	; () banked
  1184  000A90  6B75               	clrf	(___awtoft@c+1)& (0+255),b
  1185  000A92  0E00               	movlw	0
  1186  000A94  2375               	addwfc	(___awtoft@c+1)& (0+255),f,b
  1187  000A96  EC87  F00D         	call	___awtoft	;wreg free
  1188  000A9A  C074  F07B         	movff	?___awtoft,___ftge@ff2
  1189  000A9E  C075  F07C         	movff	?___awtoft+1,___ftge@ff2+1
  1190  000AA2  C076  F07D         	movff	?___awtoft+2,___ftge@ff2+2
  1191  000AA6  EC66  F00B         	call	___ftge	;wreg free
  1192  000AAA  D7C0               	goto	L2
  1193  000AAC                     l274:
  1194                           
  1195                           ; BSR set to: 0
  1196                           ;main.c: 172: if (time%2) LATC1 = 1, LATC2 = 0;
  1197  000AAC  0100               	movlb	0	; () banked
  1198  000AAE  A1CB               	btfss	_time& (0+255),0,b
  1199  000AB0  D003               	goto	l275
  1200                           
  1201                           ; BSR set to: 0
  1202  000AB2  828B               	bsf	3979,1,c	;volatile
  1203  000AB4  948B               	bcf	3979,2,c	;volatile
  1204  000AB6  D004               	goto	l2605
  1205  000AB8                     l275:
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;main.c: 173: else LATC1 = 0, LATC2 = 1;
  1209  000AB8  928B               	bcf	3979,1,c	;volatile
  1210  000ABA  D001               	goto	L3
  1211  000ABC                     l278:
  1212                           
  1213                           ; BSR set to: 0
  1214                           ;main.c: 177: LATC1 = 1;
  1215  000ABC  828B               	bsf	3979,1,c	;volatile
  1216  000ABE                     L3:
  1217                           
  1218                           ;main.c: 178: LATC2 = 1;
  1219  000ABE  848B               	bsf	3979,2,c	;volatile
  1220  000AC0                     l2605:
  1221                           
  1222                           ; BSR set to: 0
  1223                           ;main.c: 179: fan_timeout = 30;
  1224  000AC0  0E1E               	movlw	30
  1225  000AC2  D001               	goto	L1
  1226  000AC4                     l2607:
  1227                           
  1228                           ; BSR set to: 0
  1229                           ;main.c: 182: fan_timeout = 1;
  1230  000AC4  0E01               	movlw	1
  1231  000AC6                     L1:
  1232  000AC6  0100               	movlb	0	; () banked
  1233  000AC8  6FDB               	movwf	_fan_timeout& (0+255),b
  1234                           
  1235                           ;main.c: 183: }
  1236  000ACA  D00B               	goto	l2611
  1237  000ACC                     l2609:
  1238                           
  1239                           ; BSR set to: 0
  1240  000ACC  0100               	movlb	0	; () banked
  1241  000ACE  51DC               	movf	_heat_cur& (0+255),w,b
  1242                           
  1243                           ; Switch size 1, requested type "space"
  1244                           ; Number of cases is 3, Range of values is 1 to 3
  1245                           ; switch strategies available:
  1246                           ; Name         Instructions Cycles
  1247                           ; simple_byte           10     6 (average)
  1248                           ;	Chosen strategy is simple_byte
  1249  000AD0  0A01               	xorlw	1	; case 1
  1250  000AD2  B4D8               	btfsc	status,2,c
  1251  000AD4  D7F7               	goto	l2607
  1252  000AD6  0A03               	xorlw	3	; case 2
  1253  000AD8  B4D8               	btfsc	status,2,c
  1254  000ADA  D7E8               	goto	l274
  1255  000ADC  0A01               	xorlw	1	; case 3
  1256  000ADE  B4D8               	btfsc	status,2,c
  1257  000AE0  D7ED               	goto	l278
  1258  000AE2                     l2611:
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;main.c: 185: if (fan_timeout) LATC0 = 1;
  1262  000AE2  0100               	movlb	0	; () banked
  1263  000AE4  51DB               	movf	_fan_timeout& (0+255),w,b
  1264  000AE6  B4D8               	btfsc	status,2,c
  1265  000AE8  D002               	goto	l280
  1266                           
  1267                           ; BSR set to: 0
  1268  000AEA  808B               	bsf	3979,0,c	;volatile
  1269  000AEC  D691               	goto	l2547
  1270  000AEE                     l280:
  1271                           
  1272                           ; BSR set to: 0
  1273                           ;main.c: 186: else LATC0 = 0;
  1274  000AEE  908B               	bcf	3979,0,c	;volatile
  1275                           
  1276                           ; BSR set to: 0
  1277                           
  1278                           ; BSR set to: 0
  1279  000AF0  D68F               	goto	l2547
  1280  000AF2                     __end_of_main:
  1281                           	opt stack 0
  1282                           tblptru	equ	0xFF8
  1283                           tblptrh	equ	0xFF7
  1284                           tblptrl	equ	0xFF6
  1285                           tablat	equ	0xFF5
  1286                           postinc0	equ	0xFEE
  1287                           wreg	equ	0xFE8
  1288                           postdec1	equ	0xFE5
  1289                           fsr1l	equ	0xFE1
  1290                           status	equ	0xFD8
  1291                           
  1292 ;; *************** function _setup *****************
  1293 ;; Defined at:
  1294 ;;		line 197 in file "main.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg, status,2, cstack
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1308 ;;      Params:         0       0       0       0       0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1311 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1312 ;;Total ram usage:        0 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; Hardware stack levels required when called:    6
  1315 ;; This function calls:
  1316 ;;		_setup_io
  1317 ;;		_setup_therm
  1318 ;;		_setup_timer0
  1319 ;;		_setup_timer1
  1320 ;;		_setup_timer2
  1321 ;; This function is called by:
  1322 ;;		_main
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text1
  1327  001C20                     __ptext1:
  1328                           	opt stack 0
  1329  001C20                     _setup:
  1330                           	opt stack 24
  1331                           
  1332                           ;main.c: 201: SCS0 = 1;
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;incstack = 0
  1336  001C20  80D3               	bsf	4051,0,c	;volatile
  1337                           
  1338                           ;main.c: 202: SCS1 = 1;
  1339  001C22  82D3               	bsf	4051,1,c	;volatile
  1340                           
  1341                           ;main.c: 203: INTSRC = 1;
  1342  001C24  8E9B               	bsf	3995,7,c	;volatile
  1343                           
  1344                           ;main.c: 206: IRCF2 = 0;
  1345  001C26  9CD3               	bcf	4051,6,c	;volatile
  1346                           
  1347                           ;main.c: 207: IRCF1 = 1;
  1348  001C28  8AD3               	bsf	4051,5,c	;volatile
  1349                           
  1350                           ;main.c: 208: IRCF0 = 1;
  1351  001C2A  88D3               	bsf	4051,4,c	;volatile
  1352                           
  1353                           ;main.c: 211: setup_therm();
  1354  001C2C  EC24  F00E         	call	_setup_therm	;wreg free
  1355                           
  1356                           ;main.c: 213: setup_io();
  1357  001C30  EC65  F00E         	call	_setup_io	;wreg free
  1358                           
  1359                           ;main.c: 216: setup_timer0();
  1360  001C34  EC56  F00E         	call	_setup_timer0	;wreg free
  1361                           
  1362                           ;main.c: 218: setup_timer1();
  1363  001C38  EC47  F00E         	call	_setup_timer1	;wreg free
  1364                           
  1365                           ;main.c: 220: setup_timer2();
  1366  001C3C  EC38  F00E         	call	_setup_timer2	;wreg free
  1367                           
  1368                           ;main.c: 223: IPEN = 1;
  1369  001C40  8ED0               	bsf	4048,7,c	;volatile
  1370                           
  1371                           ;main.c: 224: GIEH = 1;
  1372  001C42  8EF2               	bsf	intcon,7,c	;volatile
  1373                           
  1374                           ;main.c: 225: GIEL = 0;
  1375  001C44  9CF2               	bcf	intcon,6,c	;volatile
  1376  001C46  0012               	return		;funcret
  1377  001C48                     __end_of_setup:
  1378                           	opt stack 0
  1379                           tblptru	equ	0xFF8
  1380                           tblptrh	equ	0xFF7
  1381                           tblptrl	equ	0xFF6
  1382                           tablat	equ	0xFF5
  1383                           intcon	equ	0xFF2
  1384                           postinc0	equ	0xFEE
  1385                           wreg	equ	0xFE8
  1386                           postdec1	equ	0xFE5
  1387                           fsr1l	equ	0xFE1
  1388                           status	equ	0xFD8
  1389                           
  1390 ;; *************** function _setup_timer2 *****************
  1391 ;; Defined at:
  1392 ;;		line 320 in file "main.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;		None
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;		None
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg, status,2
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1406 ;;      Params:         0       0       0       0       0       0       0       0       0
  1407 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1408 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1409 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1410 ;;Total ram usage:        0 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; Hardware stack levels required when called:    5
  1413 ;; This function calls:
  1414 ;;		Nothing
  1415 ;; This function is called by:
  1416 ;;		_setup
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text2
  1421  001C70                     __ptext2:
  1422                           	opt stack 0
  1423  001C70                     _setup_timer2:
  1424                           	opt stack 24
  1425                           
  1426                           ;main.c: 323: TMR2ON = 0;
  1427                           
  1428                           ;incstack = 0
  1429  001C70  94CA               	bcf	4042,2,c	;volatile
  1430                           
  1431                           ;main.c: 325: T2CKPS0 = 1;
  1432  001C72  80CA               	bsf	4042,0,c	;volatile
  1433                           
  1434                           ;main.c: 326: T2CKPS1 = 0;
  1435  001C74  92CA               	bcf	4042,1,c	;volatile
  1436                           
  1437                           ;main.c: 328: TMR2 = 0;
  1438  001C76  0E00               	movlw	0
  1439  001C78  6ECC               	movwf	4044,c	;volatile
  1440                           
  1441                           ;main.c: 331: PR2 = 0xFF;
  1442  001C7A  68CB               	setf	4043,c	;volatile
  1443                           
  1444                           ;main.c: 333: T2OUTPS0 = 0;
  1445  001C7C  96CA               	bcf	4042,3,c	;volatile
  1446                           
  1447                           ;main.c: 334: T2OUTPS1 = 0;
  1448  001C7E  98CA               	bcf	4042,4,c	;volatile
  1449                           
  1450                           ;main.c: 335: T2OUTPS2 = 0;
  1451  001C80  9ACA               	bcf	4042,5,c	;volatile
  1452                           
  1453                           ;main.c: 336: T2OUTPS3 = 0;
  1454  001C82  9CCA               	bcf	4042,6,c	;volatile
  1455                           
  1456                           ;main.c: 338: TMR2IE = 1;
  1457  001C84  829D               	bsf	3997,1,c	;volatile
  1458                           
  1459                           ;main.c: 339: TMR2IF = 0;
  1460  001C86  929E               	bcf	3998,1,c	;volatile
  1461                           
  1462                           ;main.c: 340: TMR2IP = 0;
  1463  001C88  929F               	bcf	3999,1,c	;volatile
  1464                           
  1465                           ;main.c: 342: TMR2ON = 1;
  1466  001C8A  84CA               	bsf	4042,2,c	;volatile
  1467  001C8C  0012               	return		;funcret
  1468  001C8E                     __end_of_setup_timer2:
  1469                           	opt stack 0
  1470                           tblptru	equ	0xFF8
  1471                           tblptrh	equ	0xFF7
  1472                           tblptrl	equ	0xFF6
  1473                           tablat	equ	0xFF5
  1474                           intcon	equ	0xFF2
  1475                           postinc0	equ	0xFEE
  1476                           wreg	equ	0xFE8
  1477                           postdec1	equ	0xFE5
  1478                           fsr1l	equ	0xFE1
  1479                           status	equ	0xFD8
  1480                           
  1481 ;; *************** function _setup_timer1 *****************
  1482 ;; Defined at:
  1483 ;;		line 295 in file "main.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;		None
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;		None
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg, status,2
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1497 ;;      Params:         0       0       0       0       0       0       0       0       0
  1498 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1499 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1500 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1501 ;;Total ram usage:        0 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; Hardware stack levels required when called:    5
  1504 ;; This function calls:
  1505 ;;		Nothing
  1506 ;; This function is called by:
  1507 ;;		_setup
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text3
  1512  001C8E                     __ptext3:
  1513                           	opt stack 0
  1514  001C8E                     _setup_timer1:
  1515                           	opt stack 24
  1516                           
  1517                           ;main.c: 298: TMR1ON = 0;
  1518                           
  1519                           ;incstack = 0
  1520  001C8E  90CD               	bcf	4045,0,c	;volatile
  1521                           
  1522                           ;main.c: 300: T1RD16 = 1;
  1523  001C90  8ECD               	bsf	4045,7,c	;volatile
  1524                           
  1525                           ;main.c: 302: T1RUN = 0;
  1526  001C92  9CCD               	bcf	4045,6,c	;volatile
  1527                           
  1528                           ;main.c: 303: TMR1CS = 0;
  1529  001C94  92CD               	bcf	4045,1,c	;volatile
  1530                           
  1531                           ;main.c: 305: TMR1IE = 1;
  1532  001C96  809D               	bsf	3997,0,c	;volatile
  1533                           
  1534                           ;main.c: 306: TMR1IF = 0;
  1535  001C98  909E               	bcf	3998,0,c	;volatile
  1536                           
  1537                           ;main.c: 307: TMR1IP = 1;
  1538  001C9A  809F               	bsf	3999,0,c	;volatile
  1539                           
  1540                           ;main.c: 311: T1CKPS0 = T1CKPS1 = 1;
  1541  001C9C  8ACD               	bsf	4045,5,c	;volatile
  1542  001C9E  88CD               	bsf	4045,4,c	;volatile
  1543                           
  1544                           ;main.c: 313: TMR1 = 0xFFFF - (int) ((double) 500000 / 4.0 / 8.0);
  1545  001CA0  0EC2               	movlw	194
  1546  001CA2  6ECF               	movwf	4047,c	;volatile
  1547  001CA4  0EF6               	movlw	246
  1548  001CA6  6ECE               	movwf	4046,c	;volatile
  1549                           
  1550                           ;main.c: 315: TMR1ON = 1;
  1551  001CA8  80CD               	bsf	4045,0,c	;volatile
  1552  001CAA  0012               	return		;funcret
  1553  001CAC                     __end_of_setup_timer1:
  1554                           	opt stack 0
  1555                           tblptru	equ	0xFF8
  1556                           tblptrh	equ	0xFF7
  1557                           tblptrl	equ	0xFF6
  1558                           tablat	equ	0xFF5
  1559                           intcon	equ	0xFF2
  1560                           postinc0	equ	0xFEE
  1561                           wreg	equ	0xFE8
  1562                           postdec1	equ	0xFE5
  1563                           fsr1l	equ	0xFE1
  1564                           status	equ	0xFD8
  1565                           
  1566 ;; *************** function _setup_timer0 *****************
  1567 ;; Defined at:
  1568 ;;		line 273 in file "main.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1582 ;;      Params:         0       0       0       0       0       0       0       0       0
  1583 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1584 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1585 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1586 ;;Total ram usage:        0 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    5
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_setup
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text4
  1597  001CAC                     __ptext4:
  1598                           	opt stack 0
  1599  001CAC                     _setup_timer0:
  1600                           	opt stack 24
  1601                           
  1602                           ;main.c: 276: TMR0ON = 0;
  1603                           
  1604                           ;incstack = 0
  1605  001CAC  9ED5               	bcf	4053,7,c	;volatile
  1606                           
  1607                           ;main.c: 278: TMR0 = 0;
  1608  001CAE  0E00               	movlw	0
  1609  001CB0  6ED7               	movwf	4055,c	;volatile
  1610  001CB2  0E00               	movlw	0
  1611  001CB4  6ED6               	movwf	4054,c	;volatile
  1612                           
  1613                           ;main.c: 280: T08BIT = 0;
  1614  001CB6  9CD5               	bcf	4053,6,c	;volatile
  1615                           
  1616                           ;main.c: 282: T0CS = 1;
  1617  001CB8  8AD5               	bsf	4053,5,c	;volatile
  1618                           
  1619                           ;main.c: 284: T0IE = 1;
  1620  001CBA  8AF2               	bsf	intcon,5,c	;volatile
  1621                           
  1622                           ;main.c: 285: T0IF = 0;
  1623  001CBC  94F2               	bcf	intcon,2,c	;volatile
  1624                           
  1625                           ;main.c: 286: T0IP = 0;
  1626  001CBE  94F1               	bcf	intcon2,2,c	;volatile
  1627                           
  1628                           ;main.c: 288: PSA = 0;
  1629  001CC0  96D5               	bcf	4053,3,c	;volatile
  1630                           
  1631                           ;main.c: 290: T0PS0 = T0PS1 = T0PS2 = 1;
  1632  001CC2  84D5               	bsf	4053,2,c	;volatile
  1633  001CC4  82D5               	bsf	4053,1,c	;volatile
  1634  001CC6  80D5               	bsf	4053,0,c	;volatile
  1635  001CC8  0012               	return		;funcret
  1636  001CCA                     __end_of_setup_timer0:
  1637                           	opt stack 0
  1638                           tblptru	equ	0xFF8
  1639                           tblptrh	equ	0xFF7
  1640                           tblptrl	equ	0xFF6
  1641                           tablat	equ	0xFF5
  1642                           intcon	equ	0xFF2
  1643                           intcon2	equ	0xFF1
  1644                           postinc0	equ	0xFEE
  1645                           wreg	equ	0xFE8
  1646                           postdec1	equ	0xFE5
  1647                           fsr1l	equ	0xFE1
  1648                           status	equ	0xFD8
  1649                           
  1650 ;; *************** function _setup_therm *****************
  1651 ;; Defined at:
  1652 ;;		line 247 in file "main.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;		None
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;		None
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		None
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1666 ;;      Params:         0       0       0       0       0       0       0       0       0
  1667 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1669 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1670 ;;Total ram usage:        0 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; Hardware stack levels required when called:    5
  1673 ;; This function calls:
  1674 ;;		Nothing
  1675 ;; This function is called by:
  1676 ;;		_setup
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text5
  1681  001C48                     __ptext5:
  1682                           	opt stack 0
  1683  001C48                     _setup_therm:
  1684                           	opt stack 24
  1685                           
  1686                           ;main.c: 251: TRISA0 = 1;
  1687                           
  1688                           ;incstack = 0
  1689  001C48  8092               	bsf	3986,0,c	;volatile
  1690                           
  1691                           ;main.c: 253: ADON = 1;
  1692  001C4A  80C2               	bsf	4034,0,c	;volatile
  1693                           
  1694                           ;main.c: 254: ADIE = 0;
  1695  001C4C  9C9D               	bcf	3997,6,c	;volatile
  1696                           
  1697                           ;main.c: 255: ADIP = 0;
  1698  001C4E  9C9F               	bcf	3999,6,c	;volatile
  1699                           
  1700                           ;main.c: 256: ADIF = 0;
  1701  001C50  9C9E               	bcf	3998,6,c	;volatile
  1702                           
  1703                           ;main.c: 258: CHS0 = CHS1 = CHS2 = CHS3 = 0;
  1704  001C52  9AC2               	bcf	4034,5,c	;volatile
  1705  001C54  98C2               	bcf	4034,4,c	;volatile
  1706  001C56  96C2               	bcf	4034,3,c	;volatile
  1707  001C58  94C2               	bcf	4034,2,c	;volatile
  1708                           
  1709                           ;main.c: 260: PCFG0 = 0;
  1710  001C5A  90C1               	bcf	4033,0,c	;volatile
  1711                           
  1712                           ;main.c: 261: PCFG1 = PCFG2 = PCFG3 = 1;
  1713  001C5C  86C1               	bsf	4033,3,c	;volatile
  1714  001C5E  84C1               	bsf	4033,2,c	;volatile
  1715  001C60  82C1               	bsf	4033,1,c	;volatile
  1716                           
  1717                           ;main.c: 263: ACQT2 = 1;
  1718  001C62  8AC0               	bsf	4032,5,c	;volatile
  1719                           
  1720                           ;main.c: 264: ACQT1 = ACQT0 = 0;
  1721  001C64  96C0               	bcf	4032,3,c	;volatile
  1722  001C66  98C0               	bcf	4032,4,c	;volatile
  1723                           
  1724                           ;main.c: 266: ADCS2 = 1;
  1725  001C68  84C0               	bsf	4032,2,c	;volatile
  1726                           
  1727                           ;main.c: 267: ADCS1 = 0;
  1728  001C6A  92C0               	bcf	4032,1,c	;volatile
  1729                           
  1730                           ;main.c: 268: ADCS0 = 1;
  1731  001C6C  80C0               	bsf	4032,0,c	;volatile
  1732  001C6E  0012               	return		;funcret
  1733  001C70                     __end_of_setup_therm:
  1734                           	opt stack 0
  1735                           tblptru	equ	0xFF8
  1736                           tblptrh	equ	0xFF7
  1737                           tblptrl	equ	0xFF6
  1738                           tablat	equ	0xFF5
  1739                           intcon	equ	0xFF2
  1740                           intcon2	equ	0xFF1
  1741                           postinc0	equ	0xFEE
  1742                           wreg	equ	0xFE8
  1743                           postdec1	equ	0xFE5
  1744                           fsr1l	equ	0xFE1
  1745                           status	equ	0xFD8
  1746                           
  1747 ;; *************** function _setup_io *****************
  1748 ;; Defined at:
  1749 ;;		line 228 in file "main.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;		None
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;		None
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		None
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1763 ;;      Params:         0       0       0       0       0       0       0       0       0
  1764 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1765 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1766 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1767 ;;Total ram usage:        0 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    5
  1770 ;; This function calls:
  1771 ;;		Nothing
  1772 ;; This function is called by:
  1773 ;;		_setup
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           	psect	text6
  1778  001CCA                     __ptext6:
  1779                           	opt stack 0
  1780  001CCA                     _setup_io:
  1781                           	opt stack 24
  1782                           
  1783                           ;main.c: 231: nRBPU = 0;
  1784                           
  1785                           ;incstack = 0
  1786  001CCA  9EF1               	bcf	intcon2,7,c	;volatile
  1787                           
  1788                           ;main.c: 233: TRISA3 = 0;
  1789  001CCC  9692               	bcf	3986,3,c	;volatile
  1790                           
  1791                           ;main.c: 234: TRISA3 = 1;
  1792  001CCE  8692               	bsf	3986,3,c	;volatile
  1793                           
  1794                           ;main.c: 235: TRISA4 = 0;
  1795  001CD0  9892               	bcf	3986,4,c	;volatile
  1796                           
  1797                           ;main.c: 236: TRISA4 = 1;
  1798  001CD2  8892               	bsf	3986,4,c	;volatile
  1799                           
  1800                           ;main.c: 237: TRISA2 = 0;
  1801  001CD4  9492               	bcf	3986,2,c	;volatile
  1802                           
  1803                           ;main.c: 238: LATA2 = 1;
  1804  001CD6  8489               	bsf	3977,2,c	;volatile
  1805                           
  1806                           ;main.c: 239: TRISA5 = 0;
  1807  001CD8  9A92               	bcf	3986,5,c	;volatile
  1808                           
  1809                           ;main.c: 240: LATA5 = 0;
  1810  001CDA  9A89               	bcf	3977,5,c	;volatile
  1811                           
  1812                           ;main.c: 242: TRISC1 = 0;
  1813  001CDC  9294               	bcf	3988,1,c	;volatile
  1814                           
  1815                           ;main.c: 243: TRISC2 = 0;
  1816  001CDE  9494               	bcf	3988,2,c	;volatile
  1817                           
  1818                           ;main.c: 244: TRISC0 = 0;
  1819  001CE0  9094               	bcf	3988,0,c	;volatile
  1820  001CE2  0012               	return		;funcret
  1821  001CE4                     __end_of_setup_io:
  1822                           	opt stack 0
  1823                           tblptru	equ	0xFF8
  1824                           tblptrh	equ	0xFF7
  1825                           tblptrl	equ	0xFF6
  1826                           tablat	equ	0xFF5
  1827                           intcon	equ	0xFF2
  1828                           intcon2	equ	0xFF1
  1829                           postinc0	equ	0xFEE
  1830                           wreg	equ	0xFE8
  1831                           postdec1	equ	0xFE5
  1832                           fsr1l	equ	0xFE1
  1833                           status	equ	0xFD8
  1834                           
  1835 ;; *************** function _get_temp *****************
  1836 ;; Defined at:
  1837 ;;		line 354 in file "main.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  temp            3   99[BANK0 ] void 
  1842 ;;  voltage         3   96[BANK0 ] void 
  1843 ;;  resistance      3   87[BANK0 ] void 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  3   84[BANK0 ] float 
  1846 ;; Registers used:
  1847 ;;		wreg, status,2, status,0, cstack
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1853 ;;      Params:         0       3       0       0       0       0       0       0       0
  1854 ;;      Locals:         0      15       0       0       0       0       0       0       0
  1855 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1856 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1857 ;;Total ram usage:       18 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; Hardware stack levels required when called:    9
  1860 ;; This function calls:
  1861 ;;		___ftadd
  1862 ;;		___ftdiv
  1863 ;;		___ftmul
  1864 ;;		___ftneg
  1865 ;;		___lwtoft
  1866 ;;		_sqrt
  1867 ;; This function is called by:
  1868 ;;		_main
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text7
  1873  000D5A                     __ptext7:
  1874                           	opt stack 0
  1875  000D5A                     _get_temp:
  1876                           	opt stack 21
  1877                           
  1878                           ;main.c: 357: GO = 1;
  1879                           
  1880                           ;incstack = 0
  1881  000D5A  82C2               	bsf	4034,1,c	;volatile
  1882  000D5C                     l307:
  1883  000D5C  B2C2               	btfsc	4034,1,c	;volatile
  1884  000D5E  D7FE               	goto	l307
  1885                           
  1886                           ;main.c: 361: double voltage = ((double) ADRES) * 5.0/ ((double) (1L << 16));
  1887  000D60  0E00               	movlw	0
  1888  000D62  0100               	movlb	0	; () banked
  1889  000D64  6F86               	movwf	___ftmul@f2& (0+255),b
  1890  000D66  0EA0               	movlw	160
  1891  000D68  0100               	movlb	0	; () banked
  1892  000D6A  6F87               	movwf	(___ftmul@f2+1)& (0+255),b
  1893  000D6C  0E40               	movlw	64
  1894  000D6E  0100               	movlb	0	; () banked
  1895  000D70  6F88               	movwf	(___ftmul@f2+2)& (0+255),b
  1896  000D72  CFC3 F074          	movff	4035,___lwtoft@c	;volatile
  1897  000D76  CFC4 F075          	movff	4036,___lwtoft@c+1	;volatile
  1898  000D7A  ECFB  F00D         	call	___lwtoft	;wreg free
  1899  000D7E  C074  F083         	movff	?___lwtoft,___ftmul@f1
  1900  000D82  C075  F084         	movff	?___lwtoft+1,___ftmul@f1+1
  1901  000D86  C076  F085         	movff	?___lwtoft+2,___ftmul@f1+2
  1902  000D8A  EC98  F008         	call	___ftmul	;wreg free
  1903  000D8E  C083  F092         	movff	?___ftmul,___ftdiv@f1
  1904  000D92  C084  F093         	movff	?___ftmul+1,___ftdiv@f1+1
  1905  000D96  C085  F094         	movff	?___ftmul+2,___ftdiv@f1+2
  1906  000D9A  0E00               	movlw	0
  1907  000D9C  0100               	movlb	0	; () banked
  1908  000D9E  6F95               	movwf	___ftdiv@f2& (0+255),b
  1909  000DA0  0E80               	movlw	128
  1910  000DA2  0100               	movlb	0	; () banked
  1911  000DA4  6F96               	movwf	(___ftdiv@f2+1)& (0+255),b
  1912  000DA6  0E47               	movlw	71
  1913  000DA8  0100               	movlb	0	; () banked
  1914  000DAA  6F97               	movwf	(___ftdiv@f2+2)& (0+255),b
  1915  000DAC  EC47  F009         	call	___ftdiv	;wreg free
  1916  000DB0  C092  F0C0         	movff	?___ftdiv,get_temp@voltage
  1917  000DB4  C093  F0C1         	movff	?___ftdiv+1,get_temp@voltage+1
  1918  000DB8  C094  F0C2         	movff	?___ftdiv+2,get_temp@voltage+2
  1919                           
  1920                           ;main.c: 365: double resistance = (voltage*(1.00e3))/(5 - voltage);
  1921  000DBC  0E00               	movlw	0
  1922  000DBE  0100               	movlb	0	; () banked
  1923  000DC0  6F86               	movwf	___ftmul@f2& (0+255),b
  1924  000DC2  0E7A               	movlw	122
  1925  000DC4  0100               	movlb	0	; () banked
  1926  000DC6  6F87               	movwf	(___ftmul@f2+1)& (0+255),b
  1927  000DC8  0E44               	movlw	68
  1928  000DCA  0100               	movlb	0	; () banked
  1929  000DCC  6F88               	movwf	(___ftmul@f2+2)& (0+255),b
  1930  000DCE  C0C0  F083         	movff	get_temp@voltage,___ftmul@f1
  1931  000DD2  C0C1  F084         	movff	get_temp@voltage+1,___ftmul@f1+1
  1932  000DD6  C0C2  F085         	movff	get_temp@voltage+2,___ftmul@f1+2
  1933  000DDA  EC98  F008         	call	___ftmul	;wreg free
  1934  000DDE  C083  F092         	movff	?___ftmul,___ftdiv@f1
  1935  000DE2  C084  F093         	movff	?___ftmul+1,___ftdiv@f1+1
  1936  000DE6  C085  F094         	movff	?___ftmul+2,___ftdiv@f1+2
  1937  000DEA  0E00               	movlw	0
  1938  000DEC  0100               	movlb	0	; () banked
  1939  000DEE  6F7A               	movwf	___ftadd@f2& (0+255),b
  1940  000DF0  0EA0               	movlw	160
  1941  000DF2  0100               	movlb	0	; () banked
  1942  000DF4  6F7B               	movwf	(___ftadd@f2+1)& (0+255),b
  1943  000DF6  0E40               	movlw	64
  1944  000DF8  0100               	movlb	0	; () banked
  1945  000DFA  6F7C               	movwf	(___ftadd@f2+2)& (0+255),b
  1946  000DFC  C0C0  F074         	movff	get_temp@voltage,___ftneg@f1
  1947  000E00  C0C1  F075         	movff	get_temp@voltage+1,___ftneg@f1+1
  1948  000E04  C0C2  F076         	movff	get_temp@voltage+2,___ftneg@f1+2
  1949  000E08  ECE3  F00D         	call	___ftneg	;wreg free
  1950  000E0C  C074  F077         	movff	?___ftneg,___ftadd@f1
  1951  000E10  C075  F078         	movff	?___ftneg+1,___ftadd@f1+1
  1952  000E14  C076  F079         	movff	?___ftneg+2,___ftadd@f1+2
  1953  000E18  EC79  F005         	call	___ftadd	;wreg free
  1954  000E1C  C077  F095         	movff	?___ftadd,___ftdiv@f2
  1955  000E20  C078  F096         	movff	?___ftadd+1,___ftdiv@f2+1
  1956  000E24  C079  F097         	movff	?___ftadd+2,___ftdiv@f2+2
  1957  000E28  EC47  F009         	call	___ftdiv	;wreg free
  1958  000E2C  C092  F0B7         	movff	?___ftdiv,get_temp@resistance
  1959  000E30  C093  F0B8         	movff	?___ftdiv+1,get_temp@resistance+1
  1960  000E34  C094  F0B9         	movff	?___ftdiv+2,get_temp@resistance+2
  1961                           
  1962                           ;main.c: 367: double temp = sqrt((3.9083e-3)*(3.9083e-3)-4*(-5.775e-7)*(1-resistance/100
      +                          ));
  1963  000E38  0E05               	movlw	5
  1964  000E3A  0100               	movlb	0	; () banked
  1965  000E3C  6F86               	movwf	___ftmul@f2& (0+255),b
  1966  000E3E  0E1B               	movlw	27
  1967  000E40  0100               	movlb	0	; () banked
  1968  000E42  6F87               	movwf	(___ftmul@f2+1)& (0+255),b
  1969  000E44  0EB6               	movlw	182
  1970  000E46  0100               	movlb	0	; () banked
  1971  000E48  6F88               	movwf	(___ftmul@f2+2)& (0+255),b
  1972  000E4A  0E00               	movlw	0
  1973  000E4C  0100               	movlb	0	; () banked
  1974  000E4E  6F7A               	movwf	___ftadd@f2& (0+255),b
  1975  000E50  0E80               	movlw	128
  1976  000E52  0100               	movlb	0	; () banked
  1977  000E54  6F7B               	movwf	(___ftadd@f2+1)& (0+255),b
  1978  000E56  0E3F               	movlw	63
  1979  000E58  0100               	movlb	0	; () banked
  1980  000E5A  6F7C               	movwf	(___ftadd@f2+2)& (0+255),b
  1981  000E5C  0E00               	movlw	0
  1982  000E5E  0100               	movlb	0	; () banked
  1983  000E60  6F95               	movwf	___ftdiv@f2& (0+255),b
  1984  000E62  0EC8               	movlw	200
  1985  000E64  0100               	movlb	0	; () banked
  1986  000E66  6F96               	movwf	(___ftdiv@f2+1)& (0+255),b
  1987  000E68  0E42               	movlw	66
  1988  000E6A  0100               	movlb	0	; () banked
  1989  000E6C  6F97               	movwf	(___ftdiv@f2+2)& (0+255),b
  1990  000E6E  C0B7  F092         	movff	get_temp@resistance,___ftdiv@f1
  1991  000E72  C0B8  F093         	movff	get_temp@resistance+1,___ftdiv@f1+1
  1992  000E76  C0B9  F094         	movff	get_temp@resistance+2,___ftdiv@f1+2
  1993  000E7A  EC47  F009         	call	___ftdiv	;wreg free
  1994  000E7E  C092  F074         	movff	?___ftdiv,___ftneg@f1
  1995  000E82  C093  F075         	movff	?___ftdiv+1,___ftneg@f1+1
  1996  000E86  C094  F076         	movff	?___ftdiv+2,___ftneg@f1+2
  1997  000E8A  ECE3  F00D         	call	___ftneg	;wreg free
  1998  000E8E  C074  F077         	movff	?___ftneg,___ftadd@f1
  1999  000E92  C075  F078         	movff	?___ftneg+1,___ftadd@f1+1
  2000  000E96  C076  F079         	movff	?___ftneg+2,___ftadd@f1+2
  2001  000E9A  EC79  F005         	call	___ftadd	;wreg free
  2002  000E9E  C077  F083         	movff	?___ftadd,___ftmul@f1
  2003  000EA2  C078  F084         	movff	?___ftadd+1,___ftmul@f1+1
  2004  000EA6  C079  F085         	movff	?___ftadd+2,___ftmul@f1+2
  2005  000EAA  EC98  F008         	call	___ftmul	;wreg free
  2006  000EAE  C083  F0BA         	movff	?___ftmul,_get_temp$805
  2007  000EB2  C084  F0BB         	movff	?___ftmul+1,_get_temp$805+1
  2008  000EB6  C085  F0BC         	movff	?___ftmul+2,_get_temp$805+2
  2009                           
  2010                           ;main.c: 367: double temp = sqrt((3.9083e-3)*(3.9083e-3)-4*(-5.775e-7)*(1-resistance/100
      +                          ));
  2011  000EBA  C0BA  F074         	movff	_get_temp$805,___ftneg@f1
  2012  000EBE  C0BB  F075         	movff	_get_temp$805+1,___ftneg@f1+1
  2013  000EC2  C0BC  F076         	movff	_get_temp$805+2,___ftneg@f1+2
  2014  000EC6  ECE3  F00D         	call	___ftneg	;wreg free
  2015  000ECA  C074  F077         	movff	?___ftneg,___ftadd@f1
  2016  000ECE  C075  F078         	movff	?___ftneg+1,___ftadd@f1+1
  2017  000ED2  C076  F079         	movff	?___ftneg+2,___ftadd@f1+2
  2018  000ED6  0E22               	movlw	34
  2019  000ED8  0100               	movlb	0	; () banked
  2020  000EDA  6F7A               	movwf	___ftadd@f2& (0+255),b
  2021  000EDC  0E80               	movlw	128
  2022  000EDE  0100               	movlb	0	; () banked
  2023  000EE0  6F7B               	movwf	(___ftadd@f2+1)& (0+255),b
  2024  000EE2  0E37               	movlw	55
  2025  000EE4  0100               	movlb	0	; () banked
  2026  000EE6  6F7C               	movwf	(___ftadd@f2+2)& (0+255),b
  2027  000EE8  EC79  F005         	call	___ftadd	;wreg free
  2028  000EEC  C077  F0BD         	movff	?___ftadd,_get_temp$806
  2029  000EF0  C078  F0BE         	movff	?___ftadd+1,_get_temp$806+1
  2030  000EF4  C079  F0BF         	movff	?___ftadd+2,_get_temp$806+2
  2031                           
  2032                           ;main.c: 367: double temp = sqrt((3.9083e-3)*(3.9083e-3)-4*(-5.775e-7)*(1-resistance/100
      +                          ));
  2033  000EF8  C0BD  F0A1         	movff	_get_temp$806,sqrt@a
  2034  000EFC  C0BE  F0A2         	movff	_get_temp$806+1,sqrt@a+1
  2035  000F00  C0BF  F0A3         	movff	_get_temp$806+2,sqrt@a+2
  2036  000F04  ECB9  F007         	call	_sqrt	;wreg free
  2037  000F08  C0A1  F0C3         	movff	?_sqrt,get_temp@temp
  2038  000F0C  C0A2  F0C4         	movff	?_sqrt+1,get_temp@temp+1
  2039  000F10  C0A3  F0C5         	movff	?_sqrt+2,get_temp@temp+2
  2040                           
  2041                           ;main.c: 368: temp = (-(3.9083e-3) + temp)/(2*(-5.775e-7));
  2042  000F14  0E11               	movlw	17
  2043  000F16  0100               	movlb	0	; () banked
  2044  000F18  6F7A               	movwf	___ftadd@f2& (0+255),b
  2045  000F1A  0E80               	movlw	128
  2046  000F1C  0100               	movlb	0	; () banked
  2047  000F1E  6F7B               	movwf	(___ftadd@f2+1)& (0+255),b
  2048  000F20  0EBB               	movlw	187
  2049  000F22  0100               	movlb	0	; () banked
  2050  000F24  6F7C               	movwf	(___ftadd@f2+2)& (0+255),b
  2051  000F26  C0C3  F077         	movff	get_temp@temp,___ftadd@f1
  2052  000F2A  C0C4  F078         	movff	get_temp@temp+1,___ftadd@f1+1
  2053  000F2E  C0C5  F079         	movff	get_temp@temp+2,___ftadd@f1+2
  2054  000F32  EC79  F005         	call	___ftadd	;wreg free
  2055  000F36  C077  F092         	movff	?___ftadd,___ftdiv@f1
  2056  000F3A  C078  F093         	movff	?___ftadd+1,___ftdiv@f1+1
  2057  000F3E  C079  F094         	movff	?___ftadd+2,___ftdiv@f1+2
  2058  000F42  0E05               	movlw	5
  2059  000F44  0100               	movlb	0	; () banked
  2060  000F46  6F95               	movwf	___ftdiv@f2& (0+255),b
  2061  000F48  0E9B               	movlw	155
  2062  000F4A  0100               	movlb	0	; () banked
  2063  000F4C  6F96               	movwf	(___ftdiv@f2+1)& (0+255),b
  2064  000F4E  0EB5               	movlw	181
  2065  000F50  0100               	movlb	0	; () banked
  2066  000F52  6F97               	movwf	(___ftdiv@f2+2)& (0+255),b
  2067  000F54  EC47  F009         	call	___ftdiv	;wreg free
  2068  000F58  C092  F0C3         	movff	?___ftdiv,get_temp@temp
  2069  000F5C  C093  F0C4         	movff	?___ftdiv+1,get_temp@temp+1
  2070  000F60  C094  F0C5         	movff	?___ftdiv+2,get_temp@temp+2
  2071                           
  2072                           ;main.c: 370: return temp;
  2073  000F64  C0C3  F0B4         	movff	get_temp@temp,?_get_temp
  2074  000F68  C0C4  F0B5         	movff	get_temp@temp+1,?_get_temp+1
  2075  000F6C  C0C5  F0B6         	movff	get_temp@temp+2,?_get_temp+2
  2076  000F70  0012               	return	
  2077  000F72                     __end_of_get_temp:
  2078                           	opt stack 0
  2079                           tblptru	equ	0xFF8
  2080                           tblptrh	equ	0xFF7
  2081                           tblptrl	equ	0xFF6
  2082                           tablat	equ	0xFF5
  2083                           intcon	equ	0xFF2
  2084                           intcon2	equ	0xFF1
  2085                           postinc0	equ	0xFEE
  2086                           wreg	equ	0xFE8
  2087                           postdec1	equ	0xFE5
  2088                           fsr1l	equ	0xFE1
  2089                           status	equ	0xFD8
  2090                           
  2091 ;; *************** function _sqrt *****************
  2092 ;; Defined at:
  2093 ;;		line 9 in file "/opt/microchip/xc8/v1.38/sources/common/sprcsqrt.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  a               3   65[BANK0 ] float 
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;  x               3   81[BANK0 ] float 
  2098 ;;  q               3   78[BANK0 ] float 
  2099 ;;  z               3   74[BANK0 ] float 
  2100 ;;  og              3   71[BANK0 ] float 
  2101 ;;  i               1   77[BANK0 ] unsigned char 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  3   65[BANK0 ] unsigned char 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2111 ;;      Params:         0       3       0       0       0       0       0       0       0
  2112 ;;      Locals:         0      13       0       0       0       0       0       0       0
  2113 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2114 ;;      Totals:         0      19       0       0       0       0       0       0       0
  2115 ;;Total ram usage:       19 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    8
  2118 ;; This function calls:
  2119 ;;		___ftge
  2120 ;;		___ftmul
  2121 ;;		___ftsub
  2122 ;; This function is called by:
  2123 ;;		_get_temp
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text8
  2128  000F72                     __ptext8:
  2129                           	opt stack 0
  2130  000F72                     _sqrt:
  2131                           	opt stack 21
  2132                           
  2133                           ;incstack = 0
  2134  000F72  0E00               	movlw	0
  2135  000F74  0100               	movlb	0	; () banked
  2136  000F76  6F78               	movwf	___ftge@ff1& (0+255),b
  2137  000F78  0E00               	movlw	0
  2138  000F7A  0100               	movlb	0	; () banked
  2139  000F7C  6F79               	movwf	(___ftge@ff1+1)& (0+255),b
  2140  000F7E  0E00               	movlw	0
  2141  000F80  0100               	movlb	0	; () banked
  2142  000F82  6F7A               	movwf	(___ftge@ff1+2)& (0+255),b
  2143  000F84  C0A1  F07B         	movff	sqrt@a,___ftge@ff2
  2144  000F88  C0A2  F07C         	movff	sqrt@a+1,___ftge@ff2+1
  2145  000F8C  C0A3  F07D         	movff	sqrt@a+2,___ftge@ff2+2
  2146  000F90  EC66  F00B         	call	___ftge	;wreg free
  2147  000F94  0100               	movlb	0	; () banked
  2148  000F96  A0D8               	btfss	status,0,c
  2149  000F98  D012               	goto	l972
  2150                           
  2151                           ; BSR set to: 0
  2152  000F9A  0100               	movlb	0	; () banked
  2153  000F9C  AFA3               	btfss	(sqrt@a+2)& (0+255),7,b
  2154  000F9E  D005               	goto	l973
  2155                           
  2156                           ; BSR set to: 0
  2157  000FA0  0E00               	movlw	0
  2158  000FA2  0100               	movlb	0	; () banked
  2159  000FA4  6FD5               	movwf	(_errno+1)& (0+255),b
  2160  000FA6  0E21               	movlw	33
  2161  000FA8  6FD4               	movwf	_errno& (0+255),b
  2162  000FAA                     l973:
  2163                           
  2164                           ; BSR set to: 0
  2165  000FAA  0E00               	movlw	0
  2166  000FAC  0100               	movlb	0	; () banked
  2167  000FAE  6FA1               	movwf	?_sqrt& (0+255),b
  2168  000FB0  0E00               	movlw	0
  2169  000FB2  0100               	movlb	0	; () banked
  2170  000FB4  6FA2               	movwf	(?_sqrt+1)& (0+255),b
  2171  000FB6  0E00               	movlw	0
  2172  000FB8  0100               	movlb	0	; () banked
  2173  000FBA  6FA3               	movwf	(?_sqrt+2)& (0+255),b
  2174                           
  2175                           ; BSR set to: 0
  2176  000FBC  0012               	return	
  2177  000FBE                     l972:
  2178                           
  2179                           ; BSR set to: 0
  2180  000FBE  C0A1  F0AA         	movff	sqrt@a,sqrt@z
  2181  000FC2  C0A2  F0AB         	movff	sqrt@a+1,sqrt@z+1
  2182  000FC6  C0A3  F0AC         	movff	sqrt@a+2,sqrt@z+2
  2183                           
  2184                           ; BSR set to: 0
  2185  000FCA  C0A1  F0A4         	movff	sqrt@a,??_sqrt
  2186  000FCE  C0A2  F0A5         	movff	sqrt@a+1,??_sqrt+1
  2187  000FD2  C0A3  F0A6         	movff	sqrt@a+2,??_sqrt+2
  2188  000FD6  0100               	movlb	0	; () banked
  2189  000FD8  1FA4               	comf	??_sqrt& (0+255),f,b
  2190  000FDA  1FA5               	comf	(??_sqrt+1)& (0+255),f,b
  2191  000FDC  1FA6               	comf	(??_sqrt+2)& (0+255),f,b
  2192  000FDE  2BA4               	incf	??_sqrt& (0+255),f,b
  2193  000FE0  0E00               	movlw	0
  2194  000FE2  23A5               	addwfc	(??_sqrt+1)& (0+255),f,b
  2195  000FE4  23A6               	addwfc	(??_sqrt+2)& (0+255),f,b
  2196  000FE6  0EC8               	movlw	200
  2197  000FE8  0100               	movlb	0	; () banked
  2198  000FEA  25A4               	addwf	??_sqrt& (0+255),w,b
  2199  000FEC  0100               	movlb	0	; () banked
  2200  000FEE  6FB1               	movwf	sqrt@x& (0+255),b
  2201  000FF0  0E6E               	movlw	110
  2202  000FF2  0100               	movlb	0	; () banked
  2203  000FF4  21A5               	addwfc	(??_sqrt+1)& (0+255),w,b
  2204  000FF6  0100               	movlb	0	; () banked
  2205  000FF8  6FB2               	movwf	(sqrt@x+1)& (0+255),b
  2206  000FFA  0EBE               	movlw	190
  2207  000FFC  0100               	movlb	0	; () banked
  2208  000FFE  21A6               	addwfc	(??_sqrt+2)& (0+255),w,b
  2209  001000  0100               	movlb	0	; () banked
  2210  001002  6FB3               	movwf	(sqrt@x+2)& (0+255),b
  2211                           
  2212                           ; BSR set to: 0
  2213  001004  0100               	movlb	0	; () banked
  2214  001006  90D8               	bcf	status,0,c
  2215  001008  33B3               	rrcf	(sqrt@x+2)& (0+255),f,b
  2216  00100A  33B2               	rrcf	(sqrt@x+1)& (0+255),f,b
  2217  00100C  33B1               	rrcf	sqrt@x& (0+255),f,b
  2218                           
  2219                           ; BSR set to: 0
  2220  00100E  0E00               	movlw	0
  2221  001010  0100               	movlb	0	; () banked
  2222  001012  5FAA               	subwf	sqrt@z& (0+255),f,b
  2223  001014  0E80               	movlw	128
  2224  001016  0100               	movlb	0	; () banked
  2225  001018  5BAB               	subwfb	(sqrt@z+1)& (0+255),f,b
  2226  00101A  0E00               	movlw	0
  2227  00101C  0100               	movlb	0	; () banked
  2228  00101E  5BAC               	subwfb	(sqrt@z+2)& (0+255),f,b
  2229                           
  2230                           ; BSR set to: 0
  2231  001020  0E04               	movlw	4
  2232  001022  0100               	movlb	0	; () banked
  2233  001024  6FAD               	movwf	sqrt@i& (0+255),b
  2234  001026                     l2259:
  2235                           
  2236                           ; BSR set to: 0
  2237  001026  C0B1  F0A7         	movff	sqrt@x,sqrt@og
  2238  00102A  C0B2  F0A8         	movff	sqrt@x+1,sqrt@og+1
  2239  00102E  C0B3  F0A9         	movff	sqrt@x+2,sqrt@og+2
  2240                           
  2241                           ; BSR set to: 0
  2242  001032  C0B1  F083         	movff	sqrt@x,___ftmul@f1
  2243  001036  C0B2  F084         	movff	sqrt@x+1,___ftmul@f1+1
  2244  00103A  C0B3  F085         	movff	sqrt@x+2,___ftmul@f1+2
  2245  00103E  C0AA  F086         	movff	sqrt@z,___ftmul@f2
  2246  001042  C0AB  F087         	movff	sqrt@z+1,___ftmul@f2+1
  2247  001046  C0AC  F088         	movff	sqrt@z+2,___ftmul@f2+2
  2248  00104A  EC98  F008         	call	___ftmul	;wreg free
  2249  00104E  C083  F0AE         	movff	?___ftmul,sqrt@q
  2250  001052  C084  F0AF         	movff	?___ftmul+1,sqrt@q+1
  2251  001056  C085  F0B0         	movff	?___ftmul+2,sqrt@q+2
  2252  00105A  C0AE  F083         	movff	sqrt@q,___ftmul@f1
  2253  00105E  C0AF  F084         	movff	sqrt@q+1,___ftmul@f1+1
  2254  001062  C0B0  F085         	movff	sqrt@q+2,___ftmul@f1+2
  2255  001066  C0B1  F086         	movff	sqrt@x,___ftmul@f2
  2256  00106A  C0B2  F087         	movff	sqrt@x+1,___ftmul@f2+1
  2257  00106E  C0B3  F088         	movff	sqrt@x+2,___ftmul@f2+2
  2258  001072  EC98  F008         	call	___ftmul	;wreg free
  2259  001076  C083  F0AE         	movff	?___ftmul,sqrt@q
  2260  00107A  C084  F0AF         	movff	?___ftmul+1,sqrt@q+1
  2261  00107E  C085  F0B0         	movff	?___ftmul+2,sqrt@q+2
  2262  001082  C0AE  F083         	movff	sqrt@q,___ftmul@f1
  2263  001086  C0AF  F084         	movff	sqrt@q+1,___ftmul@f1+1
  2264  00108A  C0B0  F085         	movff	sqrt@q+2,___ftmul@f1+2
  2265  00108E  C0B1  F086         	movff	sqrt@x,___ftmul@f2
  2266  001092  C0B2  F087         	movff	sqrt@x+1,___ftmul@f2+1
  2267  001096  C0B3  F088         	movff	sqrt@x+2,___ftmul@f2+2
  2268  00109A  EC98  F008         	call	___ftmul	;wreg free
  2269  00109E  C083  F0AE         	movff	?___ftmul,sqrt@q
  2270  0010A2  C084  F0AF         	movff	?___ftmul+1,sqrt@q+1
  2271  0010A6  C085  F0B0         	movff	?___ftmul+2,sqrt@q+2
  2272  0010AA  C0B1  F083         	movff	sqrt@x,___ftmul@f1
  2273  0010AE  C0B2  F084         	movff	sqrt@x+1,___ftmul@f1+1
  2274  0010B2  C0B3  F085         	movff	sqrt@x+2,___ftmul@f1+2
  2275  0010B6  0E00               	movlw	0
  2276  0010B8  0100               	movlb	0	; () banked
  2277  0010BA  6F86               	movwf	___ftmul@f2& (0+255),b
  2278  0010BC  0EC0               	movlw	192
  2279  0010BE  0100               	movlb	0	; () banked
  2280  0010C0  6F87               	movwf	(___ftmul@f2+1)& (0+255),b
  2281  0010C2  0E3F               	movlw	63
  2282  0010C4  0100               	movlb	0	; () banked
  2283  0010C6  6F88               	movwf	(___ftmul@f2+2)& (0+255),b
  2284  0010C8  EC98  F008         	call	___ftmul	;wreg free
  2285  0010CC  C083  F0B1         	movff	?___ftmul,sqrt@x
  2286  0010D0  C084  F0B2         	movff	?___ftmul+1,sqrt@x+1
  2287  0010D4  C085  F0B3         	movff	?___ftmul+2,sqrt@x+2
  2288  0010D8  C0B1  F083         	movff	sqrt@x,___ftsub@f1
  2289  0010DC  C0B2  F084         	movff	sqrt@x+1,___ftsub@f1+1
  2290  0010E0  C0B3  F085         	movff	sqrt@x+2,___ftsub@f1+2
  2291  0010E4  C0AE  F086         	movff	sqrt@q,___ftsub@f2
  2292  0010E8  C0AF  F087         	movff	sqrt@q+1,___ftsub@f2+1
  2293  0010EC  C0B0  F088         	movff	sqrt@q+2,___ftsub@f2+2
  2294  0010F0  EC3C  F00D         	call	___ftsub	;wreg free
  2295  0010F4  C083  F0B1         	movff	?___ftsub,sqrt@x
  2296  0010F8  C084  F0B2         	movff	?___ftsub+1,sqrt@x+1
  2297  0010FC  C085  F0B3         	movff	?___ftsub+2,sqrt@x+2
  2298  001100  0100               	movlb	0	; () banked
  2299  001102  2FAD               	decfsz	sqrt@i& (0+255),f,b
  2300  001104  D790               	goto	l2259
  2301                           
  2302                           ; BSR set to: 0
  2303                           
  2304                           ; BSR set to: 0
  2305  001106  C0B1  F083         	movff	sqrt@x,___ftmul@f1
  2306  00110A  C0B2  F084         	movff	sqrt@x+1,___ftmul@f1+1
  2307  00110E  C0B3  F085         	movff	sqrt@x+2,___ftmul@f1+2
  2308  001112  C0A1  F086         	movff	sqrt@a,___ftmul@f2
  2309  001116  C0A2  F087         	movff	sqrt@a+1,___ftmul@f2+1
  2310  00111A  C0A3  F088         	movff	sqrt@a+2,___ftmul@f2+2
  2311  00111E  EC98  F008         	call	___ftmul	;wreg free
  2312  001122  C083  F0A1         	movff	?___ftmul,?_sqrt
  2313  001126  C084  F0A2         	movff	?___ftmul+1,?_sqrt+1
  2314  00112A  C085  F0A3         	movff	?___ftmul+2,?_sqrt+2
  2315  00112E  0012               	return	
  2316  001130                     __end_of_sqrt:
  2317                           	opt stack 0
  2318                           tblptru	equ	0xFF8
  2319                           tblptrh	equ	0xFF7
  2320                           tblptrl	equ	0xFF6
  2321                           tablat	equ	0xFF5
  2322                           intcon	equ	0xFF2
  2323                           intcon2	equ	0xFF1
  2324                           postinc0	equ	0xFEE
  2325                           wreg	equ	0xFE8
  2326                           postdec1	equ	0xFE5
  2327                           fsr1l	equ	0xFE1
  2328                           status	equ	0xFD8
  2329                           
  2330 ;; *************** function ___ftsub *****************
  2331 ;; Defined at:
  2332 ;;		line 20 in file "/opt/microchip/xc8/v1.38/sources/common/ftsub.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;  f1              3   35[BANK0 ] float 
  2335 ;;  f2              3   38[BANK0 ] float 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;		None
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  3   35[BANK0 ] float 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2347 ;;      Params:         0       6       0       0       0       0       0       0       0
  2348 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2350 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2351 ;;Total ram usage:        6 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; Hardware stack levels required when called:    7
  2354 ;; This function calls:
  2355 ;;		___ftadd
  2356 ;; This function is called by:
  2357 ;;		_sqrt
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text9
  2362  001A78                     __ptext9:
  2363                           	opt stack 0
  2364  001A78                     ___ftsub:
  2365                           	opt stack 21
  2366                           
  2367                           ;incstack = 0
  2368  001A78  0100               	movlb	0	; () banked
  2369  001A7A  5186               	movf	___ftsub@f2& (0+255),w,b
  2370  001A7C  0100               	movlb	0	; () banked
  2371  001A7E  1187               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  2372  001A80  0100               	movlb	0	; () banked
  2373  001A82  1188               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  2374  001A84  B4D8               	btfsc	status,2,c
  2375  001A86  D009               	goto	l2137
  2376                           
  2377                           ; BSR set to: 0
  2378  001A88  0E00               	movlw	0
  2379  001A8A  0100               	movlb	0	; () banked
  2380  001A8C  1B86               	xorwf	___ftsub@f2& (0+255),f,b
  2381  001A8E  0E00               	movlw	0
  2382  001A90  0100               	movlb	0	; () banked
  2383  001A92  1B87               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  2384  001A94  0E80               	movlw	128
  2385  001A96  0100               	movlb	0	; () banked
  2386  001A98  1B88               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  2387  001A9A                     l2137:
  2388                           
  2389                           ; BSR set to: 0
  2390  001A9A  C083  F077         	movff	___ftsub@f1,___ftadd@f1
  2391  001A9E  C084  F078         	movff	___ftsub@f1+1,___ftadd@f1+1
  2392  001AA2  C085  F079         	movff	___ftsub@f1+2,___ftadd@f1+2
  2393  001AA6  C086  F07A         	movff	___ftsub@f2,___ftadd@f2
  2394  001AAA  C087  F07B         	movff	___ftsub@f2+1,___ftadd@f2+1
  2395  001AAE  C088  F07C         	movff	___ftsub@f2+2,___ftadd@f2+2
  2396  001AB2  EC79  F005         	call	___ftadd	;wreg free
  2397  001AB6  C077  F083         	movff	?___ftadd,?___ftsub
  2398  001ABA  C078  F084         	movff	?___ftadd+1,?___ftsub+1
  2399  001ABE  C079  F085         	movff	?___ftadd+2,?___ftsub+2
  2400  001AC2  0012               	return	
  2401  001AC4                     __end_of___ftsub:
  2402                           	opt stack 0
  2403                           tblptru	equ	0xFF8
  2404                           tblptrh	equ	0xFF7
  2405                           tblptrl	equ	0xFF6
  2406                           tablat	equ	0xFF5
  2407                           intcon	equ	0xFF2
  2408                           intcon2	equ	0xFF1
  2409                           postinc0	equ	0xFEE
  2410                           wreg	equ	0xFE8
  2411                           postdec1	equ	0xFE5
  2412                           fsr1l	equ	0xFE1
  2413                           status	equ	0xFD8
  2414                           
  2415 ;; *************** function ___ftadd *****************
  2416 ;; Defined at:
  2417 ;;		line 86 in file "/opt/microchip/xc8/v1.38/sources/common/ftadd.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  f1              3   23[BANK0 ] float 
  2420 ;;  f2              3   26[BANK0 ] float 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  exp1            1   34[BANK0 ] unsigned char 
  2423 ;;  exp2            1   33[BANK0 ] unsigned char 
  2424 ;;  sign            1   32[BANK0 ] unsigned char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  3   23[BANK0 ] float 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2, status,0, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2434 ;;      Params:         0       6       0       0       0       0       0       0       0
  2435 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2436 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2437 ;;      Totals:         0      12       0       0       0       0       0       0       0
  2438 ;;Total ram usage:       12 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:    6
  2441 ;; This function calls:
  2442 ;;		___ftpack
  2443 ;; This function is called by:
  2444 ;;		_get_temp
  2445 ;;		___ftsub
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           	psect	text10
  2450  000AF2                     __ptext10:
  2451                           	opt stack 0
  2452  000AF2                     ___ftadd:
  2453                           	opt stack 21
  2454                           
  2455                           ;incstack = 0
  2456  000AF2  C079  F07D         	movff	___ftadd@f1+2,??___ftadd
  2457  000AF6  0100               	movlb	0	; () banked
  2458  000AF8  6B7E               	clrf	(??___ftadd+1)& (0+255),b
  2459  000AFA  6B7F               	clrf	(??___ftadd+2)& (0+255),b
  2460  000AFC  0100               	movlb	0	; () banked
  2461  000AFE  3578               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  2462  000B00  0100               	movlb	0	; () banked
  2463  000B02  377D               	rlcf	??___ftadd& (0+255),f,b
  2464  000B04  E301               	bnc	u1811
  2465  000B06  817E               	bsf	(??___ftadd+1)& (0+255),0,b
  2466  000B08                     u1811:
  2467  000B08  0100               	movlb	0	; () banked
  2468  000B0A  517D               	movf	??___ftadd& (0+255),w,b
  2469  000B0C  0100               	movlb	0	; () banked
  2470  000B0E  6F82               	movwf	___ftadd@exp1& (0+255),b
  2471  000B10  C07C  F07D         	movff	___ftadd@f2+2,??___ftadd
  2472  000B14  0100               	movlb	0	; () banked
  2473  000B16  6B7E               	clrf	(??___ftadd+1)& (0+255),b
  2474  000B18  6B7F               	clrf	(??___ftadd+2)& (0+255),b
  2475  000B1A  0100               	movlb	0	; () banked
  2476  000B1C  357B               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  2477  000B1E  0100               	movlb	0	; () banked
  2478  000B20  377D               	rlcf	??___ftadd& (0+255),f,b
  2479  000B22  E301               	bnc	u1821
  2480  000B24  817E               	bsf	(??___ftadd+1)& (0+255),0,b
  2481  000B26                     u1821:
  2482  000B26  0100               	movlb	0	; () banked
  2483  000B28  517D               	movf	??___ftadd& (0+255),w,b
  2484  000B2A  0100               	movlb	0	; () banked
  2485  000B2C  6F81               	movwf	___ftadd@exp2& (0+255),b
  2486                           
  2487                           ; BSR set to: 0
  2488  000B2E  0100               	movlb	0	; () banked
  2489  000B30  5182               	movf	___ftadd@exp1& (0+255),w,b
  2490  000B32  0100               	movlb	0	; () banked
  2491  000B34  B4D8               	btfsc	status,2,c
  2492  000B36  D011               	goto	l670
  2493                           
  2494                           ; BSR set to: 0
  2495  000B38  0100               	movlb	0	; () banked
  2496  000B3A  5181               	movf	___ftadd@exp2& (0+255),w,b
  2497  000B3C  0100               	movlb	0	; () banked
  2498  000B3E  5D82               	subwf	___ftadd@exp1& (0+255),w,b
  2499  000B40  B0D8               	btfsc	status,0,c
  2500  000B42  D012               	goto	l2023
  2501                           
  2502                           ; BSR set to: 0
  2503  000B44  0100               	movlb	0	; () banked
  2504  000B46  5182               	movf	___ftadd@exp1& (0+255),w,b
  2505  000B48  0800               	sublw	0
  2506  000B4A  0100               	movlb	0	; () banked
  2507  000B4C  2581               	addwf	___ftadd@exp2& (0+255),w,b
  2508  000B4E  0100               	movlb	0	; () banked
  2509  000B50  6F7D               	movwf	??___ftadd& (0+255),b
  2510  000B52  0E18               	movlw	24
  2511  000B54  0100               	movlb	0	; () banked
  2512  000B56  657D               	cpfsgt	??___ftadd& (0+255),b
  2513  000B58  D007               	goto	l2023
  2514  000B5A                     l670:
  2515                           
  2516                           ; BSR set to: 0
  2517  000B5A  C07A  F077         	movff	___ftadd@f2,?___ftadd
  2518  000B5E  C07B  F078         	movff	___ftadd@f2+1,?___ftadd+1
  2519  000B62  C07C  F079         	movff	___ftadd@f2+2,?___ftadd+2
  2520  000B66  0012               	return	
  2521  000B68                     l2023:
  2522                           
  2523                           ; BSR set to: 0
  2524  000B68  0100               	movlb	0	; () banked
  2525  000B6A  5181               	movf	___ftadd@exp2& (0+255),w,b
  2526  000B6C  0100               	movlb	0	; () banked
  2527  000B6E  B4D8               	btfsc	status,2,c
  2528  000B70  D011               	goto	l674
  2529                           
  2530                           ; BSR set to: 0
  2531  000B72  0100               	movlb	0	; () banked
  2532  000B74  5182               	movf	___ftadd@exp1& (0+255),w,b
  2533  000B76  0100               	movlb	0	; () banked
  2534  000B78  5D81               	subwf	___ftadd@exp2& (0+255),w,b
  2535  000B7A  B0D8               	btfsc	status,0,c
  2536  000B7C  D012               	goto	l2029
  2537                           
  2538                           ; BSR set to: 0
  2539  000B7E  0100               	movlb	0	; () banked
  2540  000B80  5181               	movf	___ftadd@exp2& (0+255),w,b
  2541  000B82  0800               	sublw	0
  2542  000B84  0100               	movlb	0	; () banked
  2543  000B86  2582               	addwf	___ftadd@exp1& (0+255),w,b
  2544  000B88  0100               	movlb	0	; () banked
  2545  000B8A  6F7D               	movwf	??___ftadd& (0+255),b
  2546  000B8C  0E18               	movlw	24
  2547  000B8E  0100               	movlb	0	; () banked
  2548  000B90  657D               	cpfsgt	??___ftadd& (0+255),b
  2549  000B92  D007               	goto	l2029
  2550  000B94                     l674:
  2551                           
  2552                           ; BSR set to: 0
  2553  000B94  C077  F077         	movff	___ftadd@f1,?___ftadd
  2554  000B98  C078  F078         	movff	___ftadd@f1+1,?___ftadd+1
  2555  000B9C  C079  F079         	movff	___ftadd@f1+2,?___ftadd+2
  2556  000BA0  0012               	return	
  2557  000BA2                     l2029:
  2558                           
  2559                           ; BSR set to: 0
  2560  000BA2  0E06               	movlw	6
  2561  000BA4  0100               	movlb	0	; () banked
  2562  000BA6  6F80               	movwf	___ftadd@sign& (0+255),b
  2563                           
  2564                           ; BSR set to: 0
  2565  000BA8  0100               	movlb	0	; () banked
  2566  000BAA  AF79               	btfss	(___ftadd@f1+2)& (0+255),7,b
  2567  000BAC  D002               	goto	l2035
  2568                           
  2569                           ; BSR set to: 0
  2570  000BAE  0100               	movlb	0	; () banked
  2571  000BB0  8F80               	bsf	___ftadd@sign& (0+255),7,b
  2572  000BB2                     l2035:
  2573                           
  2574                           ; BSR set to: 0
  2575  000BB2  0100               	movlb	0	; () banked
  2576  000BB4  AF7C               	btfss	(___ftadd@f2+2)& (0+255),7,b
  2577  000BB6  D002               	goto	l676
  2578                           
  2579                           ; BSR set to: 0
  2580  000BB8  0100               	movlb	0	; () banked
  2581  000BBA  8D80               	bsf	___ftadd@sign& (0+255),6,b
  2582  000BBC                     l676:
  2583                           
  2584                           ; BSR set to: 0
  2585  000BBC  0100               	movlb	0	; () banked
  2586  000BBE  8F78               	bsf	(___ftadd@f1+1)& (0+255),7,b
  2587                           
  2588                           ; BSR set to: 0
  2589  000BC0  0EFF               	movlw	255
  2590  000BC2  0100               	movlb	0	; () banked
  2591  000BC4  1777               	andwf	___ftadd@f1& (0+255),f,b
  2592  000BC6  0EFF               	movlw	255
  2593  000BC8  0100               	movlb	0	; () banked
  2594  000BCA  1778               	andwf	(___ftadd@f1+1)& (0+255),f,b
  2595  000BCC  0E00               	movlw	0
  2596  000BCE  0100               	movlb	0	; () banked
  2597  000BD0  1779               	andwf	(___ftadd@f1+2)& (0+255),f,b
  2598  000BD2  0100               	movlb	0	; () banked
  2599  000BD4  8F7B               	bsf	(___ftadd@f2+1)& (0+255),7,b
  2600                           
  2601                           ; BSR set to: 0
  2602  000BD6  0EFF               	movlw	255
  2603  000BD8  0100               	movlb	0	; () banked
  2604  000BDA  177A               	andwf	___ftadd@f2& (0+255),f,b
  2605  000BDC  0EFF               	movlw	255
  2606  000BDE  0100               	movlb	0	; () banked
  2607  000BE0  177B               	andwf	(___ftadd@f2+1)& (0+255),f,b
  2608  000BE2  0E00               	movlw	0
  2609  000BE4  0100               	movlb	0	; () banked
  2610  000BE6  177C               	andwf	(___ftadd@f2+2)& (0+255),f,b
  2611                           
  2612                           ; BSR set to: 0
  2613  000BE8  0100               	movlb	0	; () banked
  2614  000BEA  5181               	movf	___ftadd@exp2& (0+255),w,b
  2615  000BEC  0100               	movlb	0	; () banked
  2616  000BEE  5D82               	subwf	___ftadd@exp1& (0+255),w,b
  2617  000BF0  B0D8               	btfsc	status,0,c
  2618  000BF2  D025               	goto	l2055
  2619  000BF4                     l2045:
  2620                           
  2621                           ; BSR set to: 0
  2622  000BF4  0100               	movlb	0	; () banked
  2623  000BF6  90D8               	bcf	status,0,c
  2624  000BF8  377A               	rlcf	___ftadd@f2& (0+255),f,b
  2625  000BFA  377B               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  2626  000BFC  377C               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  2627  000BFE  0100               	movlb	0	; () banked
  2628  000C00  0781               	decf	___ftadd@exp2& (0+255),f,b
  2629                           
  2630                           ; BSR set to: 0
  2631  000C02  0100               	movlb	0	; () banked
  2632  000C04  5182               	movf	___ftadd@exp1& (0+255),w,b
  2633  000C06  0100               	movlb	0	; () banked
  2634  000C08  1981               	xorwf	___ftadd@exp2& (0+255),w,b
  2635  000C0A  B4D8               	btfsc	status,2,c
  2636  000C0C  D011               	goto	l2053
  2637                           
  2638                           ; BSR set to: 0
  2639  000C0E  0100               	movlb	0	; () banked
  2640  000C10  0780               	decf	___ftadd@sign& (0+255),f,b
  2641  000C12  C080  F07D         	movff	___ftadd@sign,??___ftadd
  2642  000C16  0E07               	movlw	7
  2643  000C18  0100               	movlb	0	; () banked
  2644  000C1A  177D               	andwf	??___ftadd& (0+255),f,b
  2645  000C1C  B4D8               	btfsc	status,2,c
  2646  000C1E  D008               	goto	l2053
  2647  000C20  D7E9               	goto	l2045
  2648  000C22                     l2051:
  2649                           
  2650                           ; BSR set to: 0
  2651  000C22  0100               	movlb	0	; () banked
  2652  000C24  90D8               	bcf	status,0,c
  2653  000C26  3379               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  2654  000C28  3378               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  2655  000C2A  3377               	rrcf	___ftadd@f1& (0+255),f,b
  2656  000C2C  0100               	movlb	0	; () banked
  2657  000C2E  2B82               	incf	___ftadd@exp1& (0+255),f,b
  2658  000C30                     l2053:
  2659                           
  2660                           ; BSR set to: 0
  2661  000C30  0100               	movlb	0	; () banked
  2662  000C32  5181               	movf	___ftadd@exp2& (0+255),w,b
  2663  000C34  0100               	movlb	0	; () banked
  2664  000C36  1982               	xorwf	___ftadd@exp1& (0+255),w,b
  2665  000C38  B4D8               	btfsc	status,2,c
  2666  000C3A  D02B               	goto	l685
  2667  000C3C  D7F2               	goto	l2051
  2668  000C3E                     l2055:
  2669                           
  2670                           ; BSR set to: 0
  2671  000C3E  0100               	movlb	0	; () banked
  2672  000C40  5182               	movf	___ftadd@exp1& (0+255),w,b
  2673  000C42  0100               	movlb	0	; () banked
  2674  000C44  5D81               	subwf	___ftadd@exp2& (0+255),w,b
  2675  000C46  B0D8               	btfsc	status,0,c
  2676  000C48  D024               	goto	l685
  2677  000C4A                     l2057:
  2678                           
  2679                           ; BSR set to: 0
  2680  000C4A  0100               	movlb	0	; () banked
  2681  000C4C  90D8               	bcf	status,0,c
  2682  000C4E  3777               	rlcf	___ftadd@f1& (0+255),f,b
  2683  000C50  3778               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  2684  000C52  3779               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  2685  000C54  0100               	movlb	0	; () banked
  2686  000C56  0782               	decf	___ftadd@exp1& (0+255),f,b
  2687                           
  2688                           ; BSR set to: 0
  2689  000C58  0100               	movlb	0	; () banked
  2690  000C5A  5182               	movf	___ftadd@exp1& (0+255),w,b
  2691  000C5C  0100               	movlb	0	; () banked
  2692  000C5E  1981               	xorwf	___ftadd@exp2& (0+255),w,b
  2693  000C60  B4D8               	btfsc	status,2,c
  2694  000C62  D011               	goto	l2065
  2695                           
  2696                           ; BSR set to: 0
  2697  000C64  0100               	movlb	0	; () banked
  2698  000C66  0780               	decf	___ftadd@sign& (0+255),f,b
  2699  000C68  C080  F07D         	movff	___ftadd@sign,??___ftadd
  2700  000C6C  0E07               	movlw	7
  2701  000C6E  0100               	movlb	0	; () banked
  2702  000C70  177D               	andwf	??___ftadd& (0+255),f,b
  2703  000C72  B4D8               	btfsc	status,2,c
  2704  000C74  D008               	goto	l2065
  2705  000C76  D7E9               	goto	l2057
  2706  000C78                     l2063:
  2707                           
  2708                           ; BSR set to: 0
  2709  000C78  0100               	movlb	0	; () banked
  2710  000C7A  90D8               	bcf	status,0,c
  2711  000C7C  337C               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  2712  000C7E  337B               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  2713  000C80  337A               	rrcf	___ftadd@f2& (0+255),f,b
  2714  000C82  0100               	movlb	0	; () banked
  2715  000C84  2B81               	incf	___ftadd@exp2& (0+255),f,b
  2716  000C86                     l2065:
  2717                           
  2718                           ; BSR set to: 0
  2719  000C86  0100               	movlb	0	; () banked
  2720  000C88  5181               	movf	___ftadd@exp2& (0+255),w,b
  2721  000C8A  0100               	movlb	0	; () banked
  2722  000C8C  1982               	xorwf	___ftadd@exp1& (0+255),w,b
  2723  000C8E  A4D8               	btfss	status,2,c
  2724  000C90  D7F3               	goto	l2063
  2725  000C92                     l685:
  2726                           
  2727                           ; BSR set to: 0
  2728  000C92  0100               	movlb	0	; () banked
  2729  000C94  AF80               	btfss	___ftadd@sign& (0+255),7,b
  2730  000C96  D012               	goto	l694
  2731                           
  2732                           ; BSR set to: 0
  2733  000C98  0EFF               	movlw	255
  2734  000C9A  0100               	movlb	0	; () banked
  2735  000C9C  1B77               	xorwf	___ftadd@f1& (0+255),f,b
  2736  000C9E  0EFF               	movlw	255
  2737  000CA0  0100               	movlb	0	; () banked
  2738  000CA2  1B78               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  2739  000CA4  0EFF               	movlw	255
  2740  000CA6  0100               	movlb	0	; () banked
  2741  000CA8  1B79               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  2742  000CAA  0E01               	movlw	1
  2743  000CAC  0100               	movlb	0	; () banked
  2744  000CAE  2777               	addwf	___ftadd@f1& (0+255),f,b
  2745  000CB0  0E00               	movlw	0
  2746  000CB2  0100               	movlb	0	; () banked
  2747  000CB4  2378               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  2748  000CB6  0E00               	movlw	0
  2749  000CB8  0100               	movlb	0	; () banked
  2750  000CBA  2379               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  2751  000CBC                     l694:
  2752                           
  2753                           ; BSR set to: 0
  2754  000CBC  0100               	movlb	0	; () banked
  2755  000CBE  AD80               	btfss	___ftadd@sign& (0+255),6,b
  2756  000CC0  D012               	goto	l2071
  2757                           
  2758                           ; BSR set to: 0
  2759  000CC2  0EFF               	movlw	255
  2760  000CC4  0100               	movlb	0	; () banked
  2761  000CC6  1B7A               	xorwf	___ftadd@f2& (0+255),f,b
  2762  000CC8  0EFF               	movlw	255
  2763  000CCA  0100               	movlb	0	; () banked
  2764  000CCC  1B7B               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2765  000CCE  0EFF               	movlw	255
  2766  000CD0  0100               	movlb	0	; () banked
  2767  000CD2  1B7C               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2768  000CD4  0E01               	movlw	1
  2769  000CD6  0100               	movlb	0	; () banked
  2770  000CD8  277A               	addwf	___ftadd@f2& (0+255),f,b
  2771  000CDA  0E00               	movlw	0
  2772  000CDC  0100               	movlb	0	; () banked
  2773  000CDE  237B               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2774  000CE0  0E00               	movlw	0
  2775  000CE2  0100               	movlb	0	; () banked
  2776  000CE4  237C               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2777  000CE6                     l2071:
  2778                           
  2779                           ; BSR set to: 0
  2780  000CE6  0E00               	movlw	0
  2781  000CE8  0100               	movlb	0	; () banked
  2782  000CEA  6F80               	movwf	___ftadd@sign& (0+255),b
  2783                           
  2784                           ; BSR set to: 0
  2785  000CEC  0100               	movlb	0	; () banked
  2786  000CEE  5177               	movf	___ftadd@f1& (0+255),w,b
  2787  000CF0  0100               	movlb	0	; () banked
  2788  000CF2  277A               	addwf	___ftadd@f2& (0+255),f,b
  2789  000CF4  0100               	movlb	0	; () banked
  2790  000CF6  5178               	movf	(___ftadd@f1+1)& (0+255),w,b
  2791  000CF8  0100               	movlb	0	; () banked
  2792  000CFA  237B               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2793  000CFC  0100               	movlb	0	; () banked
  2794  000CFE  5179               	movf	(___ftadd@f1+2)& (0+255),w,b
  2795  000D00  0100               	movlb	0	; () banked
  2796  000D02  237C               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2797                           
  2798                           ; BSR set to: 0
  2799  000D04  0100               	movlb	0	; () banked
  2800  000D06  AF7C               	btfss	(___ftadd@f2+2)& (0+255),7,b
  2801  000D08  D015               	goto	l2081
  2802                           
  2803                           ; BSR set to: 0
  2804  000D0A  0EFF               	movlw	255
  2805  000D0C  0100               	movlb	0	; () banked
  2806  000D0E  1B7A               	xorwf	___ftadd@f2& (0+255),f,b
  2807  000D10  0EFF               	movlw	255
  2808  000D12  0100               	movlb	0	; () banked
  2809  000D14  1B7B               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2810  000D16  0EFF               	movlw	255
  2811  000D18  0100               	movlb	0	; () banked
  2812  000D1A  1B7C               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2813  000D1C  0E01               	movlw	1
  2814  000D1E  0100               	movlb	0	; () banked
  2815  000D20  277A               	addwf	___ftadd@f2& (0+255),f,b
  2816  000D22  0E00               	movlw	0
  2817  000D24  0100               	movlb	0	; () banked
  2818  000D26  237B               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2819  000D28  0E00               	movlw	0
  2820  000D2A  0100               	movlb	0	; () banked
  2821  000D2C  237C               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2822                           
  2823                           ; BSR set to: 0
  2824  000D2E  0E01               	movlw	1
  2825  000D30  0100               	movlb	0	; () banked
  2826  000D32  6F80               	movwf	___ftadd@sign& (0+255),b
  2827  000D34                     l2081:
  2828                           
  2829                           ; BSR set to: 0
  2830  000D34  C07A  F06C         	movff	___ftadd@f2,___ftpack@arg
  2831  000D38  C07B  F06D         	movff	___ftadd@f2+1,___ftpack@arg+1
  2832  000D3C  C07C  F06E         	movff	___ftadd@f2+2,___ftpack@arg+2
  2833  000D40  C082  F06F         	movff	___ftadd@exp1,___ftpack@exp
  2834  000D44  C080  F070         	movff	___ftadd@sign,___ftpack@sign
  2835  000D48  EC7A  F00A         	call	___ftpack	;wreg free
  2836  000D4C  C06C  F077         	movff	?___ftpack,?___ftadd
  2837  000D50  C06D  F078         	movff	?___ftpack+1,?___ftadd+1
  2838  000D54  C06E  F079         	movff	?___ftpack+2,?___ftadd+2
  2839  000D58  0012               	return	
  2840  000D5A                     __end_of___ftadd:
  2841                           	opt stack 0
  2842                           tblptru	equ	0xFF8
  2843                           tblptrh	equ	0xFF7
  2844                           tblptrl	equ	0xFF6
  2845                           tablat	equ	0xFF5
  2846                           intcon	equ	0xFF2
  2847                           intcon2	equ	0xFF1
  2848                           postinc0	equ	0xFEE
  2849                           wreg	equ	0xFE8
  2850                           postdec1	equ	0xFE5
  2851                           fsr1l	equ	0xFE1
  2852                           status	equ	0xFD8
  2853                           
  2854 ;; *************** function ___ftmul *****************
  2855 ;; Defined at:
  2856 ;;		line 62 in file "/opt/microchip/xc8/v1.38/sources/common/ftmul.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;  f1              3   35[BANK0 ] float 
  2859 ;;  f2              3   38[BANK0 ] float 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  f3_as_produc    3   45[BANK0 ] unsigned um
  2862 ;;  sign            1   49[BANK0 ] unsigned char 
  2863 ;;  cntr            1   48[BANK0 ] unsigned char 
  2864 ;;  exp             1   44[BANK0 ] unsigned char 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  3   35[BANK0 ] float 
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0, cstack
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2874 ;;      Params:         0       6       0       0       0       0       0       0       0
  2875 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2876 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2877 ;;      Totals:         0      15       0       0       0       0       0       0       0
  2878 ;;Total ram usage:       15 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    6
  2881 ;; This function calls:
  2882 ;;		___ftpack
  2883 ;; This function is called by:
  2884 ;;		_get_temp
  2885 ;;		_sqrt
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text11
  2890  001130                     __ptext11:
  2891                           	opt stack 0
  2892  001130                     ___ftmul:
  2893                           	opt stack 22
  2894                           
  2895                           ;incstack = 0
  2896  001130  C085  F089         	movff	___ftmul@f1+2,??___ftmul
  2897  001134  0100               	movlb	0	; () banked
  2898  001136  6B8A               	clrf	(??___ftmul+1)& (0+255),b
  2899  001138  6B8B               	clrf	(??___ftmul+2)& (0+255),b
  2900  00113A  0100               	movlb	0	; () banked
  2901  00113C  3584               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  2902  00113E  0100               	movlb	0	; () banked
  2903  001140  3789               	rlcf	??___ftmul& (0+255),f,b
  2904  001142  E301               	bnc	u2021
  2905  001144  818A               	bsf	(??___ftmul+1)& (0+255),0,b
  2906  001146                     u2021:
  2907  001146  0100               	movlb	0	; () banked
  2908  001148  5189               	movf	??___ftmul& (0+255),w,b
  2909  00114A  0100               	movlb	0	; () banked
  2910  00114C  6F8C               	movwf	___ftmul@exp& (0+255),b
  2911  00114E  0100               	movlb	0	; () banked
  2912  001150  518C               	movf	___ftmul@exp& (0+255),w,b
  2913  001152  A4D8               	btfss	status,2,c
  2914  001154  D00A               	goto	l2091
  2915                           
  2916                           ; BSR set to: 0
  2917  001156  0E00               	movlw	0
  2918  001158  0100               	movlb	0	; () banked
  2919  00115A  6F83               	movwf	?___ftmul& (0+255),b
  2920  00115C  0E00               	movlw	0
  2921  00115E  0100               	movlb	0	; () banked
  2922  001160  6F84               	movwf	(?___ftmul+1)& (0+255),b
  2923  001162  0E00               	movlw	0
  2924  001164  0100               	movlb	0	; () banked
  2925  001166  6F85               	movwf	(?___ftmul+2)& (0+255),b
  2926                           
  2927                           ; BSR set to: 0
  2928  001168  0012               	return	
  2929  00116A                     l2091:
  2930                           
  2931                           ; BSR set to: 0
  2932  00116A  C088  F089         	movff	___ftmul@f2+2,??___ftmul
  2933  00116E  0100               	movlb	0	; () banked
  2934  001170  6B8A               	clrf	(??___ftmul+1)& (0+255),b
  2935  001172  6B8B               	clrf	(??___ftmul+2)& (0+255),b
  2936  001174  0100               	movlb	0	; () banked
  2937  001176  3587               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  2938  001178  0100               	movlb	0	; () banked
  2939  00117A  3789               	rlcf	??___ftmul& (0+255),f,b
  2940  00117C  E301               	bnc	u2041
  2941  00117E  818A               	bsf	(??___ftmul+1)& (0+255),0,b
  2942  001180                     u2041:
  2943  001180  0100               	movlb	0	; () banked
  2944  001182  5189               	movf	??___ftmul& (0+255),w,b
  2945  001184  0100               	movlb	0	; () banked
  2946  001186  6F91               	movwf	___ftmul@sign& (0+255),b
  2947  001188  0100               	movlb	0	; () banked
  2948  00118A  5191               	movf	___ftmul@sign& (0+255),w,b
  2949  00118C  A4D8               	btfss	status,2,c
  2950  00118E  D00A               	goto	l2097
  2951                           
  2952                           ; BSR set to: 0
  2953  001190  0E00               	movlw	0
  2954  001192  0100               	movlb	0	; () banked
  2955  001194  6F83               	movwf	?___ftmul& (0+255),b
  2956  001196  0E00               	movlw	0
  2957  001198  0100               	movlb	0	; () banked
  2958  00119A  6F84               	movwf	(?___ftmul+1)& (0+255),b
  2959  00119C  0E00               	movlw	0
  2960  00119E  0100               	movlb	0	; () banked
  2961  0011A0  6F85               	movwf	(?___ftmul+2)& (0+255),b
  2962                           
  2963                           ; BSR set to: 0
  2964  0011A2  0012               	return	
  2965  0011A4                     l2097:
  2966                           
  2967                           ; BSR set to: 0
  2968  0011A4  0100               	movlb	0	; () banked
  2969  0011A6  5191               	movf	___ftmul@sign& (0+255),w,b
  2970  0011A8  0F7B               	addlw	123
  2971  0011AA  0100               	movlb	0	; () banked
  2972  0011AC  278C               	addwf	___ftmul@exp& (0+255),f,b
  2973                           
  2974                           ; BSR set to: 0
  2975  0011AE  C085  F091         	movff	___ftmul@f1+2,___ftmul@sign
  2976  0011B2  0100               	movlb	0	; () banked
  2977  0011B4  5188               	movf	(___ftmul@f2+2)& (0+255),w,b
  2978  0011B6  0100               	movlb	0	; () banked
  2979  0011B8  1B91               	xorwf	___ftmul@sign& (0+255),f,b
  2980  0011BA  0E80               	movlw	128
  2981  0011BC  0100               	movlb	0	; () banked
  2982  0011BE  1791               	andwf	___ftmul@sign& (0+255),f,b
  2983                           
  2984                           ; BSR set to: 0
  2985  0011C0  0100               	movlb	0	; () banked
  2986  0011C2  8F84               	bsf	(___ftmul@f1+1)& (0+255),7,b
  2987                           
  2988                           ; BSR set to: 0
  2989  0011C4  0100               	movlb	0	; () banked
  2990  0011C6  8F87               	bsf	(___ftmul@f2+1)& (0+255),7,b
  2991                           
  2992                           ; BSR set to: 0
  2993  0011C8  0EFF               	movlw	255
  2994  0011CA  0100               	movlb	0	; () banked
  2995  0011CC  1786               	andwf	___ftmul@f2& (0+255),f,b
  2996  0011CE  0EFF               	movlw	255
  2997  0011D0  0100               	movlb	0	; () banked
  2998  0011D2  1787               	andwf	(___ftmul@f2+1)& (0+255),f,b
  2999  0011D4  0E00               	movlw	0
  3000  0011D6  0100               	movlb	0	; () banked
  3001  0011D8  1788               	andwf	(___ftmul@f2+2)& (0+255),f,b
  3002                           
  3003                           ; BSR set to: 0
  3004  0011DA  0E00               	movlw	0
  3005  0011DC  0100               	movlb	0	; () banked
  3006  0011DE  6F8D               	movwf	___ftmul@f3_as_product& (0+255),b
  3007  0011E0  0E00               	movlw	0
  3008  0011E2  0100               	movlb	0	; () banked
  3009  0011E4  6F8E               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  3010  0011E6  0E00               	movlw	0
  3011  0011E8  0100               	movlb	0	; () banked
  3012  0011EA  6F8F               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  3013                           
  3014                           ; BSR set to: 0
  3015  0011EC  0E07               	movlw	7
  3016  0011EE  0100               	movlb	0	; () banked
  3017  0011F0  6F90               	movwf	___ftmul@cntr& (0+255),b
  3018  0011F2                     l2111:
  3019                           
  3020                           ; BSR set to: 0
  3021  0011F2  0100               	movlb	0	; () banked
  3022  0011F4  A183               	btfss	___ftmul@f1& (0+255),0,b
  3023  0011F6  D00C               	goto	l2115
  3024                           
  3025                           ; BSR set to: 0
  3026  0011F8  0100               	movlb	0	; () banked
  3027  0011FA  5186               	movf	___ftmul@f2& (0+255),w,b
  3028  0011FC  0100               	movlb	0	; () banked
  3029  0011FE  278D               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3030  001200  0100               	movlb	0	; () banked
  3031  001202  5187               	movf	(___ftmul@f2+1)& (0+255),w,b
  3032  001204  0100               	movlb	0	; () banked
  3033  001206  238E               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3034  001208  0100               	movlb	0	; () banked
  3035  00120A  5188               	movf	(___ftmul@f2+2)& (0+255),w,b
  3036  00120C  0100               	movlb	0	; () banked
  3037  00120E  238F               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3038  001210                     l2115:
  3039                           
  3040                           ; BSR set to: 0
  3041  001210  0100               	movlb	0	; () banked
  3042  001212  90D8               	bcf	status,0,c
  3043  001214  3385               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3044  001216  3384               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3045  001218  3383               	rrcf	___ftmul@f1& (0+255),f,b
  3046  00121A  0100               	movlb	0	; () banked
  3047  00121C  90D8               	bcf	status,0,c
  3048  00121E  3786               	rlcf	___ftmul@f2& (0+255),f,b
  3049  001220  3787               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  3050  001222  3788               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  3051                           
  3052                           ; BSR set to: 0
  3053  001224  0100               	movlb	0	; () banked
  3054  001226  2F90               	decfsz	___ftmul@cntr& (0+255),f,b
  3055  001228  D7E4               	goto	l2111
  3056                           
  3057                           ; BSR set to: 0
  3058                           
  3059                           ; BSR set to: 0
  3060  00122A  0E09               	movlw	9
  3061  00122C  0100               	movlb	0	; () banked
  3062  00122E  6F90               	movwf	___ftmul@cntr& (0+255),b
  3063  001230                     l2121:
  3064                           
  3065                           ; BSR set to: 0
  3066  001230  0100               	movlb	0	; () banked
  3067  001232  A183               	btfss	___ftmul@f1& (0+255),0,b
  3068  001234  D00C               	goto	l2125
  3069                           
  3070                           ; BSR set to: 0
  3071  001236  0100               	movlb	0	; () banked
  3072  001238  5186               	movf	___ftmul@f2& (0+255),w,b
  3073  00123A  0100               	movlb	0	; () banked
  3074  00123C  278D               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3075  00123E  0100               	movlb	0	; () banked
  3076  001240  5187               	movf	(___ftmul@f2+1)& (0+255),w,b
  3077  001242  0100               	movlb	0	; () banked
  3078  001244  238E               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3079  001246  0100               	movlb	0	; () banked
  3080  001248  5188               	movf	(___ftmul@f2+2)& (0+255),w,b
  3081  00124A  0100               	movlb	0	; () banked
  3082  00124C  238F               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3083  00124E                     l2125:
  3084                           
  3085                           ; BSR set to: 0
  3086  00124E  0100               	movlb	0	; () banked
  3087  001250  90D8               	bcf	status,0,c
  3088  001252  3385               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3089  001254  3384               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3090  001256  3383               	rrcf	___ftmul@f1& (0+255),f,b
  3091  001258  0100               	movlb	0	; () banked
  3092  00125A  90D8               	bcf	status,0,c
  3093  00125C  338F               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  3094  00125E  338E               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  3095  001260  338D               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  3096                           
  3097                           ; BSR set to: 0
  3098  001262  0100               	movlb	0	; () banked
  3099  001264  2F90               	decfsz	___ftmul@cntr& (0+255),f,b
  3100  001266  D7E4               	goto	l2121
  3101                           
  3102                           ; BSR set to: 0
  3103                           
  3104                           ; BSR set to: 0
  3105  001268  C08D  F06C         	movff	___ftmul@f3_as_product,___ftpack@arg
  3106  00126C  C08E  F06D         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3107  001270  C08F  F06E         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3108  001274  C08C  F06F         	movff	___ftmul@exp,___ftpack@exp
  3109  001278  C091  F070         	movff	___ftmul@sign,___ftpack@sign
  3110  00127C  EC7A  F00A         	call	___ftpack	;wreg free
  3111  001280  C06C  F083         	movff	?___ftpack,?___ftmul
  3112  001284  C06D  F084         	movff	?___ftpack+1,?___ftmul+1
  3113  001288  C06E  F085         	movff	?___ftpack+2,?___ftmul+2
  3114  00128C  0012               	return	
  3115  00128E                     __end_of___ftmul:
  3116                           	opt stack 0
  3117                           tblptru	equ	0xFF8
  3118                           tblptrh	equ	0xFF7
  3119                           tblptrl	equ	0xFF6
  3120                           tablat	equ	0xFF5
  3121                           intcon	equ	0xFF2
  3122                           intcon2	equ	0xFF1
  3123                           postinc0	equ	0xFEE
  3124                           wreg	equ	0xFE8
  3125                           postdec1	equ	0xFE5
  3126                           fsr1l	equ	0xFE1
  3127                           status	equ	0xFD8
  3128                           
  3129 ;; *************** function ___ftge *****************
  3130 ;; Defined at:
  3131 ;;		line 4 in file "/opt/microchip/xc8/v1.38/sources/common/ftge.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  ff1             3   24[BANK0 ] float 
  3134 ;;  ff2             3   27[BANK0 ] float 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;		None               void
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3146 ;;      Params:         0       6       0       0       0       0       0       0       0
  3147 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3148 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3149 ;;      Totals:         0       9       0       0       0       0       0       0       0
  3150 ;;Total ram usage:        9 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    5
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_main
  3157 ;;		_sqrt
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           	psect	text12
  3162  0016CC                     __ptext12:
  3163                           	opt stack 0
  3164  0016CC                     ___ftge:
  3165                           	opt stack 23
  3166                           
  3167                           ;incstack = 0
  3168  0016CC  0100               	movlb	0	; () banked
  3169  0016CE  AF7A               	btfss	(___ftge@ff1+2)& (0+255),7,b
  3170  0016D0  D01D               	goto	l2145
  3171                           
  3172                           ; BSR set to: 0
  3173  0016D2  C078  F07E         	movff	___ftge@ff1,??___ftge
  3174  0016D6  C079  F07F         	movff	___ftge@ff1+1,??___ftge+1
  3175  0016DA  C07A  F080         	movff	___ftge@ff1+2,??___ftge+2
  3176  0016DE  0100               	movlb	0	; () banked
  3177  0016E0  1F7E               	comf	??___ftge& (0+255),f,b
  3178  0016E2  1F7F               	comf	(??___ftge+1)& (0+255),f,b
  3179  0016E4  1F80               	comf	(??___ftge+2)& (0+255),f,b
  3180  0016E6  2B7E               	incf	??___ftge& (0+255),f,b
  3181  0016E8  0E00               	movlw	0
  3182  0016EA  237F               	addwfc	(??___ftge+1)& (0+255),f,b
  3183  0016EC  2380               	addwfc	(??___ftge+2)& (0+255),f,b
  3184  0016EE  0E00               	movlw	0
  3185  0016F0  0100               	movlb	0	; () banked
  3186  0016F2  257E               	addwf	??___ftge& (0+255),w,b
  3187  0016F4  0100               	movlb	0	; () banked
  3188  0016F6  6F78               	movwf	___ftge@ff1& (0+255),b
  3189  0016F8  0E00               	movlw	0
  3190  0016FA  0100               	movlb	0	; () banked
  3191  0016FC  217F               	addwfc	(??___ftge+1)& (0+255),w,b
  3192  0016FE  0100               	movlb	0	; () banked
  3193  001700  6F79               	movwf	(___ftge@ff1+1)& (0+255),b
  3194  001702  0E80               	movlw	128
  3195  001704  0100               	movlb	0	; () banked
  3196  001706  2180               	addwfc	(??___ftge+2)& (0+255),w,b
  3197  001708  0100               	movlb	0	; () banked
  3198  00170A  6F7A               	movwf	(___ftge@ff1+2)& (0+255),b
  3199  00170C                     l2145:
  3200                           
  3201                           ; BSR set to: 0
  3202  00170C  0100               	movlb	0	; () banked
  3203  00170E  AF7D               	btfss	(___ftge@ff2+2)& (0+255),7,b
  3204  001710  D01D               	goto	l2149
  3205                           
  3206                           ; BSR set to: 0
  3207  001712  C07B  F07E         	movff	___ftge@ff2,??___ftge
  3208  001716  C07C  F07F         	movff	___ftge@ff2+1,??___ftge+1
  3209  00171A  C07D  F080         	movff	___ftge@ff2+2,??___ftge+2
  3210  00171E  0100               	movlb	0	; () banked
  3211  001720  1F7E               	comf	??___ftge& (0+255),f,b
  3212  001722  1F7F               	comf	(??___ftge+1)& (0+255),f,b
  3213  001724  1F80               	comf	(??___ftge+2)& (0+255),f,b
  3214  001726  2B7E               	incf	??___ftge& (0+255),f,b
  3215  001728  0E00               	movlw	0
  3216  00172A  237F               	addwfc	(??___ftge+1)& (0+255),f,b
  3217  00172C  2380               	addwfc	(??___ftge+2)& (0+255),f,b
  3218  00172E  0E00               	movlw	0
  3219  001730  0100               	movlb	0	; () banked
  3220  001732  257E               	addwf	??___ftge& (0+255),w,b
  3221  001734  0100               	movlb	0	; () banked
  3222  001736  6F7B               	movwf	___ftge@ff2& (0+255),b
  3223  001738  0E00               	movlw	0
  3224  00173A  0100               	movlb	0	; () banked
  3225  00173C  217F               	addwfc	(??___ftge+1)& (0+255),w,b
  3226  00173E  0100               	movlb	0	; () banked
  3227  001740  6F7C               	movwf	(___ftge@ff2+1)& (0+255),b
  3228  001742  0E80               	movlw	128
  3229  001744  0100               	movlb	0	; () banked
  3230  001746  2180               	addwfc	(??___ftge+2)& (0+255),w,b
  3231  001748  0100               	movlb	0	; () banked
  3232  00174A  6F7D               	movwf	(___ftge@ff2+2)& (0+255),b
  3233  00174C                     l2149:
  3234                           
  3235                           ; BSR set to: 0
  3236  00174C  0E00               	movlw	0
  3237  00174E  0100               	movlb	0	; () banked
  3238  001750  1B78               	xorwf	___ftge@ff1& (0+255),f,b
  3239  001752  0E00               	movlw	0
  3240  001754  0100               	movlb	0	; () banked
  3241  001756  1B79               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  3242  001758  0E80               	movlw	128
  3243  00175A  0100               	movlb	0	; () banked
  3244  00175C  1B7A               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  3245                           
  3246                           ; BSR set to: 0
  3247  00175E  0E00               	movlw	0
  3248  001760  0100               	movlb	0	; () banked
  3249  001762  1B7B               	xorwf	___ftge@ff2& (0+255),f,b
  3250  001764  0E00               	movlw	0
  3251  001766  0100               	movlb	0	; () banked
  3252  001768  1B7C               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  3253  00176A  0E80               	movlw	128
  3254  00176C  0100               	movlb	0	; () banked
  3255  00176E  1B7D               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  3256  001770  0100               	movlb	0	; () banked
  3257  001772  517B               	movf	___ftge@ff2& (0+255),w,b
  3258  001774  0100               	movlb	0	; () banked
  3259  001776  5D78               	subwf	___ftge@ff1& (0+255),w,b
  3260  001778  0100               	movlb	0	; () banked
  3261  00177A  517C               	movf	(___ftge@ff2+1)& (0+255),w,b
  3262  00177C  0100               	movlb	0	; () banked
  3263  00177E  5979               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  3264  001780  0100               	movlb	0	; () banked
  3265  001782  517D               	movf	(___ftge@ff2+2)& (0+255),w,b
  3266  001784  0100               	movlb	0	; () banked
  3267  001786  597A               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  3268  001788  B0D8               	btfsc	status,0,c
  3269  00178A  D002               	goto	l2155
  3270                           
  3271                           ; BSR set to: 0
  3272  00178C  90D8               	bcf	status,0,c
  3273  00178E  0012               	return	
  3274  001790                     l2155:
  3275                           
  3276                           ; BSR set to: 0
  3277  001790  80D8               	bsf	status,0,c
  3278                           
  3279                           ; BSR set to: 0
  3280  001792  0012               	return	
  3281  001794                     __end_of___ftge:
  3282                           	opt stack 0
  3283                           tblptru	equ	0xFF8
  3284                           tblptrh	equ	0xFF7
  3285                           tblptrl	equ	0xFF6
  3286                           tablat	equ	0xFF5
  3287                           intcon	equ	0xFF2
  3288                           intcon2	equ	0xFF1
  3289                           postinc0	equ	0xFEE
  3290                           wreg	equ	0xFE8
  3291                           postdec1	equ	0xFE5
  3292                           fsr1l	equ	0xFE1
  3293                           status	equ	0xFD8
  3294                           
  3295 ;; *************** function ___lwtoft *****************
  3296 ;; Defined at:
  3297 ;;		line 28 in file "/opt/microchip/xc8/v1.38/sources/common/lwtoft.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  c               2   20[BANK0 ] unsigned int 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;		None
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  3   20[BANK0 ] float 
  3304 ;; Registers used:
  3305 ;;		wreg, status,2, status,0, cstack
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3311 ;;      Params:         0       3       0       0       0       0       0       0       0
  3312 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3313 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3314 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3315 ;;Total ram usage:        3 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    6
  3318 ;; This function calls:
  3319 ;;		___ftpack
  3320 ;; This function is called by:
  3321 ;;		_get_temp
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text13
  3326  001BF6                     __ptext13:
  3327                           	opt stack 0
  3328  001BF6                     ___lwtoft:
  3329                           	opt stack 23
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;incstack = 0
  3333  001BF6  C074  F06C         	movff	___lwtoft@c,___ftpack@arg
  3334  001BFA  C075  F06D         	movff	___lwtoft@c+1,___ftpack@arg+1
  3335  001BFE  0100               	movlb	0	; () banked
  3336  001C00  6B6E               	clrf	(___ftpack@arg+2)& (0+255),b
  3337  001C02  0E8E               	movlw	142
  3338  001C04  0100               	movlb	0	; () banked
  3339  001C06  6F6F               	movwf	___ftpack@exp& (0+255),b
  3340  001C08  0E00               	movlw	0
  3341  001C0A  0100               	movlb	0	; () banked
  3342  001C0C  6F70               	movwf	___ftpack@sign& (0+255),b
  3343  001C0E  EC7A  F00A         	call	___ftpack	;wreg free
  3344  001C12  C06C  F074         	movff	?___ftpack,?___lwtoft
  3345  001C16  C06D  F075         	movff	?___ftpack+1,?___lwtoft+1
  3346  001C1A  C06E  F076         	movff	?___ftpack+2,?___lwtoft+2
  3347  001C1E  0012               	return	
  3348  001C20                     __end_of___lwtoft:
  3349                           	opt stack 0
  3350                           tblptru	equ	0xFF8
  3351                           tblptrh	equ	0xFF7
  3352                           tblptrl	equ	0xFF6
  3353                           tablat	equ	0xFF5
  3354                           intcon	equ	0xFF2
  3355                           intcon2	equ	0xFF1
  3356                           postinc0	equ	0xFEE
  3357                           wreg	equ	0xFE8
  3358                           postdec1	equ	0xFE5
  3359                           fsr1l	equ	0xFE1
  3360                           status	equ	0xFD8
  3361                           
  3362 ;; *************** function ___ftneg *****************
  3363 ;; Defined at:
  3364 ;;		line 15 in file "/opt/microchip/xc8/v1.38/sources/common/ftneg.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;  f1              3   20[BANK0 ] float 
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  3   20[BANK0 ] float 
  3371 ;; Registers used:
  3372 ;;		wreg, status,2, status,0
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3378 ;;      Params:         0       3       0       0       0       0       0       0       0
  3379 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3380 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3381 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3382 ;;Total ram usage:        3 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    5
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		_get_temp
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text14
  3393  001BC6                     __ptext14:
  3394                           	opt stack 0
  3395  001BC6                     ___ftneg:
  3396                           	opt stack 24
  3397                           
  3398                           ;incstack = 0
  3399  001BC6  0100               	movlb	0	; () banked
  3400  001BC8  5174               	movf	___ftneg@f1& (0+255),w,b
  3401  001BCA  0100               	movlb	0	; () banked
  3402  001BCC  1175               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  3403  001BCE  0100               	movlb	0	; () banked
  3404  001BD0  1176               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  3405  001BD2  B4D8               	btfsc	status,2,c
  3406  001BD4  D009               	goto	l727
  3407                           
  3408                           ; BSR set to: 0
  3409  001BD6  0E00               	movlw	0
  3410  001BD8  0100               	movlb	0	; () banked
  3411  001BDA  1B74               	xorwf	___ftneg@f1& (0+255),f,b
  3412  001BDC  0E00               	movlw	0
  3413  001BDE  0100               	movlb	0	; () banked
  3414  001BE0  1B75               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  3415  001BE2  0E80               	movlw	128
  3416  001BE4  0100               	movlb	0	; () banked
  3417  001BE6  1B76               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  3418  001BE8                     l727:
  3419                           
  3420                           ; BSR set to: 0
  3421  001BE8  C074  F074         	movff	___ftneg@f1,?___ftneg
  3422  001BEC  C075  F075         	movff	___ftneg@f1+1,?___ftneg+1
  3423  001BF0  C076  F076         	movff	___ftneg@f1+2,?___ftneg+2
  3424                           
  3425                           ; BSR set to: 0
  3426  001BF4  0012               	return		;funcret
  3427  001BF6                     __end_of___ftneg:
  3428                           	opt stack 0
  3429                           tblptru	equ	0xFF8
  3430                           tblptrh	equ	0xFF7
  3431                           tblptrl	equ	0xFF6
  3432                           tablat	equ	0xFF5
  3433                           intcon	equ	0xFF2
  3434                           intcon2	equ	0xFF1
  3435                           postinc0	equ	0xFEE
  3436                           wreg	equ	0xFE8
  3437                           postdec1	equ	0xFE5
  3438                           fsr1l	equ	0xFE1
  3439                           status	equ	0xFD8
  3440                           
  3441 ;; *************** function ___ftdiv *****************
  3442 ;; Defined at:
  3443 ;;		line 54 in file "/opt/microchip/xc8/v1.38/sources/common/ftdiv.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;  f1              3   50[BANK0 ] float 
  3446 ;;  f2              3   53[BANK0 ] float 
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;  f3              3   60[BANK0 ] float 
  3449 ;;  sign            1   64[BANK0 ] unsigned char 
  3450 ;;  exp             1   63[BANK0 ] unsigned char 
  3451 ;;  cntr            1   59[BANK0 ] unsigned char 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  3   50[BANK0 ] float 
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0, cstack
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3461 ;;      Params:         0       6       0       0       0       0       0       0       0
  3462 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3463 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3464 ;;      Totals:         0      15       0       0       0       0       0       0       0
  3465 ;;Total ram usage:       15 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:    6
  3468 ;; This function calls:
  3469 ;;		___ftpack
  3470 ;; This function is called by:
  3471 ;;		_get_temp
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text15
  3476  00128E                     __ptext15:
  3477                           	opt stack 0
  3478  00128E                     ___ftdiv:
  3479                           	opt stack 23
  3480                           
  3481                           ; BSR set to: 0
  3482                           ;incstack = 0
  3483  00128E  C094  F098         	movff	___ftdiv@f1+2,??___ftdiv
  3484  001292  0100               	movlb	0	; () banked
  3485  001294  6B99               	clrf	(??___ftdiv+1)& (0+255),b
  3486  001296  6B9A               	clrf	(??___ftdiv+2)& (0+255),b
  3487  001298  0100               	movlb	0	; () banked
  3488  00129A  3593               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3489  00129C  0100               	movlb	0	; () banked
  3490  00129E  3798               	rlcf	??___ftdiv& (0+255),f,b
  3491  0012A0  E301               	bnc	u2461
  3492  0012A2  8199               	bsf	(??___ftdiv+1)& (0+255),0,b
  3493  0012A4                     u2461:
  3494  0012A4  0100               	movlb	0	; () banked
  3495  0012A6  5198               	movf	??___ftdiv& (0+255),w,b
  3496  0012A8  0100               	movlb	0	; () banked
  3497  0012AA  6F9F               	movwf	___ftdiv@exp& (0+255),b
  3498  0012AC  0100               	movlb	0	; () banked
  3499  0012AE  519F               	movf	___ftdiv@exp& (0+255),w,b
  3500  0012B0  A4D8               	btfss	status,2,c
  3501  0012B2  D00A               	goto	l2285
  3502                           
  3503                           ; BSR set to: 0
  3504  0012B4  0E00               	movlw	0
  3505  0012B6  0100               	movlb	0	; () banked
  3506  0012B8  6F92               	movwf	?___ftdiv& (0+255),b
  3507  0012BA  0E00               	movlw	0
  3508  0012BC  0100               	movlb	0	; () banked
  3509  0012BE  6F93               	movwf	(?___ftdiv+1)& (0+255),b
  3510  0012C0  0E00               	movlw	0
  3511  0012C2  0100               	movlb	0	; () banked
  3512  0012C4  6F94               	movwf	(?___ftdiv+2)& (0+255),b
  3513                           
  3514                           ; BSR set to: 0
  3515  0012C6  0012               	return	
  3516  0012C8                     l2285:
  3517                           
  3518                           ; BSR set to: 0
  3519  0012C8  C097  F098         	movff	___ftdiv@f2+2,??___ftdiv
  3520  0012CC  0100               	movlb	0	; () banked
  3521  0012CE  6B99               	clrf	(??___ftdiv+1)& (0+255),b
  3522  0012D0  6B9A               	clrf	(??___ftdiv+2)& (0+255),b
  3523  0012D2  0100               	movlb	0	; () banked
  3524  0012D4  3596               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3525  0012D6  0100               	movlb	0	; () banked
  3526  0012D8  3798               	rlcf	??___ftdiv& (0+255),f,b
  3527  0012DA  E301               	bnc	u2481
  3528  0012DC  8199               	bsf	(??___ftdiv+1)& (0+255),0,b
  3529  0012DE                     u2481:
  3530  0012DE  0100               	movlb	0	; () banked
  3531  0012E0  5198               	movf	??___ftdiv& (0+255),w,b
  3532  0012E2  0100               	movlb	0	; () banked
  3533  0012E4  6FA0               	movwf	___ftdiv@sign& (0+255),b
  3534  0012E6  0100               	movlb	0	; () banked
  3535  0012E8  51A0               	movf	___ftdiv@sign& (0+255),w,b
  3536  0012EA  A4D8               	btfss	status,2,c
  3537  0012EC  D00A               	goto	l2291
  3538                           
  3539                           ; BSR set to: 0
  3540  0012EE  0E00               	movlw	0
  3541  0012F0  0100               	movlb	0	; () banked
  3542  0012F2  6F92               	movwf	?___ftdiv& (0+255),b
  3543  0012F4  0E00               	movlw	0
  3544  0012F6  0100               	movlb	0	; () banked
  3545  0012F8  6F93               	movwf	(?___ftdiv+1)& (0+255),b
  3546  0012FA  0E00               	movlw	0
  3547  0012FC  0100               	movlb	0	; () banked
  3548  0012FE  6F94               	movwf	(?___ftdiv+2)& (0+255),b
  3549                           
  3550                           ; BSR set to: 0
  3551  001300  0012               	return	
  3552  001302                     l2291:
  3553                           
  3554                           ; BSR set to: 0
  3555  001302  0E00               	movlw	0
  3556  001304  0100               	movlb	0	; () banked
  3557  001306  6F9C               	movwf	___ftdiv@f3& (0+255),b
  3558  001308  0E00               	movlw	0
  3559  00130A  0100               	movlb	0	; () banked
  3560  00130C  6F9D               	movwf	(___ftdiv@f3+1)& (0+255),b
  3561  00130E  0E00               	movlw	0
  3562  001310  0100               	movlb	0	; () banked
  3563  001312  6F9E               	movwf	(___ftdiv@f3+2)& (0+255),b
  3564                           
  3565                           ; BSR set to: 0
  3566  001314  0100               	movlb	0	; () banked
  3567  001316  51A0               	movf	___ftdiv@sign& (0+255),w,b
  3568  001318  0F89               	addlw	137
  3569  00131A  0100               	movlb	0	; () banked
  3570  00131C  5F9F               	subwf	___ftdiv@exp& (0+255),f,b
  3571                           
  3572                           ; BSR set to: 0
  3573  00131E  C094  F0A0         	movff	___ftdiv@f1+2,___ftdiv@sign
  3574                           
  3575                           ; BSR set to: 0
  3576  001322  0100               	movlb	0	; () banked
  3577  001324  5197               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3578  001326  0100               	movlb	0	; () banked
  3579  001328  1BA0               	xorwf	___ftdiv@sign& (0+255),f,b
  3580                           
  3581                           ; BSR set to: 0
  3582  00132A  0E80               	movlw	128
  3583  00132C  0100               	movlb	0	; () banked
  3584  00132E  17A0               	andwf	___ftdiv@sign& (0+255),f,b
  3585                           
  3586                           ; BSR set to: 0
  3587  001330  0100               	movlb	0	; () banked
  3588  001332  8F93               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3589                           
  3590                           ; BSR set to: 0
  3591  001334  0EFF               	movlw	255
  3592  001336  0100               	movlb	0	; () banked
  3593  001338  1792               	andwf	___ftdiv@f1& (0+255),f,b
  3594  00133A  0EFF               	movlw	255
  3595  00133C  0100               	movlb	0	; () banked
  3596  00133E  1793               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3597  001340  0E00               	movlw	0
  3598  001342  0100               	movlb	0	; () banked
  3599  001344  1794               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3600                           
  3601                           ; BSR set to: 0
  3602  001346  0100               	movlb	0	; () banked
  3603  001348  8F96               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3604                           
  3605                           ; BSR set to: 0
  3606  00134A  0EFF               	movlw	255
  3607  00134C  0100               	movlb	0	; () banked
  3608  00134E  1795               	andwf	___ftdiv@f2& (0+255),f,b
  3609  001350  0EFF               	movlw	255
  3610  001352  0100               	movlb	0	; () banked
  3611  001354  1796               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3612  001356  0E00               	movlw	0
  3613  001358  0100               	movlb	0	; () banked
  3614  00135A  1797               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3615                           
  3616                           ; BSR set to: 0
  3617  00135C  0E18               	movlw	24
  3618  00135E  0100               	movlb	0	; () banked
  3619  001360  6F9B               	movwf	___ftdiv@cntr& (0+255),b
  3620  001362                     l2311:
  3621                           
  3622                           ; BSR set to: 0
  3623  001362  0100               	movlb	0	; () banked
  3624  001364  90D8               	bcf	status,0,c
  3625  001366  379C               	rlcf	___ftdiv@f3& (0+255),f,b
  3626  001368  379D               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3627  00136A  379E               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3628                           
  3629                           ; BSR set to: 0
  3630  00136C  0100               	movlb	0	; () banked
  3631  00136E  5195               	movf	___ftdiv@f2& (0+255),w,b
  3632  001370  0100               	movlb	0	; () banked
  3633  001372  5D92               	subwf	___ftdiv@f1& (0+255),w,b
  3634  001374  0100               	movlb	0	; () banked
  3635  001376  5196               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3636  001378  0100               	movlb	0	; () banked
  3637  00137A  5993               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3638  00137C  0100               	movlb	0	; () banked
  3639  00137E  5197               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3640  001380  0100               	movlb	0	; () banked
  3641  001382  5994               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3642  001384  A0D8               	btfss	status,0,c
  3643  001386  D00E               	goto	l705
  3644                           
  3645                           ; BSR set to: 0
  3646  001388  0100               	movlb	0	; () banked
  3647  00138A  5195               	movf	___ftdiv@f2& (0+255),w,b
  3648  00138C  0100               	movlb	0	; () banked
  3649  00138E  5F92               	subwf	___ftdiv@f1& (0+255),f,b
  3650  001390  0100               	movlb	0	; () banked
  3651  001392  5196               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3652  001394  0100               	movlb	0	; () banked
  3653  001396  5B93               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3654  001398  0100               	movlb	0	; () banked
  3655  00139A  5197               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3656  00139C  0100               	movlb	0	; () banked
  3657  00139E  5B94               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3658                           
  3659                           ; BSR set to: 0
  3660  0013A0  0100               	movlb	0	; () banked
  3661  0013A2  819C               	bsf	___ftdiv@f3& (0+255),0,b
  3662  0013A4                     l705:
  3663                           
  3664                           ; BSR set to: 0
  3665  0013A4  0100               	movlb	0	; () banked
  3666  0013A6  90D8               	bcf	status,0,c
  3667  0013A8  3792               	rlcf	___ftdiv@f1& (0+255),f,b
  3668  0013AA  3793               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3669  0013AC  3794               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3670                           
  3671                           ; BSR set to: 0
  3672  0013AE  0100               	movlb	0	; () banked
  3673  0013B0  2F9B               	decfsz	___ftdiv@cntr& (0+255),f,b
  3674  0013B2  D7D7               	goto	l2311
  3675                           
  3676                           ; BSR set to: 0
  3677                           
  3678                           ; BSR set to: 0
  3679  0013B4  C09C  F06C         	movff	___ftdiv@f3,___ftpack@arg
  3680  0013B8  C09D  F06D         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3681  0013BC  C09E  F06E         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3682  0013C0  C09F  F06F         	movff	___ftdiv@exp,___ftpack@exp
  3683  0013C4  C0A0  F070         	movff	___ftdiv@sign,___ftpack@sign
  3684  0013C8  EC7A  F00A         	call	___ftpack	;wreg free
  3685  0013CC  C06C  F092         	movff	?___ftpack,?___ftdiv
  3686  0013D0  C06D  F093         	movff	?___ftpack+1,?___ftdiv+1
  3687  0013D4  C06E  F094         	movff	?___ftpack+2,?___ftdiv+2
  3688  0013D8  0012               	return	
  3689  0013DA                     __end_of___ftdiv:
  3690                           	opt stack 0
  3691                           tblptru	equ	0xFF8
  3692                           tblptrh	equ	0xFF7
  3693                           tblptrl	equ	0xFF6
  3694                           tablat	equ	0xFF5
  3695                           intcon	equ	0xFF2
  3696                           intcon2	equ	0xFF1
  3697                           postinc0	equ	0xFEE
  3698                           wreg	equ	0xFE8
  3699                           postdec1	equ	0xFE5
  3700                           fsr1l	equ	0xFE1
  3701                           status	equ	0xFD8
  3702                           
  3703 ;; *************** function _error *****************
  3704 ;; Defined at:
  3705 ;;		line 345 in file "main.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;  code            1    wreg     unsigned char 
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;  code            1   14[BANK0 ] unsigned char 
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  1    wreg      void 
  3712 ;; Registers used:
  3713 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3719 ;;      Params:         0       0       0       0       0       0       0       0       0
  3720 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3721 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3722 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3723 ;;Total ram usage:        1 bytes
  3724 ;; Hardware stack levels used:    1
  3725 ;; Hardware stack levels required when called:    6
  3726 ;; This function calls:
  3727 ;;		_num_to_disp
  3728 ;;		_set_digit
  3729 ;; This function is called by:
  3730 ;;		_main
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           	psect	text16
  3735  001B8E                     __ptext16:
  3736                           	opt stack 0
  3737  001B8E                     _error:
  3738                           	opt stack 24
  3739                           
  3740                           ;incstack = 0
  3741                           ;error@code stored from wreg
  3742  001B8E  0100               	movlb	0	; () banked
  3743  001B90  6F6E               	movwf	error@code& (0+255),b
  3744                           
  3745                           ;main.c: 348: disp[0] = num_to_disp('E');
  3746  001B92  0E45               	movlw	69
  3747  001B94  ECC5  F00C         	call	_num_to_disp
  3748  001B98  0100               	movlb	0	; () banked
  3749  001B9A  6FD2               	movwf	_disp& (0+255),b
  3750                           
  3751                           ;main.c: 349: disp[1] = num_to_disp(code);
  3752  001B9C  0100               	movlb	0	; () banked
  3753  001B9E  516E               	movf	error@code& (0+255),w,b
  3754  001BA0  ECC5  F00C         	call	_num_to_disp
  3755  001BA4  0100               	movlb	0	; () banked
  3756  001BA6  6FD3               	movwf	(_disp+1)& (0+255),b
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;main.c: 350: set_digit(disp[0], 0);
  3760  001BA8  0E00               	movlw	0
  3761  001BAA  0100               	movlb	0	; () banked
  3762  001BAC  6F6C               	movwf	set_digit@num& (0+255),b
  3763  001BAE  0100               	movlb	0	; () banked
  3764  001BB0  51D2               	movf	_disp& (0+255),w,b
  3765  001BB2  EC83  F00C         	call	_set_digit
  3766                           
  3767                           ;main.c: 351: set_digit(disp[1], 1);
  3768  001BB6  0E01               	movlw	1
  3769  001BB8  0100               	movlb	0	; () banked
  3770  001BBA  6F6C               	movwf	set_digit@num& (0+255),b
  3771  001BBC  0100               	movlb	0	; () banked
  3772  001BBE  51D3               	movf	(_disp+1)& (0+255),w,b
  3773  001BC0  EC83  F00C         	call	_set_digit
  3774  001BC4  0012               	return		;funcret
  3775  001BC6                     __end_of_error:
  3776                           	opt stack 0
  3777                           tblptru	equ	0xFF8
  3778                           tblptrh	equ	0xFF7
  3779                           tblptrl	equ	0xFF6
  3780                           tablat	equ	0xFF5
  3781                           intcon	equ	0xFF2
  3782                           intcon2	equ	0xFF1
  3783                           postinc0	equ	0xFEE
  3784                           wreg	equ	0xFE8
  3785                           postdec1	equ	0xFE5
  3786                           fsr1l	equ	0xFE1
  3787                           status	equ	0xFD8
  3788                           
  3789 ;; *************** function _set_digit *****************
  3790 ;; Defined at:
  3791 ;;		line 29 in file "disp.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  dig             1    wreg     unsigned char 
  3794 ;;  num             1   12[BANK0 ] unsigned char 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  dig             1   13[BANK0 ] unsigned char 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      void 
  3799 ;; Registers used:
  3800 ;;		wreg, status,2
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3806 ;;      Params:         0       1       0       0       0       0       0       0       0
  3807 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3808 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3809 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3810 ;;Total ram usage:        2 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:    5
  3813 ;; This function calls:
  3814 ;;		Nothing
  3815 ;; This function is called by:
  3816 ;;		_error
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text17
  3821  001906                     __ptext17:
  3822                           	opt stack 0
  3823  001906                     _set_digit:
  3824                           	opt stack 24
  3825                           
  3826                           ;incstack = 0
  3827                           ;set_digit@dig stored from wreg
  3828  001906  0100               	movlb	0	; () banked
  3829  001908  6F6D               	movwf	set_digit@dig& (0+255),b
  3830                           
  3831                           ;disp.c: 32: TRISB2 = 0;
  3832  00190A  9493               	bcf	3987,2,c	;volatile
  3833                           
  3834                           ;disp.c: 33: TRISB5 = 0;
  3835  00190C  9A93               	bcf	3987,5,c	;volatile
  3836                           
  3837                           ;disp.c: 34: TRISB4 = 0;
  3838  00190E  9893               	bcf	3987,4,c	;volatile
  3839                           
  3840                           ;disp.c: 35: TRISB0 = 0;
  3841  001910  9093               	bcf	3987,0,c	;volatile
  3842                           
  3843                           ;disp.c: 36: TRISB4 = 0;
  3844  001912  9893               	bcf	3987,4,c	;volatile
  3845                           
  3846                           ;disp.c: 37: TRISB1 = 0;
  3847  001914  9293               	bcf	3987,1,c	;volatile
  3848                           
  3849                           ;disp.c: 38: TRISA6 = 0;
  3850  001916  9C92               	bcf	3986,6,c	;volatile
  3851                           
  3852                           ;disp.c: 40: LATA3 = num;
  3853  001918  0100               	movlb	0	; () banked
  3854  00191A  A16C               	btfss	set_digit@num& (0+255),0,b
  3855  00191C  D002               	goto	u2120
  3856  00191E  8689               	bsf	3977,3,c	;volatile
  3857  001920  D001               	goto	l2227
  3858  001922                     u2120:
  3859  001922  9689               	bcf	3977,3,c	;volatile
  3860  001924                     l2227:
  3861                           
  3862                           ;disp.c: 41: LATA4 = !num;
  3863  001924  0100               	movlb	0	; () banked
  3864  001926  516C               	movf	set_digit@num& (0+255),w,b
  3865  001928  0100               	movlb	0	; () banked
  3866  00192A  A4D8               	btfss	status,2,c
  3867  00192C  D002               	goto	u2140
  3868  00192E  8889               	bsf	3977,4,c	;volatile
  3869  001930  D001               	goto	l2229
  3870  001932                     u2140:
  3871  001932  9889               	bcf	3977,4,c	;volatile
  3872  001934                     l2229:
  3873                           
  3874                           ;disp.c: 43: LATB2 = 0 != (dig & 0b1);
  3875  001934  0100               	movlb	0	; () banked
  3876  001936  A16D               	btfss	set_digit@dig& (0+255),0,b
  3877  001938  D002               	goto	u2160
  3878  00193A  848A               	bsf	3978,2,c	;volatile
  3879  00193C  D001               	goto	l2231
  3880  00193E                     u2160:
  3881  00193E  948A               	bcf	3978,2,c	;volatile
  3882  001940                     l2231:
  3883                           
  3884                           ;disp.c: 44: LATB5 = 0 != (dig & 0b10);
  3885  001940  0100               	movlb	0	; () banked
  3886  001942  A36D               	btfss	set_digit@dig& (0+255),1,b
  3887  001944  D002               	goto	u2180
  3888  001946  8A8A               	bsf	3978,5,c	;volatile
  3889  001948  D001               	goto	l2233
  3890  00194A                     u2180:
  3891  00194A  9A8A               	bcf	3978,5,c	;volatile
  3892  00194C                     l2233:
  3893                           
  3894                           ;disp.c: 45: LATB4 = 0 != (dig & 0b100);
  3895  00194C  0100               	movlb	0	; () banked
  3896  00194E  A56D               	btfss	set_digit@dig& (0+255),2,b
  3897  001950  D002               	goto	u2200
  3898  001952  888A               	bsf	3978,4,c	;volatile
  3899  001954  D001               	goto	l2235
  3900  001956                     u2200:
  3901  001956  988A               	bcf	3978,4,c	;volatile
  3902  001958                     l2235:
  3903                           
  3904                           ;disp.c: 46: LATB0 = 0 != (dig & 0b1000);
  3905  001958  0100               	movlb	0	; () banked
  3906  00195A  A76D               	btfss	set_digit@dig& (0+255),3,b
  3907  00195C  D002               	goto	u2220
  3908  00195E  808A               	bsf	3978,0,c	;volatile
  3909  001960  D001               	goto	l2237
  3910  001962                     u2220:
  3911  001962  908A               	bcf	3978,0,c	;volatile
  3912  001964                     l2237:
  3913                           
  3914                           ;disp.c: 47: LATB4 = 0 != (dig & 0b10000);
  3915  001964  0100               	movlb	0	; () banked
  3916  001966  A96D               	btfss	set_digit@dig& (0+255),4,b
  3917  001968  D002               	goto	u2240
  3918  00196A  888A               	bsf	3978,4,c	;volatile
  3919  00196C  D001               	goto	l2239
  3920  00196E                     u2240:
  3921  00196E  988A               	bcf	3978,4,c	;volatile
  3922  001970                     l2239:
  3923                           
  3924                           ;disp.c: 48: LATB1 = 0 != (dig & 0b100000);
  3925  001970  0100               	movlb	0	; () banked
  3926  001972  AB6D               	btfss	set_digit@dig& (0+255),5,b
  3927  001974  D002               	goto	u2260
  3928  001976  828A               	bsf	3978,1,c	;volatile
  3929  001978  D001               	goto	l2241
  3930  00197A                     u2260:
  3931  00197A  928A               	bcf	3978,1,c	;volatile
  3932  00197C                     l2241:
  3933                           
  3934                           ;disp.c: 49: LATA6 = 0 != (dig & 0b1000000);
  3935  00197C  0100               	movlb	0	; () banked
  3936  00197E  AD6D               	btfss	set_digit@dig& (0+255),6,b
  3937  001980  D002               	goto	u2280
  3938  001982  8C89               	bsf	3977,6,c	;volatile
  3939  001984  0012               	return	
  3940  001986                     u2280:
  3941  001986  9C89               	bcf	3977,6,c	;volatile
  3942  001988  0012               	return		;funcret
  3943  00198A                     __end_of_set_digit:
  3944                           	opt stack 0
  3945                           tblptru	equ	0xFF8
  3946                           tblptrh	equ	0xFF7
  3947                           tblptrl	equ	0xFF6
  3948                           tablat	equ	0xFF5
  3949                           intcon	equ	0xFF2
  3950                           intcon2	equ	0xFF1
  3951                           postinc0	equ	0xFEE
  3952                           wreg	equ	0xFE8
  3953                           postdec1	equ	0xFE5
  3954                           fsr1l	equ	0xFE1
  3955                           status	equ	0xFD8
  3956                           
  3957 ;; *************** function _num_to_disp *****************
  3958 ;; Defined at:
  3959 ;;		line 7 in file "disp.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;  num             1    wreg     unsigned char 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  num             1   13[BANK0 ] unsigned char 
  3964 ;;  ret             1   12[BANK0 ] unsigned char 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1    wreg      unsigned char 
  3967 ;; Registers used:
  3968 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3974 ;;      Params:         0       0       0       0       0       0       0       0       0
  3975 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3976 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3977 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3978 ;;Total ram usage:        2 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    5
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_error
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           	psect	text18
  3989  00198A                     __ptext18:
  3990                           	opt stack 0
  3991  00198A                     _num_to_disp:
  3992                           	opt stack 24
  3993                           
  3994                           ;incstack = 0
  3995                           ;num_to_disp@num stored from wreg
  3996  00198A  0100               	movlb	0	; () banked
  3997  00198C  6F6D               	movwf	num_to_disp@num& (0+255),b
  3998                           
  3999                           ;disp.c: 9: unsigned char ret;
  4000                           ;disp.c: 10: switch (num)
  4001  00198E  D013               	goto	l2219
  4002  001990                     l2211:
  4003                           
  4004                           ;disp.c: 13: ret = font[num];
  4005  001990  0100               	movlb	0	; () banked
  4006  001992  516D               	movf	num_to_disp@num& (0+255),w,b
  4007  001994  0D01               	mullw	1
  4008  001996  0E01               	movlw	low _font
  4009  001998  24F3               	addwf	prodl,w,c
  4010  00199A  6EF6               	movwf	tblptrl,c
  4011  00199C  0E08               	movlw	high _font
  4012  00199E  20F4               	addwfc	prodh,w,c
  4013  0019A0  6EF7               	movwf	tblptrh,c
  4014  0019A2                     	if	0	;There are less than 3 active tblptr bytes
  4015  0019A2                     	endif
  4016  0019A2  0008               	tblrd		*
  4017  0019A4  CFF5 F06C          	movff	tablat,num_to_disp@ret
  4018                           
  4019                           ;disp.c: 14: break;
  4020  0019A8  D02D               	goto	l2221
  4021  0019AA                     l2213:
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;disp.c: 16: case 'e':
  4025                           ;disp.c: 17: ret = (0b1 | 0 | 0 | 0b1000 | 0b10000 | 0b100000 | 0b1000000);
  4026  0019AA  0E79               	movlw	121
  4027  0019AC  D001               	goto	L4
  4028  0019AE                     l2215:
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;disp.c: 20: ret = (0);
  4032  0019AE  0E00               	movlw	0
  4033  0019B0                     L4:
  4034  0019B0  0100               	movlb	0	; () banked
  4035  0019B2  6F6C               	movwf	num_to_disp@ret& (0+255),b
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;disp.c: 22: }
  4039                           
  4040                           ;disp.c: 21: break;
  4041  0019B4  D027               	goto	l2221
  4042  0019B6                     l2219:
  4043  0019B6  0100               	movlb	0	; () banked
  4044  0019B8  516D               	movf	num_to_disp@num& (0+255),w,b
  4045                           
  4046                           ; Switch size 1, requested type "space"
  4047                           ; Number of cases is 12, Range of values is 0 to 101
  4048                           ; switch strategies available:
  4049                           ; Name         Instructions Cycles
  4050                           ; simple_byte           37    19 (average)
  4051                           ;	Chosen strategy is simple_byte
  4052  0019BA  0A00               	xorlw	0	; case 0
  4053  0019BC  B4D8               	btfsc	status,2,c
  4054  0019BE  D7E8               	goto	l2211
  4055  0019C0  0A01               	xorlw	1	; case 1
  4056  0019C2  B4D8               	btfsc	status,2,c
  4057  0019C4  D7E5               	goto	l2211
  4058  0019C6  0A03               	xorlw	3	; case 2
  4059  0019C8  B4D8               	btfsc	status,2,c
  4060  0019CA  D7E2               	goto	l2211
  4061  0019CC  0A01               	xorlw	1	; case 3
  4062  0019CE  B4D8               	btfsc	status,2,c
  4063  0019D0  D7DF               	goto	l2211
  4064  0019D2  0A07               	xorlw	7	; case 4
  4065  0019D4  B4D8               	btfsc	status,2,c
  4066  0019D6  D7DC               	goto	l2211
  4067  0019D8  0A01               	xorlw	1	; case 5
  4068  0019DA  B4D8               	btfsc	status,2,c
  4069  0019DC  D7D9               	goto	l2211
  4070  0019DE  0A03               	xorlw	3	; case 6
  4071  0019E0  B4D8               	btfsc	status,2,c
  4072  0019E2  D7D6               	goto	l2211
  4073  0019E4  0A01               	xorlw	1	; case 7
  4074  0019E6  B4D8               	btfsc	status,2,c
  4075  0019E8  D7D3               	goto	l2211
  4076  0019EA  0A0F               	xorlw	15	; case 8
  4077  0019EC  B4D8               	btfsc	status,2,c
  4078  0019EE  D7D0               	goto	l2211
  4079  0019F0  0A01               	xorlw	1	; case 9
  4080  0019F2  B4D8               	btfsc	status,2,c
  4081  0019F4  D7CD               	goto	l2211
  4082  0019F6  0A4C               	xorlw	76	; case 69
  4083  0019F8  B4D8               	btfsc	status,2,c
  4084  0019FA  D7D7               	goto	l2213
  4085  0019FC  0A20               	xorlw	32	; case 101
  4086  0019FE  B4D8               	btfsc	status,2,c
  4087  001A00  D7D4               	goto	l2213
  4088  001A02  D7D5               	goto	l2215
  4089  001A04                     l2221:
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;disp.c: 23: return ret;
  4093  001A04  0100               	movlb	0	; () banked
  4094  001A06  516C               	movf	num_to_disp@ret& (0+255),w,b
  4095  001A08  0012               	return	
  4096  001A0A                     __end_of_num_to_disp:
  4097                           	opt stack 0
  4098                           tblptru	equ	0xFF8
  4099                           tblptrh	equ	0xFF7
  4100                           tblptrl	equ	0xFF6
  4101                           tablat	equ	0xFF5
  4102                           prodh	equ	0xFF4
  4103                           prodl	equ	0xFF3
  4104                           intcon	equ	0xFF2
  4105                           intcon2	equ	0xFF1
  4106                           postinc0	equ	0xFEE
  4107                           wreg	equ	0xFE8
  4108                           postdec1	equ	0xFE5
  4109                           fsr1l	equ	0xFE1
  4110                           status	equ	0xFD8
  4111                           
  4112 ;; *************** function ___awtoft *****************
  4113 ;; Defined at:
  4114 ;;		line 32 in file "/opt/microchip/xc8/v1.38/sources/common/awtoft.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  c               2   20[BANK0 ] int 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  sign            1   23[BANK0 ] unsigned char 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  3   20[BANK0 ] float 
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4128 ;;      Params:         0       3       0       0       0       0       0       0       0
  4129 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4131 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4132 ;;Total ram usage:        4 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; Hardware stack levels required when called:    6
  4135 ;; This function calls:
  4136 ;;		___ftpack
  4137 ;; This function is called by:
  4138 ;;		_main
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           	psect	text19
  4143  001B0E                     __ptext19:
  4144                           	opt stack 0
  4145  001B0E                     ___awtoft:
  4146                           	opt stack 24
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;incstack = 0
  4150  001B0E  0E00               	movlw	0
  4151  001B10  0100               	movlb	0	; () banked
  4152  001B12  6F77               	movwf	___awtoft@sign& (0+255),b
  4153                           
  4154                           ; BSR set to: 0
  4155  001B14  0100               	movlb	0	; () banked
  4156  001B16  AF75               	btfss	(___awtoft@c+1)& (0+255),7,b
  4157  001B18  D008               	goto	l2479
  4158                           
  4159                           ; BSR set to: 0
  4160  001B1A  0100               	movlb	0	; () banked
  4161  001B1C  6D74               	negf	___awtoft@c& (0+255),b
  4162  001B1E  1F75               	comf	(___awtoft@c+1)& (0+255),f,b
  4163  001B20  B0D8               	btfsc	status,0,c
  4164  001B22  2B75               	incf	(___awtoft@c+1)& (0+255),f,b
  4165                           
  4166                           ; BSR set to: 0
  4167  001B24  0E01               	movlw	1
  4168  001B26  0100               	movlb	0	; () banked
  4169  001B28  6F77               	movwf	___awtoft@sign& (0+255),b
  4170  001B2A                     l2479:
  4171                           
  4172                           ; BSR set to: 0
  4173  001B2A  C074  F06C         	movff	___awtoft@c,___ftpack@arg
  4174  001B2E  C075  F06D         	movff	___awtoft@c+1,___ftpack@arg+1
  4175  001B32  0100               	movlb	0	; () banked
  4176  001B34  6B6E               	clrf	(___ftpack@arg+2)& (0+255),b
  4177  001B36  0E8E               	movlw	142
  4178  001B38  0100               	movlb	0	; () banked
  4179  001B3A  6F6F               	movwf	___ftpack@exp& (0+255),b
  4180  001B3C  C077  F070         	movff	___awtoft@sign,___ftpack@sign
  4181  001B40  EC7A  F00A         	call	___ftpack	;wreg free
  4182  001B44  C06C  F074         	movff	?___ftpack,?___awtoft
  4183  001B48  C06D  F075         	movff	?___ftpack+1,?___awtoft+1
  4184  001B4C  C06E  F076         	movff	?___ftpack+2,?___awtoft+2
  4185  001B50  0012               	return	
  4186  001B52                     __end_of___awtoft:
  4187                           	opt stack 0
  4188                           tblptru	equ	0xFF8
  4189                           tblptrh	equ	0xFF7
  4190                           tblptrl	equ	0xFF6
  4191                           tablat	equ	0xFF5
  4192                           prodh	equ	0xFF4
  4193                           prodl	equ	0xFF3
  4194                           intcon	equ	0xFF2
  4195                           intcon2	equ	0xFF1
  4196                           postinc0	equ	0xFEE
  4197                           wreg	equ	0xFE8
  4198                           postdec1	equ	0xFE5
  4199                           fsr1l	equ	0xFE1
  4200                           status	equ	0xFD8
  4201                           
  4202 ;; *************** function ___ftpack *****************
  4203 ;; Defined at:
  4204 ;;		line 62 in file "/opt/microchip/xc8/v1.38/sources/common/float.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;  arg             3   12[BANK0 ] unsigned um
  4207 ;;  exp             1   15[BANK0 ] unsigned char 
  4208 ;;  sign            1   16[BANK0 ] unsigned char 
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;		None
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  3   12[BANK0 ] float 
  4213 ;; Registers used:
  4214 ;;		wreg, status,2, status,0
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4220 ;;      Params:         0       5       0       0       0       0       0       0       0
  4221 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4222 ;;      Temps:          0       3       0       0       0       0       0       0       0
  4223 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4224 ;;Total ram usage:        8 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:    5
  4227 ;; This function calls:
  4228 ;;		Nothing
  4229 ;; This function is called by:
  4230 ;;		___awtoft
  4231 ;;		___ftadd
  4232 ;;		___ftdiv
  4233 ;;		___ftmul
  4234 ;;		___lwtoft
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text20
  4239  0014F4                     __ptext20:
  4240                           	opt stack 0
  4241  0014F4                     ___ftpack:
  4242                           	opt stack 21
  4243                           
  4244                           ;incstack = 0
  4245  0014F4  0100               	movlb	0	; () banked
  4246  0014F6  516F               	movf	___ftpack@exp& (0+255),w,b
  4247  0014F8  0100               	movlb	0	; () banked
  4248  0014FA  B4D8               	btfsc	status,2,c
  4249  0014FC  D008               	goto	l1983
  4250                           
  4251                           ; BSR set to: 0
  4252  0014FE  0100               	movlb	0	; () banked
  4253  001500  516C               	movf	___ftpack@arg& (0+255),w,b
  4254  001502  0100               	movlb	0	; () banked
  4255  001504  116D               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  4256  001506  0100               	movlb	0	; () banked
  4257  001508  116E               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  4258  00150A  A4D8               	btfss	status,2,c
  4259  00150C  D011               	goto	l1989
  4260  00150E                     l1983:
  4261                           
  4262                           ; BSR set to: 0
  4263  00150E  0E00               	movlw	0
  4264  001510  0100               	movlb	0	; () banked
  4265  001512  6F6C               	movwf	?___ftpack& (0+255),b
  4266  001514  0E00               	movlw	0
  4267  001516  0100               	movlb	0	; () banked
  4268  001518  6F6D               	movwf	(?___ftpack+1)& (0+255),b
  4269  00151A  0E00               	movlw	0
  4270  00151C  0100               	movlb	0	; () banked
  4271  00151E  6F6E               	movwf	(?___ftpack+2)& (0+255),b
  4272                           
  4273                           ; BSR set to: 0
  4274  001520  0012               	return	
  4275  001522                     l1987:
  4276                           
  4277                           ; BSR set to: 0
  4278  001522  0100               	movlb	0	; () banked
  4279  001524  2B6F               	incf	___ftpack@exp& (0+255),f,b
  4280  001526  0100               	movlb	0	; () banked
  4281  001528  90D8               	bcf	status,0,c
  4282  00152A  336E               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  4283  00152C  336D               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  4284  00152E  336C               	rrcf	___ftpack@arg& (0+255),f,b
  4285  001530                     l1989:
  4286                           
  4287                           ; BSR set to: 0
  4288  001530  0E00               	movlw	0
  4289  001532  0100               	movlb	0	; () banked
  4290  001534  156C               	andwf	___ftpack@arg& (0+255),w,b
  4291  001536  0100               	movlb	0	; () banked
  4292  001538  6F71               	movwf	??___ftpack& (0+255),b
  4293  00153A  0E00               	movlw	0
  4294  00153C  0100               	movlb	0	; () banked
  4295  00153E  156D               	andwf	(___ftpack@arg+1)& (0+255),w,b
  4296  001540  0100               	movlb	0	; () banked
  4297  001542  6F72               	movwf	(??___ftpack+1)& (0+255),b
  4298  001544  0EFE               	movlw	254
  4299  001546  0100               	movlb	0	; () banked
  4300  001548  156E               	andwf	(___ftpack@arg+2)& (0+255),w,b
  4301  00154A  0100               	movlb	0	; () banked
  4302  00154C  6F73               	movwf	(??___ftpack+2)& (0+255),b
  4303  00154E  0100               	movlb	0	; () banked
  4304  001550  5171               	movf	??___ftpack& (0+255),w,b
  4305  001552  0100               	movlb	0	; () banked
  4306  001554  1172               	iorwf	(??___ftpack+1)& (0+255),w,b
  4307  001556  0100               	movlb	0	; () banked
  4308  001558  1173               	iorwf	(??___ftpack+2)& (0+255),w,b
  4309  00155A  B4D8               	btfsc	status,2,c
  4310  00155C  D011               	goto	l1995
  4311  00155E  D7E1               	goto	l1987
  4312  001560                     l1991:
  4313                           
  4314                           ; BSR set to: 0
  4315  001560  0100               	movlb	0	; () banked
  4316  001562  2B6F               	incf	___ftpack@exp& (0+255),f,b
  4317                           
  4318                           ; BSR set to: 0
  4319  001564  0E01               	movlw	1
  4320  001566  0100               	movlb	0	; () banked
  4321  001568  276C               	addwf	___ftpack@arg& (0+255),f,b
  4322  00156A  0E00               	movlw	0
  4323  00156C  0100               	movlb	0	; () banked
  4324  00156E  236D               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  4325  001570  0E00               	movlw	0
  4326  001572  0100               	movlb	0	; () banked
  4327  001574  236E               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  4328  001576  0100               	movlb	0	; () banked
  4329  001578  90D8               	bcf	status,0,c
  4330  00157A  336E               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  4331  00157C  336D               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  4332  00157E  336C               	rrcf	___ftpack@arg& (0+255),f,b
  4333  001580                     l1995:
  4334                           
  4335                           ; BSR set to: 0
  4336  001580  0E00               	movlw	0
  4337  001582  0100               	movlb	0	; () banked
  4338  001584  156C               	andwf	___ftpack@arg& (0+255),w,b
  4339  001586  0100               	movlb	0	; () banked
  4340  001588  6F71               	movwf	??___ftpack& (0+255),b
  4341  00158A  0E00               	movlw	0
  4342  00158C  0100               	movlb	0	; () banked
  4343  00158E  156D               	andwf	(___ftpack@arg+1)& (0+255),w,b
  4344  001590  0100               	movlb	0	; () banked
  4345  001592  6F72               	movwf	(??___ftpack+1)& (0+255),b
  4346  001594  0EFF               	movlw	255
  4347  001596  0100               	movlb	0	; () banked
  4348  001598  156E               	andwf	(___ftpack@arg+2)& (0+255),w,b
  4349  00159A  0100               	movlb	0	; () banked
  4350  00159C  6F73               	movwf	(??___ftpack+2)& (0+255),b
  4351  00159E  0100               	movlb	0	; () banked
  4352  0015A0  5171               	movf	??___ftpack& (0+255),w,b
  4353  0015A2  0100               	movlb	0	; () banked
  4354  0015A4  1172               	iorwf	(??___ftpack+1)& (0+255),w,b
  4355  0015A6  0100               	movlb	0	; () banked
  4356  0015A8  1173               	iorwf	(??___ftpack+2)& (0+255),w,b
  4357  0015AA  B4D8               	btfsc	status,2,c
  4358  0015AC  D008               	goto	l1999
  4359  0015AE  D7D8               	goto	l1991
  4360  0015B0                     l1997:
  4361                           
  4362                           ; BSR set to: 0
  4363  0015B0  0100               	movlb	0	; () banked
  4364  0015B2  076F               	decf	___ftpack@exp& (0+255),f,b
  4365  0015B4  0100               	movlb	0	; () banked
  4366  0015B6  90D8               	bcf	status,0,c
  4367  0015B8  376C               	rlcf	___ftpack@arg& (0+255),f,b
  4368  0015BA  376D               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  4369  0015BC  376E               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  4370  0015BE                     l1999:
  4371                           
  4372                           ; BSR set to: 0
  4373  0015BE  0100               	movlb	0	; () banked
  4374  0015C0  BF6D               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  4375  0015C2  D004               	goto	l647
  4376                           
  4377                           ; BSR set to: 0
  4378  0015C4  0E02               	movlw	2
  4379  0015C6  0100               	movlb	0	; () banked
  4380  0015C8  616F               	cpfslt	___ftpack@exp& (0+255),b
  4381  0015CA  D7F2               	goto	l1997
  4382  0015CC                     l647:
  4383                           
  4384                           ; BSR set to: 0
  4385  0015CC  0100               	movlb	0	; () banked
  4386  0015CE  B16F               	btfsc	___ftpack@exp& (0+255),0,b
  4387  0015D0  D002               	goto	l2005
  4388                           
  4389                           ; BSR set to: 0
  4390  0015D2  0100               	movlb	0	; () banked
  4391  0015D4  9F6D               	bcf	(___ftpack@arg+1)& (0+255),7,b
  4392  0015D6                     l2005:
  4393                           
  4394                           ; BSR set to: 0
  4395  0015D6  0100               	movlb	0	; () banked
  4396  0015D8  90D8               	bcf	status,0,c
  4397  0015DA  336F               	rrcf	___ftpack@exp& (0+255),f,b
  4398  0015DC  0100               	movlb	0	; () banked
  4399  0015DE  516F               	movf	___ftpack@exp& (0+255),w,b
  4400  0015E0  0100               	movlb	0	; () banked
  4401  0015E2  136E               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  4402                           
  4403                           ; BSR set to: 0
  4404  0015E4  0100               	movlb	0	; () banked
  4405  0015E6  5170               	movf	___ftpack@sign& (0+255),w,b
  4406  0015E8  0100               	movlb	0	; () banked
  4407  0015EA  B4D8               	btfsc	status,2,c
  4408  0015EC  D002               	goto	l2011
  4409                           
  4410                           ; BSR set to: 0
  4411  0015EE  0100               	movlb	0	; () banked
  4412  0015F0  8F6E               	bsf	(___ftpack@arg+2)& (0+255),7,b
  4413  0015F2                     l2011:
  4414                           
  4415                           ; BSR set to: 0
  4416  0015F2  C06C  F06C         	movff	___ftpack@arg,?___ftpack
  4417  0015F6  C06D  F06D         	movff	___ftpack@arg+1,?___ftpack+1
  4418  0015FA  C06E  F06E         	movff	___ftpack@arg+2,?___ftpack+2
  4419  0015FE  0012               	return	
  4420  001600                     __end_of___ftpack:
  4421                           	opt stack 0
  4422                           tblptru	equ	0xFF8
  4423                           tblptrh	equ	0xFF7
  4424                           tblptrl	equ	0xFF6
  4425                           tablat	equ	0xFF5
  4426                           prodh	equ	0xFF4
  4427                           prodl	equ	0xFF3
  4428                           intcon	equ	0xFF2
  4429                           intcon2	equ	0xFF1
  4430                           postinc0	equ	0xFEE
  4431                           wreg	equ	0xFE8
  4432                           postdec1	equ	0xFE5
  4433                           fsr1l	equ	0xFE1
  4434                           status	equ	0xFD8
  4435                           
  4436 ;; *************** function ___aldiv *****************
  4437 ;; Defined at:
  4438 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/aldiv.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  dividend        4   12[BANK0 ] long 
  4441 ;;  divisor         4   16[BANK0 ] long 
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;  quotient        4   22[BANK0 ] long 
  4444 ;;  sign            1   21[BANK0 ] unsigned char 
  4445 ;;  counter         1   20[BANK0 ] unsigned char 
  4446 ;; Return value:  Size  Location     Type
  4447 ;;                  4   12[BANK0 ] long 
  4448 ;; Registers used:
  4449 ;;		wreg, status,2, status,0
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4455 ;;      Params:         0       8       0       0       0       0       0       0       0
  4456 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4457 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4458 ;;      Totals:         0      14       0       0       0       0       0       0       0
  4459 ;;Total ram usage:       14 bytes
  4460 ;; Hardware stack levels used:    1
  4461 ;; Hardware stack levels required when called:    5
  4462 ;; This function calls:
  4463 ;;		Nothing
  4464 ;; This function is called by:
  4465 ;;		_main
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           
  4469                           	psect	text21
  4470  0013DA                     __ptext21:
  4471                           	opt stack 0
  4472  0013DA                     ___aldiv:
  4473                           	opt stack 25
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;incstack = 0
  4477  0013DA  0E00               	movlw	0
  4478  0013DC  0100               	movlb	0	; () banked
  4479  0013DE  6F75               	movwf	___aldiv@sign& (0+255),b
  4480                           
  4481                           ; BSR set to: 0
  4482  0013E0  0100               	movlb	0	; () banked
  4483  0013E2  AF73               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  4484  0013E4  D00C               	goto	l2399
  4485                           
  4486                           ; BSR set to: 0
  4487  0013E6  0100               	movlb	0	; () banked
  4488  0013E8  1F73               	comf	(___aldiv@divisor+3)& (0+255),f,b
  4489  0013EA  1F72               	comf	(___aldiv@divisor+2)& (0+255),f,b
  4490  0013EC  1F71               	comf	(___aldiv@divisor+1)& (0+255),f,b
  4491  0013EE  6D70               	negf	___aldiv@divisor& (0+255),b
  4492  0013F0  0E00               	movlw	0
  4493  0013F2  2371               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  4494  0013F4  2372               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  4495  0013F6  2373               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  4496                           
  4497                           ; BSR set to: 0
  4498  0013F8  0E01               	movlw	1
  4499  0013FA  0100               	movlb	0	; () banked
  4500  0013FC  6F75               	movwf	___aldiv@sign& (0+255),b
  4501  0013FE                     l2399:
  4502                           
  4503                           ; BSR set to: 0
  4504  0013FE  0100               	movlb	0	; () banked
  4505  001400  AF6F               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  4506  001402  D00C               	goto	l2405
  4507                           
  4508                           ; BSR set to: 0
  4509  001404  0100               	movlb	0	; () banked
  4510  001406  1F6F               	comf	(___aldiv@dividend+3)& (0+255),f,b
  4511  001408  1F6E               	comf	(___aldiv@dividend+2)& (0+255),f,b
  4512  00140A  1F6D               	comf	(___aldiv@dividend+1)& (0+255),f,b
  4513  00140C  6D6C               	negf	___aldiv@dividend& (0+255),b
  4514  00140E  0E00               	movlw	0
  4515  001410  236D               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  4516  001412  236E               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  4517  001414  236F               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  4518                           
  4519                           ; BSR set to: 0
  4520  001416  0E01               	movlw	1
  4521  001418  0100               	movlb	0	; () banked
  4522  00141A  1B75               	xorwf	___aldiv@sign& (0+255),f,b
  4523  00141C                     l2405:
  4524                           
  4525                           ; BSR set to: 0
  4526  00141C  0E00               	movlw	0
  4527  00141E  0100               	movlb	0	; () banked
  4528  001420  6F76               	movwf	___aldiv@quotient& (0+255),b
  4529  001422  0E00               	movlw	0
  4530  001424  6F77               	movwf	(___aldiv@quotient+1)& (0+255),b
  4531  001426  0E00               	movlw	0
  4532  001428  6F78               	movwf	(___aldiv@quotient+2)& (0+255),b
  4533  00142A  0E00               	movlw	0
  4534  00142C  6F79               	movwf	(___aldiv@quotient+3)& (0+255),b
  4535                           
  4536                           ; BSR set to: 0
  4537  00142E  0100               	movlb	0	; () banked
  4538  001430  5170               	movf	___aldiv@divisor& (0+255),w,b
  4539  001432  0100               	movlb	0	; () banked
  4540  001434  1171               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  4541  001436  0100               	movlb	0	; () banked
  4542  001438  1172               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  4543  00143A  0100               	movlb	0	; () banked
  4544  00143C  1173               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  4545  00143E  B4D8               	btfsc	status,2,c
  4546  001440  D042               	goto	l2427
  4547                           
  4548                           ; BSR set to: 0
  4549  001442  0E01               	movlw	1
  4550  001444  0100               	movlb	0	; () banked
  4551  001446  6F74               	movwf	___aldiv@counter& (0+255),b
  4552  001448  D008               	goto	l2413
  4553  00144A                     l2411:
  4554                           
  4555                           ; BSR set to: 0
  4556  00144A  0100               	movlb	0	; () banked
  4557  00144C  90D8               	bcf	status,0,c
  4558  00144E  3770               	rlcf	___aldiv@divisor& (0+255),f,b
  4559  001450  3771               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  4560  001452  3772               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  4561  001454  3773               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  4562  001456  0100               	movlb	0	; () banked
  4563  001458  2B74               	incf	___aldiv@counter& (0+255),f,b
  4564  00145A                     l2413:
  4565                           
  4566                           ; BSR set to: 0
  4567  00145A  0100               	movlb	0	; () banked
  4568  00145C  AF73               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  4569  00145E  D7F5               	goto	l2411
  4570  001460                     l2415:
  4571                           
  4572                           ; BSR set to: 0
  4573  001460  0100               	movlb	0	; () banked
  4574  001462  90D8               	bcf	status,0,c
  4575  001464  3776               	rlcf	___aldiv@quotient& (0+255),f,b
  4576  001466  3777               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  4577  001468  3778               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  4578  00146A  3779               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  4579                           
  4580                           ; BSR set to: 0
  4581  00146C  0100               	movlb	0	; () banked
  4582  00146E  5170               	movf	___aldiv@divisor& (0+255),w,b
  4583  001470  0100               	movlb	0	; () banked
  4584  001472  5D6C               	subwf	___aldiv@dividend& (0+255),w,b
  4585  001474  0100               	movlb	0	; () banked
  4586  001476  5171               	movf	(___aldiv@divisor+1)& (0+255),w,b
  4587  001478  0100               	movlb	0	; () banked
  4588  00147A  596D               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  4589  00147C  0100               	movlb	0	; () banked
  4590  00147E  5172               	movf	(___aldiv@divisor+2)& (0+255),w,b
  4591  001480  0100               	movlb	0	; () banked
  4592  001482  596E               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  4593  001484  0100               	movlb	0	; () banked
  4594  001486  5173               	movf	(___aldiv@divisor+3)& (0+255),w,b
  4595  001488  0100               	movlb	0	; () banked
  4596  00148A  596F               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  4597  00148C  A0D8               	btfss	status,0,c
  4598  00148E  D012               	goto	l2423
  4599                           
  4600                           ; BSR set to: 0
  4601  001490  0100               	movlb	0	; () banked
  4602  001492  5170               	movf	___aldiv@divisor& (0+255),w,b
  4603  001494  0100               	movlb	0	; () banked
  4604  001496  5F6C               	subwf	___aldiv@dividend& (0+255),f,b
  4605  001498  0100               	movlb	0	; () banked
  4606  00149A  5171               	movf	(___aldiv@divisor+1)& (0+255),w,b
  4607  00149C  0100               	movlb	0	; () banked
  4608  00149E  5B6D               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  4609  0014A0  0100               	movlb	0	; () banked
  4610  0014A2  5172               	movf	(___aldiv@divisor+2)& (0+255),w,b
  4611  0014A4  0100               	movlb	0	; () banked
  4612  0014A6  5B6E               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  4613  0014A8  0100               	movlb	0	; () banked
  4614  0014AA  5173               	movf	(___aldiv@divisor+3)& (0+255),w,b
  4615  0014AC  0100               	movlb	0	; () banked
  4616  0014AE  5B6F               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  4617                           
  4618                           ; BSR set to: 0
  4619  0014B0  0100               	movlb	0	; () banked
  4620  0014B2  8176               	bsf	___aldiv@quotient& (0+255),0,b
  4621  0014B4                     l2423:
  4622                           
  4623                           ; BSR set to: 0
  4624  0014B4  0100               	movlb	0	; () banked
  4625  0014B6  90D8               	bcf	status,0,c
  4626  0014B8  3373               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  4627  0014BA  3372               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  4628  0014BC  3371               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  4629  0014BE  3370               	rrcf	___aldiv@divisor& (0+255),f,b
  4630                           
  4631                           ; BSR set to: 0
  4632  0014C0  0100               	movlb	0	; () banked
  4633  0014C2  2F74               	decfsz	___aldiv@counter& (0+255),f,b
  4634  0014C4  D7CD               	goto	l2415
  4635  0014C6                     l2427:
  4636                           
  4637                           ; BSR set to: 0
  4638  0014C6  0100               	movlb	0	; () banked
  4639  0014C8  5175               	movf	___aldiv@sign& (0+255),w,b
  4640  0014CA  0100               	movlb	0	; () banked
  4641  0014CC  B4D8               	btfsc	status,2,c
  4642  0014CE  D009               	goto	l2431
  4643                           
  4644                           ; BSR set to: 0
  4645  0014D0  0100               	movlb	0	; () banked
  4646  0014D2  1F79               	comf	(___aldiv@quotient+3)& (0+255),f,b
  4647  0014D4  1F78               	comf	(___aldiv@quotient+2)& (0+255),f,b
  4648  0014D6  1F77               	comf	(___aldiv@quotient+1)& (0+255),f,b
  4649  0014D8  6D76               	negf	___aldiv@quotient& (0+255),b
  4650  0014DA  0E00               	movlw	0
  4651  0014DC  2377               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  4652  0014DE  2378               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  4653  0014E0  2379               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  4654  0014E2                     l2431:
  4655                           
  4656                           ; BSR set to: 0
  4657  0014E2  C076  F06C         	movff	___aldiv@quotient,?___aldiv
  4658  0014E6  C077  F06D         	movff	___aldiv@quotient+1,?___aldiv+1
  4659  0014EA  C078  F06E         	movff	___aldiv@quotient+2,?___aldiv+2
  4660  0014EE  C079  F06F         	movff	___aldiv@quotient+3,?___aldiv+3
  4661  0014F2  0012               	return	
  4662  0014F4                     __end_of___aldiv:
  4663                           	opt stack 0
  4664                           tblptru	equ	0xFF8
  4665                           tblptrh	equ	0xFF7
  4666                           tblptrl	equ	0xFF6
  4667                           tablat	equ	0xFF5
  4668                           prodh	equ	0xFF4
  4669                           prodl	equ	0xFF3
  4670                           intcon	equ	0xFF2
  4671                           intcon2	equ	0xFF1
  4672                           postinc0	equ	0xFEE
  4673                           wreg	equ	0xFE8
  4674                           postdec1	equ	0xFE5
  4675                           fsr1l	equ	0xFE1
  4676                           status	equ	0xFD8
  4677                           
  4678 ;; *************** function _ISR_low *****************
  4679 ;; Defined at:
  4680 ;;		line 442 in file "main.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;		None
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;  ins             1   11[BANK0 ] unsigned char 
  4685 ;;  mask_leds       1    5[BANK0 ] unsigned char 
  4686 ;;  cur             1    4[BANK0 ] enum E3826
  4687 ;; Return value:  Size  Location     Type
  4688 ;;                  1    wreg      void 
  4689 ;; Registers used:
  4690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4691 ;; Tracked objects:
  4692 ;;		On entry : 0/0
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4696 ;;      Params:         0       0       0       0       0       0       0       0       0
  4697 ;;      Locals:         0      12       0       0       0       0       0       0       0
  4698 ;;      Temps:         22       0       0       0       0       0       0       0       0
  4699 ;;      Totals:        22      12       0       0       0       0       0       0       0
  4700 ;;Total ram usage:       34 bytes
  4701 ;; Hardware stack levels used:    1
  4702 ;; Hardware stack levels required when called:    4
  4703 ;; This function calls:
  4704 ;;		_buzzer
  4705 ;;		_sample_inputs
  4706 ;;		_set_LEDs
  4707 ;;		i1___aldiv
  4708 ;;		i1_set_digit
  4709 ;; This function is called by:
  4710 ;;		Interrupt level 1
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           	psect	intcodelo
  4715  000018                     __pintcodelo:
  4716                           	opt stack 0
  4717  000018                     _ISR_low:
  4718                           	opt stack 21
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;incstack = 0
  4722  000018  803E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4723  00001A  CFD8 F02C          	movff	status,??_ISR_low+5
  4724  00001E  CFE8 F02D          	movff	wreg,??_ISR_low+6
  4725  000022  CFE0 F02E          	movff	bsr,??_ISR_low+7
  4726  000026  CFFA F02F          	movff	pclath,??_ISR_low+8
  4727  00002A  CFFB F030          	movff	pclatu,??_ISR_low+9
  4728  00002E  CFE9 F031          	movff	fsr0l,??_ISR_low+10
  4729  000032  CFEA F032          	movff	fsr0h,??_ISR_low+11
  4730  000036  CFE1 F033          	movff	fsr1l,??_ISR_low+12
  4731  00003A  CFE2 F034          	movff	fsr1h,??_ISR_low+13
  4732  00003E  CFD9 F035          	movff	fsr2l,??_ISR_low+14
  4733  000042  CFDA F036          	movff	fsr2h,??_ISR_low+15
  4734  000046  CFF3 F037          	movff	prodl,??_ISR_low+16
  4735  00004A  CFF4 F038          	movff	prodh,??_ISR_low+17
  4736  00004E  CFF6 F039          	movff	tblptrl,??_ISR_low+18
  4737  000052  CFF7 F03A          	movff	tblptrh,??_ISR_low+19
  4738  000056  CFF8 F03B          	movff	tblptru,??_ISR_low+20
  4739  00005A  CFF5 F03C          	movff	tablat,??_ISR_low+21
  4740                           
  4741                           ;main.c: 445: if (TMR0IE && TMR0IF)
  4742  00005E  BAF2               	btfsc	intcon,5,c	;volatile
  4743  000060  A4F2               	btfss	intcon,2,c	;volatile
  4744  000062  D00F               	goto	i1l2641
  4745                           
  4746                           ;main.c: 446: {
  4747                           ;main.c: 447: blink = ~blink;
  4748  000064  0100               	movlb	0	; () banked
  4749  000066  1FD7               	comf	_blink& (0+255),f,b
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;main.c: 452: if (buzz && --buzz)
  4753  000068  0100               	movlb	0	; () banked
  4754  00006A  51D8               	movf	_buzz& (0+255),w,b
  4755  00006C  B4D8               	btfsc	status,2,c
  4756  00006E  D007               	goto	i1l330
  4757                           
  4758                           ; BSR set to: 0
  4759  000070  0E01               	movlw	1
  4760  000072  0100               	movlb	0	; () banked
  4761  000074  5FD8               	subwf	_buzz& (0+255),f,b
  4762  000076  B4D8               	btfsc	status,2,c
  4763  000078  D002               	goto	i1l330
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;main.c: 453: {
  4767                           ;main.c: 455: LATA5 = 1;
  4768  00007A  8A89               	bsf	3977,5,c	;volatile
  4769                           
  4770                           ;main.c: 456: }
  4771  00007C  D185               	goto	i1l332
  4772  00007E                     i1l330:
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;main.c: 458: else
  4776                           ;main.c: 459: {
  4777                           ;main.c: 460: LATA5 = 0;
  4778  00007E  9A89               	bcf	3977,5,c	;volatile
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;main.c: 461: }
  4782                           ;main.c: 464: return;
  4783  000080  D183               	goto	i1l332
  4784  000082                     i1l2641:
  4785                           
  4786                           ;main.c: 465: }
  4787                           ;main.c: 467: scan_state cur = _KEYS;
  4788  000082  0E00               	movlw	0
  4789  000084  0100               	movlb	0	; () banked
  4790  000086  6F64               	movwf	ISR_low@cur& (0+255),b
  4791                           
  4792                           ;main.c: 468: unsigned char ins = 0;
  4793  000088  0E00               	movlw	0
  4794  00008A  0100               	movlb	0	; () banked
  4795  00008C  6F6B               	movwf	ISR_low@ins& (0+255),b
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;main.c: 469: static unsigned char ins_prev = 0;
  4799                           ;main.c: 470: unsigned char mask_leds;
  4800                           ;main.c: 472: if (TMR2IE && TMR2IF)
  4801  00008E  B29D               	btfsc	3997,1,c	;volatile
  4802                           
  4803                           ; BSR set to: 0
  4804  000090  A29E               	btfss	3998,1,c	;volatile
  4805  000092  D17A               	goto	i1l332
  4806                           
  4807                           ; BSR set to: 0
  4808                           ;main.c: 473: {
  4809                           ;main.c: 474: TMR2IF = 0;
  4810  000094  929E               	bcf	3998,1,c	;volatile
  4811                           
  4812                           ;main.c: 475: switch (cur)
  4813  000096  D16A               	goto	i1l2753
  4814  000098                     i1l337:
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;main.c: 479: ins_prev = ins;
  4818  000098  C06B  F0D6         	movff	ISR_low@ins,ISR_low@ins_prev
  4819                           
  4820                           ; BSR set to: 0
  4821                           ;main.c: 481: ins = sample_inputs();
  4822  00009C  EC7B  F00E         	call	_sample_inputs	;wreg free
  4823  0000A0  0100               	movlb	0	; () banked
  4824  0000A2  6F6B               	movwf	ISR_low@ins& (0+255),b
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;main.c: 484: if ((ins & 0b10000) && !(ins_prev && 0b10000))
  4828  0000A4  0100               	movlb	0	; () banked
  4829  0000A6  A96B               	btfss	ISR_low@ins& (0+255),4,b
  4830  0000A8  D014               	goto	i1l338
  4831                           
  4832                           ; BSR set to: 0
  4833  0000AA  0100               	movlb	0	; () banked
  4834  0000AC  51D6               	movf	ISR_low@ins_prev& (0+255),w,b
  4835  0000AE  A4D8               	btfss	status,2,c
  4836  0000B0  D010               	goto	i1l338
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;main.c: 485: {
  4840                           ;main.c: 486: state = ((state != _OFF) ? _OFF : _IDLE);
  4841                           
  4842                           ; BSR set to: 0
  4843                           
  4844                           ; BSR set to: 0
  4845  0000B2  0100               	movlb	0	; () banked
  4846  0000B4  51DF               	movf	_state& (0+255),w,b
  4847  0000B6  A4D8               	btfss	status,2,c
  4848  0000B8  D005               	goto	i1l2661
  4849                           
  4850                           ; BSR set to: 0
  4851  0000BA  0E00               	movlw	0
  4852  0000BC  0100               	movlb	0	; () banked
  4853  0000BE  6F68               	movwf	(_ISR_low$235+1)& (0+255),b
  4854  0000C0  0E02               	movlw	2
  4855  0000C2  D004               	goto	L5
  4856  0000C4                     i1l2661:
  4857                           
  4858                           ; BSR set to: 0
  4859  0000C4  0E00               	movlw	0
  4860  0000C6  0100               	movlb	0	; () banked
  4861  0000C8  6F68               	movwf	(_ISR_low$235+1)& (0+255),b
  4862  0000CA  0E00               	movlw	0
  4863  0000CC                     L5:
  4864  0000CC  6F67               	movwf	_ISR_low$235& (0+255),b
  4865                           
  4866                           ; BSR set to: 0
  4867                           
  4868                           ; BSR set to: 0
  4869  0000CE  C067  F0DF         	movff	_ISR_low$235,_state
  4870  0000D2                     i1l338:
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;main.c: 487: }
  4874                           ;main.c: 489: if (state == _OFF)
  4875  0000D2  0100               	movlb	0	; () banked
  4876  0000D4  51DF               	movf	_state& (0+255),w,b
  4877  0000D6  A4D8               	btfss	status,2,c
  4878  0000D8  D009               	goto	i1l347
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;main.c: 490: {
  4882                           ;main.c: 491: disp[0] = 0;
  4883  0000DA  0E00               	movlw	0
  4884  0000DC  0100               	movlb	0	; () banked
  4885  0000DE  6FD2               	movwf	_disp& (0+255),b
  4886                           
  4887                           ;main.c: 492: disp[1] = 1;
  4888  0000E0  0E01               	movlw	1
  4889  0000E2  0100               	movlb	0	; () banked
  4890  0000E4  6FD3               	movwf	(_disp+1)& (0+255),b
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;main.c: 493: LATC1 = 0;
  4894  0000E6  928B               	bcf	3979,1,c	;volatile
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;main.c: 494: LATC2 = 0;
  4898  0000E8  948B               	bcf	3979,2,c	;volatile
  4899                           
  4900                           ;main.c: 495: break;
  4901  0000EA  D14E               	goto	i1l332
  4902  0000EC                     i1l347:
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;main.c: 501: }
  4906                           ;main.c: 504: if ((ins & 0b10) && !(ins_prev && 0b10))
  4907  0000EC  0100               	movlb	0	; () banked
  4908  0000EE  A36B               	btfss	ISR_low@ins& (0+255),1,b
  4909  0000F0  D009               	goto	i1l2681
  4910                           
  4911                           ; BSR set to: 0
  4912  0000F2  0100               	movlb	0	; () banked
  4913  0000F4  51D6               	movf	ISR_low@ins_prev& (0+255),w,b
  4914  0000F6  A4D8               	btfss	status,2,c
  4915  0000F8  D005               	goto	i1l2681
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;main.c: 505: {
  4919                           ;main.c: 506: (*cur_number)++;
  4920                           
  4921                           ; BSR set to: 0
  4922                           
  4923                           ; BSR set to: 0
  4924  0000FA  C0E1  FFD9         	movff	_cur_number,fsr2l
  4925  0000FE  C0E2  FFDA         	movff	_cur_number+1,fsr2h
  4926  000102  2ADF               	incf	indf2,f,c
  4927  000104                     i1l2681:
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;main.c: 507: }
  4931                           ;main.c: 510: if ((ins & 0b100) && !(ins_prev && 0b100))
  4932  000104  0100               	movlb	0	; () banked
  4933  000106  A56B               	btfss	ISR_low@ins& (0+255),2,b
  4934  000108  D009               	goto	i1l2689
  4935                           
  4936                           ; BSR set to: 0
  4937  00010A  0100               	movlb	0	; () banked
  4938  00010C  51D6               	movf	ISR_low@ins_prev& (0+255),w,b
  4939  00010E  A4D8               	btfss	status,2,c
  4940  000110  D005               	goto	i1l2689
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;main.c: 511: {
  4944                           ;main.c: 512: (*cur_number)--;
  4945                           
  4946                           ; BSR set to: 0
  4947                           
  4948                           ; BSR set to: 0
  4949  000112  C0E1  FFD9         	movff	_cur_number,fsr2l
  4950  000116  C0E2  FFDA         	movff	_cur_number+1,fsr2h
  4951  00011A  06DF               	decf	indf2,f,c
  4952  00011C                     i1l2689:
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;main.c: 513: }
  4956                           ;main.c: 515: if ((ins & 0b1000) && !(ins_prev && 0b1000))
  4957  00011C  0100               	movlb	0	; () banked
  4958  00011E  A76B               	btfss	ISR_low@ins& (0+255),3,b
  4959  000120  D009               	goto	i1l356
  4960                           
  4961                           ; BSR set to: 0
  4962  000122  0100               	movlb	0	; () banked
  4963  000124  51D6               	movf	ISR_low@ins_prev& (0+255),w,b
  4964  000126  A4D8               	btfss	status,2,c
  4965  000128  D005               	goto	i1l356
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;main.c: 516: {
  4969                           ;main.c: 517: unit = 1 - unit;
  4970                           
  4971                           ; BSR set to: 0
  4972  00012A  B43D               	btfsc	_unit/(0+8),_unit& (0+7),c
  4973  00012C  D002               	goto	i1u328_20
  4974  00012E  843D               	bsf	_unit/(0+8),_unit& (0+7),c
  4975  000130  D001               	goto	i1l356
  4976  000132                     i1u328_20:
  4977  000132  943D               	bcf	_unit/(0+8),_unit& (0+7),c
  4978  000134                     i1l356:
  4979                           
  4980                           ;main.c: 518: }
  4981                           ;main.c: 520: if ((ins & 0b100000) && !(ins_prev && 0b100000))
  4982  000134  0100               	movlb	0	; () banked
  4983  000136  AB6B               	btfss	ISR_low@ins& (0+255),5,b
  4984  000138  D127               	goto	i1l332
  4985                           
  4986                           ; BSR set to: 0
  4987  00013A  0100               	movlb	0	; () banked
  4988  00013C  51D6               	movf	ISR_low@ins_prev& (0+255),w,b
  4989  00013E  A4D8               	btfss	status,2,c
  4990  000140  D123               	goto	i1l332
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;main.c: 521: buzzer(1);
  4994                           
  4995                           ; BSR set to: 0
  4996                           
  4997                           ; BSR set to: 0
  4998  000142  0E01               	movlw	1
  4999  000144  EC84  F00E         	call	_buzzer
  5000                           
  5001                           ;main.c: 522: break;
  5002  000148  D11F               	goto	i1l332
  5003  00014A                     i1l362:
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;main.c: 524: LATA3 = 1;
  5007  00014A  8689               	bsf	3977,3,c	;volatile
  5008                           
  5009                           ;main.c: 525: LATA4 = 1;
  5010  00014C  8889               	bsf	3977,4,c	;volatile
  5011                           
  5012                           ;main.c: 526: mask_leds = (timer_led ? 0b1 : 0) |
  5013                           ;main.c: 527: (timer && (((time / 3600) >= day_hour && (time / 3600) < night_hour) ? 0b1
      +                          0 : 0)) |
  5014                           ;main.c: 528: (timer && (((time / 3600) < day_hour || (time / 3600) >= night_hour) ? 0b1
      +                          00 : 0)) |
  5015                           ;main.c: 529: ((heat_mode != LATC1 && heat_mode != LATC2) ? 0b1000 : 0) |
  5016                           ;main.c: 530: (power_led ? 0b10000 : 0) |
  5017                           ;main.c: 531: (unit ? 0b1000000 : 0b100000);
  5018  00014E  B43D               	btfsc	_unit/(0+8),_unit& (0+7),c
  5019  000150  D005               	goto	i1l2703
  5020                           
  5021                           ; BSR set to: 0
  5022  000152  0E00               	movlw	0
  5023  000154  0100               	movlb	0	; () banked
  5024  000156  6F6A               	movwf	(_ISR_low$237+1)& (0+255),b
  5025  000158  0E20               	movlw	32
  5026  00015A  D004               	goto	L6
  5027  00015C                     i1l2703:
  5028                           
  5029                           ; BSR set to: 0
  5030  00015C  0E00               	movlw	0
  5031  00015E  0100               	movlb	0	; () banked
  5032  000160  6F6A               	movwf	(_ISR_low$237+1)& (0+255),b
  5033  000162  0E40               	movlw	64
  5034  000164                     L6:
  5035  000164  6F69               	movwf	_ISR_low$237& (0+255),b
  5036                           
  5037                           ; BSR set to: 0
  5038                           
  5039                           ; BSR set to: 0
  5040  000166  B03D               	btfsc	_power_led/(0+8),_power_led& (0+7),c
  5041  000168  D005               	goto	i1l2709
  5042                           
  5043                           ; BSR set to: 0
  5044  00016A  0E00               	movlw	0
  5045  00016C  0100               	movlb	0	; () banked
  5046  00016E  6F61               	movwf	(_ISR_low$238+1)& (0+255),b
  5047  000170  0E00               	movlw	0
  5048  000172  D004               	goto	L7
  5049  000174                     i1l2709:
  5050                           
  5051                           ; BSR set to: 0
  5052  000174  0E00               	movlw	0
  5053  000176  0100               	movlb	0	; () banked
  5054  000178  6F61               	movwf	(_ISR_low$238+1)& (0+255),b
  5055  00017A  0E10               	movlw	16
  5056  00017C                     L7:
  5057  00017C  6F60               	movwf	_ISR_low$238& (0+255),b
  5058                           
  5059                           ; BSR set to: 0
  5060  00017E  0E00               	movlw	0
  5061  000180  B28B               	btfsc	3979,1,c	;volatile
  5062  000182  0E01               	movlw	1
  5063  000184  0100               	movlb	0	; () banked
  5064  000186  19E4               	xorwf	_heat_mode& (0+255),w,b
  5065  000188  B4D8               	btfsc	status,2,c
  5066  00018A  D007               	goto	i1l2713
  5067                           
  5068                           ; BSR set to: 0
  5069  00018C  0E00               	movlw	0
  5070  00018E  B48B               	btfsc	3979,2,c	;volatile
  5071  000190  0E01               	movlw	1
  5072  000192  0100               	movlb	0	; () banked
  5073  000194  19E4               	xorwf	_heat_mode& (0+255),w,b
  5074  000196  A4D8               	btfss	status,2,c
  5075  000198  D005               	goto	i1l2715
  5076  00019A                     i1l2713:
  5077                           
  5078                           ; BSR set to: 0
  5079  00019A  0E00               	movlw	0
  5080  00019C  0100               	movlb	0	; () banked
  5081  00019E  6F63               	movwf	(_ISR_low$239+1)& (0+255),b
  5082  0001A0  0E00               	movlw	0
  5083  0001A2  D004               	goto	L8
  5084  0001A4                     i1l2715:
  5085                           
  5086                           ; BSR set to: 0
  5087  0001A4  0E00               	movlw	0
  5088  0001A6  0100               	movlb	0	; () banked
  5089  0001A8  6F63               	movwf	(_ISR_low$239+1)& (0+255),b
  5090  0001AA  0E08               	movlw	8
  5091  0001AC                     L8:
  5092  0001AC  6F62               	movwf	_ISR_low$239& (0+255),b
  5093                           
  5094                           ; BSR set to: 0
  5095  0001AE  0E01               	movlw	1
  5096  0001B0  0100               	movlb	0	; () banked
  5097  0001B2  6F66               	movwf	_ISR_low$240& (0+255),b
  5098                           
  5099                           ; BSR set to: 0
  5100  0001B4  B23D               	btfsc	_timer_led/(0+8),_timer_led& (0+7),c
  5101  0001B6  D0BB               	goto	i1l2743
  5102                           
  5103                           ; BSR set to: 0
  5104  0001B8  A63D               	btfss	_timer/(0+8),_timer& (0+7),c
  5105  0001BA  D05A               	goto	i1l1961
  5106                           
  5107                           ; BSR set to: 0
  5108  0001BC  C0D9  F027         	movff	_day_hour,??_ISR_low
  5109  0001C0  6A28               	clrf	(??_ISR_low+1)& (0+255),c
  5110  0001C2  6A29               	clrf	(??_ISR_low+2)& (0+255),c
  5111  0001C4  6A2A               	clrf	(??_ISR_low+3)& (0+255),c
  5112  0001C6  C0CB  F019         	movff	_time,i1___aldiv@dividend
  5113  0001CA  C0CC  F01A         	movff	_time+1,i1___aldiv@dividend+1
  5114  0001CE  C0CD  F01B         	movff	_time+2,i1___aldiv@dividend+2
  5115  0001D2  C0CE  F01C         	movff	_time+3,i1___aldiv@dividend+3
  5116  0001D6  0E10               	movlw	16
  5117  0001D8  6E1D               	movwf	i1___aldiv@divisor,c
  5118  0001DA  0E0E               	movlw	14
  5119  0001DC  6E1E               	movwf	i1___aldiv@divisor+1,c
  5120  0001DE  0E00               	movlw	0
  5121  0001E0  6E1F               	movwf	i1___aldiv@divisor+2,c
  5122  0001E2  0E00               	movlw	0
  5123  0001E4  6E20               	movwf	i1___aldiv@divisor+3,c
  5124  0001E6  EC00  F00B         	call	i1___aldiv	;wreg free
  5125  0001EA  5027               	movf	??_ISR_low,w,c
  5126  0001EC  5C19               	subwf	?i1___aldiv,w,c
  5127  0001EE  5028               	movf	??_ISR_low+1,w,c
  5128  0001F0  581A               	subwfb	?i1___aldiv+1,w,c
  5129  0001F2  5029               	movf	??_ISR_low+2,w,c
  5130  0001F4  581B               	subwfb	?i1___aldiv+2,w,c
  5131  0001F6  501C               	movf	?i1___aldiv+3,w,c
  5132  0001F8  0A80               	xorlw	128
  5133  0001FA  6E2B               	movwf	(??_ISR_low+4)& (0+255),c
  5134  0001FC  502A               	movf	??_ISR_low+3,w,c
  5135  0001FE  0A80               	xorlw	128
  5136  000200  582B               	subwfb	(??_ISR_low+4)& (0+255),w,c
  5137  000202  A0D8               	btfss	status,0,c
  5138  000204  D025               	goto	i1l2725
  5139  000206  C0DD  F027         	movff	_night_hour,??_ISR_low
  5140  00020A  6A28               	clrf	(??_ISR_low+1)& (0+255),c
  5141  00020C  6A29               	clrf	(??_ISR_low+2)& (0+255),c
  5142  00020E  6A2A               	clrf	(??_ISR_low+3)& (0+255),c
  5143  000210  C0CB  F019         	movff	_time,i1___aldiv@dividend
  5144  000214  C0CC  F01A         	movff	_time+1,i1___aldiv@dividend+1
  5145  000218  C0CD  F01B         	movff	_time+2,i1___aldiv@dividend+2
  5146  00021C  C0CE  F01C         	movff	_time+3,i1___aldiv@dividend+3
  5147  000220  0E10               	movlw	16
  5148  000222  6E1D               	movwf	i1___aldiv@divisor,c
  5149  000224  0E0E               	movlw	14
  5150  000226  6E1E               	movwf	i1___aldiv@divisor+1,c
  5151  000228  0E00               	movlw	0
  5152  00022A  6E1F               	movwf	i1___aldiv@divisor+2,c
  5153  00022C  0E00               	movlw	0
  5154  00022E  6E20               	movwf	i1___aldiv@divisor+3,c
  5155  000230  EC00  F00B         	call	i1___aldiv	;wreg free
  5156  000234  5027               	movf	??_ISR_low,w,c
  5157  000236  5C19               	subwf	?i1___aldiv,w,c
  5158  000238  5028               	movf	??_ISR_low+1,w,c
  5159  00023A  581A               	subwfb	?i1___aldiv+1,w,c
  5160  00023C  5029               	movf	??_ISR_low+2,w,c
  5161  00023E  581B               	subwfb	?i1___aldiv+2,w,c
  5162  000240  501C               	movf	?i1___aldiv+3,w,c
  5163  000242  0A80               	xorlw	128
  5164  000244  6E2B               	movwf	(??_ISR_low+4)& (0+255),c
  5165  000246  502A               	movf	??_ISR_low+3,w,c
  5166  000248  0A80               	xorlw	128
  5167  00024A  582B               	subwfb	(??_ISR_low+4)& (0+255),w,c
  5168  00024C  A0D8               	btfss	status,0,c
  5169  00024E  D005               	goto	i1l2727
  5170  000250                     i1l2725:
  5171  000250  0E00               	movlw	0
  5172  000252  0100               	movlb	0	; () banked
  5173  000254  6F68               	movwf	(_ISR_low$235+1)& (0+255),b
  5174  000256  0E00               	movlw	0
  5175  000258  D004               	goto	L9
  5176  00025A                     i1l2727:
  5177  00025A  0E00               	movlw	0
  5178  00025C  0100               	movlb	0	; () banked
  5179  00025E  6F68               	movwf	(_ISR_low$235+1)& (0+255),b
  5180  000260  0E02               	movlw	2
  5181  000262                     L9:
  5182  000262  6F67               	movwf	_ISR_low$235& (0+255),b
  5183                           
  5184                           ; BSR set to: 0
  5185                           
  5186                           ; BSR set to: 0
  5187  000264  0100               	movlb	0	; () banked
  5188  000266  5167               	movf	_ISR_low$235& (0+255),w,b
  5189  000268  0100               	movlb	0	; () banked
  5190  00026A  1168               	iorwf	(_ISR_low$235+1)& (0+255),w,b
  5191  00026C  A4D8               	btfss	status,2,c
  5192  00026E  D05F               	goto	i1l2743
  5193  000270                     i1l1961:
  5194                           
  5195                           ; BSR set to: 0
  5196  000270  A63D               	btfss	_timer/(0+8),_timer& (0+7),c
  5197  000272  D05A               	goto	i1l2741
  5198                           
  5199                           ; BSR set to: 0
  5200  000274  C0D9  F027         	movff	_day_hour,??_ISR_low
  5201  000278  6A28               	clrf	(??_ISR_low+1)& (0+255),c
  5202  00027A  6A29               	clrf	(??_ISR_low+2)& (0+255),c
  5203  00027C  6A2A               	clrf	(??_ISR_low+3)& (0+255),c
  5204  00027E  C0CB  F019         	movff	_time,i1___aldiv@dividend
  5205  000282  C0CC  F01A         	movff	_time+1,i1___aldiv@dividend+1
  5206  000286  C0CD  F01B         	movff	_time+2,i1___aldiv@dividend+2
  5207  00028A  C0CE  F01C         	movff	_time+3,i1___aldiv@dividend+3
  5208  00028E  0E10               	movlw	16
  5209  000290  6E1D               	movwf	i1___aldiv@divisor,c
  5210  000292  0E0E               	movlw	14
  5211  000294  6E1E               	movwf	i1___aldiv@divisor+1,c
  5212  000296  0E00               	movlw	0
  5213  000298  6E1F               	movwf	i1___aldiv@divisor+2,c
  5214  00029A  0E00               	movlw	0
  5215  00029C  6E20               	movwf	i1___aldiv@divisor+3,c
  5216  00029E  EC00  F00B         	call	i1___aldiv	;wreg free
  5217  0002A2  5027               	movf	??_ISR_low,w,c
  5218  0002A4  5C19               	subwf	?i1___aldiv,w,c
  5219  0002A6  5028               	movf	??_ISR_low+1,w,c
  5220  0002A8  581A               	subwfb	?i1___aldiv+1,w,c
  5221  0002AA  5029               	movf	??_ISR_low+2,w,c
  5222  0002AC  581B               	subwfb	?i1___aldiv+2,w,c
  5223  0002AE  501C               	movf	?i1___aldiv+3,w,c
  5224  0002B0  0A80               	xorlw	128
  5225  0002B2  6E2B               	movwf	(??_ISR_low+4)& (0+255),c
  5226  0002B4  502A               	movf	??_ISR_low+3,w,c
  5227  0002B6  0A80               	xorlw	128
  5228  0002B8  582B               	subwfb	(??_ISR_low+4)& (0+255),w,c
  5229  0002BA  A0D8               	btfss	status,0,c
  5230  0002BC  D02A               	goto	i1l2737
  5231  0002BE  C0DD  F027         	movff	_night_hour,??_ISR_low
  5232  0002C2  6A28               	clrf	(??_ISR_low+1)& (0+255),c
  5233  0002C4  6A29               	clrf	(??_ISR_low+2)& (0+255),c
  5234  0002C6  6A2A               	clrf	(??_ISR_low+3)& (0+255),c
  5235  0002C8  C0CB  F019         	movff	_time,i1___aldiv@dividend
  5236  0002CC  C0CC  F01A         	movff	_time+1,i1___aldiv@dividend+1
  5237  0002D0  C0CD  F01B         	movff	_time+2,i1___aldiv@dividend+2
  5238  0002D4  C0CE  F01C         	movff	_time+3,i1___aldiv@dividend+3
  5239  0002D8  0E10               	movlw	16
  5240  0002DA  6E1D               	movwf	i1___aldiv@divisor,c
  5241  0002DC  0E0E               	movlw	14
  5242  0002DE  6E1E               	movwf	i1___aldiv@divisor+1,c
  5243  0002E0  0E00               	movlw	0
  5244  0002E2  6E1F               	movwf	i1___aldiv@divisor+2,c
  5245  0002E4  0E00               	movlw	0
  5246  0002E6  6E20               	movwf	i1___aldiv@divisor+3,c
  5247  0002E8  EC00  F00B         	call	i1___aldiv	;wreg free
  5248  0002EC  5027               	movf	??_ISR_low,w,c
  5249  0002EE  5C19               	subwf	?i1___aldiv,w,c
  5250  0002F0  5028               	movf	??_ISR_low+1,w,c
  5251  0002F2  581A               	subwfb	?i1___aldiv+1,w,c
  5252  0002F4  5029               	movf	??_ISR_low+2,w,c
  5253  0002F6  581B               	subwfb	?i1___aldiv+2,w,c
  5254  0002F8  501C               	movf	?i1___aldiv+3,w,c
  5255  0002FA  0A80               	xorlw	128
  5256  0002FC  6E2B               	movwf	(??_ISR_low+4)& (0+255),c
  5257  0002FE  502A               	movf	??_ISR_low+3,w,c
  5258  000300  0A80               	xorlw	128
  5259  000302  582B               	subwfb	(??_ISR_low+4)& (0+255),w,c
  5260  000304  B0D8               	btfsc	status,0,c
  5261  000306  D005               	goto	i1l2737
  5262  000308  0E00               	movlw	0
  5263  00030A  0100               	movlb	0	; () banked
  5264  00030C  6F6A               	movwf	(_ISR_low$237+1)& (0+255),b
  5265  00030E  0E00               	movlw	0
  5266  000310  D004               	goto	L10
  5267  000312                     i1l2737:
  5268  000312  0E00               	movlw	0
  5269  000314  0100               	movlb	0	; () banked
  5270  000316  6F6A               	movwf	(_ISR_low$237+1)& (0+255),b
  5271  000318  0E04               	movlw	4
  5272  00031A                     L10:
  5273  00031A  6F69               	movwf	_ISR_low$237& (0+255),b
  5274                           
  5275                           ; BSR set to: 0
  5276                           
  5277                           ; BSR set to: 0
  5278  00031C  0100               	movlb	0	; () banked
  5279  00031E  5169               	movf	_ISR_low$237& (0+255),w,b
  5280  000320  0100               	movlb	0	; () banked
  5281  000322  116A               	iorwf	(_ISR_low$237+1)& (0+255),w,b
  5282  000324  A4D8               	btfss	status,2,c
  5283  000326  D003               	goto	i1l2743
  5284  000328                     i1l2741:
  5285                           
  5286                           ; BSR set to: 0
  5287  000328  0E00               	movlw	0
  5288  00032A  0100               	movlb	0	; () banked
  5289  00032C  6F66               	movwf	_ISR_low$240& (0+255),b
  5290  00032E                     i1l2743:
  5291                           
  5292                           ; BSR set to: 0
  5293  00032E  0100               	movlb	0	; () banked
  5294  000330  5166               	movf	_ISR_low$240& (0+255),w,b
  5295  000332  0100               	movlb	0	; () banked
  5296  000334  1162               	iorwf	_ISR_low$239& (0+255),w,b
  5297  000336  0100               	movlb	0	; () banked
  5298  000338  1160               	iorwf	_ISR_low$238& (0+255),w,b
  5299  00033A  0100               	movlb	0	; () banked
  5300  00033C  1169               	iorwf	_ISR_low$237& (0+255),w,b
  5301  00033E  0100               	movlb	0	; () banked
  5302  000340  6F65               	movwf	ISR_low@mask_leds& (0+255),b
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;main.c: 532: set_LEDs(mask_leds);
  5306  000342  0100               	movlb	0	; () banked
  5307  000344  5165               	movf	ISR_low@mask_leds& (0+255),w,b
  5308  000346  EC72  F00E         	call	_set_LEDs
  5309                           
  5310                           ;main.c: 533: break;
  5311  00034A  D01E               	goto	i1l332
  5312  00034C                     i1l379:
  5313                           
  5314                           ; BSR set to: 0
  5315                           ;main.c: 535: LATA2 = 1;
  5316  00034C  8489               	bsf	3977,2,c	;volatile
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;main.c: 536: set_digit(disp[0], 0);
  5320  00034E  0E00               	movlw	0
  5321  000350  6E19               	movwf	i1set_digit@num,c
  5322  000352  0100               	movlb	0	; () banked
  5323  000354  51D2               	movf	_disp& (0+255),w,b
  5324  000356  EC05  F00D         	call	i1_set_digit
  5325                           
  5326                           ;main.c: 537: break;
  5327  00035A  D016               	goto	i1l332
  5328  00035C                     i1l380:
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;main.c: 539: LATA2 = 1;
  5332  00035C  8489               	bsf	3977,2,c	;volatile
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;main.c: 540: set_digit(disp[1], 1);
  5336  00035E  0E01               	movlw	1
  5337  000360  6E19               	movwf	i1set_digit@num,c
  5338  000362  0100               	movlb	0	; () banked
  5339  000364  51D3               	movf	(_disp+1)& (0+255),w,b
  5340  000366  EC05  F00D         	call	i1_set_digit
  5341                           
  5342                           ;main.c: 542: }
  5343                           
  5344                           ;main.c: 541: break;
  5345  00036A  D00E               	goto	i1l332
  5346  00036C                     i1l2753:
  5347  00036C  0100               	movlb	0	; () banked
  5348  00036E  5164               	movf	ISR_low@cur& (0+255),w,b
  5349                           
  5350                           ; Switch size 1, requested type "space"
  5351                           ; Number of cases is 4, Range of values is 0 to 3
  5352                           ; switch strategies available:
  5353                           ; Name         Instructions Cycles
  5354                           ; simple_byte           13     7 (average)
  5355                           ;	Chosen strategy is simple_byte
  5356  000370  0A00               	xorlw	0	; case 0
  5357  000372  B4D8               	btfsc	status,2,c
  5358  000374  D691               	goto	i1l337
  5359  000376  0A01               	xorlw	1	; case 1
  5360  000378  B4D8               	btfsc	status,2,c
  5361  00037A  D6E7               	goto	i1l362
  5362  00037C  0A03               	xorlw	3	; case 2
  5363  00037E  B4D8               	btfsc	status,2,c
  5364  000380  D7E5               	goto	i1l379
  5365  000382  0A01               	xorlw	1	; case 3
  5366  000384  B4D8               	btfsc	status,2,c
  5367  000386  D7EA               	goto	i1l380
  5368  000388                     i1l332:
  5369  000388  C03C  FFF5         	movff	??_ISR_low+21,tablat
  5370  00038C  C03B  FFF8         	movff	??_ISR_low+20,tblptru
  5371  000390  C03A  FFF7         	movff	??_ISR_low+19,tblptrh
  5372  000394  C039  FFF6         	movff	??_ISR_low+18,tblptrl
  5373  000398  C038  FFF4         	movff	??_ISR_low+17,prodh
  5374  00039C  C037  FFF3         	movff	??_ISR_low+16,prodl
  5375  0003A0  C036  FFDA         	movff	??_ISR_low+15,fsr2h
  5376  0003A4  C035  FFD9         	movff	??_ISR_low+14,fsr2l
  5377  0003A8  C034  FFE2         	movff	??_ISR_low+13,fsr1h
  5378  0003AC  C033  FFE1         	movff	??_ISR_low+12,fsr1l
  5379  0003B0  C032  FFEA         	movff	??_ISR_low+11,fsr0h
  5380  0003B4  C031  FFE9         	movff	??_ISR_low+10,fsr0l
  5381  0003B8  C030  FFFB         	movff	??_ISR_low+9,pclatu
  5382  0003BC  C02F  FFFA         	movff	??_ISR_low+8,pclath
  5383  0003C0  C02E  FFE0         	movff	??_ISR_low+7,bsr
  5384  0003C4  C02D  FFE8         	movff	??_ISR_low+6,wreg
  5385  0003C8  C02C  FFD8         	movff	??_ISR_low+5,status
  5386  0003CC  903E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5387  0003CE  0010               	retfie	
  5388  0003D0                     __end_of_ISR_low:
  5389                           	opt stack 0
  5390                           pclatu	equ	0xFFB
  5391                           pclath	equ	0xFFA
  5392                           tblptru	equ	0xFF8
  5393                           tblptrh	equ	0xFF7
  5394                           tblptrl	equ	0xFF6
  5395                           tablat	equ	0xFF5
  5396                           prodh	equ	0xFF4
  5397                           prodl	equ	0xFF3
  5398                           intcon	equ	0xFF2
  5399                           intcon2	equ	0xFF1
  5400                           postinc0	equ	0xFEE
  5401                           fsr0h	equ	0xFEA
  5402                           fsr0l	equ	0xFE9
  5403                           wreg	equ	0xFE8
  5404                           postdec1	equ	0xFE5
  5405                           fsr1h	equ	0xFE2
  5406                           fsr1l	equ	0xFE1
  5407                           bsr	equ	0xFE0
  5408                           indf2	equ	0xFDF
  5409                           fsr2h	equ	0xFDA
  5410                           fsr2l	equ	0xFD9
  5411                           status	equ	0xFD8
  5412                           
  5413 ;; *************** function i1_set_digit *****************
  5414 ;; Defined at:
  5415 ;;		line 29 in file "disp.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  dig             1    wreg     unsigned char 
  5418 ;;  num             1   24[COMRAM] unsigned char 
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;  dig             1   25[COMRAM] unsigned char 
  5421 ;; Return value:  Size  Location     Type
  5422 ;;                  1    wreg      void 
  5423 ;; Registers used:
  5424 ;;		wreg, status,2
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5430 ;;      Params:         1       0       0       0       0       0       0       0       0
  5431 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5433 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5434 ;;Total ram usage:        2 bytes
  5435 ;; Hardware stack levels used:    1
  5436 ;; Hardware stack levels required when called:    2
  5437 ;; This function calls:
  5438 ;;		Nothing
  5439 ;; This function is called by:
  5440 ;;		_ISR_low
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text23
  5445  001A0A                     __ptext23:
  5446                           	opt stack 0
  5447  001A0A                     i1_set_digit:
  5448                           	opt stack 22
  5449                           
  5450                           ;incstack = 0
  5451                           ;i1set_digit@dig stored from wreg
  5452  001A0A  6E1A               	movwf	i1set_digit@dig,c
  5453                           
  5454                           ;disp.c: 32: TRISB2 = 0;
  5455  001A0C  9493               	bcf	3987,2,c	;volatile
  5456                           
  5457                           ;disp.c: 33: TRISB5 = 0;
  5458  001A0E  9A93               	bcf	3987,5,c	;volatile
  5459                           
  5460                           ;disp.c: 34: TRISB4 = 0;
  5461  001A10  9893               	bcf	3987,4,c	;volatile
  5462                           
  5463                           ;disp.c: 35: TRISB0 = 0;
  5464  001A12  9093               	bcf	3987,0,c	;volatile
  5465                           
  5466                           ;disp.c: 36: TRISB4 = 0;
  5467  001A14  9893               	bcf	3987,4,c	;volatile
  5468                           
  5469                           ;disp.c: 37: TRISB1 = 0;
  5470  001A16  9293               	bcf	3987,1,c	;volatile
  5471                           
  5472                           ;disp.c: 38: TRISA6 = 0;
  5473  001A18  9C92               	bcf	3986,6,c	;volatile
  5474                           
  5475                           ;disp.c: 40: LATA3 = num;
  5476  001A1A  A019               	btfss	i1set_digit@num,0,c
  5477  001A1C  D002               	goto	i1u266_20
  5478  001A1E  8689               	bsf	3977,3,c	;volatile
  5479  001A20  D001               	goto	i1l2485
  5480  001A22                     i1u266_20:
  5481  001A22  9689               	bcf	3977,3,c	;volatile
  5482  001A24                     i1l2485:
  5483                           
  5484                           ;disp.c: 41: LATA4 = !num;
  5485  001A24  5019               	movf	i1set_digit@num,w,c
  5486  001A26  A4D8               	btfss	status,2,c
  5487  001A28  D002               	goto	i1u268_20
  5488  001A2A  8889               	bsf	3977,4,c	;volatile
  5489  001A2C  D001               	goto	i1l2487
  5490  001A2E                     i1u268_20:
  5491  001A2E  9889               	bcf	3977,4,c	;volatile
  5492  001A30                     i1l2487:
  5493                           
  5494                           ;disp.c: 43: LATB2 = 0 != (dig & 0b1);
  5495  001A30  A01A               	btfss	i1set_digit@dig,0,c
  5496  001A32  D002               	goto	i1u270_20
  5497  001A34  848A               	bsf	3978,2,c	;volatile
  5498  001A36  D001               	goto	i1l2489
  5499  001A38                     i1u270_20:
  5500  001A38  948A               	bcf	3978,2,c	;volatile
  5501  001A3A                     i1l2489:
  5502                           
  5503                           ;disp.c: 44: LATB5 = 0 != (dig & 0b10);
  5504  001A3A  A21A               	btfss	i1set_digit@dig,1,c
  5505  001A3C  D002               	goto	i1u272_20
  5506  001A3E  8A8A               	bsf	3978,5,c	;volatile
  5507  001A40  D001               	goto	i1l2491
  5508  001A42                     i1u272_20:
  5509  001A42  9A8A               	bcf	3978,5,c	;volatile
  5510  001A44                     i1l2491:
  5511                           
  5512                           ;disp.c: 45: LATB4 = 0 != (dig & 0b100);
  5513  001A44  A41A               	btfss	i1set_digit@dig,2,c
  5514  001A46  D002               	goto	i1u274_20
  5515  001A48  888A               	bsf	3978,4,c	;volatile
  5516  001A4A  D001               	goto	i1l2493
  5517  001A4C                     i1u274_20:
  5518  001A4C  988A               	bcf	3978,4,c	;volatile
  5519  001A4E                     i1l2493:
  5520                           
  5521                           ;disp.c: 46: LATB0 = 0 != (dig & 0b1000);
  5522  001A4E  A61A               	btfss	i1set_digit@dig,3,c
  5523  001A50  D002               	goto	i1u276_20
  5524  001A52  808A               	bsf	3978,0,c	;volatile
  5525  001A54  D001               	goto	i1l2495
  5526  001A56                     i1u276_20:
  5527  001A56  908A               	bcf	3978,0,c	;volatile
  5528  001A58                     i1l2495:
  5529                           
  5530                           ;disp.c: 47: LATB4 = 0 != (dig & 0b10000);
  5531  001A58  A81A               	btfss	i1set_digit@dig,4,c
  5532  001A5A  D002               	goto	i1u278_20
  5533  001A5C  888A               	bsf	3978,4,c	;volatile
  5534  001A5E  D001               	goto	i1l2497
  5535  001A60                     i1u278_20:
  5536  001A60  988A               	bcf	3978,4,c	;volatile
  5537  001A62                     i1l2497:
  5538                           
  5539                           ;disp.c: 48: LATB1 = 0 != (dig & 0b100000);
  5540  001A62  AA1A               	btfss	i1set_digit@dig,5,c
  5541  001A64  D002               	goto	i1u280_20
  5542  001A66  828A               	bsf	3978,1,c	;volatile
  5543  001A68  D001               	goto	i1l2499
  5544  001A6A                     i1u280_20:
  5545  001A6A  928A               	bcf	3978,1,c	;volatile
  5546  001A6C                     i1l2499:
  5547                           
  5548                           ;disp.c: 49: LATA6 = 0 != (dig & 0b1000000);
  5549  001A6C  AC1A               	btfss	i1set_digit@dig,6,c
  5550  001A6E  D002               	goto	i1u282_20
  5551  001A70  8C89               	bsf	3977,6,c	;volatile
  5552  001A72  0012               	return	
  5553  001A74                     i1u282_20:
  5554  001A74  9C89               	bcf	3977,6,c	;volatile
  5555  001A76  0012               	return		;funcret
  5556  001A78                     __end_ofi1_set_digit:
  5557                           	opt stack 0
  5558                           pclatu	equ	0xFFB
  5559                           pclath	equ	0xFFA
  5560                           tblptru	equ	0xFF8
  5561                           tblptrh	equ	0xFF7
  5562                           tblptrl	equ	0xFF6
  5563                           tablat	equ	0xFF5
  5564                           prodh	equ	0xFF4
  5565                           prodl	equ	0xFF3
  5566                           intcon	equ	0xFF2
  5567                           intcon2	equ	0xFF1
  5568                           postinc0	equ	0xFEE
  5569                           fsr0h	equ	0xFEA
  5570                           fsr0l	equ	0xFE9
  5571                           wreg	equ	0xFE8
  5572                           postdec1	equ	0xFE5
  5573                           fsr1h	equ	0xFE2
  5574                           fsr1l	equ	0xFE1
  5575                           bsr	equ	0xFE0
  5576                           indf2	equ	0xFDF
  5577                           fsr2h	equ	0xFDA
  5578                           fsr2l	equ	0xFD9
  5579                           status	equ	0xFD8
  5580                           
  5581 ;; *************** function i1___aldiv *****************
  5582 ;; Defined at:
  5583 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/aldiv.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;  dividend        4   24[COMRAM] long 
  5586 ;;  divisor         4   28[COMRAM] long 
  5587 ;; Auto vars:     Size  Location     Type
  5588 ;;  __aldiv         4   34[COMRAM] long 
  5589 ;;  __aldiv         1   33[COMRAM] unsigned char 
  5590 ;;  __aldiv         1   32[COMRAM] unsigned char 
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  4   24[COMRAM] long 
  5593 ;; Registers used:
  5594 ;;		wreg, status,2, status,0
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5600 ;;      Params:         8       0       0       0       0       0       0       0       0
  5601 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5602 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5603 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5604 ;;Total ram usage:       14 bytes
  5605 ;; Hardware stack levels used:    1
  5606 ;; Hardware stack levels required when called:    2
  5607 ;; This function calls:
  5608 ;;		Nothing
  5609 ;; This function is called by:
  5610 ;;		_ISR_low
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           
  5614                           	psect	text24
  5615  001600                     __ptext24:
  5616                           	opt stack 0
  5617  001600                     i1___aldiv:
  5618                           	opt stack 22
  5619                           
  5620                           ;incstack = 0
  5621  001600  0E00               	movlw	0
  5622  001602  6E22               	movwf	i1___aldiv@sign,c
  5623  001604  AE20               	btfss	i1___aldiv@divisor+3,7,c
  5624  001606  D00A               	goto	i1l2509
  5625  001608  1E20               	comf	i1___aldiv@divisor+3,f,c
  5626  00160A  1E1F               	comf	i1___aldiv@divisor+2,f,c
  5627  00160C  1E1E               	comf	i1___aldiv@divisor+1,f,c
  5628  00160E  6C1D               	negf	i1___aldiv@divisor,c
  5629  001610  0E00               	movlw	0
  5630  001612  221E               	addwfc	i1___aldiv@divisor+1,f,c
  5631  001614  221F               	addwfc	i1___aldiv@divisor+2,f,c
  5632  001616  2220               	addwfc	i1___aldiv@divisor+3,f,c
  5633  001618  0E01               	movlw	1
  5634  00161A  6E22               	movwf	i1___aldiv@sign,c
  5635  00161C                     i1l2509:
  5636  00161C  AE1C               	btfss	i1___aldiv@dividend+3,7,c
  5637  00161E  D00A               	goto	i1l2515
  5638  001620  1E1C               	comf	i1___aldiv@dividend+3,f,c
  5639  001622  1E1B               	comf	i1___aldiv@dividend+2,f,c
  5640  001624  1E1A               	comf	i1___aldiv@dividend+1,f,c
  5641  001626  6C19               	negf	i1___aldiv@dividend,c
  5642  001628  0E00               	movlw	0
  5643  00162A  221A               	addwfc	i1___aldiv@dividend+1,f,c
  5644  00162C  221B               	addwfc	i1___aldiv@dividend+2,f,c
  5645  00162E  221C               	addwfc	i1___aldiv@dividend+3,f,c
  5646  001630  0E01               	movlw	1
  5647  001632  1A22               	xorwf	i1___aldiv@sign,f,c
  5648  001634                     i1l2515:
  5649  001634  0E00               	movlw	0
  5650  001636  6E23               	movwf	i1___aldiv@quotient,c
  5651  001638  0E00               	movlw	0
  5652  00163A  6E24               	movwf	i1___aldiv@quotient+1,c
  5653  00163C  0E00               	movlw	0
  5654  00163E  6E25               	movwf	i1___aldiv@quotient+2,c
  5655  001640  0E00               	movlw	0
  5656  001642  6E26               	movwf	i1___aldiv@quotient+3,c
  5657  001644  501D               	movf	i1___aldiv@divisor,w,c
  5658  001646  101E               	iorwf	i1___aldiv@divisor+1,w,c
  5659  001648  101F               	iorwf	i1___aldiv@divisor+2,w,c
  5660  00164A  1020               	iorwf	i1___aldiv@divisor+3,w,c
  5661  00164C  B4D8               	btfsc	status,2,c
  5662  00164E  D02A               	goto	i1l2537
  5663  001650  0E01               	movlw	1
  5664  001652  6E21               	movwf	i1___aldiv@counter,c
  5665  001654  D006               	goto	i1l2523
  5666  001656                     i1l2521:
  5667  001656  90D8               	bcf	status,0,c
  5668  001658  361D               	rlcf	i1___aldiv@divisor,f,c
  5669  00165A  361E               	rlcf	i1___aldiv@divisor+1,f,c
  5670  00165C  361F               	rlcf	i1___aldiv@divisor+2,f,c
  5671  00165E  3620               	rlcf	i1___aldiv@divisor+3,f,c
  5672  001660  2A21               	incf	i1___aldiv@counter,f,c
  5673  001662                     i1l2523:
  5674  001662  AE20               	btfss	i1___aldiv@divisor+3,7,c
  5675  001664  D7F8               	goto	i1l2521
  5676  001666                     i1l2525:
  5677  001666  90D8               	bcf	status,0,c
  5678  001668  3623               	rlcf	i1___aldiv@quotient,f,c
  5679  00166A  3624               	rlcf	i1___aldiv@quotient+1,f,c
  5680  00166C  3625               	rlcf	i1___aldiv@quotient+2,f,c
  5681  00166E  3626               	rlcf	i1___aldiv@quotient+3,f,c
  5682  001670  501D               	movf	i1___aldiv@divisor,w,c
  5683  001672  5C19               	subwf	i1___aldiv@dividend,w,c
  5684  001674  501E               	movf	i1___aldiv@divisor+1,w,c
  5685  001676  581A               	subwfb	i1___aldiv@dividend+1,w,c
  5686  001678  501F               	movf	i1___aldiv@divisor+2,w,c
  5687  00167A  581B               	subwfb	i1___aldiv@dividend+2,w,c
  5688  00167C  5020               	movf	i1___aldiv@divisor+3,w,c
  5689  00167E  581C               	subwfb	i1___aldiv@dividend+3,w,c
  5690  001680  A0D8               	btfss	status,0,c
  5691  001682  D009               	goto	i1l2533
  5692  001684  501D               	movf	i1___aldiv@divisor,w,c
  5693  001686  5E19               	subwf	i1___aldiv@dividend,f,c
  5694  001688  501E               	movf	i1___aldiv@divisor+1,w,c
  5695  00168A  5A1A               	subwfb	i1___aldiv@dividend+1,f,c
  5696  00168C  501F               	movf	i1___aldiv@divisor+2,w,c
  5697  00168E  5A1B               	subwfb	i1___aldiv@dividend+2,f,c
  5698  001690  5020               	movf	i1___aldiv@divisor+3,w,c
  5699  001692  5A1C               	subwfb	i1___aldiv@dividend+3,f,c
  5700  001694  8023               	bsf	i1___aldiv@quotient,0,c
  5701  001696                     i1l2533:
  5702  001696  90D8               	bcf	status,0,c
  5703  001698  3220               	rrcf	i1___aldiv@divisor+3,f,c
  5704  00169A  321F               	rrcf	i1___aldiv@divisor+2,f,c
  5705  00169C  321E               	rrcf	i1___aldiv@divisor+1,f,c
  5706  00169E  321D               	rrcf	i1___aldiv@divisor,f,c
  5707  0016A0  2E21               	decfsz	i1___aldiv@counter,f,c
  5708  0016A2  D7E1               	goto	i1l2525
  5709  0016A4                     i1l2537:
  5710  0016A4  5022               	movf	i1___aldiv@sign,w,c
  5711  0016A6  B4D8               	btfsc	status,2,c
  5712  0016A8  D008               	goto	i1l2541
  5713  0016AA  1E26               	comf	i1___aldiv@quotient+3,f,c
  5714  0016AC  1E25               	comf	i1___aldiv@quotient+2,f,c
  5715  0016AE  1E24               	comf	i1___aldiv@quotient+1,f,c
  5716  0016B0  6C23               	negf	i1___aldiv@quotient,c
  5717  0016B2  0E00               	movlw	0
  5718  0016B4  2224               	addwfc	i1___aldiv@quotient+1,f,c
  5719  0016B6  2225               	addwfc	i1___aldiv@quotient+2,f,c
  5720  0016B8  2226               	addwfc	i1___aldiv@quotient+3,f,c
  5721  0016BA                     i1l2541:
  5722  0016BA  C023  F019         	movff	i1___aldiv@quotient,?i1___aldiv
  5723  0016BE  C024  F01A         	movff	i1___aldiv@quotient+1,?i1___aldiv+1
  5724  0016C2  C025  F01B         	movff	i1___aldiv@quotient+2,?i1___aldiv+2
  5725  0016C6  C026  F01C         	movff	i1___aldiv@quotient+3,?i1___aldiv+3
  5726  0016CA  0012               	return	
  5727  0016CC                     __end_ofi1___aldiv:
  5728                           	opt stack 0
  5729                           pclatu	equ	0xFFB
  5730                           pclath	equ	0xFFA
  5731                           tblptru	equ	0xFF8
  5732                           tblptrh	equ	0xFF7
  5733                           tblptrl	equ	0xFF6
  5734                           tablat	equ	0xFF5
  5735                           prodh	equ	0xFF4
  5736                           prodl	equ	0xFF3
  5737                           intcon	equ	0xFF2
  5738                           intcon2	equ	0xFF1
  5739                           postinc0	equ	0xFEE
  5740                           fsr0h	equ	0xFEA
  5741                           fsr0l	equ	0xFE9
  5742                           wreg	equ	0xFE8
  5743                           postdec1	equ	0xFE5
  5744                           fsr1h	equ	0xFE2
  5745                           fsr1l	equ	0xFE1
  5746                           bsr	equ	0xFE0
  5747                           indf2	equ	0xFDF
  5748                           fsr2h	equ	0xFDA
  5749                           fsr2l	equ	0xFD9
  5750                           status	equ	0xFD8
  5751                           
  5752 ;; *************** function _set_LEDs *****************
  5753 ;; Defined at:
  5754 ;;		line 386 in file "main.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  mask            1    wreg     unsigned char 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;  mask            1   24[COMRAM] unsigned char 
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  1    wreg      void 
  5761 ;; Registers used:
  5762 ;;		wreg, status,2
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5768 ;;      Params:         0       0       0       0       0       0       0       0       0
  5769 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5771 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5772 ;;Total ram usage:        1 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; Hardware stack levels required when called:    2
  5775 ;; This function calls:
  5776 ;;		Nothing
  5777 ;; This function is called by:
  5778 ;;		_ISR_low
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           	psect	text25
  5783  001CE4                     __ptext25:
  5784                           	opt stack 0
  5785  001CE4                     _set_LEDs:
  5786                           	opt stack 22
  5787                           
  5788                           ;incstack = 0
  5789                           ;set_LEDs@mask stored from wreg
  5790  001CE4  6E19               	movwf	set_LEDs@mask,c
  5791                           
  5792                           ;main.c: 388: TRISB = 0;
  5793  001CE6  0E00               	movlw	0
  5794  001CE8  6E93               	movwf	3987,c	;volatile
  5795                           
  5796                           ;main.c: 389: LATA3 = 1;
  5797  001CEA  8689               	bsf	3977,3,c	;volatile
  5798                           
  5799                           ;main.c: 390: LATA4 = 1;
  5800  001CEC  8889               	bsf	3977,4,c	;volatile
  5801                           
  5802                           ;main.c: 391: LATA2 = 0;
  5803  001CEE  9489               	bcf	3977,2,c	;volatile
  5804                           
  5805                           ;main.c: 392: LATB = mask;
  5806  001CF0  C019  FF8A         	movff	set_LEDs@mask,3978	;volatile
  5807  001CF4  0012               	return		;funcret
  5808  001CF6                     __end_of_set_LEDs:
  5809                           	opt stack 0
  5810                           pclatu	equ	0xFFB
  5811                           pclath	equ	0xFFA
  5812                           tblptru	equ	0xFF8
  5813                           tblptrh	equ	0xFF7
  5814                           tblptrl	equ	0xFF6
  5815                           tablat	equ	0xFF5
  5816                           prodh	equ	0xFF4
  5817                           prodl	equ	0xFF3
  5818                           intcon	equ	0xFF2
  5819                           intcon2	equ	0xFF1
  5820                           postinc0	equ	0xFEE
  5821                           fsr0h	equ	0xFEA
  5822                           fsr0l	equ	0xFE9
  5823                           wreg	equ	0xFE8
  5824                           postdec1	equ	0xFE5
  5825                           fsr1h	equ	0xFE2
  5826                           fsr1l	equ	0xFE1
  5827                           bsr	equ	0xFE0
  5828                           indf2	equ	0xFDF
  5829                           fsr2h	equ	0xFDA
  5830                           fsr2l	equ	0xFD9
  5831                           status	equ	0xFD8
  5832                           
  5833 ;; *************** function _sample_inputs *****************
  5834 ;; Defined at:
  5835 ;;		line 373 in file "main.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;		None
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;		None
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1    wreg      unsigned char 
  5842 ;; Registers used:
  5843 ;;		wreg, status,2, cstack
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5849 ;;      Params:         0       0       0       0       0       0       0       0       0
  5850 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5851 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5852 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5853 ;;Total ram usage:        0 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:    3
  5856 ;; This function calls:
  5857 ;;		_set_key_led_disp_tris
  5858 ;; This function is called by:
  5859 ;;		_ISR_low
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text26
  5864  001CF6                     __ptext26:
  5865                           	opt stack 0
  5866  001CF6                     _sample_inputs:
  5867                           	opt stack 21
  5868                           
  5869                           ;main.c: 376: set_key_led_disp_tris(1);
  5870                           
  5871                           ;incstack = 0
  5872  001CF6  0E01               	movlw	1
  5873  001CF8  EC62  F00D         	call	_set_key_led_disp_tris
  5874                           
  5875                           ;main.c: 378: LATA2 = 1;
  5876  001CFC  8489               	bsf	3977,2,c	;volatile
  5877                           
  5878                           ;main.c: 379: LATA3 = 1;
  5879  001CFE  8689               	bsf	3977,3,c	;volatile
  5880                           
  5881                           ;main.c: 380: LATA4 = 1;
  5882  001D00  8889               	bsf	3977,4,c	;volatile
  5883                           
  5884                           ;main.c: 382: TRISB = 0xFF;
  5885  001D02  6893               	setf	3987,c	;volatile
  5886                           
  5887                           ;main.c: 383: return PORTB;
  5888  001D04  5081               	movf	3969,w,c	;volatile
  5889  001D06  0012               	return	
  5890  001D08                     __end_of_sample_inputs:
  5891                           	opt stack 0
  5892                           pclatu	equ	0xFFB
  5893                           pclath	equ	0xFFA
  5894                           tblptru	equ	0xFF8
  5895                           tblptrh	equ	0xFF7
  5896                           tblptrl	equ	0xFF6
  5897                           tablat	equ	0xFF5
  5898                           prodh	equ	0xFF4
  5899                           prodl	equ	0xFF3
  5900                           intcon	equ	0xFF2
  5901                           intcon2	equ	0xFF1
  5902                           postinc0	equ	0xFEE
  5903                           fsr0h	equ	0xFEA
  5904                           fsr0l	equ	0xFE9
  5905                           wreg	equ	0xFE8
  5906                           postdec1	equ	0xFE5
  5907                           fsr1h	equ	0xFE2
  5908                           fsr1l	equ	0xFE1
  5909                           bsr	equ	0xFE0
  5910                           indf2	equ	0xFDF
  5911                           fsr2h	equ	0xFDA
  5912                           fsr2l	equ	0xFD9
  5913                           status	equ	0xFD8
  5914                           
  5915 ;; *************** function _set_key_led_disp_tris *****************
  5916 ;; Defined at:
  5917 ;;		line 403 in file "main.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;  dir             1    wreg     unsigned char 
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;  dir             1   24[COMRAM] unsigned char 
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  1    wreg      void 
  5924 ;; Registers used:
  5925 ;;		wreg
  5926 ;; Tracked objects:
  5927 ;;		On entry : 0/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5931 ;;      Params:         0       0       0       0       0       0       0       0       0
  5932 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5933 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5934 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5935 ;;Total ram usage:        1 bytes
  5936 ;; Hardware stack levels used:    1
  5937 ;; Hardware stack levels required when called:    2
  5938 ;; This function calls:
  5939 ;;		Nothing
  5940 ;; This function is called by:
  5941 ;;		_sample_inputs
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text27
  5946  001AC4                     __ptext27:
  5947                           	opt stack 0
  5948  001AC4                     _set_key_led_disp_tris:
  5949                           	opt stack 21
  5950                           
  5951                           ;incstack = 0
  5952                           ;set_key_led_disp_tris@dir stored from wreg
  5953  001AC4  6E19               	movwf	set_key_led_disp_tris@dir,c
  5954                           
  5955                           ;main.c: 407: TRISA6 = dir;
  5956  001AC6  A019               	btfss	set_key_led_disp_tris@dir,0,c
  5957  001AC8  D002               	goto	i1u232_20
  5958  001ACA  8C92               	bsf	3986,6,c	;volatile
  5959  001ACC  D001               	goto	i1u233_25
  5960  001ACE                     i1u232_20:
  5961  001ACE  9C92               	bcf	3986,6,c	;volatile
  5962  001AD0                     i1u233_25:
  5963                           
  5964                           ;main.c: 408: TRISB1 = dir;
  5965  001AD0  A019               	btfss	set_key_led_disp_tris@dir,0,c
  5966  001AD2  D002               	goto	i1u234_20
  5967  001AD4  8293               	bsf	3987,1,c	;volatile
  5968  001AD6  D001               	goto	i1u235_25
  5969  001AD8                     i1u234_20:
  5970  001AD8  9293               	bcf	3987,1,c	;volatile
  5971  001ADA                     i1u235_25:
  5972                           
  5973                           ;main.c: 409: TRISB2 = dir;
  5974  001ADA  A019               	btfss	set_key_led_disp_tris@dir,0,c
  5975  001ADC  D002               	goto	i1u236_20
  5976  001ADE  8493               	bsf	3987,2,c	;volatile
  5977  001AE0  D001               	goto	i1u237_25
  5978  001AE2                     i1u236_20:
  5979  001AE2  9493               	bcf	3987,2,c	;volatile
  5980  001AE4                     i1u237_25:
  5981                           
  5982                           ;main.c: 410: TRISB3 = dir;
  5983  001AE4  A019               	btfss	set_key_led_disp_tris@dir,0,c
  5984  001AE6  D002               	goto	i1u238_20
  5985  001AE8  8693               	bsf	3987,3,c	;volatile
  5986  001AEA  D001               	goto	i1u239_25
  5987  001AEC                     i1u238_20:
  5988  001AEC  9693               	bcf	3987,3,c	;volatile
  5989  001AEE                     i1u239_25:
  5990                           
  5991                           ;main.c: 411: TRISB4 = dir;
  5992  001AEE  A019               	btfss	set_key_led_disp_tris@dir,0,c
  5993  001AF0  D002               	goto	i1u240_20
  5994  001AF2  8893               	bsf	3987,4,c	;volatile
  5995  001AF4  D001               	goto	i1u241_25
  5996  001AF6                     i1u240_20:
  5997  001AF6  9893               	bcf	3987,4,c	;volatile
  5998  001AF8                     i1u241_25:
  5999                           
  6000                           ;main.c: 412: TRISB5 = dir;
  6001  001AF8  A019               	btfss	set_key_led_disp_tris@dir,0,c
  6002  001AFA  D002               	goto	i1u242_20
  6003  001AFC  8A93               	bsf	3987,5,c	;volatile
  6004  001AFE  D001               	goto	i1u243_25
  6005  001B00                     i1u242_20:
  6006  001B00  9A93               	bcf	3987,5,c	;volatile
  6007  001B02                     i1u243_25:
  6008                           
  6009                           ;main.c: 413: TRISB0 = dir;
  6010  001B02  A019               	btfss	set_key_led_disp_tris@dir,0,c
  6011  001B04  D002               	goto	i1u244_20
  6012  001B06  8093               	bsf	3987,0,c	;volatile
  6013  001B08  0012               	return	
  6014  001B0A                     i1u244_20:
  6015  001B0A  9093               	bcf	3987,0,c	;volatile
  6016  001B0C  0012               	return		;funcret
  6017  001B0E                     __end_of_set_key_led_disp_tris:
  6018                           	opt stack 0
  6019                           pclatu	equ	0xFFB
  6020                           pclath	equ	0xFFA
  6021                           tblptru	equ	0xFF8
  6022                           tblptrh	equ	0xFF7
  6023                           tblptrl	equ	0xFF6
  6024                           tablat	equ	0xFF5
  6025                           prodh	equ	0xFF4
  6026                           prodl	equ	0xFF3
  6027                           intcon	equ	0xFF2
  6028                           intcon2	equ	0xFF1
  6029                           postinc0	equ	0xFEE
  6030                           fsr0h	equ	0xFEA
  6031                           fsr0l	equ	0xFE9
  6032                           wreg	equ	0xFE8
  6033                           postdec1	equ	0xFE5
  6034                           fsr1h	equ	0xFE2
  6035                           fsr1l	equ	0xFE1
  6036                           bsr	equ	0xFE0
  6037                           indf2	equ	0xFDF
  6038                           fsr2h	equ	0xFDA
  6039                           fsr2l	equ	0xFD9
  6040                           status	equ	0xFD8
  6041                           
  6042 ;; *************** function _buzzer *****************
  6043 ;; Defined at:
  6044 ;;		line 395 in file "main.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;  duration        1    wreg     unsigned char 
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  duration        1   24[COMRAM] unsigned char 
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  1    wreg      void 
  6051 ;; Registers used:
  6052 ;;		wreg
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6058 ;;      Params:         0       0       0       0       0       0       0       0       0
  6059 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6061 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6062 ;;Total ram usage:        1 bytes
  6063 ;; Hardware stack levels used:    1
  6064 ;; Hardware stack levels required when called:    2
  6065 ;; This function calls:
  6066 ;;		Nothing
  6067 ;; This function is called by:
  6068 ;;		_ISR_low
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text28
  6073  001D08                     __ptext28:
  6074                           	opt stack 0
  6075  001D08                     _buzzer:
  6076                           	opt stack 22
  6077                           
  6078                           ;incstack = 0
  6079                           ;buzzer@duration stored from wreg
  6080  001D08  6E19               	movwf	buzzer@duration,c
  6081                           
  6082                           ;main.c: 398: buzz = duration;
  6083  001D0A  C019  F0D8         	movff	buzzer@duration,_buzz
  6084                           
  6085                           ;main.c: 400: LATA5 = 1;
  6086  001D0E  8A89               	bsf	3977,5,c	;volatile
  6087  001D10  0012               	return		;funcret
  6088  001D12                     __end_of_buzzer:
  6089                           	opt stack 0
  6090                           pclatu	equ	0xFFB
  6091                           pclath	equ	0xFFA
  6092                           tblptru	equ	0xFF8
  6093                           tblptrh	equ	0xFF7
  6094                           tblptrl	equ	0xFF6
  6095                           tablat	equ	0xFF5
  6096                           prodh	equ	0xFF4
  6097                           prodl	equ	0xFF3
  6098                           intcon	equ	0xFF2
  6099                           intcon2	equ	0xFF1
  6100                           postinc0	equ	0xFEE
  6101                           fsr0h	equ	0xFEA
  6102                           fsr0l	equ	0xFE9
  6103                           wreg	equ	0xFE8
  6104                           postdec1	equ	0xFE5
  6105                           fsr1h	equ	0xFE2
  6106                           fsr1l	equ	0xFE1
  6107                           bsr	equ	0xFE0
  6108                           indf2	equ	0xFDF
  6109                           fsr2h	equ	0xFDA
  6110                           fsr2l	equ	0xFD9
  6111                           status	equ	0xFD8
  6112                           
  6113 ;; *************** function _ISR_high *****************
  6114 ;; Defined at:
  6115 ;;		line 418 in file "main.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;		None
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;		None
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  1    wreg      void 
  6122 ;; Registers used:
  6123 ;;		wreg, status,2, status,0, cstack
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6129 ;;      Params:         0       0       0       0       0       0       0       0       0
  6130 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6131 ;;      Temps:         14       0       0       0       0       0       0       0       0
  6132 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6133 ;;Total ram usage:       14 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:    1
  6136 ;; This function calls:
  6137 ;;		___almod
  6138 ;; This function is called by:
  6139 ;;		Interrupt level 2
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           	psect	intcode
  6144  000008                     __pintcode:
  6145                           	opt stack 0
  6146  000008                     _ISR_high:
  6147                           	opt stack 21
  6148                           
  6149                           ;incstack = 0
  6150  000008  823E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6151  00000A  CFFA F00B          	movff	pclath,??_ISR_high
  6152  00000E  CFFB F00C          	movff	pclatu,??_ISR_high+1
  6153  000012  EDCA  F00B         	call	int_func,f	;refresh shadow registers
  6154                           pclatu	equ	0xFFB
  6155                           pclath	equ	0xFFA
  6156                           tblptru	equ	0xFF8
  6157                           tblptrh	equ	0xFF7
  6158                           tblptrl	equ	0xFF6
  6159                           tablat	equ	0xFF5
  6160                           prodh	equ	0xFF4
  6161                           prodl	equ	0xFF3
  6162                           intcon	equ	0xFF2
  6163                           intcon2	equ	0xFF1
  6164                           postinc0	equ	0xFEE
  6165                           fsr0h	equ	0xFEA
  6166                           fsr0l	equ	0xFE9
  6167                           wreg	equ	0xFE8
  6168                           postdec1	equ	0xFE5
  6169                           fsr1h	equ	0xFE2
  6170                           fsr1l	equ	0xFE1
  6171                           bsr	equ	0xFE0
  6172                           indf2	equ	0xFDF
  6173                           fsr2h	equ	0xFDA
  6174                           fsr2l	equ	0xFD9
  6175                           status	equ	0xFD8
  6176                           
  6177                           	psect	intcode_body
  6178  001794                     __pintcode_body:
  6179                           	opt stack 21
  6180  001794                     int_func:
  6181                           	opt stack 21
  6182  001794  0006               	pop		; remove dummy address from shadow register refresh
  6183  001796  CFE9 F00D          	movff	fsr0l,??_ISR_high+2
  6184  00179A  CFEA F00E          	movff	fsr0h,??_ISR_high+3
  6185  00179E  CFE1 F00F          	movff	fsr1l,??_ISR_high+4
  6186  0017A2  CFE2 F010          	movff	fsr1h,??_ISR_high+5
  6187  0017A6  CFD9 F011          	movff	fsr2l,??_ISR_high+6
  6188  0017AA  CFDA F012          	movff	fsr2h,??_ISR_high+7
  6189  0017AE  CFF3 F013          	movff	prodl,??_ISR_high+8
  6190  0017B2  CFF4 F014          	movff	prodh,??_ISR_high+9
  6191  0017B6  CFF6 F015          	movff	tblptrl,??_ISR_high+10
  6192  0017BA  CFF7 F016          	movff	tblptrh,??_ISR_high+11
  6193  0017BE  CFF8 F017          	movff	tblptru,??_ISR_high+12
  6194  0017C2  CFF5 F018          	movff	tablat,??_ISR_high+13
  6195                           
  6196                           ;main.c: 420: if (TMR1IE && TMR1IF)
  6197  0017C6  B09D               	btfsc	3997,0,c	;volatile
  6198  0017C8  A09E               	btfss	3998,0,c	;volatile
  6199  0017CA  D029               	goto	i2l326
  6200                           
  6201                           ;main.c: 421: {
  6202                           ;main.c: 428: TMR1 += 0xFFFF - (500000 / 32);
  6203  0017CC  0EF6               	movlw	246
  6204  0017CE  26CE               	addwf	4046,f,c	;volatile
  6205  0017D0  0EC2               	movlw	194
  6206  0017D2  22CF               	addwfc	4047,f,c	;volatile
  6207                           
  6208                           ;main.c: 430: TMR1IF = 0;
  6209  0017D4  909E               	bcf	3998,0,c	;volatile
  6210                           
  6211                           ;main.c: 432: time = (long) (time + 1) % (3600L * 24L);
  6212  0017D6  0E01               	movlw	1
  6213  0017D8  0100               	movlb	0	; () banked
  6214  0017DA  25CB               	addwf	_time& (0+255),w,b
  6215  0017DC  6E01               	movwf	___almod@dividend,c
  6216  0017DE  0E00               	movlw	0
  6217  0017E0  0100               	movlb	0	; () banked
  6218  0017E2  21CC               	addwfc	(_time+1)& (0+255),w,b
  6219  0017E4  6E02               	movwf	___almod@dividend+1,c
  6220  0017E6  0E00               	movlw	0
  6221  0017E8  0100               	movlb	0	; () banked
  6222  0017EA  21CD               	addwfc	(_time+2)& (0+255),w,b
  6223  0017EC  6E03               	movwf	___almod@dividend+2,c
  6224  0017EE  0E00               	movlw	0
  6225  0017F0  0100               	movlb	0	; () banked
  6226  0017F2  21CE               	addwfc	(_time+3)& (0+255),w,b
  6227  0017F4  6E04               	movwf	___almod@dividend+3,c
  6228  0017F6  0E80               	movlw	128
  6229  0017F8  6E05               	movwf	___almod@divisor,c
  6230  0017FA  0E51               	movlw	81
  6231  0017FC  6E06               	movwf	___almod@divisor+1,c
  6232  0017FE  0E01               	movlw	1
  6233  001800  6E07               	movwf	___almod@divisor+2,c
  6234  001802  0E00               	movlw	0
  6235  001804  6E08               	movwf	___almod@divisor+3,c
  6236  001806  EC2D  F00C         	call	___almod	;wreg free
  6237  00180A  C001  F0CB         	movff	?___almod,_time
  6238  00180E  C002  F0CC         	movff	?___almod+1,_time+1
  6239  001812  C003  F0CD         	movff	?___almod+2,_time+2
  6240  001816  C004  F0CE         	movff	?___almod+3,_time+3
  6241                           
  6242                           ;main.c: 434: fan_timeout--;
  6243  00181A  0100               	movlb	0	; () banked
  6244  00181C  07DB               	decf	_fan_timeout& (0+255),f,b
  6245  00181E                     i2l326:
  6246  00181E  C018  FFF5         	movff	??_ISR_high+13,tablat
  6247  001822  C017  FFF8         	movff	??_ISR_high+12,tblptru
  6248  001826  C016  FFF7         	movff	??_ISR_high+11,tblptrh
  6249  00182A  C015  FFF6         	movff	??_ISR_high+10,tblptrl
  6250  00182E  C014  FFF4         	movff	??_ISR_high+9,prodh
  6251  001832  C013  FFF3         	movff	??_ISR_high+8,prodl
  6252  001836  C012  FFDA         	movff	??_ISR_high+7,fsr2h
  6253  00183A  C011  FFD9         	movff	??_ISR_high+6,fsr2l
  6254  00183E  C010  FFE2         	movff	??_ISR_high+5,fsr1h
  6255  001842  C00F  FFE1         	movff	??_ISR_high+4,fsr1l
  6256  001846  C00E  FFEA         	movff	??_ISR_high+3,fsr0h
  6257  00184A  C00D  FFE9         	movff	??_ISR_high+2,fsr0l
  6258  00184E  C00C  FFFB         	movff	??_ISR_high+1,pclatu
  6259  001852  C00B  FFFA         	movff	??_ISR_high,pclath
  6260  001856  923E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6261  001858  0011               	retfie		f
  6262  00185A                     __end_of_ISR_high:
  6263                           	opt stack 0
  6264                           pclatu	equ	0xFFB
  6265                           pclath	equ	0xFFA
  6266                           tblptru	equ	0xFF8
  6267                           tblptrh	equ	0xFF7
  6268                           tblptrl	equ	0xFF6
  6269                           tablat	equ	0xFF5
  6270                           prodh	equ	0xFF4
  6271                           prodl	equ	0xFF3
  6272                           intcon	equ	0xFF2
  6273                           intcon2	equ	0xFF1
  6274                           postinc0	equ	0xFEE
  6275                           fsr0h	equ	0xFEA
  6276                           fsr0l	equ	0xFE9
  6277                           wreg	equ	0xFE8
  6278                           postdec1	equ	0xFE5
  6279                           fsr1h	equ	0xFE2
  6280                           fsr1l	equ	0xFE1
  6281                           bsr	equ	0xFE0
  6282                           indf2	equ	0xFDF
  6283                           fsr2h	equ	0xFDA
  6284                           fsr2l	equ	0xFD9
  6285                           status	equ	0xFD8
  6286                           
  6287 ;; *************** function ___almod *****************
  6288 ;; Defined at:
  6289 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/almod.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  dividend        4    0[COMRAM] long 
  6292 ;;  divisor         4    4[COMRAM] long 
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  sign            1    9[COMRAM] unsigned char 
  6295 ;;  counter         1    8[COMRAM] unsigned char 
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  4    0[COMRAM] long 
  6298 ;; Registers used:
  6299 ;;		wreg, status,2, status,0
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6305 ;;      Params:         8       0       0       0       0       0       0       0       0
  6306 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6307 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6308 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6309 ;;Total ram usage:       10 bytes
  6310 ;; Hardware stack levels used:    1
  6311 ;; This function calls:
  6312 ;;		Nothing
  6313 ;; This function is called by:
  6314 ;;		_ISR_high
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           
  6318                           	psect	text30
  6319  00185A                     __ptext30:
  6320                           	opt stack 0
  6321  00185A                     ___almod:
  6322                           	opt stack 21
  6323                           
  6324                           ;incstack = 0
  6325  00185A  0E00               	movlw	0
  6326  00185C  6E0A               	movwf	___almod@sign,c
  6327  00185E  AE04               	btfss	___almod@dividend+3,7,c
  6328  001860  D00A               	goto	i2l2443
  6329  001862  1E04               	comf	___almod@dividend+3,f,c
  6330  001864  1E03               	comf	___almod@dividend+2,f,c
  6331  001866  1E02               	comf	___almod@dividend+1,f,c
  6332  001868  6C01               	negf	___almod@dividend,c
  6333  00186A  0E00               	movlw	0
  6334  00186C  2202               	addwfc	___almod@dividend+1,f,c
  6335  00186E  2203               	addwfc	___almod@dividend+2,f,c
  6336  001870  2204               	addwfc	___almod@dividend+3,f,c
  6337  001872  0E01               	movlw	1
  6338  001874  6E0A               	movwf	___almod@sign,c
  6339  001876                     i2l2443:
  6340  001876  AE08               	btfss	___almod@divisor+3,7,c
  6341  001878  D008               	goto	i2l2447
  6342  00187A  1E08               	comf	___almod@divisor+3,f,c
  6343  00187C  1E07               	comf	___almod@divisor+2,f,c
  6344  00187E  1E06               	comf	___almod@divisor+1,f,c
  6345  001880  6C05               	negf	___almod@divisor,c
  6346  001882  0E00               	movlw	0
  6347  001884  2206               	addwfc	___almod@divisor+1,f,c
  6348  001886  2207               	addwfc	___almod@divisor+2,f,c
  6349  001888  2208               	addwfc	___almod@divisor+3,f,c
  6350  00188A                     i2l2447:
  6351  00188A  5005               	movf	___almod@divisor,w,c
  6352  00188C  1006               	iorwf	___almod@divisor+1,w,c
  6353  00188E  1007               	iorwf	___almod@divisor+2,w,c
  6354  001890  1008               	iorwf	___almod@divisor+3,w,c
  6355  001892  B4D8               	btfsc	status,2,c
  6356  001894  D024               	goto	i2l2463
  6357  001896  0E01               	movlw	1
  6358  001898  6E09               	movwf	___almod@counter,c
  6359  00189A  D006               	goto	i2l2453
  6360  00189C                     i2l2451:
  6361  00189C  90D8               	bcf	status,0,c
  6362  00189E  3605               	rlcf	___almod@divisor,f,c
  6363  0018A0  3606               	rlcf	___almod@divisor+1,f,c
  6364  0018A2  3607               	rlcf	___almod@divisor+2,f,c
  6365  0018A4  3608               	rlcf	___almod@divisor+3,f,c
  6366  0018A6  2A09               	incf	___almod@counter,f,c
  6367  0018A8                     i2l2453:
  6368  0018A8  AE08               	btfss	___almod@divisor+3,7,c
  6369  0018AA  D7F8               	goto	i2l2451
  6370  0018AC                     i2l2455:
  6371  0018AC  5005               	movf	___almod@divisor,w,c
  6372  0018AE  5C01               	subwf	___almod@dividend,w,c
  6373  0018B0  5006               	movf	___almod@divisor+1,w,c
  6374  0018B2  5802               	subwfb	___almod@dividend+1,w,c
  6375  0018B4  5007               	movf	___almod@divisor+2,w,c
  6376  0018B6  5803               	subwfb	___almod@dividend+2,w,c
  6377  0018B8  5008               	movf	___almod@divisor+3,w,c
  6378  0018BA  5804               	subwfb	___almod@dividend+3,w,c
  6379  0018BC  A0D8               	btfss	status,0,c
  6380  0018BE  D008               	goto	i2l2459
  6381  0018C0  5005               	movf	___almod@divisor,w,c
  6382  0018C2  5E01               	subwf	___almod@dividend,f,c
  6383  0018C4  5006               	movf	___almod@divisor+1,w,c
  6384  0018C6  5A02               	subwfb	___almod@dividend+1,f,c
  6385  0018C8  5007               	movf	___almod@divisor+2,w,c
  6386  0018CA  5A03               	subwfb	___almod@dividend+2,f,c
  6387  0018CC  5008               	movf	___almod@divisor+3,w,c
  6388  0018CE  5A04               	subwfb	___almod@dividend+3,f,c
  6389  0018D0                     i2l2459:
  6390  0018D0  90D8               	bcf	status,0,c
  6391  0018D2  3208               	rrcf	___almod@divisor+3,f,c
  6392  0018D4  3207               	rrcf	___almod@divisor+2,f,c
  6393  0018D6  3206               	rrcf	___almod@divisor+1,f,c
  6394  0018D8  3205               	rrcf	___almod@divisor,f,c
  6395  0018DA  2E09               	decfsz	___almod@counter,f,c
  6396  0018DC  D7E7               	goto	i2l2455
  6397  0018DE                     i2l2463:
  6398  0018DE  500A               	movf	___almod@sign,w,c
  6399  0018E0  B4D8               	btfsc	status,2,c
  6400  0018E2  D008               	goto	i2l2467
  6401  0018E4  1E04               	comf	___almod@dividend+3,f,c
  6402  0018E6  1E03               	comf	___almod@dividend+2,f,c
  6403  0018E8  1E02               	comf	___almod@dividend+1,f,c
  6404  0018EA  6C01               	negf	___almod@dividend,c
  6405  0018EC  0E00               	movlw	0
  6406  0018EE  2202               	addwfc	___almod@dividend+1,f,c
  6407  0018F0  2203               	addwfc	___almod@dividend+2,f,c
  6408  0018F2  2204               	addwfc	___almod@dividend+3,f,c
  6409  0018F4                     i2l2467:
  6410  0018F4  C001  F001         	movff	___almod@dividend,?___almod
  6411  0018F8  C002  F002         	movff	___almod@dividend+1,?___almod+1
  6412  0018FC  C003  F003         	movff	___almod@dividend+2,?___almod+2
  6413  001900  C004  F004         	movff	___almod@dividend+3,?___almod+3
  6414  001904  0012               	return	
  6415  001906                     __end_of___almod:
  6416                           	opt stack 0
  6417                           pclatu	equ	0xFFB
  6418                           pclath	equ	0xFFA
  6419                           tblptru	equ	0xFF8
  6420                           tblptrh	equ	0xFF7
  6421                           tblptrl	equ	0xFF6
  6422                           tablat	equ	0xFF5
  6423                           prodh	equ	0xFF4
  6424                           prodl	equ	0xFF3
  6425                           intcon	equ	0xFF2
  6426                           intcon2	equ	0xFF1
  6427                           postinc0	equ	0xFEE
  6428                           fsr0h	equ	0xFEA
  6429                           fsr0l	equ	0xFE9
  6430                           wreg	equ	0xFE8
  6431                           postdec1	equ	0xFE5
  6432                           fsr1h	equ	0xFE2
  6433                           fsr1l	equ	0xFE1
  6434                           bsr	equ	0xFE0
  6435                           indf2	equ	0xFDF
  6436                           fsr2h	equ	0xFDA
  6437                           fsr2l	equ	0xFD9
  6438                           status	equ	0xFD8
  6439                           pclatu	equ	0xFFB
  6440                           pclath	equ	0xFFA
  6441                           tblptru	equ	0xFF8
  6442                           tblptrh	equ	0xFF7
  6443                           tblptrl	equ	0xFF6
  6444                           tablat	equ	0xFF5
  6445                           prodh	equ	0xFF4
  6446                           prodl	equ	0xFF3
  6447                           intcon	equ	0xFF2
  6448                           intcon2	equ	0xFF1
  6449                           postinc0	equ	0xFEE
  6450                           fsr0h	equ	0xFEA
  6451                           fsr0l	equ	0xFE9
  6452                           wreg	equ	0xFE8
  6453                           postdec1	equ	0xFE5
  6454                           fsr1h	equ	0xFE2
  6455                           fsr1l	equ	0xFE1
  6456                           bsr	equ	0xFE0
  6457                           indf2	equ	0xFDF
  6458                           fsr2h	equ	0xFDA
  6459                           fsr2l	equ	0xFD9
  6460                           status	equ	0xFD8
  6461                           
  6462                           	psect	rparam
  6463  0000                     pclatu	equ	0xFFB
  6464                           pclath	equ	0xFFA
  6465                           tblptru	equ	0xFF8
  6466                           tblptrh	equ	0xFF7
  6467                           tblptrl	equ	0xFF6
  6468                           tablat	equ	0xFF5
  6469                           prodh	equ	0xFF4
  6470                           prodl	equ	0xFF3
  6471                           intcon	equ	0xFF2
  6472                           intcon2	equ	0xFF1
  6473                           postinc0	equ	0xFEE
  6474                           fsr0h	equ	0xFEA
  6475                           fsr0l	equ	0xFE9
  6476                           wreg	equ	0xFE8
  6477                           postdec1	equ	0xFE5
  6478                           fsr1h	equ	0xFE2
  6479                           fsr1l	equ	0xFE1
  6480                           bsr	equ	0xFE0
  6481                           indf2	equ	0xFDF
  6482                           fsr2h	equ	0xFDA
  6483                           fsr2l	equ	0xFD9
  6484                           status	equ	0xFD8
  6485                           
  6486                           	psect	temp
  6487  00003E                     btemp:
  6488                           	opt stack 0
  6489  00003E                     	ds	1
  6490  0000                     int$flags	set	btemp
  6491                           pclatu	equ	0xFFB
  6492                           pclath	equ	0xFFA
  6493                           tblptru	equ	0xFF8
  6494                           tblptrh	equ	0xFF7
  6495                           tblptrl	equ	0xFF6
  6496                           tablat	equ	0xFF5
  6497                           prodh	equ	0xFF4
  6498                           prodl	equ	0xFF3
  6499                           intcon	equ	0xFF2
  6500                           intcon2	equ	0xFF1
  6501                           postinc0	equ	0xFEE
  6502                           fsr0h	equ	0xFEA
  6503                           fsr0l	equ	0xFE9
  6504                           wreg	equ	0xFE8
  6505                           postdec1	equ	0xFE5
  6506                           fsr1h	equ	0xFE2
  6507                           fsr1l	equ	0xFE1
  6508                           bsr	equ	0xFE0
  6509                           indf2	equ	0xFDF
  6510                           fsr2h	equ	0xFDA
  6511                           fsr2l	equ	0xFD9
  6512                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    10
    Data        4
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      61
    BANK0           160    107     133
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    cur_number	PTR unsigned char  size(2) Largest target is 1
		 -> temp_want(BANK0[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_low in COMRAM

    _ISR_low->i1___aldiv
    _sample_inputs->_set_key_led_disp_tris

Critical Paths under _ISR_high in COMRAM

    _ISR_high->___almod

Critical Paths under _main in BANK0

    _main->_get_temp
    _get_temp->_sqrt
    _sqrt->___ftdiv
    ___ftsub->___ftadd
    ___ftadd->___ftneg
    ___ftmul->___ftadd
    ___ftge->___awtoft
    ___lwtoft->___ftpack
    ___ftneg->___ftpack
    ___ftdiv->___ftmul
    _error->_num_to_disp
    _error->_set_digit
    ___awtoft->___ftpack

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   27102
                                            102 BANK0      5     5      0
                            ___aldiv
                           ___awtoft
                             ___ftge
                              _error
                           _get_temp
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                           _setup_io
                        _setup_therm
                       _setup_timer0
                       _setup_timer1
                       _setup_timer2
 ---------------------------------------------------------------------------------
 (2) _setup_timer2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_timer1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_therm                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_io                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            18    15      3   22005
                                             84 BANK0     18    15      3
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                           ___lwtoft
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _sqrt                                                19    16      3    9158
                                             65 BANK0     19    16      3
                            ___ftdiv (ARG)
                             ___ftge
                            ___ftmul
                            ___ftneg (ARG)
                            ___ftsub
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    3988
                                             35 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    3691
                                             23 BANK0     12     6      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3561
                                             35 BANK0     15     9      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1160
                                             24 BANK0      9     3      6
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2195
                                             20 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     237
                                             20 BANK0      3     0      3
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3003
                                             50 BANK0     15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _error                                                1     1      0     493
                                             14 BANK0      1     1      0
                        _num_to_disp
                          _set_digit
 ---------------------------------------------------------------------------------
 (2) _set_digit                                            2     1      1     402
                                             12 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _num_to_disp                                          2     2      0      69
                                             12 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2584
                                             20 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2109
                                             12 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     860
                                             12 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_low                                             74    74      0    2170
                                             38 COMRAM    22    22      0
                                              0 BANK0     12    12      0
                             _buzzer
                      _sample_inputs
                           _set_LEDs
                          i1___aldiv
                        i1_set_digit
 ---------------------------------------------------------------------------------
 (7) i1_set_digit                                          2     1      1     250
                                             24 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (7) i1___aldiv                                           14     6      8     508
                                             24 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (7) _set_LEDs                                             1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _sample_inputs                                        0     0      0     154
              _set_key_led_disp_tris
 ---------------------------------------------------------------------------------
 (8) _set_key_led_disp_tris                                1     1      0     154
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _buzzer                                               1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_high                                            14    14      0     424
                                             10 COMRAM    14    14      0
                            ___almod
 ---------------------------------------------------------------------------------
 (10) ___almod                                            10     2      8     424
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
   ___awtoft
     ___ftpack
   ___ftge
     ___awtoft (ARG)
       ___ftpack
   _error
     _num_to_disp
     _set_digit
   _get_temp
     ___ftadd
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg
       ___ftpack (ARG)
     ___lwtoft
       ___ftpack
     _sqrt
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftge (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
   _setup
     _setup_io
     _setup_therm
     _setup_timer0
     _setup_timer1
     _setup_timer2

 _ISR_low (ROOT)
   _buzzer
   _sample_inputs
     _set_key_led_disp_tris
   _set_LEDs
   i1___aldiv
   i1_set_digit

 _ISR_high (ROOT)
   ___almod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6B      85       5       83.1%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     3C      3D       1       64.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C2      20        0.0%
DATA                 0      0      C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Oct 12 22:31:22 2016

                            _GO 007E11                              bsr 000FE0                    ___ftadd@exp1 0082  
                  ___ftadd@exp2 0081                    ___ftadd@sign 0080                             l307 0D5C  
                           l280 0AEE                             l274 0AAC                             l275 0AB8  
                           l278 0ABC                             l705 13A4                             l670 0B5A  
                           l647 15CC                             l727 1BE8                             l674 0B94  
                           l676 0BBC                             l685 0C92                             l694 0CBC  
                           l972 0FBE                             l973 0FAA                             _PR2 000FCB  
                           _PSA 007EAB                             wreg 000FE8                  i1___aldiv@sign 0022  
                  ___ftdiv@cntr 009B                    ___ftdiv@sign 00A0                    __CFG_WDT$OFF 000000  
                          l2011 15F2                            l2005 15D6                            l2111 11F2  
                          l2023 0B68                            l2121 1230                            l2211 1990  
                          l2115 1210                            l2051 0C22                            l2035 0BB2  
                          l2213 19AA                            l2221 1A04                            l2125 124E  
                          l2053 0C30                            l2045 0BF4                            l2029 0BA2  
                          l2215 19AE                            l2231 1940                            l2311 1362  
                          l2071 0CE6                            l2063 0C78                            l2055 0C3E  
                          l2241 197C                            l2233 194C                            l2145 170C  
                          l2081 0D34                            l2065 0C86                            l2057 0C4A  
                          l2137 1A9A                            l2411 144A                            l2219 19B6  
                          l2235 1958                            l2227 1924                            l2155 1790  
                          l2091 116A                            l2413 145A                            l2405 141C  
                          l2237 1964                            l2229 1934                            l2149 174C  
                          l2431 14E2                            l2423 14B4                            l2415 1460  
                          l2239 1970                            l2097 11A4                            l2427 14C6  
                          l2291 1302                            l2259 1026                            l2611 0AE2  
                          l2285 12C8                            l2605 0AC0                            l2607 0AC4  
                          l2551 081E                            l2609 0ACC                            l2571 097C  
                          l2547 0810                            l2557 0864                            l2399 13FE  
                          l2479 1B2A                            l2567 096C                            l2577 09C2  
                          l2589 0A40                            l1991 1560                            l1983 150E  
                          l1995 1580                            l1987 1522                            l1997 15B0  
                          l1989 1530                            l1999 15BE                            _ADIE 007CEE  
                          _ADIF 007CF6                            _ADIP 007CFE                            _ADON 007E10  
                          _CHS0 007E12                            _CHS1 007E13                            _CHS2 007E14  
                          _CHS3 007E15                            _GIEH 007F97                            _GIEL 007F96  
                          _T0IE 007F95                            _T0IF 007F92                            _T0CS 007EAD  
                          _T0IP 007F8A                            u2021 1146                            u2200 1956  
                          u2120 1922                            u2041 1180                            u2220 1962  
                          u2140 1932                            _LATB 000F8A                            u2240 196E  
                          u2160 193E                            u2260 197A                            u2180 194A  
                          u2280 1986                            u1811 0B08                            u2461 12A4  
                          u1821 0B26                            _IPEN 007E87                            u2481 12DE  
                          _SCS0 007E98                            _SCS1 007E99                            _TMR0 000FD6  
                          _TMR1 000FCE                            _TMR2 000FCC                 __end_of_ISR_low 03D0  
                          _disp 00D2                            _main 080C                            _font 0801  
                  ___ftpack@arg 006C                            _buzz 00D8                    ___ftpack@exp 006F  
                          _time 00CB                            fsr0h 000FEA                            fsr1h 000FE2  
                          fsr0l 000FE9                            fsr2h 000FDA                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                            _unit 01EA  
                          btemp 003E                            _sqrt 0F72                            pclat 000FFA  
                          prodh 000FF4                            prodl 000FF3                            start 03D0  
                 __CFG_MCLRE$ON 000000                    ___ftmul@cntr 0090                    ___param_bank 000010  
                  ___ftmul@sign 0091           _set_key_led_disp_tris 1AC4                 __end_of___aldiv 14F4  
               __end_of___almod 1906                           _ADCS0 007E00                           _ADCS1 007E01  
                         _ADCS2 007E02                           ?_main 0001                    get_temp@temp 00C3  
                         _ACQT0 007E03                           _ACQT1 007E04                           _ACQT2 007E05  
                         _ADRES 000FC3                 __end_of___ftadd 0D5A                 __end_of___ftdiv 13DA  
               __end_of___ftneg 1BF6                           ?_sqrt 00A1                 __end_of___ftmul 128E  
               __end_of___ftsub 1AC4                           _LATB0 007C50                           _LATA2 007C4A  
                         _LATB1 007C51                           _LATA3 007C4B                           _LATC0 007C58  
                         _LATB2 007C52                           _LATA4 007C4C                           _LATC1 007C59  
                         _LATA5 007C4D                           _LATC2 007C5A                           _LATB4 007C54  
                         _LATA6 007C4E                           _LATB5 007C55                           _T0PS0 007EA8  
                         _T0PS1 007EA9                           _T0PS2 007EAA                           _IRCF0 007E9C  
                         _IRCF1 007E9D                           _IRCF2 007E9E                  __CFG_DEBUG$OFF 000000  
                         _PCFG0 007E08                           _PCFG1 007E09                           _PCFG2 007E0A  
                         _PCFG3 007E0B                           _T1RUN 007E6E                           i1l330 007E  
                         i1l332 0388                           i1l337 0098                           i1l362 014A  
                         i1l338 00D2                           i1l347 00EC                           i1l380 035C  
                         i1l356 0134                           i1l379 034C                           i2l326 181E  
                         _PORTB 000F81                           _TRISB 000F93                   __CFG_PWRT$OFF 000000  
                         _nRBPU 007F8F                __end_of_ISR_high 185A                   ___awtoft@sign 0077  
                         _blink 00D7                           _errno 00D4                           _error 1B8E  
                 ___ftpack@sign 0070                           _timer 01EB                           _setup 1C20  
                         _state 00DF                  __pbitbssCOMRAM 01E8                           tablat 000FF5  
                   i1_set_digit 1A0A                           sqrt@a 00A1                           sqrt@i 00AD  
                         sqrt@q 00AE                           sqrt@x 00B1                           sqrt@z 00AA  
                         status 000FD8              __size_ofi1___aldiv 00CC                  __CFG_PBADEN$ON 000000  
               __initialization 1B52                    __end_of_main 0AF2                    __end_of_font 080B  
                  __end_of_sqrt 1130           __end_of_sample_inputs 1D08                          ??_main 00C6  
                        ??_sqrt 00A4                   __activetblptr 000002                       ??_ISR_low 0027  
               _climate_control 00E3                          ?_error 0001                  buzzer@duration 0019  
                        _T08BIT 007EAE                          ?_setup 0001                __end_of___awtoft 1B52  
              __end_of___ftpack 1600                          _T1RD16 007E6F                          i1l2521 1656  
                        i1l2523 1662                          i1l2515 1634                          i1l2541 16BA  
                        i1l2533 1696                          i1l2525 1666                          i1l2509 161C  
                        i1l2703 015C                          i1l2537 16A4                          i1l2713 019A  
                        i1l2641 0082                          i1l2491 1A44                          i1l2715 01A4  
                        i1l2493 1A4E                          i1l2485 1A24                          i1l2741 0328  
                        i1l2725 0250                          i1l2709 0174                          i1l2661 00C4  
                        i1l2495 1A58                          i1l2487 1A30                          i1l2727 025A  
                        i1l2743 032E                          i1l2497 1A62                          i1l2489 1A3A  
                        i1l2737 0312                          i1l1961 0270                          i1l2681 0104  
                        i1l2753 036C                          i1l2499 1A6C                          i1l2689 011C  
                        i2l2451 189C                          i2l2443 1876                          i2l2453 18A8  
                        i2l2455 18AC                          i2l2463 18DE                          i2l2447 188A  
                        i2l2467 18F4                          i2l2459 18D0                          _INTSRC 007CDF  
              __end_of___lwtoft 1C20                          _TMR0IE 007F95                          _TMR0IF 007F92  
                        _TMR1IE 007CE8                          _TMR1IF 007CF0                          _TMR1CS 007E69  
                        _TMR2IE 007CE9                          _TMR2IF 007CF1                          _TMR1IP 007CF8  
                        _TMR2IP 007CF9                          _TMR0ON 007EAF                          _TMR1ON 007E68  
                        _TMR2ON 007E52                          _TRISA0 007C90                          _TRISB0 007C98  
                        _TRISA2 007C92                          _TRISB1 007C99                          _TRISA3 007C93  
                        _TRISC0 007CA0                          _TRISB2 007C9A                          _TRISA4 007C94  
                        _TRISC1 007CA1                          _TRISB3 007C9B                          _TRISA5 007C95  
                        _TRISC2 007CA2                          _TRISB4 007C9C                          _TRISA6 007C96  
                        _TRISB5 007C9D                __end_of_get_temp 0F72                          ___ftge 16CC  
                     ??___aldiv 0074          ?_set_key_led_disp_tris 0001                       ??___almod 0009  
                     ??___ftadd 007D                       ??___ftdiv 0098                       ??___ftneg 0077  
                     ??___ftmul 0089                       ??___ftsub 0089                          _buzzer 1D08  
                        clear_0 1B78                __end_of_set_LEDs 1CF6               __end_ofi1___aldiv 16CC  
         ___ftmul@f3_as_product 008D                    ?_num_to_disp 0001                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                __end_of_setup_io 1CE4  
                        tblptru 000FF8                          sqrt@og 00A7                    ?_setup_therm 0001  
                    __accesstop 0060         __end_of__initialization 1B80                      ___ftadd@f1 0077  
                    ___ftadd@f2 007A                      ___ftge@ff1 0078                      ___ftge@ff2 007B  
                 ___rparam_used 000001                      ___ftdiv@f1 0092                      ___ftdiv@f2 0095  
                    ___ftdiv@f3 009C                      ___ftneg@f1 0074                      ___awtoft@c 0074  
                    ___ftmul@f1 0083                      ___ftmul@f2 0086                      ___ftsub@f1 0083  
                    ___ftsub@f2 0086                  __pcstackCOMRAM 0001                    __pidataBANK0 1D12  
                     ?_ISR_high 0001                   __end_of_error 1BC6                   __end_of_setup 1C48  
                    ___lwtoft@c 0074                         ??_error 006E               i1___aldiv@divisor 001D  
                       ??_setup 006C               i1___aldiv@counter 0021                      __pbssBANK0 00CB  
                       ?___ftge 0078                      ??_ISR_high 000B                         ?_buzzer 0001  
                     ?___awtoft 0074                       ?___ftpack 006C              __size_of_set_digit 0084  
                       _T1CKPS0 007E6C                         _T1CKPS1 007E6D                         _T2CKPS0 007E50  
                       _T2CKPS1 007E51                       ?___lwtoft 0074        set_key_led_disp_tris@dir 0019  
                       _ISR_low 0018                       ?_get_temp 00B4                    ?i1_set_digit 0019  
                     ?_set_LEDs 0001                         __Hparam 0000                         __Lparam 0000  
                    _cur_number 00E1                         ___aldiv 13DA                       ?_setup_io 0001  
                       ___almod 185A                 __size_of___ftge 00C8                         ___ftadd 0AF2  
                       ___ftdiv 128E                         ___ftneg 1BC6                         ___ftmul 1130  
                       ___ftsub 1A78                    __psmallconst 0800                         __pcinit 1B52  
                    ??___awtoft 0077                      ??___ftpack 0071                 __size_of_buzzer 000A  
                       __ramtop 0800                         __ptext0 080C                         __ptext1 1C20  
                       __ptext2 1C70                         __ptext3 1C8E                         __ptext4 1CAC  
                       __ptext5 1C48                         __ptext6 1CCA                         __ptext7 0D5A  
                       __ptext8 0F72                         __ptext9 1A78                      ??___lwtoft 0077  
                    _night_hour 00DD                      _night_temp 00DE                ___aldiv@dividend 006C  
          __size_of_num_to_disp 0080                      ??_get_temp 00B7                  __pintcode_body 1794  
          end_of_initialization 1B80               __end_of_set_digit 198A                   __Lmediumconst 0000  
                       int_func 1794            __size_of_setup_therm 0028                      ??_set_LEDs 0019  
       ??_set_key_led_disp_tris 0019                    _get_temp$805 00BA                    _get_temp$806 00BD  
              ___aldiv@quotient 0076                         postdec1 000FE5                      ??_setup_io 006C  
                       postinc0 000FEE                   ?_setup_timer0 0001                   ?_setup_timer1 0001  
                 ?_setup_timer2 0001                       i1___aldiv 1600          __size_of_sample_inputs 0012  
                   ___ftdiv@exp 009F              get_temp@resistance 00B7                     ___ftmul@exp 008C  
                __end_of___ftge 1794               __size_of_ISR_high 1852                  __end_of_buzzer 1D12  
                ??_setup_timer0 006C                  ??_setup_timer1 006C                  ??_setup_timer2 006C  
           start_initialization 1B52                      ?i1___aldiv 0019            __size_ofi1_set_digit 006E  
                      ??___ftge 007E                     __pdataBANK0 00E1                __CFG_LPT1OSC$OFF 000000  
            i1___aldiv@dividend 0019                        ??_buzzer 0019                   _sample_inputs 1CF6  
                  set_LEDs@mask 0019               __size_of___awtoft 0044               __size_of___ftpack 010C  
             __size_of___lwtoft 002A                   __pcstackBANK0 0060                        ?_ISR_low 0001  
              ISR_low@mask_leds 0065               __size_of_get_temp 0218              i1___aldiv@quotient 0023  
                   _fan_timeout 00DB               __size_of_set_LEDs 0012                       __pintcode 0008  
                      ?___aldiv 006C                        ?___almod 0001                        ?___ftadd 0077  
                      ?___ftdiv 0092                        ?___ftneg 0074                        ?___ftmul 0083  
                     _heat_mode 00E4                        ?___ftsub 0083                  ?_sample_inputs 0001  
                   __pintcodelo 0018               __size_of_setup_io 001A                ___almod@dividend 0001  
                   __smallconst 0800                 get_temp@voltage 00C0                     ??i1___aldiv 0021  
                __size_of_error 0038                  __size_of_setup 0028                      ISR_low@cur 0064  
                    ISR_low@ins 006B                 ___aldiv@divisor 0070                        _T2OUTPS0 007E53  
                      _T2OUTPS1 007E54                        _T2OUTPS2 007E55                        _T2OUTPS3 007E56  
               ___aldiv@counter 0074                        i1u240_20 1AF6                        i1u232_20 1ACE  
                      i1u241_25 1AF8                        i1u233_25 1AD0                        i1u242_20 1B00  
                      i1u234_20 1AD8                        i1u243_25 1B02                        i1u235_25 1ADA  
                      i1u244_20 1B0A                        i1u236_20 1AE2                        i1u237_25 1AE4  
                      i1u238_20 1AEC                        i1u270_20 1A38                        i1u239_25 1AEE  
                      i1u280_20 1A6A                        i1u272_20 1A42                        i1u328_20 0132  
                      i1u282_20 1A74                        i1u274_20 1A4C                        i1u266_20 1A22  
                      i1u276_20 1A56                        i1u268_20 1A2E                        i1u278_20 1A60  
          __end_of_setup_timer0 1CCA            __end_of_setup_timer1 1CAC            __end_of_setup_timer2 1C8E  
                     _set_digit 1906  __size_of_set_key_led_disp_tris 004A   __end_of_set_key_led_disp_tris 1B0E  
                     _temp_want 00E0                        _ISR_high 0008                       _timer_led 01E9  
                     _power_led 01E8                   ??_num_to_disp 006C                       copy_data0 1B66  
              __size_of_ISR_low 03B8                   ??_setup_therm 006C                        __Hrparam 0000  
                    ?_set_digit 006C                       error@code 006E                        __Lrparam 0000  
               ??_sample_inputs 001A                __size_of___aldiv 011A                __size_of___almod 00AC  
              __size_of___ftadd 0268                __size_of___ftdiv 014C                __size_of___ftneg 0030  
              __size_of___ftmul 015E                __size_of___ftsub 004C                        ___awtoft 1B0E  
                      ___ftpack 14F4           __CFG_FOSC$INTOSCIO_EC 000000                        ___lwtoft 1BF6  
               ISR_low@ins_prev 00D6                        _day_hour 00D9                        _day_temp 00DA  
                  set_digit@dig 006D                        __ptext10 0AF2                        __ptext11 1130  
                      __ptext20 14F4                        __ptext12 16CC                        __ptext21 13DA  
                      __ptext13 1BF6                        __ptext30 185A                        __ptext14 1BC6  
                      __ptext23 1A0A                        __ptext15 128E                        __ptext24 1600  
                      __ptext16 1B8E                        __ptext25 1CE4                        __ptext17 1906  
                  set_digit@num 006C                        __ptext26 1CF6                        __ptext18 198A  
                      __ptext27 1AC4                        __ptext19 1B0E                        __ptext28 1D08  
                      _heat_cur 00DC                        _get_temp 0D5A                 ___almod@divisor 0005  
               ___almod@counter 0009             __end_of_num_to_disp 1A0A                   __size_of_main 02E6  
                 __size_of_sqrt 01BE                        _set_LEDs 1CE4             __end_of_setup_therm 1C70  
                      _temp_cur 00CF                        _setup_io 1CCA                        int$flags 003E  
                i1set_digit@dig 001A                  i1set_digit@num 0019                        intlevel1 0000  
                      intlevel2 0000                   ??i1_set_digit 001A           __size_of_setup_timer0 001E  
         __size_of_setup_timer1 001E           __size_of_setup_timer2 001E                     _ISR_low$240 0066  
                   _ISR_low$235 0067                     _ISR_low$237 0069                     _ISR_low$238 0060  
                   _ISR_low$239 0062                     ??_set_digit 006D                     _num_to_disp 198A  
                  ___aldiv@sign 0075                    _setup_timer0 1CAC                    _setup_timer1 1C8E  
                  _setup_timer2 1C70                  num_to_disp@ret 006C                  num_to_disp@num 006D  
                  ___almod@sign 000A                     _setup_therm 1C48             __end_ofi1_set_digit 1A78  
