

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Nov 10 08:16:43 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66  0000                     
    67                           	psect	idataCOMRAM
    68  0025C8                     __pidataCOMRAM:
    69                           	opt stack 0
    70                           
    71                           ;initializer for _cur_number
    72  0025C8  E7                 	db	low _temp_want
    73  0025C9  00                 	db	high _temp_want
    74                           
    75                           	psect	idataBANK0
    76  0025CA                     __pidataBANK0:
    77                           	opt stack 0
    78                           
    79                           ;initializer for _climate_control
    80  0025CA  02                 	db	2
    81                           
    82                           ;initializer for _heat_mode
    83  0025CB  03                 	db	3
    84                           
    85                           	psect	smallconst
    86  000800                     __psmallconst:
    87                           	opt stack 0
    88  000800  00                 	db	0
    89  000801                     _font:
    90                           	opt stack 0
    91  000801  3F                 	db	63
    92  000802  06                 	db	6
    93  000803  5B                 	db	91
    94  000804  4F                 	db	79
    95  000805  66                 	db	102
    96  000806  6D                 	db	109
    97  000807  7D                 	db	125
    98  000808  07                 	db	7
    99  000809  7F                 	db	127
   100  00080A  67                 	db	103
   101  00080B                     __end_of_font:
   102                           	opt stack 0
   103  00080B                     log@coeff:
   104                           	opt stack 0
   105  00080B  00                 	db	0
   106  00080C  00                 	db	0
   107  00080D  00                 	db	0
   108  00080E  00                 	db	0
   109  00080F  80                 	db	128
   110  000810  3F                 	db	63
   111  000811  F0                 	db	240
   112  000812  FF                 	db	255
   113  000813  BE                 	db	190
   114  000814  E2                 	db	226
   115  000815  A9                 	db	169
   116  000816  3E                 	db	62
   117  000817  83                 	db	131
   118  000818  76                 	db	118
   119  000819  BE                 	db	190
   120  00081A  AE                 	db	174
   121  00081B  2B                 	db	43
   122  00081C  3E                 	db	62
   123  00081D  3C                 	db	60
   124  00081E  C3                 	db	195
   125  00081F  BD                 	db	189
   126  000820  D2                 	db	210
   127  000821  13                 	db	19
   128  000822  3D                 	db	61
   129  000823  78                 	db	120
   130  000824  D3                 	db	211
   131  000825  BB                 	db	187
   132  000826                     __end_oflog@coeff:
   133                           	opt stack 0
   134  000826  00                 	db	0	; dummy byte at the end
   135  0000                     
   136                           	psect	nvBANK0
   137  0000E3                     __pnvBANK0:
   138                           	opt stack 0
   139  0000E3                     _time:
   140                           	opt stack 0
   141  0000E3                     	ds	4
   142  0000E7                     _temp_want:
   143                           	opt stack 0
   144  0000E7                     	ds	1
   145  0000                     _ADRES	set	4035
   146  0000                     _TMR0	set	4054
   147  0000                     _TMR1	set	4046
   148  0000                     _EEADR	set	4009
   149  0000                     _EECON2	set	4007
   150  0000                     _EEDATA	set	4008
   151  0000                     _PORTBbits	set	3969
   152  0000                     _PR2	set	4043
   153  0000                     _TMR2	set	4044
   154  0000                     _ACQT0	set	32259
   155  0000                     _ACQT1	set	32260
   156  0000                     _ACQT2	set	32261
   157  0000                     _ADCS0	set	32256
   158  0000                     _ADCS1	set	32257
   159  0000                     _ADCS2	set	32258
   160  0000                     _ADIE	set	31982
   161  0000                     _ADIF	set	31990
   162  0000                     _ADIP	set	31998
   163  0000                     _ADON	set	32272
   164  0000                     _CCP1IE	set	31978
   165  0000                     _CCP1IF	set	31986
   166  0000                     _CCP1IP	set	31994
   167  0000                     _CFGS	set	32054
   168  0000                     _CHS0	set	32274
   169  0000                     _CHS1	set	32275
   170  0000                     _CHS2	set	32276
   171  0000                     _CHS3	set	32277
   172  0000                     _EEIE	set	32004
   173  0000                     _EEIF	set	32012
   174  0000                     _EEIP	set	32020
   175  0000                     _EEPGD	set	32055
   176  0000                     _FREE	set	32052
   177  0000                     _GIE	set	32663
   178  0000                     _GIEH	set	32663
   179  0000                     _GIEL	set	32662
   180  0000                     _GO	set	32273
   181  0000                     _INTSRC	set	31967
   182  0000                     _IPEN	set	32391
   183  0000                     _IRCF0	set	32412
   184  0000                     _IRCF1	set	32413
   185  0000                     _IRCF2	set	32414
   186  0000                     _LATA2	set	31818
   187  0000                     _LATA3	set	31819
   188  0000                     _LATA4	set	31820
   189  0000                     _LATA5	set	31821
   190  0000                     _LATA6	set	31822
   191  0000                     _LATB0	set	31824
   192  0000                     _LATB1	set	31825
   193  0000                     _LATB2	set	31826
   194  0000                     _LATB3	set	31827
   195  0000                     _LATB4	set	31828
   196  0000                     _LATB5	set	31829
   197  0000                     _LATC0	set	31832
   198  0000                     _LATC1	set	31833
   199  0000                     _LATC2	set	31834
   200  0000                     _PCFG0	set	32264
   201  0000                     _PCFG1	set	32265
   202  0000                     _PCFG2	set	32266
   203  0000                     _PCFG3	set	32267
   204  0000                     _PSA	set	32427
   205  0000                     _RD	set	32048
   206  0000                     _SCS0	set	32408
   207  0000                     _SCS1	set	32409
   208  0000                     _SWDTEN	set	32392
   209  0000                     _T08BIT	set	32430
   210  0000                     _T0CS	set	32429
   211  0000                     _T0IE	set	32661
   212  0000                     _T0IF	set	32658
   213  0000                     _T0IP	set	32650
   214  0000                     _T0PS0	set	32424
   215  0000                     _T0PS1	set	32425
   216  0000                     _T0PS2	set	32426
   217  0000                     _T1CKPS0	set	32364
   218  0000                     _T1CKPS1	set	32365
   219  0000                     _T1RD16	set	32367
   220  0000                     _T1RUN	set	32366
   221  0000                     _T2CKPS0	set	32336
   222  0000                     _T2CKPS1	set	32337
   223  0000                     _T2OUTPS0	set	32339
   224  0000                     _T2OUTPS1	set	32340
   225  0000                     _T2OUTPS2	set	32341
   226  0000                     _T2OUTPS3	set	32342
   227  0000                     _TMR0IE	set	32661
   228  0000                     _TMR0IF	set	32658
   229  0000                     _TMR0ON	set	32431
   230  0000                     _TMR1CS	set	32361
   231  0000                     _TMR1IE	set	31976
   232  0000                     _TMR1IF	set	31984
   233  0000                     _TMR1IP	set	31992
   234  0000                     _TMR1ON	set	32360
   235  0000                     _TMR2IE	set	31977
   236  0000                     _TMR2IF	set	31985
   237  0000                     _TMR2IP	set	31993
   238  0000                     _TMR2ON	set	32338
   239  0000                     _TMR3IF	set	32009
   240  0000                     _TMR3IP	set	32017
   241  0000                     _TMR3ON	set	32136
   242  0000                     _TRISA0	set	31888
   243  0000                     _TRISA2	set	31890
   244  0000                     _TRISA3	set	31891
   245  0000                     _TRISA4	set	31892
   246  0000                     _TRISA5	set	31893
   247  0000                     _TRISA6	set	31894
   248  0000                     _TRISB0	set	31896
   249  0000                     _TRISB1	set	31897
   250  0000                     _TRISB2	set	31898
   251  0000                     _TRISB3	set	31899
   252  0000                     _TRISB4	set	31900
   253  0000                     _TRISB5	set	31901
   254  0000                     _TRISC0	set	31904
   255  0000                     _TRISC1	set	31905
   256  0000                     _TRISC2	set	31906
   257  0000                     _WR	set	32049
   258  0000                     _WREN	set	32050
   259  0000                     _WRERR	set	32051
   260  0000                     _nRBPU	set	32655
   261                           
   262                           ; #config settings
   263  0000                     
   264                           	psect	cinit
   265  0022A2                     __pcinit:
   266                           	opt stack 0
   267  0022A2                     start_initialization:
   268                           	opt stack 0
   269  0022A2                     __initialization:
   270                           	opt stack 0
   271                           
   272                           ; Initialize objects allocated to BANK0 (2 bytes)
   273                           ; load TBLPTR registers with __pidataBANK0
   274  0022A2  0ECA               	movlw	low __pidataBANK0
   275  0022A4  6EF6               	movwf	tblptrl,c
   276  0022A6  0E25               	movlw	high __pidataBANK0
   277  0022A8  6EF7               	movwf	tblptrh,c
   278  0022AA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   279  0022AC  6EF8               	movwf	tblptru,c
   280  0022AE  0009               	tblrd		*+	;fetch initializer
   281  0022B0  CFF5 F0E8          	movff	tablat,__pdataBANK0
   282  0022B4  0009               	tblrd		*+	;fetch initializer
   283  0022B6  CFF5 F0E9          	movff	tablat,__pdataBANK0+1
   284                           
   285                           ; Initialize objects allocated to COMRAM (2 bytes)
   286                           ; load TBLPTR registers with __pidataCOMRAM
   287  0022BA  0EC8               	movlw	low __pidataCOMRAM
   288  0022BC  6EF6               	movwf	tblptrl,c
   289  0022BE  0E25               	movlw	high __pidataCOMRAM
   290  0022C0  6EF7               	movwf	tblptrh,c
   291  0022C2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   292  0022C4  6EF8               	movwf	tblptru,c
   293  0022C6  0009               	tblrd		*+	;fetch initializer
   294  0022C8  CFF5 F03B          	movff	tablat,__pdataCOMRAM
   295  0022CC  0009               	tblrd		*+	;fetch initializer
   296  0022CE  CFF5 F03C          	movff	tablat,__pdataCOMRAM+1
   297                           
   298                           ; Clear objects allocated to BANK0 (15 bytes)
   299  0022D2  EE00  F0D4         	lfsr	0,__pbssBANK0
   300  0022D6  0E0F               	movlw	15
   301  0022D8                     clear_0:
   302  0022D8  6AEE               	clrf	postinc0,c
   303  0022DA  06E8               	decf	wreg,f,c
   304  0022DC  E1FD               	bnz	clear_0
   305                           
   306                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   307  0022DE  6A37               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   308                           
   309                           ; Clear objects allocated to COMRAM (3 bytes)
   310  0022E0  6A3A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   311  0022E2  6A39               	clrf	(__pbssCOMRAM+1)& (0+255),c
   312  0022E4  6A38               	clrf	__pbssCOMRAM& (0+255),c
   313  0022E6                     end_of_initialization:
   314                           	opt stack 0
   315  0022E6                     __end_of__initialization:
   316                           	opt stack 0
   317  0022E6  903D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   318  0022E8  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   319  0022EA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   320  0022EC  6EF8               	movwf	tblptru,c
   321  0022EE  0100               	movlb	0
   322  0022F0  EF14  F004         	goto	_main	;jump to C main() function
   323                           tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           
   330                           	psect	bitbssCOMRAM
   331  0001B8                     __pbitbssCOMRAM:
   332                           	opt stack 0
   333  0001B8                     _power_led:
   334                           	opt stack 0
   335  0001B8                     	ds	1
   336  0001B9                     _timer_led:
   337                           	opt stack 0
   338  0001B9                     	ds	1
   339  0001BA                     _timer:
   340                           	opt stack 0
   341  0001BA                     	ds	1
   342  0001BB                     _unit:
   343                           	opt stack 0
   344  0001BB                     	ds	1
   345                           tblptru	equ	0xFF8
   346                           tblptrh	equ	0xFF7
   347                           tblptrl	equ	0xFF6
   348                           tablat	equ	0xFF5
   349                           postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           
   352                           	psect	bssCOMRAM
   353  000038                     __pbssCOMRAM:
   354                           	opt stack 0
   355  000038                     ISR_low@cur:
   356                           	opt stack 0
   357  000038                     	ds	1
   358  000039                     ISR_low@ins_prev:
   359                           	opt stack 0
   360  000039                     	ds	1
   361  00003A                     _buzz:
   362                           	opt stack 0
   363  00003A                     	ds	1
   364                           tblptru	equ	0xFF8
   365                           tblptrh	equ	0xFF7
   366                           tblptrl	equ	0xFF6
   367                           tablat	equ	0xFF5
   368                           postinc0	equ	0xFEE
   369                           wreg	equ	0xFE8
   370                           
   371                           	psect	dataCOMRAM
   372  00003B                     __pdataCOMRAM:
   373                           	opt stack 0
   374  00003B                     _cur_number:
   375                           	opt stack 0
   376  00003B                     	ds	2
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           postinc0	equ	0xFEE
   382                           wreg	equ	0xFE8
   383                           
   384                           	psect	bssBANK0
   385  0000D4                     __pbssBANK0:
   386                           	opt stack 0
   387  0000D4                     _temp_cur:
   388                           	opt stack 0
   389  0000D4                     	ds	3
   390  0000D7                     _disp:
   391                           	opt stack 0
   392  0000D7                     	ds	2
   393  0000D9                     _errno:
   394                           	opt stack 0
   395  0000D9                     	ds	2
   396  0000DB                     _blink:
   397                           	opt stack 0
   398  0000DB                     	ds	1
   399  0000DC                     _day_hour:
   400                           	opt stack 0
   401  0000DC                     	ds	1
   402  0000DD                     _day_temp:
   403                           	opt stack 0
   404  0000DD                     	ds	1
   405  0000DE                     _fan_timeout:
   406                           	opt stack 0
   407  0000DE                     	ds	1
   408  0000DF                     _heat_cur:
   409                           	opt stack 0
   410  0000DF                     	ds	1
   411  0000E0                     _night_hour:
   412                           	opt stack 0
   413  0000E0                     	ds	1
   414  0000E1                     _night_temp:
   415                           	opt stack 0
   416  0000E1                     	ds	1
   417  0000E2                     _state:
   418                           	opt stack 0
   419  0000E2                     	ds	1
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           
   427                           	psect	dataBANK0
   428  0000E8                     __pdataBANK0:
   429                           	opt stack 0
   430  0000E8                     _climate_control:
   431                           	opt stack 0
   432  0000E8                     	ds	1
   433  0000E9                     _heat_mode:
   434                           	opt stack 0
   435  0000E9                     	ds	1
   436                           tblptru	equ	0xFF8
   437                           tblptrh	equ	0xFF7
   438                           tblptrl	equ	0xFF6
   439                           tablat	equ	0xFF5
   440                           postinc0	equ	0xFEE
   441                           wreg	equ	0xFE8
   442                           
   443                           	psect	cstackBANK0
   444  000060                     __pcstackBANK0:
   445                           	opt stack 0
   446  000060                     ??_ISR_low:
   447                           
   448                           ; 1 bytes @ 0x0
   449  000060                     	ds	22
   450  000076                     ??_setup_timer1:
   451  000076                     ?___wmul:
   452                           	opt stack 0
   453  000076                     ?___awdiv:
   454                           	opt stack 0
   455  000076                     ?___ftpack:
   456                           	opt stack 0
   457  000076                     ?_frexp:
   458                           	opt stack 0
   459  000076                     ?___ftneg:
   460                           	opt stack 0
   461  000076                     ?___aldiv:
   462                           	opt stack 0
   463  000076                     set_key_led_disp_tris@dir:
   464                           	opt stack 0
   465  000076                     ee_write_byte@data:
   466                           	opt stack 0
   467  000076                     ee_read_byte@addr:
   468                           	opt stack 0
   469  000076                     num_to_disp@ret:
   470                           	opt stack 0
   471  000076                     ___wmul@multiplier:
   472                           	opt stack 0
   473  000076                     ___awdiv@dividend:
   474                           	opt stack 0
   475  000076                     ___ftpack@arg:
   476                           	opt stack 0
   477  000076                     ___ftneg@f1:
   478                           	opt stack 0
   479  000076                     frexp@value:
   480                           	opt stack 0
   481  000076                     ___aldiv@dividend:
   482                           	opt stack 0
   483                           
   484                           ; 4 bytes @ 0x16
   485  000076                     	ds	1
   486  000077                     ??_ee_read_state:
   487  000077                     ee_write_byte@addr:
   488                           	opt stack 0
   489  000077                     num_to_disp@num:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x17
   493  000077                     	ds	1
   494  000078                     setup_timer1@tmp:
   495                           	opt stack 0
   496  000078                     _ee_read_state$346:
   497                           	opt stack 0
   498  000078                     ___wmul@multiplicand:
   499                           	opt stack 0
   500  000078                     ___awdiv@divisor:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x18
   504  000078                     	ds	1
   505  000079                     ___ftpack@exp:
   506                           	opt stack 0
   507  000079                     frexp@eptr:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x19
   511  000079                     	ds	1
   512  00007A                     ___awdiv@counter:
   513                           	opt stack 0
   514  00007A                     ___ftpack@sign:
   515                           	opt stack 0
   516  00007A                     _ee_read_state$347:
   517                           	opt stack 0
   518  00007A                     ___wmul@product:
   519                           	opt stack 0
   520  00007A                     ___aldiv@divisor:
   521                           	opt stack 0
   522                           
   523                           ; 4 bytes @ 0x1A
   524  00007A                     	ds	1
   525  00007B                     ??___ftpack:
   526  00007B                     ??_frexp:
   527  00007B                     ___awdiv@sign:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0x1B
   531  00007B                     	ds	1
   532  00007C                     _ee_read_state$348:
   533                           	opt stack 0
   534  00007C                     ___awdiv@quotient:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x1C
   538  00007C                     	ds	2
   539  00007E                     ?___awtoft:
   540                           	opt stack 0
   541  00007E                     ?___lwtoft:
   542                           	opt stack 0
   543  00007E                     set_LEDs@mask:
   544                           	opt stack 0
   545  00007E                     set_digit@dig:
   546                           	opt stack 0
   547  00007E                     ___aldiv@counter:
   548                           	opt stack 0
   549  00007E                     _ee_read_state$350:
   550                           	opt stack 0
   551  00007E                     ___awtoft@c:
   552                           	opt stack 0
   553  00007E                     ___lwtoft@c:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x1E
   557  00007E                     	ds	1
   558  00007F                     ??_error:
   559  00007F                     ___aldiv@sign:
   560                           	opt stack 0
   561                           
   562                           ; 1 bytes @ 0x1F
   563  00007F                     	ds	1
   564  000080                     error@code:
   565                           	opt stack 0
   566  000080                     _ee_read_state$351:
   567                           	opt stack 0
   568  000080                     ___aldiv@quotient:
   569                           	opt stack 0
   570                           
   571                           ; 4 bytes @ 0x20
   572  000080                     	ds	1
   573  000081                     ___awtoft@sign:
   574                           	opt stack 0
   575  000081                     error@i:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x21
   579  000081                     	ds	1
   580  000082                     ?___ftadd:
   581                           	opt stack 0
   582  000082                     ee_read_state@mode:
   583                           	opt stack 0
   584  000082                     ___ftadd@f1:
   585                           	opt stack 0
   586  000082                     ___ftge@ff1:
   587                           	opt stack 0
   588                           
   589                           ; 3 bytes @ 0x22
   590  000082                     	ds	3
   591  000085                     ___ftadd@f2:
   592                           	opt stack 0
   593  000085                     ___ftge@ff2:
   594                           	opt stack 0
   595                           
   596                           ; 3 bytes @ 0x25
   597  000085                     	ds	3
   598  000088                     ??___ftadd:
   599  000088                     ??___ftge:
   600                           
   601                           ; 1 bytes @ 0x28
   602  000088                     	ds	3
   603  00008B                     ___ftadd@sign:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x2B
   607  00008B                     	ds	1
   608  00008C                     ___ftadd@exp2:
   609                           	opt stack 0
   610                           
   611                           ; 1 bytes @ 0x2C
   612  00008C                     	ds	1
   613  00008D                     ___ftadd@exp1:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x2D
   617  00008D                     	ds	1
   618  00008E                     ?___ftmul:
   619                           	opt stack 0
   620  00008E                     ___ftmul@f1:
   621                           	opt stack 0
   622                           
   623                           ; 3 bytes @ 0x2E
   624  00008E                     	ds	3
   625  000091                     ___ftmul@f2:
   626                           	opt stack 0
   627                           
   628                           ; 3 bytes @ 0x31
   629  000091                     	ds	3
   630  000094                     ??___ftmul:
   631                           
   632                           ; 1 bytes @ 0x34
   633  000094                     	ds	3
   634  000097                     ___ftmul@exp:
   635                           	opt stack 0
   636                           
   637                           ; 1 bytes @ 0x37
   638  000097                     	ds	1
   639  000098                     ___ftmul@f3_as_product:
   640                           	opt stack 0
   641                           
   642                           ; 3 bytes @ 0x38
   643  000098                     	ds	3
   644  00009B                     ___ftmul@cntr:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0x3B
   648  00009B                     	ds	1
   649  00009C                     ___ftmul@sign:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x3C
   653  00009C                     	ds	1
   654  00009D                     ?_eval_poly:
   655                           	opt stack 0
   656  00009D                     eval_poly@x:
   657                           	opt stack 0
   658                           
   659                           ; 3 bytes @ 0x3D
   660  00009D                     	ds	3
   661  0000A0                     eval_poly@d:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x40
   665  0000A0                     	ds	2
   666  0000A2                     eval_poly@n:
   667                           	opt stack 0
   668                           
   669                           ; 2 bytes @ 0x42
   670  0000A2                     	ds	2
   671  0000A4                     ??_eval_poly:
   672                           
   673                           ; 1 bytes @ 0x44
   674  0000A4                     	ds	2
   675  0000A6                     eval_poly@res:
   676                           	opt stack 0
   677                           
   678                           ; 3 bytes @ 0x46
   679  0000A6                     	ds	3
   680  0000A9                     ?_log:
   681                           	opt stack 0
   682  0000A9                     log@x:
   683                           	opt stack 0
   684                           
   685                           ; 3 bytes @ 0x49
   686  0000A9                     	ds	3
   687  0000AC                     log@exponent:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x4C
   691  0000AC                     	ds	2
   692  0000AE                     ?___ftdiv:
   693                           	opt stack 0
   694  0000AE                     ___ftdiv@f1:
   695                           	opt stack 0
   696                           
   697                           ; 3 bytes @ 0x4E
   698  0000AE                     	ds	3
   699  0000B1                     ___ftdiv@f2:
   700                           	opt stack 0
   701                           
   702                           ; 3 bytes @ 0x51
   703  0000B1                     	ds	3
   704  0000B4                     ??___ftdiv:
   705                           
   706                           ; 1 bytes @ 0x54
   707  0000B4                     	ds	3
   708  0000B7                     ___ftdiv@cntr:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x57
   712  0000B7                     	ds	1
   713  0000B8                     ___ftdiv@f3:
   714                           	opt stack 0
   715                           
   716                           ; 3 bytes @ 0x58
   717  0000B8                     	ds	3
   718  0000BB                     ___ftdiv@exp:
   719                           	opt stack 0
   720                           
   721                           ; 1 bytes @ 0x5B
   722  0000BB                     	ds	1
   723  0000BC                     ___ftdiv@sign:
   724                           	opt stack 0
   725                           
   726                           ; 1 bytes @ 0x5C
   727  0000BC                     	ds	1
   728  0000BD                     ?_get_temp:
   729                           	opt stack 0
   730                           
   731                           ; 3 bytes @ 0x5D
   732  0000BD                     	ds	3
   733  0000C0                     get_temp@temp:
   734                           	opt stack 0
   735                           
   736                           ; 3 bytes @ 0x60
   737  0000C0                     	ds	3
   738  0000C3                     _get_temp$980:
   739                           	opt stack 0
   740                           
   741                           ; 3 bytes @ 0x63
   742  0000C3                     	ds	3
   743  0000C6                     _get_temp$981:
   744                           	opt stack 0
   745                           
   746                           ; 3 bytes @ 0x66
   747  0000C6                     	ds	3
   748  0000C9                     get_temp@voltage:
   749                           	opt stack 0
   750                           
   751                           ; 3 bytes @ 0x69
   752  0000C9                     	ds	3
   753  0000CC                     get_temp@resistance:
   754                           	opt stack 0
   755                           
   756                           ; 3 bytes @ 0x6C
   757  0000CC                     	ds	3
   758  0000CF                     ??_main:
   759                           
   760                           ; 1 bytes @ 0x6F
   761  0000CF                     	ds	5
   762                           tblptru	equ	0xFF8
   763                           tblptrh	equ	0xFF7
   764                           tblptrl	equ	0xFF6
   765                           tablat	equ	0xFF5
   766                           postinc0	equ	0xFEE
   767                           wreg	equ	0xFE8
   768                           
   769                           	psect	cstackCOMRAM
   770  000001                     __pcstackCOMRAM:
   771                           	opt stack 0
   772  000001                     ?___almod:
   773                           	opt stack 0
   774  000001                     i2ee_write_byte@data:
   775                           	opt stack 0
   776  000001                     ___almod@dividend:
   777                           	opt stack 0
   778                           
   779                           ; 4 bytes @ 0x0
   780  000001                     	ds	1
   781  000002                     i2ee_write_byte@addr:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x1
   785  000002                     	ds	3
   786  000005                     ___almod@divisor:
   787                           	opt stack 0
   788                           
   789                           ; 4 bytes @ 0x4
   790  000005                     	ds	4
   791  000009                     ___almod@counter:
   792                           	opt stack 0
   793                           
   794                           ; 1 bytes @ 0x8
   795  000009                     	ds	1
   796  00000A                     ___almod@sign:
   797                           	opt stack 0
   798                           
   799                           ; 1 bytes @ 0x9
   800  00000A                     	ds	1
   801  00000B                     ??_ISR_high:
   802                           
   803                           ; 1 bytes @ 0xA
   804  00000B                     	ds	18
   805  00001D                     ISR_high@tmp:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x1C
   809  00001D                     	ds	2
   810  00001F                     ?___awmod:
   811                           	opt stack 0
   812  00001F                     ?i1___awdiv:
   813                           	opt stack 0
   814  00001F                     ?i1___aldiv:
   815                           	opt stack 0
   816  00001F                     buzzer@duration:
   817                           	opt stack 0
   818  00001F                     i1set_key_led_disp_tris@dir:
   819                           	opt stack 0
   820  00001F                     ___awmod@dividend:
   821                           	opt stack 0
   822  00001F                     i1___awdiv@dividend:
   823                           	opt stack 0
   824  00001F                     i1___aldiv@dividend:
   825                           	opt stack 0
   826                           
   827                           ; 4 bytes @ 0x1E
   828  00001F                     	ds	1
   829  000020                     sample_inputs@ret:
   830                           	opt stack 0
   831                           
   832                           ; 1 bytes @ 0x1F
   833  000020                     	ds	1
   834  000021                     ___awmod@divisor:
   835                           	opt stack 0
   836  000021                     i1___awdiv@divisor:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x20
   840  000021                     	ds	2
   841  000023                     ___awmod@counter:
   842                           	opt stack 0
   843  000023                     i1___awdiv@counter:
   844                           	opt stack 0
   845  000023                     i1___aldiv@divisor:
   846                           	opt stack 0
   847                           
   848                           ; 4 bytes @ 0x22
   849  000023                     	ds	1
   850  000024                     ___awmod@sign:
   851                           	opt stack 0
   852  000024                     i1___awdiv@sign:
   853                           	opt stack 0
   854                           
   855                           ; 1 bytes @ 0x23
   856  000024                     	ds	1
   857  000025                     i1___awdiv@quotient:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x24
   861  000025                     	ds	2
   862  000027                     i1set_LEDs@mask:
   863                           	opt stack 0
   864  000027                     i1set_digit@dig:
   865                           	opt stack 0
   866  000027                     i1___aldiv@counter:
   867                           	opt stack 0
   868                           
   869                           ; 1 bytes @ 0x26
   870  000027                     	ds	1
   871  000028                     i1___aldiv@sign:
   872                           	opt stack 0
   873                           
   874                           ; 1 bytes @ 0x27
   875  000028                     	ds	1
   876  000029                     i1___aldiv@quotient:
   877                           	opt stack 0
   878                           
   879                           ; 4 bytes @ 0x28
   880  000029                     	ds	4
   881  00002D                     _ISR_low$367:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0x2C
   885  00002D                     	ds	2
   886  00002F                     ISR_low@mask_leds:
   887                           	opt stack 0
   888                           
   889                           ; 1 bytes @ 0x2E
   890  00002F                     	ds	1
   891  000030                     _ISR_low$368:
   892                           	opt stack 0
   893                           
   894                           ; 1 bytes @ 0x2F
   895  000030                     	ds	1
   896  000031                     ISR_low@ins:
   897                           	opt stack 0
   898                           
   899                           ; 1 bytes @ 0x30
   900  000031                     	ds	1
   901  000032                     ISR_low@i:
   902                           	opt stack 0
   903                           
   904                           ; 1 bytes @ 0x31
   905  000032                     	ds	1
   906  000033                     _ISR_low$365:
   907                           	opt stack 0
   908                           
   909                           ; 2 bytes @ 0x32
   910  000033                     	ds	2
   911  000035                     _ISR_low$366:
   912                           	opt stack 0
   913                           
   914                           ; 2 bytes @ 0x34
   915  000035                     	ds	2
   916                           tblptru	equ	0xFF8
   917                           tblptrh	equ	0xFF7
   918                           tblptrl	equ	0xFF6
   919                           tablat	equ	0xFF5
   920                           postinc0	equ	0xFEE
   921                           wreg	equ	0xFE8
   922                           
   923 ;;
   924 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   925 ;;
   926 ;; *************** function _main *****************
   927 ;; Defined at:
   928 ;;		line 93 in file "main.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;		None
   931 ;; Auto vars:     Size  Location     Type
   932 ;;		None
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      void 
   935 ;; Registers used:
   936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   942 ;;      Params:         0       0       0       0       0       0       0       0       0
   943 ;;      Locals:         0       0       0       0       0       0       0       0       0
   944 ;;      Temps:          0       5       0       0       0       0       0       0       0
   945 ;;      Totals:         0       5       0       0       0       0       0       0       0
   946 ;;Total ram usage:        5 bytes
   947 ;; Hardware stack levels required when called:   10
   948 ;; This function calls:
   949 ;;		___aldiv
   950 ;;		___awtoft
   951 ;;		___ftge
   952 ;;		_ee_read_state
   953 ;;		_ee_save_state
   954 ;;		_error
   955 ;;		_get_temp
   956 ;;		_setup
   957 ;; This function is called by:
   958 ;;		Startup code after reset
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text0
   963  000828                     __ptext0:
   964                           	opt stack 0
   965  000828                     _main:
   966                           	opt stack 21
   967                           
   968                           ;main.c: 95: setup();
   969                           
   970                           ;incstack = 0
   971  000828  EC26  F012         	call	_setup	;wreg free
   972                           
   973                           ;main.c: 96: ee_read_state();
   974  00082C  EC9C  F00A         	call	_ee_read_state	;wreg free
   975  000830                     l311:
   976  000830  0004               	clrwdt		;# 
   977                           
   978                           ;main.c: 102: ee_save_state();
   979  000832  EC7A  F011         	call	_ee_save_state	;wreg free
   980                           
   981                           ;main.c: 104: temp_cur = get_temp();
   982  000836  ECB3  F006         	call	_get_temp	;wreg free
   983  00083A  C0BD  F0D4         	movff	?_get_temp,_temp_cur
   984  00083E  C0BE  F0D5         	movff	?_get_temp+1,_temp_cur+1
   985  000842  C0BF  F0D6         	movff	?_get_temp+2,_temp_cur+2
   986                           
   987                           ;main.c: 105: if (temp_cur > 45)
   988  000846  0E00               	movlw	0
   989  000848  0100               	movlb	0	; () banked
   990  00084A  6F82               	movwf	___ftge@ff1& (0+255),b
   991  00084C  0E34               	movlw	52
   992  00084E  0100               	movlb	0	; () banked
   993  000850  6F83               	movwf	(___ftge@ff1+1)& (0+255),b
   994  000852  0E42               	movlw	66
   995  000854  0100               	movlb	0	; () banked
   996  000856  6F84               	movwf	(___ftge@ff1+2)& (0+255),b
   997  000858  C0D4  F085         	movff	_temp_cur,___ftge@ff2
   998  00085C  C0D5  F086         	movff	_temp_cur+1,___ftge@ff2+1
   999  000860  C0D6  F087         	movff	_temp_cur+2,___ftge@ff2+2
  1000  000864  ECC2  F00E         	call	___ftge	;wreg free
  1001  000868  0100               	movlb	0	; () banked
  1002  00086A  B0D8               	btfsc	status,0,c
  1003  00086C  D004               	goto	l3308
  1004                           
  1005                           ; BSR set to: 0
  1006                           ;main.c: 106: {
  1007                           ;main.c: 111: error(1);
  1008  00086E  0E01               	movlw	1
  1009  000870  ECA2  F00C         	call	_error
  1010                           
  1011                           ;main.c: 112: continue;
  1012  000874  D7DD               	goto	l311
  1013  000876                     l3308:
  1014                           
  1015                           ;main.c: 113: }
  1016                           ;main.c: 114: if (state != _OFF) continue;
  1017  000876  0100               	movlb	0	; () banked
  1018  000878  51E2               	movf	_state& (0+255),w,b
  1019  00087A  A4D8               	btfss	status,2,c
  1020  00087C  D7D9               	goto	l311
  1021                           
  1022                           ; BSR set to: 0
  1023                           ;main.c: 115: if (timer)
  1024                           
  1025                           ; BSR set to: 0
  1026  00087E  A437               	btfss	_timer/(0+8),_timer& (0+7),c
  1027  000880  D0E5               	goto	l3340
  1028                           
  1029                           ; BSR set to: 0
  1030                           ;main.c: 116: {
  1031                           ;main.c: 118: if (time / 3600 >= day_hour && time / 3600 < night_hour)
  1032  000882  C0DC  F0CF         	movff	_day_hour,??_main
  1033  000886  0100               	movlb	0	; () banked
  1034  000888  6BD0               	clrf	(??_main+1)& (0+255),b
  1035  00088A  6BD1               	clrf	(??_main+2)& (0+255),b
  1036  00088C  6BD2               	clrf	(??_main+3)& (0+255),b
  1037  00088E  C0E3  F076         	movff	_time,___aldiv@dividend
  1038  000892  C0E4  F077         	movff	_time+1,___aldiv@dividend+1
  1039  000896  C0E5  F078         	movff	_time+2,___aldiv@dividend+2
  1040  00089A  C0E6  F079         	movff	_time+3,___aldiv@dividend+3
  1041  00089E  0E10               	movlw	16
  1042  0008A0  0100               	movlb	0	; () banked
  1043  0008A2  6F7A               	movwf	___aldiv@divisor& (0+255),b
  1044  0008A4  0E0E               	movlw	14
  1045  0008A6  6F7B               	movwf	(___aldiv@divisor+1)& (0+255),b
  1046  0008A8  0E00               	movlw	0
  1047  0008AA  6F7C               	movwf	(___aldiv@divisor+2)& (0+255),b
  1048  0008AC  0E00               	movlw	0
  1049  0008AE  6F7D               	movwf	(___aldiv@divisor+3)& (0+255),b
  1050  0008B0  EC89  F009         	call	___aldiv	;wreg free
  1051  0008B4  0100               	movlb	0	; () banked
  1052  0008B6  51CF               	movf	??_main& (0+255),w,b
  1053  0008B8  0100               	movlb	0	; () banked
  1054  0008BA  5D76               	subwf	?___aldiv& (0+255),w,b
  1055  0008BC  0100               	movlb	0	; () banked
  1056  0008BE  51D0               	movf	(??_main+1)& (0+255),w,b
  1057  0008C0  0100               	movlb	0	; () banked
  1058  0008C2  5977               	subwfb	(?___aldiv+1)& (0+255),w,b
  1059  0008C4  0100               	movlb	0	; () banked
  1060  0008C6  51D1               	movf	(??_main+2)& (0+255),w,b
  1061  0008C8  0100               	movlb	0	; () banked
  1062  0008CA  5978               	subwfb	(?___aldiv+2)& (0+255),w,b
  1063  0008CC  0100               	movlb	0	; () banked
  1064  0008CE  5179               	movf	(?___aldiv+3)& (0+255),w,b
  1065  0008D0  0A80               	xorlw	128
  1066  0008D2  0100               	movlb	0	; () banked
  1067  0008D4  6FD3               	movwf	(??_main+4)& (0+255),b
  1068  0008D6  0100               	movlb	0	; () banked
  1069  0008D8  51D2               	movf	(??_main+3)& (0+255),w,b
  1070  0008DA  0A80               	xorlw	128
  1071  0008DC  0100               	movlb	0	; () banked
  1072  0008DE  59D3               	subwfb	(??_main+4)& (0+255),w,b
  1073  0008E0  A0D8               	btfss	status,0,c
  1074  0008E2  D076               	goto	l3328
  1075                           
  1076                           ; BSR set to: 0
  1077  0008E4  C0E0  F0CF         	movff	_night_hour,??_main
  1078  0008E8  0100               	movlb	0	; () banked
  1079  0008EA  6BD0               	clrf	(??_main+1)& (0+255),b
  1080  0008EC  6BD1               	clrf	(??_main+2)& (0+255),b
  1081  0008EE  6BD2               	clrf	(??_main+3)& (0+255),b
  1082  0008F0  C0E3  F076         	movff	_time,___aldiv@dividend
  1083  0008F4  C0E4  F077         	movff	_time+1,___aldiv@dividend+1
  1084  0008F8  C0E5  F078         	movff	_time+2,___aldiv@dividend+2
  1085  0008FC  C0E6  F079         	movff	_time+3,___aldiv@dividend+3
  1086  000900  0E10               	movlw	16
  1087  000902  0100               	movlb	0	; () banked
  1088  000904  6F7A               	movwf	___aldiv@divisor& (0+255),b
  1089  000906  0E0E               	movlw	14
  1090  000908  6F7B               	movwf	(___aldiv@divisor+1)& (0+255),b
  1091  00090A  0E00               	movlw	0
  1092  00090C  6F7C               	movwf	(___aldiv@divisor+2)& (0+255),b
  1093  00090E  0E00               	movlw	0
  1094  000910  6F7D               	movwf	(___aldiv@divisor+3)& (0+255),b
  1095  000912  EC89  F009         	call	___aldiv	;wreg free
  1096  000916  0100               	movlb	0	; () banked
  1097  000918  51CF               	movf	??_main& (0+255),w,b
  1098  00091A  0100               	movlb	0	; () banked
  1099  00091C  5D76               	subwf	?___aldiv& (0+255),w,b
  1100  00091E  0100               	movlb	0	; () banked
  1101  000920  51D0               	movf	(??_main+1)& (0+255),w,b
  1102  000922  0100               	movlb	0	; () banked
  1103  000924  5977               	subwfb	(?___aldiv+1)& (0+255),w,b
  1104  000926  0100               	movlb	0	; () banked
  1105  000928  51D1               	movf	(??_main+2)& (0+255),w,b
  1106  00092A  0100               	movlb	0	; () banked
  1107  00092C  5978               	subwfb	(?___aldiv+2)& (0+255),w,b
  1108  00092E  0100               	movlb	0	; () banked
  1109  000930  5179               	movf	(?___aldiv+3)& (0+255),w,b
  1110  000932  0A80               	xorlw	128
  1111  000934  0100               	movlb	0	; () banked
  1112  000936  6FD3               	movwf	(??_main+4)& (0+255),b
  1113  000938  0100               	movlb	0	; () banked
  1114  00093A  51D2               	movf	(??_main+3)& (0+255),w,b
  1115  00093C  0A80               	xorlw	128
  1116  00093E  0100               	movlb	0	; () banked
  1117  000940  59D3               	subwfb	(??_main+4)& (0+255),w,b
  1118  000942  B0D8               	btfsc	status,0,c
  1119  000944  D045               	goto	l3328
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;main.c: 119: {
  1123                           ;main.c: 121: if (temp_cur > (day_temp + 3))
  1124  000946  0E03               	movlw	3
  1125  000948  0100               	movlb	0	; () banked
  1126  00094A  25DD               	addwf	_day_temp& (0+255),w,b
  1127  00094C  0100               	movlb	0	; () banked
  1128  00094E  6F7E               	movwf	___awtoft@c& (0+255),b
  1129  000950  0100               	movlb	0	; () banked
  1130  000952  6B7F               	clrf	(___awtoft@c+1)& (0+255),b
  1131  000954  0E00               	movlw	0
  1132  000956  237F               	addwfc	(___awtoft@c+1)& (0+255),f,b
  1133  000958  ECC8  F011         	call	___awtoft	;wreg free
  1134  00095C  C07E  F082         	movff	?___awtoft,___ftge@ff1
  1135  000960  C07F  F083         	movff	?___awtoft+1,___ftge@ff1+1
  1136  000964  C080  F084         	movff	?___awtoft+2,___ftge@ff1+2
  1137  000968  C0D4  F085         	movff	_temp_cur,___ftge@ff2
  1138  00096C  C0D5  F086         	movff	_temp_cur+1,___ftge@ff2+1
  1139  000970  C0D6  F087         	movff	_temp_cur+2,___ftge@ff2+2
  1140  000974  ECC2  F00E         	call	___ftge	;wreg free
  1141  000978  0100               	movlb	0	; () banked
  1142  00097A  B0D8               	btfsc	status,0,c
  1143  00097C  D007               	goto	l3322
  1144  00097E                     l3318:
  1145                           
  1146                           ; BSR set to: 0
  1147                           ;main.c: 122: {
  1148                           ;main.c: 125: if (climate_control & _COOL)
  1149  00097E  0100               	movlb	0	; () banked
  1150  000980  A1E8               	btfss	_climate_control& (0+255),0,b
  1151  000982  D0AA               	goto	l3360
  1152                           
  1153                           ; BSR set to: 0
  1154                           ;main.c: 126: {
  1155                           ;main.c: 127: heat_cur = _FAN;
  1156  000984  0E01               	movlw	1
  1157  000986  0100               	movlb	0	; () banked
  1158  000988  6FDF               	movwf	_heat_cur& (0+255),b
  1159                           
  1160                           ; BSR set to: 0
  1161                           ;main.c: 128: }
  1162                           ;main.c: 129: }
  1163  00098A  D0A6               	goto	l3360
  1164  00098C                     l3322:
  1165                           
  1166                           ; BSR set to: 0
  1167                           ;main.c: 130: else if (temp_cur <= (day_temp + 3))
  1168  00098C  0E03               	movlw	3
  1169  00098E  0100               	movlb	0	; () banked
  1170  000990  25DD               	addwf	_day_temp& (0+255),w,b
  1171  000992  0100               	movlb	0	; () banked
  1172  000994  6F7E               	movwf	___awtoft@c& (0+255),b
  1173  000996  0100               	movlb	0	; () banked
  1174  000998  6B7F               	clrf	(___awtoft@c+1)& (0+255),b
  1175  00099A  0E00               	movlw	0
  1176  00099C  237F               	addwfc	(___awtoft@c+1)& (0+255),f,b
  1177  00099E  ECC8  F011         	call	___awtoft	;wreg free
  1178  0009A2  C07E  F082         	movff	?___awtoft,___ftge@ff1
  1179  0009A6  C07F  F083         	movff	?___awtoft+1,___ftge@ff1+1
  1180  0009AA  C080  F084         	movff	?___awtoft+2,___ftge@ff1+2
  1181  0009AE  C0D4  F085         	movff	_temp_cur,___ftge@ff2
  1182  0009B2  C0D5  F086         	movff	_temp_cur+1,___ftge@ff2+1
  1183  0009B6  C0D6  F087         	movff	_temp_cur+2,___ftge@ff2+2
  1184  0009BA  ECC2  F00E         	call	___ftge	;wreg free
  1185  0009BE  0100               	movlb	0	; () banked
  1186  0009C0  A0D8               	btfss	status,0,c
  1187  0009C2  D08A               	goto	l3360
  1188                           
  1189                           ; BSR set to: 0
  1190                           ;main.c: 131: {
  1191                           ;main.c: 134: if (climate_control & _HEAT)
  1192  0009C4  0100               	movlb	0	; () banked
  1193  0009C6  A3E8               	btfss	_climate_control& (0+255),1,b
  1194  0009C8  D087               	goto	l3360
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;main.c: 135: {
  1198                           ;main.c: 137: heat_cur = heat_mode;
  1199  0009CA  C0E9  F0DF         	movff	_heat_mode,_heat_cur
  1200                           
  1201                           ; BSR set to: 0
  1202                           ;main.c: 138: }
  1203                           ;main.c: 139: }
  1204                           ;main.c: 140: }
  1205                           
  1206                           ; BSR set to: 0
  1207                           
  1208                           ; BSR set to: 0
  1209  0009CE  D084               	goto	l3360
  1210  0009D0                     l3328:
  1211                           
  1212                           ; BSR set to: 0
  1213                           ;main.c: 142: else
  1214                           ;main.c: 143: {
  1215                           ;main.c: 145: if (temp_cur > (night_temp + 3))
  1216  0009D0  0E03               	movlw	3
  1217  0009D2  0100               	movlb	0	; () banked
  1218  0009D4  25E1               	addwf	_night_temp& (0+255),w,b
  1219  0009D6  0100               	movlb	0	; () banked
  1220  0009D8  6F7E               	movwf	___awtoft@c& (0+255),b
  1221  0009DA  0100               	movlb	0	; () banked
  1222  0009DC  6B7F               	clrf	(___awtoft@c+1)& (0+255),b
  1223  0009DE  0E00               	movlw	0
  1224  0009E0  237F               	addwfc	(___awtoft@c+1)& (0+255),f,b
  1225  0009E2  ECC8  F011         	call	___awtoft	;wreg free
  1226  0009E6  C07E  F082         	movff	?___awtoft,___ftge@ff1
  1227  0009EA  C07F  F083         	movff	?___awtoft+1,___ftge@ff1+1
  1228  0009EE  C080  F084         	movff	?___awtoft+2,___ftge@ff1+2
  1229  0009F2  C0D4  F085         	movff	_temp_cur,___ftge@ff2
  1230  0009F6  C0D5  F086         	movff	_temp_cur+1,___ftge@ff2+1
  1231  0009FA  C0D6  F087         	movff	_temp_cur+2,___ftge@ff2+2
  1232  0009FE  ECC2  F00E         	call	___ftge	;wreg free
  1233  000A02  0100               	movlb	0	; () banked
  1234  000A04  A0D8               	btfss	status,0,c
  1235  000A06  D7BB               	goto	l3318
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;main.c: 153: else if (temp_cur < (night_temp + 3))
  1239                           
  1240                           ; BSR set to: 0
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;main.c: 151: }
  1244                           ;main.c: 152: }
  1245                           
  1246                           ; BSR set to: 0
  1247                           ;main.c: 149: {
  1248                           ;main.c: 150: heat_cur = _FAN;
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;main.c: 146: {
  1252                           ;main.c: 148: if (climate_control & _COOL)
  1253  000A08  C0D4  F082         	movff	_temp_cur,___ftge@ff1
  1254  000A0C  C0D5  F083         	movff	_temp_cur+1,___ftge@ff1+1
  1255  000A10  C0D6  F084         	movff	_temp_cur+2,___ftge@ff1+2
  1256  000A14  0E03               	movlw	3
  1257  000A16  0100               	movlb	0	; () banked
  1258  000A18  25E1               	addwf	_night_temp& (0+255),w,b
  1259  000A1A  0100               	movlb	0	; () banked
  1260  000A1C  6F7E               	movwf	___awtoft@c& (0+255),b
  1261  000A1E  0100               	movlb	0	; () banked
  1262  000A20  6B7F               	clrf	(___awtoft@c+1)& (0+255),b
  1263  000A22  0E00               	movlw	0
  1264  000A24  237F               	addwfc	(___awtoft@c+1)& (0+255),f,b
  1265  000A26  ECC8  F011         	call	___awtoft	;wreg free
  1266  000A2A  C07E  F085         	movff	?___awtoft,___ftge@ff2
  1267  000A2E  C07F  F086         	movff	?___awtoft+1,___ftge@ff2+1
  1268  000A32  C080  F087         	movff	?___awtoft+2,___ftge@ff2+2
  1269  000A36  ECC2  F00E         	call	___ftge	;wreg free
  1270  000A3A  0100               	movlb	0	; () banked
  1271  000A3C  B0D8               	btfsc	status,0,c
  1272  000A3E  D04C               	goto	l3360
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;main.c: 154: {
  1276                           ;main.c: 156: if (climate_control & _HEAT)
  1277  000A40  0100               	movlb	0	; () banked
  1278  000A42  A3E8               	btfss	_climate_control& (0+255),1,b
  1279  000A44  D049               	goto	l3360
  1280                           
  1281                           ; BSR set to: 0
  1282                           ;main.c: 157: {
  1283                           ;main.c: 158: heat_cur = heat_mode;
  1284  000A46  C0E9  F0DF         	movff	_heat_mode,_heat_cur
  1285                           
  1286                           ; BSR set to: 0
  1287                           ;main.c: 159: }
  1288                           ;main.c: 160: }
  1289                           ;main.c: 161: }
  1290                           ;main.c: 162: }
  1291                           
  1292                           ; BSR set to: 0
  1293                           
  1294                           ; BSR set to: 0
  1295                           
  1296                           ; BSR set to: 0
  1297  000A4A  D046               	goto	l3360
  1298  000A4C                     l3340:
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;main.c: 164: else
  1302                           ;main.c: 165: {
  1303                           ;main.c: 167: if (temp_cur > (temp_want + 3))
  1304  000A4C  0E03               	movlw	3
  1305  000A4E  0100               	movlb	0	; () banked
  1306  000A50  25E7               	addwf	_temp_want& (0+255),w,b
  1307  000A52  0100               	movlb	0	; () banked
  1308  000A54  6F7E               	movwf	___awtoft@c& (0+255),b
  1309  000A56  0100               	movlb	0	; () banked
  1310  000A58  6B7F               	clrf	(___awtoft@c+1)& (0+255),b
  1311  000A5A  0E00               	movlw	0
  1312  000A5C  237F               	addwfc	(___awtoft@c+1)& (0+255),f,b
  1313  000A5E  ECC8  F011         	call	___awtoft	;wreg free
  1314  000A62  C07E  F082         	movff	?___awtoft,___ftge@ff1
  1315  000A66  C07F  F083         	movff	?___awtoft+1,___ftge@ff1+1
  1316  000A6A  C080  F084         	movff	?___awtoft+2,___ftge@ff1+2
  1317  000A6E  C0D4  F085         	movff	_temp_cur,___ftge@ff2
  1318  000A72  C0D5  F086         	movff	_temp_cur+1,___ftge@ff2+1
  1319  000A76  C0D6  F087         	movff	_temp_cur+2,___ftge@ff2+2
  1320  000A7A  ECC2  F00E         	call	___ftge	;wreg free
  1321  000A7E  0100               	movlb	0	; () banked
  1322  000A80  A0D8               	btfss	status,0,c
  1323  000A82  D77D               	goto	l3318
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;main.c: 175: else if (temp_cur < (temp_want + 3))
  1327                           
  1328                           ; BSR set to: 0
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;main.c: 173: }
  1332                           ;main.c: 174: }
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;main.c: 171: {
  1336                           ;main.c: 172: heat_cur = _FAN;
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;main.c: 168: {
  1340                           ;main.c: 170: if (climate_control & _COOL)
  1341  000A84  C0D4  F082         	movff	_temp_cur,___ftge@ff1
  1342  000A88  C0D5  F083         	movff	_temp_cur+1,___ftge@ff1+1
  1343  000A8C  C0D6  F084         	movff	_temp_cur+2,___ftge@ff1+2
  1344  000A90  0E03               	movlw	3
  1345  000A92  0100               	movlb	0	; () banked
  1346  000A94  25E7               	addwf	_temp_want& (0+255),w,b
  1347  000A96  0100               	movlb	0	; () banked
  1348  000A98  6F7E               	movwf	___awtoft@c& (0+255),b
  1349  000A9A  0100               	movlb	0	; () banked
  1350  000A9C  6B7F               	clrf	(___awtoft@c+1)& (0+255),b
  1351  000A9E  0E00               	movlw	0
  1352  000AA0  237F               	addwfc	(___awtoft@c+1)& (0+255),f,b
  1353  000AA2  ECC8  F011         	call	___awtoft	;wreg free
  1354  000AA6  C07E  F085         	movff	?___awtoft,___ftge@ff2
  1355  000AAA  C07F  F086         	movff	?___awtoft+1,___ftge@ff2+1
  1356  000AAE  C080  F087         	movff	?___awtoft+2,___ftge@ff2+2
  1357  000AB2  ECC2  F00E         	call	___ftge	;wreg free
  1358  000AB6  D7C1               	goto	L2
  1359  000AB8                     l335:
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;main.c: 192: if (time % 2) LATC1 = 1, LATC2 = 0;
  1363  000AB8  0100               	movlb	0	; () banked
  1364  000ABA  A1E3               	btfss	_time& (0+255),0,b
  1365  000ABC  D003               	goto	l336
  1366                           
  1367                           ; BSR set to: 0
  1368  000ABE  828B               	bsf	3979,1,c	;volatile
  1369  000AC0  948B               	bcf	3979,2,c	;volatile
  1370  000AC2  D004               	goto	l3356
  1371  000AC4                     l336:
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;main.c: 193: else LATC1 = 0, LATC2 = 1;
  1375  000AC4  928B               	bcf	3979,1,c	;volatile
  1376  000AC6  D001               	goto	L3
  1377  000AC8                     l339:
  1378                           
  1379                           ; BSR set to: 0
  1380                           ;main.c: 197: LATC1 = 1;
  1381  000AC8  828B               	bsf	3979,1,c	;volatile
  1382  000ACA                     L3:
  1383                           
  1384                           ;main.c: 198: LATC2 = 1;
  1385  000ACA  848B               	bsf	3979,2,c	;volatile
  1386  000ACC                     l3356:
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;main.c: 199: fan_timeout = 30;
  1390  000ACC  0E1E               	movlw	30
  1391  000ACE  D001               	goto	L1
  1392  000AD0                     l3358:
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;main.c: 202: fan_timeout = 1;
  1396  000AD0  0E01               	movlw	1
  1397  000AD2                     L1:
  1398  000AD2  0100               	movlb	0	; () banked
  1399  000AD4  6FDE               	movwf	_fan_timeout& (0+255),b
  1400                           
  1401                           ;main.c: 203: }
  1402  000AD6  D00B               	goto	l3362
  1403  000AD8                     l3360:
  1404                           
  1405                           ; BSR set to: 0
  1406  000AD8  0100               	movlb	0	; () banked
  1407  000ADA  51DF               	movf	_heat_cur& (0+255),w,b
  1408                           
  1409                           ; Switch size 1, requested type "space"
  1410                           ; Number of cases is 3, Range of values is 1 to 3
  1411                           ; switch strategies available:
  1412                           ; Name         Instructions Cycles
  1413                           ; simple_byte           10     6 (average)
  1414                           ;	Chosen strategy is simple_byte
  1415  000ADC  0A01               	xorlw	1	; case 1
  1416  000ADE  B4D8               	btfsc	status,2,c
  1417  000AE0  D7F7               	goto	l3358
  1418  000AE2  0A03               	xorlw	3	; case 2
  1419  000AE4  B4D8               	btfsc	status,2,c
  1420  000AE6  D7E8               	goto	l335
  1421  000AE8  0A01               	xorlw	1	; case 3
  1422  000AEA  B4D8               	btfsc	status,2,c
  1423  000AEC  D7ED               	goto	l339
  1424  000AEE                     l3362:
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;main.c: 205: if (fan_timeout) LATC0 = 1;
  1428  000AEE  0100               	movlb	0	; () banked
  1429  000AF0  51DE               	movf	_fan_timeout& (0+255),w,b
  1430  000AF2  B4D8               	btfsc	status,2,c
  1431  000AF4  D002               	goto	l341
  1432                           
  1433                           ; BSR set to: 0
  1434  000AF6  808B               	bsf	3979,0,c	;volatile
  1435  000AF8  D69B               	goto	l311
  1436  000AFA                     l341:
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;main.c: 206: else LATC0 = 0;
  1440  000AFA  908B               	bcf	3979,0,c	;volatile
  1441                           
  1442                           ; BSR set to: 0
  1443                           
  1444                           ; BSR set to: 0
  1445  000AFC  D699               	goto	l311
  1446  000AFE                     __end_of_main:
  1447                           	opt stack 0
  1448                           tblptru	equ	0xFF8
  1449                           tblptrh	equ	0xFF7
  1450                           tblptrl	equ	0xFF6
  1451                           tablat	equ	0xFF5
  1452                           postinc0	equ	0xFEE
  1453                           wreg	equ	0xFE8
  1454                           status	equ	0xFD8
  1455                           
  1456 ;; *************** function _setup *****************
  1457 ;; Defined at:
  1458 ;;		line 219 in file "main.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg, status,2, status,0, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1472 ;;      Params:         0       0       0       0       0       0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1474 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1475 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1476 ;;Total ram usage:        0 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:    6
  1479 ;; This function calls:
  1480 ;;		_setup_eeprom
  1481 ;;		_setup_io
  1482 ;;		_setup_therm
  1483 ;;		_setup_timer0
  1484 ;;		_setup_timer1
  1485 ;;		_setup_timer2
  1486 ;;		_setup_watchdog
  1487 ;; This function is called by:
  1488 ;;		_main
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text1
  1493  00244C                     __ptext1:
  1494                           	opt stack 0
  1495  00244C                     _setup:
  1496                           	opt stack 24
  1497                           
  1498                           ;main.c: 223: SCS0 = 1;
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;incstack = 0
  1502  00244C  80D3               	bsf	4051,0,c	;volatile
  1503                           
  1504                           ;main.c: 224: SCS1 = 1;
  1505  00244E  82D3               	bsf	4051,1,c	;volatile
  1506                           
  1507                           ;main.c: 225: INTSRC = 1;
  1508  002450  8E9B               	bsf	3995,7,c	;volatile
  1509                           
  1510                           ;main.c: 228: IRCF2 = 0;
  1511  002452  9CD3               	bcf	4051,6,c	;volatile
  1512                           
  1513                           ;main.c: 229: IRCF1 = 1;
  1514  002454  8AD3               	bsf	4051,5,c	;volatile
  1515                           
  1516                           ;main.c: 230: IRCF0 = 1;
  1517  002456  88D3               	bsf	4051,4,c	;volatile
  1518                           
  1519                           ;main.c: 233: setup_therm();
  1520  002458  EC6B  F012         	call	_setup_therm	;wreg free
  1521                           
  1522                           ;main.c: 235: setup_io();
  1523  00245C  ECBA  F012         	call	_setup_io	;wreg free
  1524                           
  1525                           ;main.c: 238: setup_timer0();
  1526  002460  EC8E  F012         	call	_setup_timer0	;wreg free
  1527                           
  1528                           ;main.c: 240: setup_timer1();
  1529  002464  ECEA  F011         	call	_setup_timer1	;wreg free
  1530                           
  1531                           ;main.c: 242: setup_timer2();
  1532  002468  EC7F  F012         	call	_setup_timer2	;wreg free
  1533                           
  1534                           ;main.c: 245: setup_eeprom();
  1535  00246C  ECD1  F012         	call	_setup_eeprom	;wreg free
  1536                           
  1537                           ;main.c: 248: IPEN = 1;
  1538  002470  8ED0               	bsf	4048,7,c	;volatile
  1539                           
  1540                           ;main.c: 249: GIEH = 1;
  1541  002472  8EF2               	bsf	intcon,7,c	;volatile
  1542                           
  1543                           ;main.c: 250: GIEL = 0;
  1544  002474  9CF2               	bcf	intcon,6,c	;volatile
  1545                           
  1546                           ;main.c: 253: setup_watchdog();
  1547  002476  ECE1  F012         	call	_setup_watchdog	;wreg free
  1548  00247A  0012               	return		;funcret
  1549  00247C                     __end_of_setup:
  1550                           	opt stack 0
  1551                           tblptru	equ	0xFF8
  1552                           tblptrh	equ	0xFF7
  1553                           tblptrl	equ	0xFF6
  1554                           tablat	equ	0xFF5
  1555                           intcon	equ	0xFF2
  1556                           postinc0	equ	0xFEE
  1557                           wreg	equ	0xFE8
  1558                           status	equ	0xFD8
  1559                           
  1560 ;; *************** function _setup_watchdog *****************
  1561 ;; Defined at:
  1562 ;;		line 397 in file "main.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;		None
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;		None
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		None
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1576 ;;      Params:         0       0       0       0       0       0       0       0       0
  1577 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1578 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1579 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1580 ;;Total ram usage:        0 bytes
  1581 ;; Hardware stack levels used:    1
  1582 ;; Hardware stack levels required when called:    5
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_setup
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text2
  1591  0025C2                     __ptext2:
  1592                           	opt stack 0
  1593  0025C2                     _setup_watchdog:
  1594                           	opt stack 24
  1595                           
  1596                           ;main.c: 400: SWDTEN = 1;
  1597                           
  1598                           ;incstack = 0
  1599  0025C2  80D1               	bsf	4049,0,c	;volatile
  1600  0025C4  0004               	clrwdt		;# 
  1601  0025C6  0012               	return		;funcret
  1602  0025C8                     __end_of_setup_watchdog:
  1603                           	opt stack 0
  1604                           tblptru	equ	0xFF8
  1605                           tblptrh	equ	0xFF7
  1606                           tblptrl	equ	0xFF6
  1607                           tablat	equ	0xFF5
  1608                           intcon	equ	0xFF2
  1609                           postinc0	equ	0xFEE
  1610                           wreg	equ	0xFE8
  1611                           status	equ	0xFD8
  1612                           
  1613 ;; *************** function _setup_timer2 *****************
  1614 ;; Defined at:
  1615 ;;		line 353 in file "main.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, status,2
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1629 ;;      Params:         0       0       0       0       0       0       0       0       0
  1630 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1632 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1633 ;;Total ram usage:        0 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    5
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_setup
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text3
  1644  0024FE                     __ptext3:
  1645                           	opt stack 0
  1646  0024FE                     _setup_timer2:
  1647                           	opt stack 24
  1648                           
  1649                           ;main.c: 358: TMR2ON = 0;
  1650                           
  1651                           ;incstack = 0
  1652  0024FE  94CA               	bcf	4042,2,c	;volatile
  1653                           
  1654                           ;main.c: 360: T2CKPS0 = 1;
  1655  002500  80CA               	bsf	4042,0,c	;volatile
  1656                           
  1657                           ;main.c: 361: T2CKPS1 = 0;
  1658  002502  92CA               	bcf	4042,1,c	;volatile
  1659                           
  1660                           ;main.c: 363: TMR2 = 0;
  1661  002504  0E00               	movlw	0
  1662  002506  6ECC               	movwf	4044,c	;volatile
  1663                           
  1664                           ;main.c: 366: PR2 = 0xFF;
  1665  002508  68CB               	setf	4043,c	;volatile
  1666                           
  1667                           ;main.c: 368: T2OUTPS0 = 0;
  1668  00250A  96CA               	bcf	4042,3,c	;volatile
  1669                           
  1670                           ;main.c: 369: T2OUTPS1 = 0;
  1671  00250C  98CA               	bcf	4042,4,c	;volatile
  1672                           
  1673                           ;main.c: 370: T2OUTPS2 = 0;
  1674  00250E  9ACA               	bcf	4042,5,c	;volatile
  1675                           
  1676                           ;main.c: 371: T2OUTPS3 = 0;
  1677  002510  9CCA               	bcf	4042,6,c	;volatile
  1678                           
  1679                           ;main.c: 373: TMR2IF = 0;
  1680  002512  929E               	bcf	3998,1,c	;volatile
  1681                           
  1682                           ;main.c: 374: TMR2IP = 0;
  1683  002514  929F               	bcf	3999,1,c	;volatile
  1684                           
  1685                           ;main.c: 375: TMR2IE = 1;
  1686  002516  829D               	bsf	3997,1,c	;volatile
  1687                           
  1688                           ;main.c: 377: TMR2ON = 1;
  1689  002518  84CA               	bsf	4042,2,c	;volatile
  1690  00251A  0012               	return		;funcret
  1691  00251C                     __end_of_setup_timer2:
  1692                           	opt stack 0
  1693                           tblptru	equ	0xFF8
  1694                           tblptrh	equ	0xFF7
  1695                           tblptrl	equ	0xFF6
  1696                           tablat	equ	0xFF5
  1697                           intcon	equ	0xFF2
  1698                           postinc0	equ	0xFEE
  1699                           wreg	equ	0xFE8
  1700                           status	equ	0xFD8
  1701                           
  1702 ;; *************** function _setup_timer1 *****************
  1703 ;; Defined at:
  1704 ;;		line 325 in file "main.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  tmp             2   24[BANK0 ] unsigned short 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1718 ;;      Params:         0       0       0       0       0       0       0       0       0
  1719 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1720 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1721 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1722 ;;Total ram usage:        4 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    5
  1725 ;; This function calls:
  1726 ;;		Nothing
  1727 ;; This function is called by:
  1728 ;;		_setup
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text4
  1733  0023D4                     __ptext4:
  1734                           	opt stack 0
  1735  0023D4                     _setup_timer1:
  1736                           	opt stack 24
  1737                           
  1738                           ;main.c: 330: TMR1ON = 0;
  1739                           
  1740                           ;incstack = 0
  1741  0023D4  90CD               	bcf	4045,0,c	;volatile
  1742                           
  1743                           ;main.c: 332: T1RD16 = 1;
  1744  0023D6  8ECD               	bsf	4045,7,c	;volatile
  1745                           
  1746                           ;main.c: 334: T1RUN = 0;
  1747  0023D8  9CCD               	bcf	4045,6,c	;volatile
  1748                           
  1749                           ;main.c: 335: TMR1CS = 0;
  1750  0023DA  92CD               	bcf	4045,1,c	;volatile
  1751                           
  1752                           ;main.c: 337: TMR1IF = 0;
  1753  0023DC  909E               	bcf	3998,0,c	;volatile
  1754                           
  1755                           ;main.c: 338: TMR1IP = 1;
  1756  0023DE  809F               	bsf	3999,0,c	;volatile
  1757                           
  1758                           ;main.c: 339: TMR1IE = 1;
  1759  0023E0  809D               	bsf	3997,0,c	;volatile
  1760                           
  1761                           ;main.c: 343: T1CKPS0 = T1CKPS1 = 1;
  1762  0023E2  8ACD               	bsf	4045,5,c	;volatile
  1763  0023E4  88CD               	bsf	4045,4,c	;volatile
  1764                           
  1765                           ;main.c: 345: unsigned short tmp = (8000000UL / 4UL / 8UL);
  1766  0023E6  0ED0               	movlw	208
  1767  0023E8  0100               	movlb	0	; () banked
  1768  0023EA  6F79               	movwf	(setup_timer1@tmp+1)& (0+255),b
  1769  0023EC  0E90               	movlw	144
  1770  0023EE  6F78               	movwf	setup_timer1@tmp& (0+255),b
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;main.c: 346: TMR1 = 0xFFFFU - tmp;
  1774  0023F0  C078  F076         	movff	setup_timer1@tmp,??_setup_timer1
  1775  0023F4  C079  F077         	movff	setup_timer1@tmp+1,??_setup_timer1+1
  1776  0023F8  0100               	movlb	0	; () banked
  1777  0023FA  1F76               	comf	??_setup_timer1& (0+255),f,b
  1778  0023FC  1F77               	comf	(??_setup_timer1+1)& (0+255),f,b
  1779  0023FE  4B76               	infsnz	??_setup_timer1& (0+255),f,b
  1780  002400  2B77               	incf	(??_setup_timer1+1)& (0+255),f,b
  1781  002402  0EFF               	movlw	255
  1782  002404  0100               	movlb	0	; () banked
  1783  002406  2576               	addwf	??_setup_timer1& (0+255),w,b
  1784  002408  6ECE               	movwf	4046,c	;volatile
  1785  00240A  0EFF               	movlw	255
  1786  00240C  0100               	movlb	0	; () banked
  1787  00240E  2177               	addwfc	(??_setup_timer1+1)& (0+255),w,b
  1788  002410  6ECF               	movwf	4047,c	;volatile
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;main.c: 348: TMR1ON = 1;
  1792  002412  80CD               	bsf	4045,0,c	;volatile
  1793                           
  1794                           ; BSR set to: 0
  1795  002414  0012               	return		;funcret
  1796  002416                     __end_of_setup_timer1:
  1797                           	opt stack 0
  1798                           tblptru	equ	0xFF8
  1799                           tblptrh	equ	0xFF7
  1800                           tblptrl	equ	0xFF6
  1801                           tablat	equ	0xFF5
  1802                           intcon	equ	0xFF2
  1803                           postinc0	equ	0xFEE
  1804                           wreg	equ	0xFE8
  1805                           status	equ	0xFD8
  1806                           
  1807 ;; *************** function _setup_timer0 *****************
  1808 ;; Defined at:
  1809 ;;		line 301 in file "main.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;		None
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;		None
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, status,2
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1823 ;;      Params:         0       0       0       0       0       0       0       0       0
  1824 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1825 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1826 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1827 ;;Total ram usage:        0 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; Hardware stack levels required when called:    5
  1830 ;; This function calls:
  1831 ;;		Nothing
  1832 ;; This function is called by:
  1833 ;;		_setup
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           	psect	text5
  1838  00251C                     __ptext5:
  1839                           	opt stack 0
  1840  00251C                     _setup_timer0:
  1841                           	opt stack 24
  1842                           
  1843                           ;main.c: 306: TMR0ON = 0;
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;incstack = 0
  1847  00251C  9ED5               	bcf	4053,7,c	;volatile
  1848                           
  1849                           ;main.c: 308: TMR0 = 0;
  1850  00251E  0E00               	movlw	0
  1851  002520  6ED7               	movwf	4055,c	;volatile
  1852  002522  0E00               	movlw	0
  1853  002524  6ED6               	movwf	4054,c	;volatile
  1854                           
  1855                           ;main.c: 310: T08BIT = 0;
  1856  002526  9CD5               	bcf	4053,6,c	;volatile
  1857                           
  1858                           ;main.c: 312: T0CS = 1;
  1859  002528  8AD5               	bsf	4053,5,c	;volatile
  1860                           
  1861                           ;main.c: 314: T0IF = 0;
  1862  00252A  94F2               	bcf	intcon,2,c	;volatile
  1863                           
  1864                           ;main.c: 315: T0IP = 0;
  1865  00252C  94F1               	bcf	intcon2,2,c	;volatile
  1866                           
  1867                           ;main.c: 316: T0IE = 1;
  1868  00252E  8AF2               	bsf	intcon,5,c	;volatile
  1869                           
  1870                           ;main.c: 318: PSA = 0;
  1871  002530  96D5               	bcf	4053,3,c	;volatile
  1872                           
  1873                           ;main.c: 320: T0PS0 = T0PS1 = T0PS2 = 0;
  1874  002532  94D5               	bcf	4053,2,c	;volatile
  1875  002534  92D5               	bcf	4053,1,c	;volatile
  1876  002536  90D5               	bcf	4053,0,c	;volatile
  1877  002538  0012               	return		;funcret
  1878  00253A                     __end_of_setup_timer0:
  1879                           	opt stack 0
  1880                           tblptru	equ	0xFF8
  1881                           tblptrh	equ	0xFF7
  1882                           tblptrl	equ	0xFF6
  1883                           tablat	equ	0xFF5
  1884                           intcon	equ	0xFF2
  1885                           intcon2	equ	0xFF1
  1886                           postinc0	equ	0xFEE
  1887                           wreg	equ	0xFE8
  1888                           status	equ	0xFD8
  1889                           
  1890 ;; *************** function _setup_therm *****************
  1891 ;; Defined at:
  1892 ;;		line 275 in file "main.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;		None
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		None
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1906 ;;      Params:         0       0       0       0       0       0       0       0       0
  1907 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1909 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1910 ;;Total ram usage:        0 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; Hardware stack levels required when called:    5
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_setup
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text6
  1921  0024D6                     __ptext6:
  1922                           	opt stack 0
  1923  0024D6                     _setup_therm:
  1924                           	opt stack 24
  1925                           
  1926                           ;main.c: 279: TRISA0 = 1;
  1927                           
  1928                           ;incstack = 0
  1929  0024D6  8092               	bsf	3986,0,c	;volatile
  1930                           
  1931                           ;main.c: 281: ADON = 1;
  1932  0024D8  80C2               	bsf	4034,0,c	;volatile
  1933                           
  1934                           ;main.c: 282: ADIE = 0;
  1935  0024DA  9C9D               	bcf	3997,6,c	;volatile
  1936                           
  1937                           ;main.c: 283: ADIP = 0;
  1938  0024DC  9C9F               	bcf	3999,6,c	;volatile
  1939                           
  1940                           ;main.c: 284: ADIF = 0;
  1941  0024DE  9C9E               	bcf	3998,6,c	;volatile
  1942                           
  1943                           ;main.c: 286: CHS0 = CHS1 = CHS2 = CHS3 = 0;
  1944  0024E0  9AC2               	bcf	4034,5,c	;volatile
  1945  0024E2  98C2               	bcf	4034,4,c	;volatile
  1946  0024E4  96C2               	bcf	4034,3,c	;volatile
  1947  0024E6  94C2               	bcf	4034,2,c	;volatile
  1948                           
  1949                           ;main.c: 288: PCFG0 = 0;
  1950  0024E8  90C1               	bcf	4033,0,c	;volatile
  1951                           
  1952                           ;main.c: 289: PCFG1 = PCFG2 = PCFG3 = 1;
  1953  0024EA  86C1               	bsf	4033,3,c	;volatile
  1954  0024EC  84C1               	bsf	4033,2,c	;volatile
  1955  0024EE  82C1               	bsf	4033,1,c	;volatile
  1956                           
  1957                           ;main.c: 291: ACQT2 = 1;
  1958  0024F0  8AC0               	bsf	4032,5,c	;volatile
  1959                           
  1960                           ;main.c: 292: ACQT1 = ACQT0 = 0;
  1961  0024F2  96C0               	bcf	4032,3,c	;volatile
  1962  0024F4  98C0               	bcf	4032,4,c	;volatile
  1963                           
  1964                           ;main.c: 294: ADCS2 = 1;
  1965  0024F6  84C0               	bsf	4032,2,c	;volatile
  1966                           
  1967                           ;main.c: 295: ADCS1 = 0;
  1968  0024F8  92C0               	bcf	4032,1,c	;volatile
  1969                           
  1970                           ;main.c: 296: ADCS0 = 1;
  1971  0024FA  80C0               	bsf	4032,0,c	;volatile
  1972  0024FC  0012               	return		;funcret
  1973  0024FE                     __end_of_setup_therm:
  1974                           	opt stack 0
  1975                           tblptru	equ	0xFF8
  1976                           tblptrh	equ	0xFF7
  1977                           tblptrl	equ	0xFF6
  1978                           tablat	equ	0xFF5
  1979                           intcon	equ	0xFF2
  1980                           intcon2	equ	0xFF1
  1981                           postinc0	equ	0xFEE
  1982                           wreg	equ	0xFE8
  1983                           status	equ	0xFD8
  1984                           
  1985 ;; *************** function _setup_io *****************
  1986 ;; Defined at:
  1987 ;;		line 256 in file "main.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;		None
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		None
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2001 ;;      Params:         0       0       0       0       0       0       0       0       0
  2002 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2004 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2005 ;;Total ram usage:        0 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    5
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_setup
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text7
  2016  002574                     __ptext7:
  2017                           	opt stack 0
  2018  002574                     _setup_io:
  2019                           	opt stack 24
  2020                           
  2021                           ;main.c: 259: nRBPU = 0;
  2022                           
  2023                           ;incstack = 0
  2024  002574  9EF1               	bcf	intcon2,7,c	;volatile
  2025                           
  2026                           ;main.c: 261: TRISA3 = 0;
  2027  002576  9692               	bcf	3986,3,c	;volatile
  2028                           
  2029                           ;main.c: 262: TRISA3 = 1;
  2030  002578  8692               	bsf	3986,3,c	;volatile
  2031                           
  2032                           ;main.c: 263: TRISA4 = 0;
  2033  00257A  9892               	bcf	3986,4,c	;volatile
  2034                           
  2035                           ;main.c: 264: TRISA4 = 1;
  2036  00257C  8892               	bsf	3986,4,c	;volatile
  2037                           
  2038                           ;main.c: 265: TRISA2 = 0;
  2039  00257E  9492               	bcf	3986,2,c	;volatile
  2040                           
  2041                           ;main.c: 266: LATA2 = 1;
  2042  002580  8489               	bsf	3977,2,c	;volatile
  2043                           
  2044                           ;main.c: 267: TRISA5 = 0;
  2045  002582  9A92               	bcf	3986,5,c	;volatile
  2046                           
  2047                           ;main.c: 268: LATA5 = 0;
  2048  002584  9A89               	bcf	3977,5,c	;volatile
  2049                           
  2050                           ;main.c: 270: TRISC1 = 0;
  2051  002586  9294               	bcf	3988,1,c	;volatile
  2052                           
  2053                           ;main.c: 271: TRISC2 = 0;
  2054  002588  9494               	bcf	3988,2,c	;volatile
  2055                           
  2056                           ;main.c: 272: TRISC0 = 0;
  2057  00258A  9094               	bcf	3988,0,c	;volatile
  2058  00258C  0012               	return		;funcret
  2059  00258E                     __end_of_setup_io:
  2060                           	opt stack 0
  2061                           tblptru	equ	0xFF8
  2062                           tblptrh	equ	0xFF7
  2063                           tblptrl	equ	0xFF6
  2064                           tablat	equ	0xFF5
  2065                           intcon	equ	0xFF2
  2066                           intcon2	equ	0xFF1
  2067                           postinc0	equ	0xFEE
  2068                           wreg	equ	0xFE8
  2069                           status	equ	0xFD8
  2070                           
  2071 ;; *************** function _setup_eeprom *****************
  2072 ;; Defined at:
  2073 ;;		line 380 in file "main.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;		None
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		None
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2087 ;;      Params:         0       0       0       0       0       0       0       0       0
  2088 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2090 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2091 ;;Total ram usage:        0 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:    5
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_setup
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text8
  2102  0025A2                     __ptext8:
  2103                           	opt stack 0
  2104  0025A2                     _setup_eeprom:
  2105                           	opt stack 24
  2106                           
  2107                           ;main.c: 383: EEPGD = 0;
  2108                           
  2109                           ;incstack = 0
  2110  0025A2  9EA6               	bcf	4006,7,c	;volatile
  2111                           
  2112                           ;main.c: 384: CFGS = 0;
  2113  0025A4  9CA6               	bcf	4006,6,c	;volatile
  2114                           
  2115                           ;main.c: 386: FREE = 0;
  2116  0025A6  98A6               	bcf	4006,4,c	;volatile
  2117                           
  2118                           ;main.c: 388: WRERR = 0;
  2119  0025A8  96A6               	bcf	4006,3,c	;volatile
  2120                           
  2121                           ;main.c: 390: WREN = 0;
  2122  0025AA  94A6               	bcf	4006,2,c	;volatile
  2123                           
  2124                           ;main.c: 392: EEIF = 0;
  2125  0025AC  98A1               	bcf	4001,4,c	;volatile
  2126                           
  2127                           ;main.c: 393: EEIP = 0;
  2128  0025AE  98A2               	bcf	4002,4,c	;volatile
  2129                           
  2130                           ;main.c: 394: EEIE = 1;
  2131  0025B0  88A0               	bsf	4000,4,c	;volatile
  2132  0025B2  0012               	return		;funcret
  2133  0025B4                     __end_of_setup_eeprom:
  2134                           	opt stack 0
  2135                           tblptru	equ	0xFF8
  2136                           tblptrh	equ	0xFF7
  2137                           tblptrl	equ	0xFF6
  2138                           tablat	equ	0xFF5
  2139                           intcon	equ	0xFF2
  2140                           intcon2	equ	0xFF1
  2141                           postinc0	equ	0xFEE
  2142                           wreg	equ	0xFE8
  2143                           status	equ	0xFD8
  2144                           
  2145 ;; *************** function _get_temp *****************
  2146 ;; Defined at:
  2147 ;;		line 463 in file "main.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;		None
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  resistance      3  108[BANK0 ] void 
  2152 ;;  voltage         3  105[BANK0 ] void 
  2153 ;;  temp            3   96[BANK0 ] void 
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  3   93[BANK0 ] float 
  2156 ;; Registers used:
  2157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2163 ;;      Params:         0       3       0       0       0       0       0       0       0
  2164 ;;      Locals:         0      15       0       0       0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2166 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2167 ;;Total ram usage:       18 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    9
  2170 ;; This function calls:
  2171 ;;		___ftadd
  2172 ;;		___ftdiv
  2173 ;;		___ftmul
  2174 ;;		___ftneg
  2175 ;;		___lwtoft
  2176 ;;		_log
  2177 ;; This function is called by:
  2178 ;;		_main
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text9
  2183  000D66                     __ptext9:
  2184                           	opt stack 0
  2185  000D66                     _get_temp:
  2186                           	opt stack 21
  2187                           
  2188                           ;main.c: 466: GO = 1;
  2189                           
  2190                           ;incstack = 0
  2191  000D66  82C2               	bsf	4034,1,c	;volatile
  2192  000D68                     l389:
  2193  000D68  B2C2               	btfsc	4034,1,c	;volatile
  2194  000D6A  D7FE               	goto	l389
  2195                           
  2196                           ;main.c: 470: double voltage = ((double) ADRES) * 5.0 / ((double) (1L << 16));
  2197  000D6C  0E00               	movlw	0
  2198  000D6E  0100               	movlb	0	; () banked
  2199  000D70  6F91               	movwf	___ftmul@f2& (0+255),b
  2200  000D72  0EA0               	movlw	160
  2201  000D74  0100               	movlb	0	; () banked
  2202  000D76  6F92               	movwf	(___ftmul@f2+1)& (0+255),b
  2203  000D78  0E40               	movlw	64
  2204  000D7A  0100               	movlb	0	; () banked
  2205  000D7C  6F93               	movwf	(___ftmul@f2+2)& (0+255),b
  2206  000D7E  CFC3 F07E          	movff	4035,___lwtoft@c	;volatile
  2207  000D82  CFC4 F07F          	movff	4036,___lwtoft@c+1	;volatile
  2208  000D86  EC56  F012         	call	___lwtoft	;wreg free
  2209  000D8A  C07E  F08E         	movff	?___lwtoft,___ftmul@f1
  2210  000D8E  C07F  F08F         	movff	?___lwtoft+1,___ftmul@f1+1
  2211  000D92  C080  F090         	movff	?___lwtoft+2,___ftmul@f1+2
  2212  000D96  EC8C  F007         	call	___ftmul	;wreg free
  2213  000D9A  C08E  F0AE         	movff	?___ftmul,___ftdiv@f1
  2214  000D9E  C08F  F0AF         	movff	?___ftmul+1,___ftdiv@f1+1
  2215  000DA2  C090  F0B0         	movff	?___ftmul+2,___ftdiv@f1+2
  2216  000DA6  0E00               	movlw	0
  2217  000DA8  0100               	movlb	0	; () banked
  2218  000DAA  6FB1               	movwf	___ftdiv@f2& (0+255),b
  2219  000DAC  0E80               	movlw	128
  2220  000DAE  0100               	movlb	0	; () banked
  2221  000DB0  6FB2               	movwf	(___ftdiv@f2+1)& (0+255),b
  2222  000DB2  0E47               	movlw	71
  2223  000DB4  0100               	movlb	0	; () banked
  2224  000DB6  6FB3               	movwf	(___ftdiv@f2+2)& (0+255),b
  2225  000DB8  ECE3  F008         	call	___ftdiv	;wreg free
  2226  000DBC  C0AE  F0C9         	movff	?___ftdiv,get_temp@voltage
  2227  000DC0  C0AF  F0CA         	movff	?___ftdiv+1,get_temp@voltage+1
  2228  000DC4  C0B0  F0CB         	movff	?___ftdiv+2,get_temp@voltage+2
  2229                           
  2230                           ;main.c: 483: double resistance = (voltage / (5 - voltage)) * (1.00e3);
  2231  000DC8  0E00               	movlw	0
  2232  000DCA  0100               	movlb	0	; () banked
  2233  000DCC  6F85               	movwf	___ftadd@f2& (0+255),b
  2234  000DCE  0EA0               	movlw	160
  2235  000DD0  0100               	movlb	0	; () banked
  2236  000DD2  6F86               	movwf	(___ftadd@f2+1)& (0+255),b
  2237  000DD4  0E40               	movlw	64
  2238  000DD6  0100               	movlb	0	; () banked
  2239  000DD8  6F87               	movwf	(___ftadd@f2+2)& (0+255),b
  2240  000DDA  C0C9  F076         	movff	get_temp@voltage,___ftneg@f1
  2241  000DDE  C0CA  F077         	movff	get_temp@voltage+1,___ftneg@f1+1
  2242  000DE2  C0CB  F078         	movff	get_temp@voltage+2,___ftneg@f1+2
  2243  000DE6  EC3E  F012         	call	___ftneg	;wreg free
  2244  000DEA  C076  F082         	movff	?___ftneg,___ftadd@f1
  2245  000DEE  C077  F083         	movff	?___ftneg+1,___ftadd@f1+1
  2246  000DF2  C078  F084         	movff	?___ftneg+2,___ftadd@f1+2
  2247  000DF6  EC7F  F005         	call	___ftadd	;wreg free
  2248  000DFA  C082  F0B1         	movff	?___ftadd,___ftdiv@f2
  2249  000DFE  C083  F0B2         	movff	?___ftadd+1,___ftdiv@f2+1
  2250  000E02  C084  F0B3         	movff	?___ftadd+2,___ftdiv@f2+2
  2251  000E06  C0C9  F0AE         	movff	get_temp@voltage,___ftdiv@f1
  2252  000E0A  C0CA  F0AF         	movff	get_temp@voltage+1,___ftdiv@f1+1
  2253  000E0E  C0CB  F0B0         	movff	get_temp@voltage+2,___ftdiv@f1+2
  2254  000E12  ECE3  F008         	call	___ftdiv	;wreg free
  2255  000E16  C0AE  F08E         	movff	?___ftdiv,___ftmul@f1
  2256  000E1A  C0AF  F08F         	movff	?___ftdiv+1,___ftmul@f1+1
  2257  000E1E  C0B0  F090         	movff	?___ftdiv+2,___ftmul@f1+2
  2258  000E22  0E00               	movlw	0
  2259  000E24  0100               	movlb	0	; () banked
  2260  000E26  6F91               	movwf	___ftmul@f2& (0+255),b
  2261  000E28  0E7A               	movlw	122
  2262  000E2A  0100               	movlb	0	; () banked
  2263  000E2C  6F92               	movwf	(___ftmul@f2+1)& (0+255),b
  2264  000E2E  0E44               	movlw	68
  2265  000E30  0100               	movlb	0	; () banked
  2266  000E32  6F93               	movwf	(___ftmul@f2+2)& (0+255),b
  2267  000E34  EC8C  F007         	call	___ftmul	;wreg free
  2268  000E38  C08E  F0CC         	movff	?___ftmul,get_temp@resistance
  2269  000E3C  C08F  F0CD         	movff	?___ftmul+1,get_temp@resistance+1
  2270  000E40  C090  F0CE         	movff	?___ftmul+2,get_temp@resistance+2
  2271                           
  2272                           ;main.c: 485: double temp = (1 / ((0) + (0) * log(resistance) + (0) * log(resistance)));
  2273  000E44  C0CC  F0A9         	movff	get_temp@resistance,log@x
  2274  000E48  C0CD  F0AA         	movff	get_temp@resistance+1,log@x+1
  2275  000E4C  C0CE  F0AB         	movff	get_temp@resistance+2,log@x+2
  2276  000E50  EC3B  F008         	call	_log	;wreg free
  2277  000E54  C0A9  F0C3         	movff	?_log,_get_temp$980
  2278  000E58  C0AA  F0C4         	movff	?_log+1,_get_temp$980+1
  2279  000E5C  C0AB  F0C5         	movff	?_log+2,_get_temp$980+2
  2280                           
  2281                           ;main.c: 485: double temp = (1 / ((0) + (0) * log(resistance) + (0) * log(resistance)));
  2282  000E60  C0CC  F0A9         	movff	get_temp@resistance,log@x
  2283  000E64  C0CD  F0AA         	movff	get_temp@resistance+1,log@x+1
  2284  000E68  C0CE  F0AB         	movff	get_temp@resistance+2,log@x+2
  2285  000E6C  EC3B  F008         	call	_log	;wreg free
  2286  000E70  C0A9  F0C6         	movff	?_log,_get_temp$981
  2287  000E74  C0AA  F0C7         	movff	?_log+1,_get_temp$981+1
  2288  000E78  C0AB  F0C8         	movff	?_log+2,_get_temp$981+2
  2289                           
  2290                           ;main.c: 485: double temp = (1 / ((0) + (0) * log(resistance) + (0) * log(resistance)));
  2291  000E7C  0E00               	movlw	0
  2292  000E7E  0100               	movlb	0	; () banked
  2293  000E80  6FAE               	movwf	___ftdiv@f1& (0+255),b
  2294  000E82  0E80               	movlw	128
  2295  000E84  0100               	movlb	0	; () banked
  2296  000E86  6FAF               	movwf	(___ftdiv@f1+1)& (0+255),b
  2297  000E88  0E3F               	movlw	63
  2298  000E8A  0100               	movlb	0	; () banked
  2299  000E8C  6FB0               	movwf	(___ftdiv@f1+2)& (0+255),b
  2300  000E8E  0E00               	movlw	0
  2301  000E90  0100               	movlb	0	; () banked
  2302  000E92  6F91               	movwf	___ftmul@f2& (0+255),b
  2303  000E94  0E00               	movlw	0
  2304  000E96  0100               	movlb	0	; () banked
  2305  000E98  6F92               	movwf	(___ftmul@f2+1)& (0+255),b
  2306  000E9A  0E00               	movlw	0
  2307  000E9C  0100               	movlb	0	; () banked
  2308  000E9E  6F93               	movwf	(___ftmul@f2+2)& (0+255),b
  2309  000EA0  C0C3  F08E         	movff	_get_temp$980,___ftmul@f1
  2310  000EA4  C0C4  F08F         	movff	_get_temp$980+1,___ftmul@f1+1
  2311  000EA8  C0C5  F090         	movff	_get_temp$980+2,___ftmul@f1+2
  2312  000EAC  EC8C  F007         	call	___ftmul	;wreg free
  2313  000EB0  C08E  F085         	movff	?___ftmul,___ftadd@f2
  2314  000EB4  C08F  F086         	movff	?___ftmul+1,___ftadd@f2+1
  2315  000EB8  C090  F087         	movff	?___ftmul+2,___ftadd@f2+2
  2316  000EBC  0E00               	movlw	0
  2317  000EBE  0100               	movlb	0	; () banked
  2318  000EC0  6F91               	movwf	___ftmul@f2& (0+255),b
  2319  000EC2  0E00               	movlw	0
  2320  000EC4  0100               	movlb	0	; () banked
  2321  000EC6  6F92               	movwf	(___ftmul@f2+1)& (0+255),b
  2322  000EC8  0E00               	movlw	0
  2323  000ECA  0100               	movlb	0	; () banked
  2324  000ECC  6F93               	movwf	(___ftmul@f2+2)& (0+255),b
  2325  000ECE  C0C6  F08E         	movff	_get_temp$981,___ftmul@f1
  2326  000ED2  C0C7  F08F         	movff	_get_temp$981+1,___ftmul@f1+1
  2327  000ED6  C0C8  F090         	movff	_get_temp$981+2,___ftmul@f1+2
  2328  000EDA  EC8C  F007         	call	___ftmul	;wreg free
  2329  000EDE  C08E  F082         	movff	?___ftmul,___ftadd@f1
  2330  000EE2  C08F  F083         	movff	?___ftmul+1,___ftadd@f1+1
  2331  000EE6  C090  F084         	movff	?___ftmul+2,___ftadd@f1+2
  2332  000EEA  EC7F  F005         	call	___ftadd	;wreg free
  2333  000EEE  C082  F0B1         	movff	?___ftadd,___ftdiv@f2
  2334  000EF2  C083  F0B2         	movff	?___ftadd+1,___ftdiv@f2+1
  2335  000EF6  C084  F0B3         	movff	?___ftadd+2,___ftdiv@f2+2
  2336  000EFA  ECE3  F008         	call	___ftdiv	;wreg free
  2337  000EFE  C0AE  F0C0         	movff	?___ftdiv,get_temp@temp
  2338  000F02  C0AF  F0C1         	movff	?___ftdiv+1,get_temp@temp+1
  2339  000F06  C0B0  F0C2         	movff	?___ftdiv+2,get_temp@temp+2
  2340                           
  2341                           ;main.c: 487: return temp;
  2342  000F0A  C0C0  F0BD         	movff	get_temp@temp,?_get_temp
  2343  000F0E  C0C1  F0BE         	movff	get_temp@temp+1,?_get_temp+1
  2344  000F12  C0C2  F0BF         	movff	get_temp@temp+2,?_get_temp+2
  2345  000F16  0012               	return	
  2346  000F18                     __end_of_get_temp:
  2347                           	opt stack 0
  2348                           tblptru	equ	0xFF8
  2349                           tblptrh	equ	0xFF7
  2350                           tblptrl	equ	0xFF6
  2351                           tablat	equ	0xFF5
  2352                           intcon	equ	0xFF2
  2353                           intcon2	equ	0xFF1
  2354                           postinc0	equ	0xFEE
  2355                           wreg	equ	0xFE8
  2356                           status	equ	0xFD8
  2357                           
  2358 ;; *************** function _log *****************
  2359 ;; Defined at:
  2360 ;;		line 5 in file "/opt/microchip/xc8/v1.38/sources/common/log.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;  x               3   73[BANK0 ] float 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  exponent        2   76[BANK0 ] int 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  3   73[BANK0 ] int 
  2367 ;; Registers used:
  2368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2374 ;;      Params:         0       3       0       0       0       0       0       0       0
  2375 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2377 ;;      Totals:         0       5       0       0       0       0       0       0       0
  2378 ;;Total ram usage:        5 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    8
  2381 ;; This function calls:
  2382 ;;		___awtoft
  2383 ;;		___ftadd
  2384 ;;		___ftmul
  2385 ;;		_eval_poly
  2386 ;;		_frexp
  2387 ;; This function is called by:
  2388 ;;		_get_temp
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	text10
  2393  001076                     __ptext10:
  2394                           	opt stack 0
  2395  001076                     _log:
  2396                           	opt stack 21
  2397                           
  2398                           ;incstack = 0
  2399  001076  0100               	movlb	0	; () banked
  2400  001078  AFAB               	btfss	(log@x+2)& (0+255),7,b
  2401  00107A  D00F               	goto	l2800
  2402                           
  2403                           ; BSR set to: 0
  2404  00107C  0E00               	movlw	0
  2405  00107E  0100               	movlb	0	; () banked
  2406  001080  6FDA               	movwf	(_errno+1)& (0+255),b
  2407  001082  0E21               	movlw	33
  2408  001084  6FD9               	movwf	_errno& (0+255),b
  2409  001086  0E00               	movlw	0
  2410  001088  0100               	movlb	0	; () banked
  2411  00108A  6FA9               	movwf	?_log& (0+255),b
  2412  00108C  0E00               	movlw	0
  2413  00108E  0100               	movlb	0	; () banked
  2414  001090  6FAA               	movwf	(?_log+1)& (0+255),b
  2415  001092  0E00               	movlw	0
  2416  001094  0100               	movlb	0	; () banked
  2417  001096  6FAB               	movwf	(?_log+2)& (0+255),b
  2418                           
  2419                           ; BSR set to: 0
  2420  001098  0012               	return	
  2421  00109A                     l2800:
  2422                           
  2423                           ; BSR set to: 0
  2424  00109A  0100               	movlb	0	; () banked
  2425  00109C  51A9               	movf	log@x& (0+255),w,b
  2426  00109E  0100               	movlb	0	; () banked
  2427  0010A0  11AA               	iorwf	(log@x+1)& (0+255),w,b
  2428  0010A2  0100               	movlb	0	; () banked
  2429  0010A4  11AB               	iorwf	(log@x+2)& (0+255),w,b
  2430  0010A6  A4D8               	btfss	status,2,c
  2431  0010A8  D00F               	goto	l2806
  2432                           
  2433                           ; BSR set to: 0
  2434  0010AA  0E00               	movlw	0
  2435  0010AC  0100               	movlb	0	; () banked
  2436  0010AE  6FDA               	movwf	(_errno+1)& (0+255),b
  2437  0010B0  0E22               	movlw	34
  2438  0010B2  6FD9               	movwf	_errno& (0+255),b
  2439  0010B4  0E00               	movlw	0
  2440  0010B6  0100               	movlb	0	; () banked
  2441  0010B8  6FA9               	movwf	?_log& (0+255),b
  2442  0010BA  0E00               	movlw	0
  2443  0010BC  0100               	movlb	0	; () banked
  2444  0010BE  6FAA               	movwf	(?_log+1)& (0+255),b
  2445  0010C0  0E00               	movlw	0
  2446  0010C2  0100               	movlb	0	; () banked
  2447  0010C4  6FAB               	movwf	(?_log+2)& (0+255),b
  2448                           
  2449                           ; BSR set to: 0
  2450  0010C6  0012               	return	
  2451  0010C8                     l2806:
  2452                           
  2453                           ; BSR set to: 0
  2454  0010C8  0E00               	movlw	0
  2455  0010CA  0100               	movlb	0	; () banked
  2456  0010CC  6F91               	movwf	___ftmul@f2& (0+255),b
  2457  0010CE  0E00               	movlw	0
  2458  0010D0  0100               	movlb	0	; () banked
  2459  0010D2  6F92               	movwf	(___ftmul@f2+1)& (0+255),b
  2460  0010D4  0E40               	movlw	64
  2461  0010D6  0100               	movlb	0	; () banked
  2462  0010D8  6F93               	movwf	(___ftmul@f2+2)& (0+255),b
  2463  0010DA  0EAC               	movlw	low log@exponent
  2464  0010DC  0100               	movlb	0	; () banked
  2465  0010DE  6F79               	movwf	frexp@eptr& (0+255),b
  2466  0010E0  0E00               	movlw	high log@exponent
  2467  0010E2  0100               	movlb	0	; () banked
  2468  0010E4  6F7A               	movwf	(frexp@eptr+1)& (0+255),b
  2469  0010E6  C0A9  F076         	movff	log@x,frexp@value
  2470  0010EA  C0AA  F077         	movff	log@x+1,frexp@value+1
  2471  0010EE  C0AB  F078         	movff	log@x+2,frexp@value+2
  2472  0010F2  EC85  F00F         	call	_frexp	;wreg free
  2473  0010F6  C076  F08E         	movff	?_frexp,___ftmul@f1
  2474  0010FA  C077  F08F         	movff	?_frexp+1,___ftmul@f1+1
  2475  0010FE  C078  F090         	movff	?_frexp+2,___ftmul@f1+2
  2476  001102  EC8C  F007         	call	___ftmul	;wreg free
  2477  001106  C08E  F082         	movff	?___ftmul,___ftadd@f1
  2478  00110A  C08F  F083         	movff	?___ftmul+1,___ftadd@f1+1
  2479  00110E  C090  F084         	movff	?___ftmul+2,___ftadd@f1+2
  2480  001112  0E00               	movlw	0
  2481  001114  0100               	movlb	0	; () banked
  2482  001116  6F85               	movwf	___ftadd@f2& (0+255),b
  2483  001118  0E80               	movlw	128
  2484  00111A  0100               	movlb	0	; () banked
  2485  00111C  6F86               	movwf	(___ftadd@f2+1)& (0+255),b
  2486  00111E  0EBF               	movlw	191
  2487  001120  0100               	movlb	0	; () banked
  2488  001122  6F87               	movwf	(___ftadd@f2+2)& (0+255),b
  2489  001124  EC7F  F005         	call	___ftadd	;wreg free
  2490  001128  C082  F0A9         	movff	?___ftadd,log@x
  2491  00112C  C083  F0AA         	movff	?___ftadd+1,log@x+1
  2492  001130  C084  F0AB         	movff	?___ftadd+2,log@x+2
  2493  001134  0100               	movlb	0	; () banked
  2494  001136  07AC               	decf	log@exponent& (0+255),f,b
  2495  001138  A0D8               	btfss	status,0,c
  2496  00113A  07AD               	decf	(log@exponent+1)& (0+255),f,b
  2497                           
  2498                           ; BSR set to: 0
  2499  00113C  C0A9  F09D         	movff	log@x,eval_poly@x
  2500  001140  C0AA  F09E         	movff	log@x+1,eval_poly@x+1
  2501  001144  C0AB  F09F         	movff	log@x+2,eval_poly@x+2
  2502  001148  0E0B               	movlw	low log@coeff
  2503  00114A  0100               	movlb	0	; () banked
  2504  00114C  6FA0               	movwf	eval_poly@d& (0+255),b
  2505  00114E  0E08               	movlw	high log@coeff
  2506  001150  0100               	movlb	0	; () banked
  2507  001152  6FA1               	movwf	(eval_poly@d+1)& (0+255),b
  2508  001154  0E00               	movlw	0
  2509  001156  0100               	movlb	0	; () banked
  2510  001158  6FA3               	movwf	(eval_poly@n+1)& (0+255),b
  2511  00115A  0E08               	movlw	8
  2512  00115C  6FA2               	movwf	eval_poly@n& (0+255),b
  2513  00115E  EC1C  F00D         	call	_eval_poly	;wreg free
  2514  001162  C09D  F0A9         	movff	?_eval_poly,log@x
  2515  001166  C09E  F0AA         	movff	?_eval_poly+1,log@x+1
  2516  00116A  C09F  F0AB         	movff	?_eval_poly+2,log@x+2
  2517  00116E  0E72               	movlw	114
  2518  001170  0100               	movlb	0	; () banked
  2519  001172  6F91               	movwf	___ftmul@f2& (0+255),b
  2520  001174  0E31               	movlw	49
  2521  001176  0100               	movlb	0	; () banked
  2522  001178  6F92               	movwf	(___ftmul@f2+1)& (0+255),b
  2523  00117A  0E3F               	movlw	63
  2524  00117C  0100               	movlb	0	; () banked
  2525  00117E  6F93               	movwf	(___ftmul@f2+2)& (0+255),b
  2526  001180  C0AC  F07E         	movff	log@exponent,___awtoft@c
  2527  001184  C0AD  F07F         	movff	log@exponent+1,___awtoft@c+1
  2528  001188  ECC8  F011         	call	___awtoft	;wreg free
  2529  00118C  C07E  F08E         	movff	?___awtoft,___ftmul@f1
  2530  001190  C07F  F08F         	movff	?___awtoft+1,___ftmul@f1+1
  2531  001194  C080  F090         	movff	?___awtoft+2,___ftmul@f1+2
  2532  001198  EC8C  F007         	call	___ftmul	;wreg free
  2533  00119C  C08E  F082         	movff	?___ftmul,___ftadd@f1
  2534  0011A0  C08F  F083         	movff	?___ftmul+1,___ftadd@f1+1
  2535  0011A4  C090  F084         	movff	?___ftmul+2,___ftadd@f1+2
  2536  0011A8  C0A9  F085         	movff	log@x,___ftadd@f2
  2537  0011AC  C0AA  F086         	movff	log@x+1,___ftadd@f2+1
  2538  0011B0  C0AB  F087         	movff	log@x+2,___ftadd@f2+2
  2539  0011B4  EC7F  F005         	call	___ftadd	;wreg free
  2540  0011B8  C082  F0A9         	movff	?___ftadd,?_log
  2541  0011BC  C083  F0AA         	movff	?___ftadd+1,?_log+1
  2542  0011C0  C084  F0AB         	movff	?___ftadd+2,?_log+2
  2543  0011C4  0012               	return	
  2544  0011C6                     __end_of_log:
  2545                           	opt stack 0
  2546                           tblptru	equ	0xFF8
  2547                           tblptrh	equ	0xFF7
  2548                           tblptrl	equ	0xFF6
  2549                           tablat	equ	0xFF5
  2550                           intcon	equ	0xFF2
  2551                           intcon2	equ	0xFF1
  2552                           postinc0	equ	0xFEE
  2553                           wreg	equ	0xFE8
  2554                           status	equ	0xFD8
  2555                           
  2556 ;; *************** function _frexp *****************
  2557 ;; Defined at:
  2558 ;;		line 254 in file "/opt/microchip/xc8/v1.38/sources/common/frexp.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  value           3   22[BANK0 ] int 
  2561 ;;  eptr            2   25[BANK0 ] PTR int 
  2562 ;;		 -> log@exponent(2), 
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;		None
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  3   22[BANK0 ] PTR int 
  2567 ;; Registers used:
  2568 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2574 ;;      Params:         0       5       0       0       0       0       0       0       0
  2575 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2576 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2577 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2578 ;;Total ram usage:        7 bytes
  2579 ;; Hardware stack levels used:    1
  2580 ;; Hardware stack levels required when called:    5
  2581 ;; This function calls:
  2582 ;;		Nothing
  2583 ;; This function is called by:
  2584 ;;		_log
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text11
  2589  001F0A                     __ptext11:
  2590                           	opt stack 0
  2591  001F0A                     _frexp:
  2592                           	opt stack 23
  2593                           
  2594                           ;incstack = 0
  2595  001F0A  0100               	movlb	0	; () banked
  2596  001F0C  5176               	movf	frexp@value& (0+255),w,b
  2597  001F0E  0100               	movlb	0	; () banked
  2598  001F10  1177               	iorwf	(frexp@value+1)& (0+255),w,b
  2599  001F12  0100               	movlb	0	; () banked
  2600  001F14  1178               	iorwf	(frexp@value+2)& (0+255),w,b
  2601  001F16  A4D8               	btfss	status,2,c
  2602  001F18  D012               	goto	l2668
  2603                           
  2604                           ; BSR set to: 0
  2605  001F1A  C079  FFD9         	movff	frexp@eptr,fsr2l
  2606  001F1E  C07A  FFDA         	movff	frexp@eptr+1,fsr2h
  2607  001F22  0E00               	movlw	0
  2608  001F24  6EDE               	movwf	postinc2,c
  2609  001F26  0E00               	movlw	0
  2610  001F28  6EDD               	movwf	postdec2,c
  2611                           
  2612                           ; BSR set to: 0
  2613  001F2A  0E00               	movlw	0
  2614  001F2C  0100               	movlb	0	; () banked
  2615  001F2E  6F76               	movwf	?_frexp& (0+255),b
  2616  001F30  0E00               	movlw	0
  2617  001F32  0100               	movlb	0	; () banked
  2618  001F34  6F77               	movwf	(?_frexp+1)& (0+255),b
  2619  001F36  0E00               	movlw	0
  2620  001F38  0100               	movlb	0	; () banked
  2621  001F3A  6F78               	movwf	(?_frexp+2)& (0+255),b
  2622                           
  2623                           ; BSR set to: 0
  2624  001F3C  0012               	return	
  2625  001F3E                     l2668:
  2626                           
  2627                           ; BSR set to: 0
  2628  001F3E  0100               	movlb	0	; () banked
  2629  001F40  5178               	movf	(frexp@value+2)& (0+255),w,b
  2630  001F42  0B7F               	andlw	127
  2631  001F44  0100               	movlb	0	; () banked
  2632  001F46  6F7B               	movwf	??_frexp& (0+255),b
  2633  001F48  6B7C               	clrf	(??_frexp+1)& (0+255),b
  2634  001F4A  90D8               	bcf	status,0,c
  2635  001F4C  0100               	movlb	0	; () banked
  2636  001F4E  377B               	rlcf	??_frexp& (0+255),f,b
  2637  001F50  377C               	rlcf	(??_frexp+1)& (0+255),f,b
  2638  001F52  C079  FFD9         	movff	frexp@eptr,fsr2l
  2639  001F56  C07A  FFDA         	movff	frexp@eptr+1,fsr2h
  2640  001F5A  C07B  FFDE         	movff	??_frexp,postinc2
  2641  001F5E  C07C  FFDD         	movff	??_frexp+1,postdec2
  2642  001F62  0100               	movlb	0	; () banked
  2643  001F64  AF77               	btfss	(frexp@value+1)& (0+255),7,b
  2644  001F66  D004               	goto	u3030
  2645  001F68  0100               	movlb	0	; () banked
  2646  001F6A  6B7B               	clrf	??_frexp& (0+255),b
  2647  001F6C  2B7B               	incf	??_frexp& (0+255),f,b
  2648  001F6E  D002               	goto	u3038
  2649  001F70                     u3030:
  2650  001F70  0100               	movlb	0	; () banked
  2651  001F72  6B7B               	clrf	??_frexp& (0+255),b
  2652  001F74                     u3038:
  2653  001F74  0100               	movlb	0	; () banked
  2654  001F76  517B               	movf	??_frexp& (0+255),w,b
  2655  001F78  C079  FFD9         	movff	frexp@eptr,fsr2l
  2656  001F7C  C07A  FFDA         	movff	frexp@eptr+1,fsr2h
  2657  001F80  12DE               	iorwf	postinc2,f,c
  2658  001F82  0E00               	movlw	0
  2659  001F84  12DD               	iorwf	postdec2,f,c
  2660                           
  2661                           ; BSR set to: 0
  2662  001F86  C079  FFD9         	movff	frexp@eptr,fsr2l
  2663  001F8A  C07A  FFDA         	movff	frexp@eptr+1,fsr2h
  2664  001F8E  0E82               	movlw	130
  2665  001F90  26DE               	addwf	postinc2,f,c
  2666  001F92  0EFF               	movlw	255
  2667  001F94  22DD               	addwfc	postdec2,f,c
  2668                           
  2669                           ; BSR set to: 0
  2670  001F96  0100               	movlb	0	; () banked
  2671  001F98  8178               	bsf	(frexp@value+2)& (0+255),0,b
  2672  001F9A  8378               	bsf	(frexp@value+2)& (0+255),1,b
  2673  001F9C  8578               	bsf	(frexp@value+2)& (0+255),2,b
  2674  001F9E  8778               	bsf	(frexp@value+2)& (0+255),3,b
  2675  001FA0  8978               	bsf	(frexp@value+2)& (0+255),4,b
  2676  001FA2  8B78               	bsf	(frexp@value+2)& (0+255),5,b
  2677  001FA4  9D78               	bcf	(frexp@value+2)& (0+255),6,b
  2678                           
  2679                           ; BSR set to: 0
  2680  001FA6  0100               	movlb	0	; () banked
  2681  001FA8  9F77               	bcf	(frexp@value+1)& (0+255),7,b
  2682                           
  2683                           ; BSR set to: 0
  2684  001FAA  C076  F076         	movff	frexp@value,?_frexp
  2685  001FAE  C077  F077         	movff	frexp@value+1,?_frexp+1
  2686  001FB2  C078  F078         	movff	frexp@value+2,?_frexp+2
  2687  001FB6  0012               	return	
  2688  001FB8                     __end_of_frexp:
  2689                           	opt stack 0
  2690                           tblptru	equ	0xFF8
  2691                           tblptrh	equ	0xFF7
  2692                           tblptrl	equ	0xFF6
  2693                           tablat	equ	0xFF5
  2694                           intcon	equ	0xFF2
  2695                           intcon2	equ	0xFF1
  2696                           postinc0	equ	0xFEE
  2697                           wreg	equ	0xFE8
  2698                           postinc2	equ	0xFDE
  2699                           postdec2	equ	0xFDD
  2700                           fsr2h	equ	0xFDA
  2701                           fsr2l	equ	0xFD9
  2702                           status	equ	0xFD8
  2703                           
  2704 ;; *************** function _eval_poly *****************
  2705 ;; Defined at:
  2706 ;;		line 4 in file "/opt/microchip/xc8/v1.38/sources/common/evalpoly.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  x               3   61[BANK0 ] PTR int 
  2709 ;;  d               2   64[BANK0 ] PTR const 
  2710 ;;		 -> log@coeff(27), 
  2711 ;;  n               2   66[BANK0 ] int 
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;  res             3   70[BANK0 ] int 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  3   61[BANK0 ] int 
  2716 ;; Registers used:
  2717 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2723 ;;      Params:         0       7       0       0       0       0       0       0       0
  2724 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2725 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2726 ;;      Totals:         0      12       0       0       0       0       0       0       0
  2727 ;;Total ram usage:       12 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; Hardware stack levels required when called:    7
  2730 ;; This function calls:
  2731 ;;		___ftadd
  2732 ;;		___ftmul
  2733 ;;		___wmul
  2734 ;; This function is called by:
  2735 ;;		_log
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           	psect	text12
  2740  001A38                     __ptext12:
  2741                           	opt stack 0
  2742  001A38                     _eval_poly:
  2743                           	opt stack 21
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;incstack = 0
  2747  001A38  C0A2  F076         	movff	eval_poly@n,___wmul@multiplier
  2748  001A3C  C0A3  F077         	movff	eval_poly@n+1,___wmul@multiplier+1
  2749  001A40  0E00               	movlw	0
  2750  001A42  0100               	movlb	0	; () banked
  2751  001A44  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2752  001A46  0E03               	movlw	3
  2753  001A48  6F78               	movwf	___wmul@multiplicand& (0+255),b
  2754  001A4A  EC0B  F012         	call	___wmul	;wreg free
  2755  001A4E  C0A0  F0A4         	movff	eval_poly@d,??_eval_poly
  2756  001A52  C0A1  F0A5         	movff	eval_poly@d+1,??_eval_poly+1
  2757  001A56  0100               	movlb	0	; () banked
  2758  001A58  5176               	movf	?___wmul& (0+255),w,b
  2759  001A5A  0100               	movlb	0	; () banked
  2760  001A5C  27A4               	addwf	??_eval_poly& (0+255),f,b
  2761  001A5E  0100               	movlb	0	; () banked
  2762  001A60  5177               	movf	(?___wmul+1)& (0+255),w,b
  2763  001A62  0100               	movlb	0	; () banked
  2764  001A64  23A5               	addwfc	(??_eval_poly+1)& (0+255),f,b
  2765  001A66  C0A4  FFF6         	movff	??_eval_poly,tblptrl
  2766  001A6A  C0A5  FFF7         	movff	??_eval_poly+1,tblptrh
  2767  001A6E                     	if	0	;tblptru may be non-zero
  2768  001A6E                     	endif
  2769  001A6E                     	if	0	;tblptru may be non-zero
  2770  001A6E                     	endif
  2771  001A6E  0009               	tblrd		*+
  2772  001A70  CFF5 F0A6          	movff	tablat,eval_poly@res
  2773  001A74  0009               	tblrd		*+
  2774  001A76  CFF5 F0A7          	movff	tablat,eval_poly@res+1
  2775  001A7A  000A               	tblrd		*-
  2776  001A7C  CFF5 F0A8          	movff	tablat,eval_poly@res+2
  2777  001A80  D044               	goto	l2684
  2778  001A82                     l2682:
  2779                           
  2780                           ; BSR set to: 0
  2781  001A82  C0A6  F091         	movff	eval_poly@res,___ftmul@f2
  2782  001A86  C0A7  F092         	movff	eval_poly@res+1,___ftmul@f2+1
  2783  001A8A  C0A8  F093         	movff	eval_poly@res+2,___ftmul@f2+2
  2784  001A8E  C09D  F08E         	movff	eval_poly@x,___ftmul@f1
  2785  001A92  C09E  F08F         	movff	eval_poly@x+1,___ftmul@f1+1
  2786  001A96  C09F  F090         	movff	eval_poly@x+2,___ftmul@f1+2
  2787  001A9A  EC8C  F007         	call	___ftmul	;wreg free
  2788  001A9E  C08E  F082         	movff	?___ftmul,___ftadd@f1
  2789  001AA2  C08F  F083         	movff	?___ftmul+1,___ftadd@f1+1
  2790  001AA6  C090  F084         	movff	?___ftmul+2,___ftadd@f1+2
  2791  001AAA  0E00               	movlw	0
  2792  001AAC  0100               	movlb	0	; () banked
  2793  001AAE  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2794  001AB0  0E03               	movlw	3
  2795  001AB2  6F78               	movwf	___wmul@multiplicand& (0+255),b
  2796  001AB4  0100               	movlb	0	; () banked
  2797  001AB6  07A2               	decf	eval_poly@n& (0+255),f,b
  2798  001AB8  A0D8               	btfss	status,0,c
  2799  001ABA  07A3               	decf	(eval_poly@n+1)& (0+255),f,b
  2800  001ABC  C0A2  F076         	movff	eval_poly@n,___wmul@multiplier
  2801  001AC0  C0A3  F077         	movff	eval_poly@n+1,___wmul@multiplier+1
  2802  001AC4  EC0B  F012         	call	___wmul	;wreg free
  2803  001AC8  C0A0  F0A4         	movff	eval_poly@d,??_eval_poly
  2804  001ACC  C0A1  F0A5         	movff	eval_poly@d+1,??_eval_poly+1
  2805  001AD0  0100               	movlb	0	; () banked
  2806  001AD2  5176               	movf	?___wmul& (0+255),w,b
  2807  001AD4  0100               	movlb	0	; () banked
  2808  001AD6  27A4               	addwf	??_eval_poly& (0+255),f,b
  2809  001AD8  0100               	movlb	0	; () banked
  2810  001ADA  5177               	movf	(?___wmul+1)& (0+255),w,b
  2811  001ADC  0100               	movlb	0	; () banked
  2812  001ADE  23A5               	addwfc	(??_eval_poly+1)& (0+255),f,b
  2813  001AE0  C0A4  FFF6         	movff	??_eval_poly,tblptrl
  2814  001AE4  C0A5  FFF7         	movff	??_eval_poly+1,tblptrh
  2815  001AE8                     	if	0	;tblptru may be non-zero
  2816  001AE8                     	endif
  2817  001AE8                     	if	0	;tblptru may be non-zero
  2818  001AE8                     	endif
  2819  001AE8  0009               	tblrd		*+
  2820  001AEA  CFF5 F085          	movff	tablat,___ftadd@f2
  2821  001AEE  0009               	tblrd		*+
  2822  001AF0  CFF5 F086          	movff	tablat,___ftadd@f2+1
  2823  001AF4  000A               	tblrd		*-
  2824  001AF6  CFF5 F087          	movff	tablat,___ftadd@f2+2
  2825  001AFA  EC7F  F005         	call	___ftadd	;wreg free
  2826  001AFE  C082  F0A6         	movff	?___ftadd,eval_poly@res
  2827  001B02  C083  F0A7         	movff	?___ftadd+1,eval_poly@res+1
  2828  001B06  C084  F0A8         	movff	?___ftadd+2,eval_poly@res+2
  2829  001B0A                     l2684:
  2830  001B0A  0100               	movlb	0	; () banked
  2831  001B0C  51A2               	movf	eval_poly@n& (0+255),w,b
  2832  001B0E  0100               	movlb	0	; () banked
  2833  001B10  11A3               	iorwf	(eval_poly@n+1)& (0+255),w,b
  2834  001B12  A4D8               	btfss	status,2,c
  2835  001B14  D7B6               	goto	l2682
  2836                           
  2837                           ; BSR set to: 0
  2838  001B16  C0A6  F09D         	movff	eval_poly@res,?_eval_poly
  2839  001B1A  C0A7  F09E         	movff	eval_poly@res+1,?_eval_poly+1
  2840  001B1E  C0A8  F09F         	movff	eval_poly@res+2,?_eval_poly+2
  2841                           
  2842                           ; BSR set to: 0
  2843  001B22  0012               	return		;funcret
  2844  001B24                     __end_of_eval_poly:
  2845                           	opt stack 0
  2846                           tblptru	equ	0xFF8
  2847                           tblptrh	equ	0xFF7
  2848                           tblptrl	equ	0xFF6
  2849                           tablat	equ	0xFF5
  2850                           intcon	equ	0xFF2
  2851                           intcon2	equ	0xFF1
  2852                           postinc0	equ	0xFEE
  2853                           wreg	equ	0xFE8
  2854                           postinc2	equ	0xFDE
  2855                           postdec2	equ	0xFDD
  2856                           fsr2h	equ	0xFDA
  2857                           fsr2l	equ	0xFD9
  2858                           status	equ	0xFD8
  2859                           
  2860 ;; *************** function ___wmul *****************
  2861 ;; Defined at:
  2862 ;;		line 15 in file "/opt/microchip/xc8/v1.38/sources/common/Umul16.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  multiplier      2   22[BANK0 ] unsigned int 
  2865 ;;  multiplicand    2   24[BANK0 ] unsigned int 
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;  product         2   26[BANK0 ] unsigned int 
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  2   22[BANK0 ] unsigned int 
  2870 ;; Registers used:
  2871 ;;		wreg, status,2, status,0, prodl, prodh
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2877 ;;      Params:         0       4       0       0       0       0       0       0       0
  2878 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2879 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2880 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2881 ;;Total ram usage:        6 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:    5
  2884 ;; This function calls:
  2885 ;;		Nothing
  2886 ;; This function is called by:
  2887 ;;		_eval_poly
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text13
  2892  002416                     __ptext13:
  2893                           	opt stack 0
  2894  002416                     ___wmul:
  2895                           	opt stack 22
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;incstack = 0
  2899  002416  0100               	movlb	0	; () banked
  2900  002418  5176               	movf	___wmul@multiplier& (0+255),w,b
  2901  00241A  0100               	movlb	0	; () banked
  2902  00241C  0378               	mulwf	___wmul@multiplicand& (0+255),b
  2903  00241E  CFF3 F07A          	movff	prodl,___wmul@product
  2904  002422  CFF4 F07B          	movff	prodh,___wmul@product+1
  2905  002426  0100               	movlb	0	; () banked
  2906  002428  5176               	movf	___wmul@multiplier& (0+255),w,b
  2907  00242A  0100               	movlb	0	; () banked
  2908  00242C  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2909  00242E  50F3               	movf	prodl,w,c
  2910  002430  0100               	movlb	0	; () banked
  2911  002432  277B               	addwf	(___wmul@product+1)& (0+255),f,b
  2912  002434  0100               	movlb	0	; () banked
  2913  002436  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2914  002438  0100               	movlb	0	; () banked
  2915  00243A  0378               	mulwf	___wmul@multiplicand& (0+255),b
  2916  00243C  50F3               	movf	prodl,w,c
  2917  00243E  0100               	movlb	0	; () banked
  2918  002440  277B               	addwf	(___wmul@product+1)& (0+255),f,b
  2919                           
  2920                           ; BSR set to: 0
  2921  002442  C07A  F076         	movff	___wmul@product,?___wmul
  2922  002446  C07B  F077         	movff	___wmul@product+1,?___wmul+1
  2923  00244A  0012               	return	
  2924  00244C                     __end_of___wmul:
  2925                           	opt stack 0
  2926                           tblptru	equ	0xFF8
  2927                           tblptrh	equ	0xFF7
  2928                           tblptrl	equ	0xFF6
  2929                           tablat	equ	0xFF5
  2930                           prodh	equ	0xFF4
  2931                           prodl	equ	0xFF3
  2932                           intcon	equ	0xFF2
  2933                           intcon2	equ	0xFF1
  2934                           postinc0	equ	0xFEE
  2935                           wreg	equ	0xFE8
  2936                           postinc2	equ	0xFDE
  2937                           postdec2	equ	0xFDD
  2938                           fsr2h	equ	0xFDA
  2939                           fsr2l	equ	0xFD9
  2940                           status	equ	0xFD8
  2941                           
  2942 ;; *************** function ___ftmul *****************
  2943 ;; Defined at:
  2944 ;;		line 62 in file "/opt/microchip/xc8/v1.38/sources/common/ftmul.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  f1              3   46[BANK0 ] float 
  2947 ;;  f2              3   49[BANK0 ] float 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  f3_as_produc    3   56[BANK0 ] unsigned um
  2950 ;;  sign            1   60[BANK0 ] unsigned char 
  2951 ;;  cntr            1   59[BANK0 ] unsigned char 
  2952 ;;  exp             1   55[BANK0 ] unsigned char 
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  3   46[BANK0 ] float 
  2955 ;; Registers used:
  2956 ;;		wreg, status,2, status,0, cstack
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2962 ;;      Params:         0       6       0       0       0       0       0       0       0
  2963 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2964 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2965 ;;      Totals:         0      15       0       0       0       0       0       0       0
  2966 ;;Total ram usage:       15 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:    6
  2969 ;; This function calls:
  2970 ;;		___ftpack
  2971 ;; This function is called by:
  2972 ;;		_get_temp
  2973 ;;		_log
  2974 ;;		_eval_poly
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text14
  2979  000F18                     __ptext14:
  2980                           	opt stack 0
  2981  000F18                     ___ftmul:
  2982                           	opt stack 21
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;incstack = 0
  2986  000F18  C090  F094         	movff	___ftmul@f1+2,??___ftmul
  2987  000F1C  0100               	movlb	0	; () banked
  2988  000F1E  6B95               	clrf	(??___ftmul+1)& (0+255),b
  2989  000F20  6B96               	clrf	(??___ftmul+2)& (0+255),b
  2990  000F22  0100               	movlb	0	; () banked
  2991  000F24  358F               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  2992  000F26  0100               	movlb	0	; () banked
  2993  000F28  3794               	rlcf	??___ftmul& (0+255),f,b
  2994  000F2A  E301               	bnc	u2751
  2995  000F2C  8195               	bsf	(??___ftmul+1)& (0+255),0,b
  2996  000F2E                     u2751:
  2997  000F2E  0100               	movlb	0	; () banked
  2998  000F30  5194               	movf	??___ftmul& (0+255),w,b
  2999  000F32  0100               	movlb	0	; () banked
  3000  000F34  6F97               	movwf	___ftmul@exp& (0+255),b
  3001  000F36  0100               	movlb	0	; () banked
  3002  000F38  5197               	movf	___ftmul@exp& (0+255),w,b
  3003  000F3A  A4D8               	btfss	status,2,c
  3004  000F3C  D00A               	goto	l2560
  3005                           
  3006                           ; BSR set to: 0
  3007  000F3E  0E00               	movlw	0
  3008  000F40  0100               	movlb	0	; () banked
  3009  000F42  6F8E               	movwf	?___ftmul& (0+255),b
  3010  000F44  0E00               	movlw	0
  3011  000F46  0100               	movlb	0	; () banked
  3012  000F48  6F8F               	movwf	(?___ftmul+1)& (0+255),b
  3013  000F4A  0E00               	movlw	0
  3014  000F4C  0100               	movlb	0	; () banked
  3015  000F4E  6F90               	movwf	(?___ftmul+2)& (0+255),b
  3016                           
  3017                           ; BSR set to: 0
  3018  000F50  0012               	return	
  3019  000F52                     l2560:
  3020                           
  3021                           ; BSR set to: 0
  3022  000F52  C093  F094         	movff	___ftmul@f2+2,??___ftmul
  3023  000F56  0100               	movlb	0	; () banked
  3024  000F58  6B95               	clrf	(??___ftmul+1)& (0+255),b
  3025  000F5A  6B96               	clrf	(??___ftmul+2)& (0+255),b
  3026  000F5C  0100               	movlb	0	; () banked
  3027  000F5E  3592               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  3028  000F60  0100               	movlb	0	; () banked
  3029  000F62  3794               	rlcf	??___ftmul& (0+255),f,b
  3030  000F64  E301               	bnc	u2771
  3031  000F66  8195               	bsf	(??___ftmul+1)& (0+255),0,b
  3032  000F68                     u2771:
  3033  000F68  0100               	movlb	0	; () banked
  3034  000F6A  5194               	movf	??___ftmul& (0+255),w,b
  3035  000F6C  0100               	movlb	0	; () banked
  3036  000F6E  6F9C               	movwf	___ftmul@sign& (0+255),b
  3037  000F70  0100               	movlb	0	; () banked
  3038  000F72  519C               	movf	___ftmul@sign& (0+255),w,b
  3039  000F74  A4D8               	btfss	status,2,c
  3040  000F76  D00A               	goto	l2566
  3041                           
  3042                           ; BSR set to: 0
  3043  000F78  0E00               	movlw	0
  3044  000F7A  0100               	movlb	0	; () banked
  3045  000F7C  6F8E               	movwf	?___ftmul& (0+255),b
  3046  000F7E  0E00               	movlw	0
  3047  000F80  0100               	movlb	0	; () banked
  3048  000F82  6F8F               	movwf	(?___ftmul+1)& (0+255),b
  3049  000F84  0E00               	movlw	0
  3050  000F86  0100               	movlb	0	; () banked
  3051  000F88  6F90               	movwf	(?___ftmul+2)& (0+255),b
  3052                           
  3053                           ; BSR set to: 0
  3054  000F8A  0012               	return	
  3055  000F8C                     l2566:
  3056                           
  3057                           ; BSR set to: 0
  3058  000F8C  0100               	movlb	0	; () banked
  3059  000F8E  519C               	movf	___ftmul@sign& (0+255),w,b
  3060  000F90  0F7B               	addlw	123
  3061  000F92  0100               	movlb	0	; () banked
  3062  000F94  2797               	addwf	___ftmul@exp& (0+255),f,b
  3063                           
  3064                           ; BSR set to: 0
  3065  000F96  C090  F09C         	movff	___ftmul@f1+2,___ftmul@sign
  3066  000F9A  0100               	movlb	0	; () banked
  3067  000F9C  5193               	movf	(___ftmul@f2+2)& (0+255),w,b
  3068  000F9E  0100               	movlb	0	; () banked
  3069  000FA0  1B9C               	xorwf	___ftmul@sign& (0+255),f,b
  3070  000FA2  0E80               	movlw	128
  3071  000FA4  0100               	movlb	0	; () banked
  3072  000FA6  179C               	andwf	___ftmul@sign& (0+255),f,b
  3073                           
  3074                           ; BSR set to: 0
  3075  000FA8  0100               	movlb	0	; () banked
  3076  000FAA  8F8F               	bsf	(___ftmul@f1+1)& (0+255),7,b
  3077                           
  3078                           ; BSR set to: 0
  3079  000FAC  0100               	movlb	0	; () banked
  3080  000FAE  8F92               	bsf	(___ftmul@f2+1)& (0+255),7,b
  3081                           
  3082                           ; BSR set to: 0
  3083  000FB0  0EFF               	movlw	255
  3084  000FB2  0100               	movlb	0	; () banked
  3085  000FB4  1791               	andwf	___ftmul@f2& (0+255),f,b
  3086  000FB6  0EFF               	movlw	255
  3087  000FB8  0100               	movlb	0	; () banked
  3088  000FBA  1792               	andwf	(___ftmul@f2+1)& (0+255),f,b
  3089  000FBC  0E00               	movlw	0
  3090  000FBE  0100               	movlb	0	; () banked
  3091  000FC0  1793               	andwf	(___ftmul@f2+2)& (0+255),f,b
  3092                           
  3093                           ; BSR set to: 0
  3094  000FC2  0E00               	movlw	0
  3095  000FC4  0100               	movlb	0	; () banked
  3096  000FC6  6F98               	movwf	___ftmul@f3_as_product& (0+255),b
  3097  000FC8  0E00               	movlw	0
  3098  000FCA  0100               	movlb	0	; () banked
  3099  000FCC  6F99               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  3100  000FCE  0E00               	movlw	0
  3101  000FD0  0100               	movlb	0	; () banked
  3102  000FD2  6F9A               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  3103                           
  3104                           ; BSR set to: 0
  3105  000FD4  0E07               	movlw	7
  3106  000FD6  0100               	movlb	0	; () banked
  3107  000FD8  6F9B               	movwf	___ftmul@cntr& (0+255),b
  3108  000FDA                     l2580:
  3109                           
  3110                           ; BSR set to: 0
  3111  000FDA  0100               	movlb	0	; () banked
  3112  000FDC  A18E               	btfss	___ftmul@f1& (0+255),0,b
  3113  000FDE  D00C               	goto	l2584
  3114                           
  3115                           ; BSR set to: 0
  3116  000FE0  0100               	movlb	0	; () banked
  3117  000FE2  5191               	movf	___ftmul@f2& (0+255),w,b
  3118  000FE4  0100               	movlb	0	; () banked
  3119  000FE6  2798               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3120  000FE8  0100               	movlb	0	; () banked
  3121  000FEA  5192               	movf	(___ftmul@f2+1)& (0+255),w,b
  3122  000FEC  0100               	movlb	0	; () banked
  3123  000FEE  2399               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3124  000FF0  0100               	movlb	0	; () banked
  3125  000FF2  5193               	movf	(___ftmul@f2+2)& (0+255),w,b
  3126  000FF4  0100               	movlb	0	; () banked
  3127  000FF6  239A               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3128  000FF8                     l2584:
  3129                           
  3130                           ; BSR set to: 0
  3131  000FF8  0100               	movlb	0	; () banked
  3132  000FFA  90D8               	bcf	status,0,c
  3133  000FFC  3390               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3134  000FFE  338F               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3135  001000  338E               	rrcf	___ftmul@f1& (0+255),f,b
  3136  001002  0100               	movlb	0	; () banked
  3137  001004  90D8               	bcf	status,0,c
  3138  001006  3791               	rlcf	___ftmul@f2& (0+255),f,b
  3139  001008  3792               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  3140  00100A  3793               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  3141                           
  3142                           ; BSR set to: 0
  3143  00100C  0100               	movlb	0	; () banked
  3144  00100E  2F9B               	decfsz	___ftmul@cntr& (0+255),f,b
  3145  001010  D7E4               	goto	l2580
  3146                           
  3147                           ; BSR set to: 0
  3148                           
  3149                           ; BSR set to: 0
  3150  001012  0E09               	movlw	9
  3151  001014  0100               	movlb	0	; () banked
  3152  001016  6F9B               	movwf	___ftmul@cntr& (0+255),b
  3153  001018                     l2590:
  3154                           
  3155                           ; BSR set to: 0
  3156  001018  0100               	movlb	0	; () banked
  3157  00101A  A18E               	btfss	___ftmul@f1& (0+255),0,b
  3158  00101C  D00C               	goto	l2594
  3159                           
  3160                           ; BSR set to: 0
  3161  00101E  0100               	movlb	0	; () banked
  3162  001020  5191               	movf	___ftmul@f2& (0+255),w,b
  3163  001022  0100               	movlb	0	; () banked
  3164  001024  2798               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3165  001026  0100               	movlb	0	; () banked
  3166  001028  5192               	movf	(___ftmul@f2+1)& (0+255),w,b
  3167  00102A  0100               	movlb	0	; () banked
  3168  00102C  2399               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3169  00102E  0100               	movlb	0	; () banked
  3170  001030  5193               	movf	(___ftmul@f2+2)& (0+255),w,b
  3171  001032  0100               	movlb	0	; () banked
  3172  001034  239A               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3173  001036                     l2594:
  3174                           
  3175                           ; BSR set to: 0
  3176  001036  0100               	movlb	0	; () banked
  3177  001038  90D8               	bcf	status,0,c
  3178  00103A  3390               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3179  00103C  338F               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3180  00103E  338E               	rrcf	___ftmul@f1& (0+255),f,b
  3181  001040  0100               	movlb	0	; () banked
  3182  001042  90D8               	bcf	status,0,c
  3183  001044  339A               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  3184  001046  3399               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  3185  001048  3398               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  3186                           
  3187                           ; BSR set to: 0
  3188  00104A  0100               	movlb	0	; () banked
  3189  00104C  2F9B               	decfsz	___ftmul@cntr& (0+255),f,b
  3190  00104E  D7E4               	goto	l2590
  3191                           
  3192                           ; BSR set to: 0
  3193                           
  3194                           ; BSR set to: 0
  3195  001050  C098  F076         	movff	___ftmul@f3_as_product,___ftpack@arg
  3196  001054  C099  F077         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3197  001058  C09A  F078         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3198  00105C  C097  F079         	movff	___ftmul@exp,___ftpack@exp
  3199  001060  C09C  F07A         	movff	___ftmul@sign,___ftpack@sign
  3200  001064  EC16  F00A         	call	___ftpack	;wreg free
  3201  001068  C076  F08E         	movff	?___ftpack,?___ftmul
  3202  00106C  C077  F08F         	movff	?___ftpack+1,?___ftmul+1
  3203  001070  C078  F090         	movff	?___ftpack+2,?___ftmul+2
  3204  001074  0012               	return	
  3205  001076                     __end_of___ftmul:
  3206                           	opt stack 0
  3207                           tblptru	equ	0xFF8
  3208                           tblptrh	equ	0xFF7
  3209                           tblptrl	equ	0xFF6
  3210                           tablat	equ	0xFF5
  3211                           prodh	equ	0xFF4
  3212                           prodl	equ	0xFF3
  3213                           intcon	equ	0xFF2
  3214                           intcon2	equ	0xFF1
  3215                           postinc0	equ	0xFEE
  3216                           wreg	equ	0xFE8
  3217                           postinc2	equ	0xFDE
  3218                           postdec2	equ	0xFDD
  3219                           fsr2h	equ	0xFDA
  3220                           fsr2l	equ	0xFD9
  3221                           status	equ	0xFD8
  3222                           
  3223 ;; *************** function ___ftadd *****************
  3224 ;; Defined at:
  3225 ;;		line 86 in file "/opt/microchip/xc8/v1.38/sources/common/ftadd.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  f1              3   34[BANK0 ] float 
  3228 ;;  f2              3   37[BANK0 ] float 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  exp1            1   45[BANK0 ] unsigned char 
  3231 ;;  exp2            1   44[BANK0 ] unsigned char 
  3232 ;;  sign            1   43[BANK0 ] unsigned char 
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  3   34[BANK0 ] float 
  3235 ;; Registers used:
  3236 ;;		wreg, status,2, status,0, cstack
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3242 ;;      Params:         0       6       0       0       0       0       0       0       0
  3243 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3244 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3245 ;;      Totals:         0      12       0       0       0       0       0       0       0
  3246 ;;Total ram usage:       12 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; Hardware stack levels required when called:    6
  3249 ;; This function calls:
  3250 ;;		___ftpack
  3251 ;; This function is called by:
  3252 ;;		_get_temp
  3253 ;;		_log
  3254 ;;		_eval_poly
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           	psect	text15
  3259  000AFE                     __ptext15:
  3260                           	opt stack 0
  3261  000AFE                     ___ftadd:
  3262                           	opt stack 21
  3263                           
  3264                           ;incstack = 0
  3265  000AFE  C084  F088         	movff	___ftadd@f1+2,??___ftadd
  3266  000B02  0100               	movlb	0	; () banked
  3267  000B04  6B89               	clrf	(??___ftadd+1)& (0+255),b
  3268  000B06  6B8A               	clrf	(??___ftadd+2)& (0+255),b
  3269  000B08  0100               	movlb	0	; () banked
  3270  000B0A  3583               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  3271  000B0C  0100               	movlb	0	; () banked
  3272  000B0E  3788               	rlcf	??___ftadd& (0+255),f,b
  3273  000B10  E301               	bnc	u2541
  3274  000B12  8189               	bsf	(??___ftadd+1)& (0+255),0,b
  3275  000B14                     u2541:
  3276  000B14  0100               	movlb	0	; () banked
  3277  000B16  5188               	movf	??___ftadd& (0+255),w,b
  3278  000B18  0100               	movlb	0	; () banked
  3279  000B1A  6F8D               	movwf	___ftadd@exp1& (0+255),b
  3280  000B1C  C087  F088         	movff	___ftadd@f2+2,??___ftadd
  3281  000B20  0100               	movlb	0	; () banked
  3282  000B22  6B89               	clrf	(??___ftadd+1)& (0+255),b
  3283  000B24  6B8A               	clrf	(??___ftadd+2)& (0+255),b
  3284  000B26  0100               	movlb	0	; () banked
  3285  000B28  3586               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  3286  000B2A  0100               	movlb	0	; () banked
  3287  000B2C  3788               	rlcf	??___ftadd& (0+255),f,b
  3288  000B2E  E301               	bnc	u2551
  3289  000B30  8189               	bsf	(??___ftadd+1)& (0+255),0,b
  3290  000B32                     u2551:
  3291  000B32  0100               	movlb	0	; () banked
  3292  000B34  5188               	movf	??___ftadd& (0+255),w,b
  3293  000B36  0100               	movlb	0	; () banked
  3294  000B38  6F8C               	movwf	___ftadd@exp2& (0+255),b
  3295                           
  3296                           ; BSR set to: 0
  3297  000B3A  0100               	movlb	0	; () banked
  3298  000B3C  518D               	movf	___ftadd@exp1& (0+255),w,b
  3299  000B3E  0100               	movlb	0	; () banked
  3300  000B40  B4D8               	btfsc	status,2,c
  3301  000B42  D011               	goto	l774
  3302                           
  3303                           ; BSR set to: 0
  3304  000B44  0100               	movlb	0	; () banked
  3305  000B46  518C               	movf	___ftadd@exp2& (0+255),w,b
  3306  000B48  0100               	movlb	0	; () banked
  3307  000B4A  5D8D               	subwf	___ftadd@exp1& (0+255),w,b
  3308  000B4C  B0D8               	btfsc	status,0,c
  3309  000B4E  D012               	goto	l2492
  3310                           
  3311                           ; BSR set to: 0
  3312  000B50  0100               	movlb	0	; () banked
  3313  000B52  518D               	movf	___ftadd@exp1& (0+255),w,b
  3314  000B54  0800               	sublw	0
  3315  000B56  0100               	movlb	0	; () banked
  3316  000B58  258C               	addwf	___ftadd@exp2& (0+255),w,b
  3317  000B5A  0100               	movlb	0	; () banked
  3318  000B5C  6F88               	movwf	??___ftadd& (0+255),b
  3319  000B5E  0E18               	movlw	24
  3320  000B60  0100               	movlb	0	; () banked
  3321  000B62  6588               	cpfsgt	??___ftadd& (0+255),b
  3322  000B64  D007               	goto	l2492
  3323  000B66                     l774:
  3324                           
  3325                           ; BSR set to: 0
  3326  000B66  C085  F082         	movff	___ftadd@f2,?___ftadd
  3327  000B6A  C086  F083         	movff	___ftadd@f2+1,?___ftadd+1
  3328  000B6E  C087  F084         	movff	___ftadd@f2+2,?___ftadd+2
  3329  000B72  0012               	return	
  3330  000B74                     l2492:
  3331                           
  3332                           ; BSR set to: 0
  3333  000B74  0100               	movlb	0	; () banked
  3334  000B76  518C               	movf	___ftadd@exp2& (0+255),w,b
  3335  000B78  0100               	movlb	0	; () banked
  3336  000B7A  B4D8               	btfsc	status,2,c
  3337  000B7C  D011               	goto	l778
  3338                           
  3339                           ; BSR set to: 0
  3340  000B7E  0100               	movlb	0	; () banked
  3341  000B80  518D               	movf	___ftadd@exp1& (0+255),w,b
  3342  000B82  0100               	movlb	0	; () banked
  3343  000B84  5D8C               	subwf	___ftadd@exp2& (0+255),w,b
  3344  000B86  B0D8               	btfsc	status,0,c
  3345  000B88  D012               	goto	l2498
  3346                           
  3347                           ; BSR set to: 0
  3348  000B8A  0100               	movlb	0	; () banked
  3349  000B8C  518C               	movf	___ftadd@exp2& (0+255),w,b
  3350  000B8E  0800               	sublw	0
  3351  000B90  0100               	movlb	0	; () banked
  3352  000B92  258D               	addwf	___ftadd@exp1& (0+255),w,b
  3353  000B94  0100               	movlb	0	; () banked
  3354  000B96  6F88               	movwf	??___ftadd& (0+255),b
  3355  000B98  0E18               	movlw	24
  3356  000B9A  0100               	movlb	0	; () banked
  3357  000B9C  6588               	cpfsgt	??___ftadd& (0+255),b
  3358  000B9E  D007               	goto	l2498
  3359  000BA0                     l778:
  3360                           
  3361                           ; BSR set to: 0
  3362  000BA0  C082  F082         	movff	___ftadd@f1,?___ftadd
  3363  000BA4  C083  F083         	movff	___ftadd@f1+1,?___ftadd+1
  3364  000BA8  C084  F084         	movff	___ftadd@f1+2,?___ftadd+2
  3365  000BAC  0012               	return	
  3366  000BAE                     l2498:
  3367                           
  3368                           ; BSR set to: 0
  3369  000BAE  0E06               	movlw	6
  3370  000BB0  0100               	movlb	0	; () banked
  3371  000BB2  6F8B               	movwf	___ftadd@sign& (0+255),b
  3372                           
  3373                           ; BSR set to: 0
  3374  000BB4  0100               	movlb	0	; () banked
  3375  000BB6  AF84               	btfss	(___ftadd@f1+2)& (0+255),7,b
  3376  000BB8  D002               	goto	l2504
  3377                           
  3378                           ; BSR set to: 0
  3379  000BBA  0100               	movlb	0	; () banked
  3380  000BBC  8F8B               	bsf	___ftadd@sign& (0+255),7,b
  3381  000BBE                     l2504:
  3382                           
  3383                           ; BSR set to: 0
  3384  000BBE  0100               	movlb	0	; () banked
  3385  000BC0  AF87               	btfss	(___ftadd@f2+2)& (0+255),7,b
  3386  000BC2  D002               	goto	l780
  3387                           
  3388                           ; BSR set to: 0
  3389  000BC4  0100               	movlb	0	; () banked
  3390  000BC6  8D8B               	bsf	___ftadd@sign& (0+255),6,b
  3391  000BC8                     l780:
  3392                           
  3393                           ; BSR set to: 0
  3394  000BC8  0100               	movlb	0	; () banked
  3395  000BCA  8F83               	bsf	(___ftadd@f1+1)& (0+255),7,b
  3396                           
  3397                           ; BSR set to: 0
  3398  000BCC  0EFF               	movlw	255
  3399  000BCE  0100               	movlb	0	; () banked
  3400  000BD0  1782               	andwf	___ftadd@f1& (0+255),f,b
  3401  000BD2  0EFF               	movlw	255
  3402  000BD4  0100               	movlb	0	; () banked
  3403  000BD6  1783               	andwf	(___ftadd@f1+1)& (0+255),f,b
  3404  000BD8  0E00               	movlw	0
  3405  000BDA  0100               	movlb	0	; () banked
  3406  000BDC  1784               	andwf	(___ftadd@f1+2)& (0+255),f,b
  3407  000BDE  0100               	movlb	0	; () banked
  3408  000BE0  8F86               	bsf	(___ftadd@f2+1)& (0+255),7,b
  3409                           
  3410                           ; BSR set to: 0
  3411  000BE2  0EFF               	movlw	255
  3412  000BE4  0100               	movlb	0	; () banked
  3413  000BE6  1785               	andwf	___ftadd@f2& (0+255),f,b
  3414  000BE8  0EFF               	movlw	255
  3415  000BEA  0100               	movlb	0	; () banked
  3416  000BEC  1786               	andwf	(___ftadd@f2+1)& (0+255),f,b
  3417  000BEE  0E00               	movlw	0
  3418  000BF0  0100               	movlb	0	; () banked
  3419  000BF2  1787               	andwf	(___ftadd@f2+2)& (0+255),f,b
  3420                           
  3421                           ; BSR set to: 0
  3422  000BF4  0100               	movlb	0	; () banked
  3423  000BF6  518C               	movf	___ftadd@exp2& (0+255),w,b
  3424  000BF8  0100               	movlb	0	; () banked
  3425  000BFA  5D8D               	subwf	___ftadd@exp1& (0+255),w,b
  3426  000BFC  B0D8               	btfsc	status,0,c
  3427  000BFE  D025               	goto	l2524
  3428  000C00                     l2514:
  3429                           
  3430                           ; BSR set to: 0
  3431  000C00  0100               	movlb	0	; () banked
  3432  000C02  90D8               	bcf	status,0,c
  3433  000C04  3785               	rlcf	___ftadd@f2& (0+255),f,b
  3434  000C06  3786               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  3435  000C08  3787               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  3436  000C0A  0100               	movlb	0	; () banked
  3437  000C0C  078C               	decf	___ftadd@exp2& (0+255),f,b
  3438                           
  3439                           ; BSR set to: 0
  3440  000C0E  0100               	movlb	0	; () banked
  3441  000C10  518D               	movf	___ftadd@exp1& (0+255),w,b
  3442  000C12  0100               	movlb	0	; () banked
  3443  000C14  198C               	xorwf	___ftadd@exp2& (0+255),w,b
  3444  000C16  B4D8               	btfsc	status,2,c
  3445  000C18  D011               	goto	l2522
  3446                           
  3447                           ; BSR set to: 0
  3448  000C1A  0100               	movlb	0	; () banked
  3449  000C1C  078B               	decf	___ftadd@sign& (0+255),f,b
  3450  000C1E  C08B  F088         	movff	___ftadd@sign,??___ftadd
  3451  000C22  0E07               	movlw	7
  3452  000C24  0100               	movlb	0	; () banked
  3453  000C26  1788               	andwf	??___ftadd& (0+255),f,b
  3454  000C28  B4D8               	btfsc	status,2,c
  3455  000C2A  D008               	goto	l2522
  3456  000C2C  D7E9               	goto	l2514
  3457  000C2E                     l2520:
  3458                           
  3459                           ; BSR set to: 0
  3460  000C2E  0100               	movlb	0	; () banked
  3461  000C30  90D8               	bcf	status,0,c
  3462  000C32  3384               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  3463  000C34  3383               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  3464  000C36  3382               	rrcf	___ftadd@f1& (0+255),f,b
  3465  000C38  0100               	movlb	0	; () banked
  3466  000C3A  2B8D               	incf	___ftadd@exp1& (0+255),f,b
  3467  000C3C                     l2522:
  3468                           
  3469                           ; BSR set to: 0
  3470  000C3C  0100               	movlb	0	; () banked
  3471  000C3E  518C               	movf	___ftadd@exp2& (0+255),w,b
  3472  000C40  0100               	movlb	0	; () banked
  3473  000C42  198D               	xorwf	___ftadd@exp1& (0+255),w,b
  3474  000C44  B4D8               	btfsc	status,2,c
  3475  000C46  D02B               	goto	l789
  3476  000C48  D7F2               	goto	l2520
  3477  000C4A                     l2524:
  3478                           
  3479                           ; BSR set to: 0
  3480  000C4A  0100               	movlb	0	; () banked
  3481  000C4C  518D               	movf	___ftadd@exp1& (0+255),w,b
  3482  000C4E  0100               	movlb	0	; () banked
  3483  000C50  5D8C               	subwf	___ftadd@exp2& (0+255),w,b
  3484  000C52  B0D8               	btfsc	status,0,c
  3485  000C54  D024               	goto	l789
  3486  000C56                     l2526:
  3487                           
  3488                           ; BSR set to: 0
  3489  000C56  0100               	movlb	0	; () banked
  3490  000C58  90D8               	bcf	status,0,c
  3491  000C5A  3782               	rlcf	___ftadd@f1& (0+255),f,b
  3492  000C5C  3783               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  3493  000C5E  3784               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  3494  000C60  0100               	movlb	0	; () banked
  3495  000C62  078D               	decf	___ftadd@exp1& (0+255),f,b
  3496                           
  3497                           ; BSR set to: 0
  3498  000C64  0100               	movlb	0	; () banked
  3499  000C66  518D               	movf	___ftadd@exp1& (0+255),w,b
  3500  000C68  0100               	movlb	0	; () banked
  3501  000C6A  198C               	xorwf	___ftadd@exp2& (0+255),w,b
  3502  000C6C  B4D8               	btfsc	status,2,c
  3503  000C6E  D011               	goto	l2534
  3504                           
  3505                           ; BSR set to: 0
  3506  000C70  0100               	movlb	0	; () banked
  3507  000C72  078B               	decf	___ftadd@sign& (0+255),f,b
  3508  000C74  C08B  F088         	movff	___ftadd@sign,??___ftadd
  3509  000C78  0E07               	movlw	7
  3510  000C7A  0100               	movlb	0	; () banked
  3511  000C7C  1788               	andwf	??___ftadd& (0+255),f,b
  3512  000C7E  B4D8               	btfsc	status,2,c
  3513  000C80  D008               	goto	l2534
  3514  000C82  D7E9               	goto	l2526
  3515  000C84                     l2532:
  3516                           
  3517                           ; BSR set to: 0
  3518  000C84  0100               	movlb	0	; () banked
  3519  000C86  90D8               	bcf	status,0,c
  3520  000C88  3387               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  3521  000C8A  3386               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  3522  000C8C  3385               	rrcf	___ftadd@f2& (0+255),f,b
  3523  000C8E  0100               	movlb	0	; () banked
  3524  000C90  2B8C               	incf	___ftadd@exp2& (0+255),f,b
  3525  000C92                     l2534:
  3526                           
  3527                           ; BSR set to: 0
  3528  000C92  0100               	movlb	0	; () banked
  3529  000C94  518C               	movf	___ftadd@exp2& (0+255),w,b
  3530  000C96  0100               	movlb	0	; () banked
  3531  000C98  198D               	xorwf	___ftadd@exp1& (0+255),w,b
  3532  000C9A  A4D8               	btfss	status,2,c
  3533  000C9C  D7F3               	goto	l2532
  3534  000C9E                     l789:
  3535                           
  3536                           ; BSR set to: 0
  3537  000C9E  0100               	movlb	0	; () banked
  3538  000CA0  AF8B               	btfss	___ftadd@sign& (0+255),7,b
  3539  000CA2  D012               	goto	l798
  3540                           
  3541                           ; BSR set to: 0
  3542  000CA4  0EFF               	movlw	255
  3543  000CA6  0100               	movlb	0	; () banked
  3544  000CA8  1B82               	xorwf	___ftadd@f1& (0+255),f,b
  3545  000CAA  0EFF               	movlw	255
  3546  000CAC  0100               	movlb	0	; () banked
  3547  000CAE  1B83               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  3548  000CB0  0EFF               	movlw	255
  3549  000CB2  0100               	movlb	0	; () banked
  3550  000CB4  1B84               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  3551  000CB6  0E01               	movlw	1
  3552  000CB8  0100               	movlb	0	; () banked
  3553  000CBA  2782               	addwf	___ftadd@f1& (0+255),f,b
  3554  000CBC  0E00               	movlw	0
  3555  000CBE  0100               	movlb	0	; () banked
  3556  000CC0  2383               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  3557  000CC2  0E00               	movlw	0
  3558  000CC4  0100               	movlb	0	; () banked
  3559  000CC6  2384               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  3560  000CC8                     l798:
  3561                           
  3562                           ; BSR set to: 0
  3563  000CC8  0100               	movlb	0	; () banked
  3564  000CCA  AD8B               	btfss	___ftadd@sign& (0+255),6,b
  3565  000CCC  D012               	goto	l2540
  3566                           
  3567                           ; BSR set to: 0
  3568  000CCE  0EFF               	movlw	255
  3569  000CD0  0100               	movlb	0	; () banked
  3570  000CD2  1B85               	xorwf	___ftadd@f2& (0+255),f,b
  3571  000CD4  0EFF               	movlw	255
  3572  000CD6  0100               	movlb	0	; () banked
  3573  000CD8  1B86               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  3574  000CDA  0EFF               	movlw	255
  3575  000CDC  0100               	movlb	0	; () banked
  3576  000CDE  1B87               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  3577  000CE0  0E01               	movlw	1
  3578  000CE2  0100               	movlb	0	; () banked
  3579  000CE4  2785               	addwf	___ftadd@f2& (0+255),f,b
  3580  000CE6  0E00               	movlw	0
  3581  000CE8  0100               	movlb	0	; () banked
  3582  000CEA  2386               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  3583  000CEC  0E00               	movlw	0
  3584  000CEE  0100               	movlb	0	; () banked
  3585  000CF0  2387               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  3586  000CF2                     l2540:
  3587                           
  3588                           ; BSR set to: 0
  3589  000CF2  0E00               	movlw	0
  3590  000CF4  0100               	movlb	0	; () banked
  3591  000CF6  6F8B               	movwf	___ftadd@sign& (0+255),b
  3592                           
  3593                           ; BSR set to: 0
  3594  000CF8  0100               	movlb	0	; () banked
  3595  000CFA  5182               	movf	___ftadd@f1& (0+255),w,b
  3596  000CFC  0100               	movlb	0	; () banked
  3597  000CFE  2785               	addwf	___ftadd@f2& (0+255),f,b
  3598  000D00  0100               	movlb	0	; () banked
  3599  000D02  5183               	movf	(___ftadd@f1+1)& (0+255),w,b
  3600  000D04  0100               	movlb	0	; () banked
  3601  000D06  2386               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  3602  000D08  0100               	movlb	0	; () banked
  3603  000D0A  5184               	movf	(___ftadd@f1+2)& (0+255),w,b
  3604  000D0C  0100               	movlb	0	; () banked
  3605  000D0E  2387               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  3606                           
  3607                           ; BSR set to: 0
  3608  000D10  0100               	movlb	0	; () banked
  3609  000D12  AF87               	btfss	(___ftadd@f2+2)& (0+255),7,b
  3610  000D14  D015               	goto	l2550
  3611                           
  3612                           ; BSR set to: 0
  3613  000D16  0EFF               	movlw	255
  3614  000D18  0100               	movlb	0	; () banked
  3615  000D1A  1B85               	xorwf	___ftadd@f2& (0+255),f,b
  3616  000D1C  0EFF               	movlw	255
  3617  000D1E  0100               	movlb	0	; () banked
  3618  000D20  1B86               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  3619  000D22  0EFF               	movlw	255
  3620  000D24  0100               	movlb	0	; () banked
  3621  000D26  1B87               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  3622  000D28  0E01               	movlw	1
  3623  000D2A  0100               	movlb	0	; () banked
  3624  000D2C  2785               	addwf	___ftadd@f2& (0+255),f,b
  3625  000D2E  0E00               	movlw	0
  3626  000D30  0100               	movlb	0	; () banked
  3627  000D32  2386               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  3628  000D34  0E00               	movlw	0
  3629  000D36  0100               	movlb	0	; () banked
  3630  000D38  2387               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  3631                           
  3632                           ; BSR set to: 0
  3633  000D3A  0E01               	movlw	1
  3634  000D3C  0100               	movlb	0	; () banked
  3635  000D3E  6F8B               	movwf	___ftadd@sign& (0+255),b
  3636  000D40                     l2550:
  3637                           
  3638                           ; BSR set to: 0
  3639  000D40  C085  F076         	movff	___ftadd@f2,___ftpack@arg
  3640  000D44  C086  F077         	movff	___ftadd@f2+1,___ftpack@arg+1
  3641  000D48  C087  F078         	movff	___ftadd@f2+2,___ftpack@arg+2
  3642  000D4C  C08D  F079         	movff	___ftadd@exp1,___ftpack@exp
  3643  000D50  C08B  F07A         	movff	___ftadd@sign,___ftpack@sign
  3644  000D54  EC16  F00A         	call	___ftpack	;wreg free
  3645  000D58  C076  F082         	movff	?___ftpack,?___ftadd
  3646  000D5C  C077  F083         	movff	?___ftpack+1,?___ftadd+1
  3647  000D60  C078  F084         	movff	?___ftpack+2,?___ftadd+2
  3648  000D64  0012               	return	
  3649  000D66                     __end_of___ftadd:
  3650                           	opt stack 0
  3651                           tblptru	equ	0xFF8
  3652                           tblptrh	equ	0xFF7
  3653                           tblptrl	equ	0xFF6
  3654                           tablat	equ	0xFF5
  3655                           prodh	equ	0xFF4
  3656                           prodl	equ	0xFF3
  3657                           intcon	equ	0xFF2
  3658                           intcon2	equ	0xFF1
  3659                           postinc0	equ	0xFEE
  3660                           wreg	equ	0xFE8
  3661                           postinc2	equ	0xFDE
  3662                           postdec2	equ	0xFDD
  3663                           fsr2h	equ	0xFDA
  3664                           fsr2l	equ	0xFD9
  3665                           status	equ	0xFD8
  3666                           
  3667 ;; *************** function ___awtoft *****************
  3668 ;; Defined at:
  3669 ;;		line 32 in file "/opt/microchip/xc8/v1.38/sources/common/awtoft.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  c               2   30[BANK0 ] int 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  sign            1   33[BANK0 ] unsigned char 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  3   30[BANK0 ] float 
  3676 ;; Registers used:
  3677 ;;		wreg, status,2, status,0, cstack
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3683 ;;      Params:         0       3       0       0       0       0       0       0       0
  3684 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3686 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3687 ;;Total ram usage:        4 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:    6
  3690 ;; This function calls:
  3691 ;;		___ftpack
  3692 ;; This function is called by:
  3693 ;;		_main
  3694 ;;		_log
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           	psect	text16
  3699  002390                     __ptext16:
  3700                           	opt stack 0
  3701  002390                     ___awtoft:
  3702                           	opt stack 22
  3703                           
  3704                           ;incstack = 0
  3705  002390  0E00               	movlw	0
  3706  002392  0100               	movlb	0	; () banked
  3707  002394  6F81               	movwf	___awtoft@sign& (0+255),b
  3708                           
  3709                           ; BSR set to: 0
  3710  002396  0100               	movlb	0	; () banked
  3711  002398  AF7F               	btfss	(___awtoft@c+1)& (0+255),7,b
  3712  00239A  D008               	goto	l2656
  3713                           
  3714                           ; BSR set to: 0
  3715  00239C  0100               	movlb	0	; () banked
  3716  00239E  6D7E               	negf	___awtoft@c& (0+255),b
  3717  0023A0  1F7F               	comf	(___awtoft@c+1)& (0+255),f,b
  3718  0023A2  B0D8               	btfsc	status,0,c
  3719  0023A4  2B7F               	incf	(___awtoft@c+1)& (0+255),f,b
  3720                           
  3721                           ; BSR set to: 0
  3722  0023A6  0E01               	movlw	1
  3723  0023A8  0100               	movlb	0	; () banked
  3724  0023AA  6F81               	movwf	___awtoft@sign& (0+255),b
  3725  0023AC                     l2656:
  3726                           
  3727                           ; BSR set to: 0
  3728  0023AC  C07E  F076         	movff	___awtoft@c,___ftpack@arg
  3729  0023B0  C07F  F077         	movff	___awtoft@c+1,___ftpack@arg+1
  3730  0023B4  0100               	movlb	0	; () banked
  3731  0023B6  6B78               	clrf	(___ftpack@arg+2)& (0+255),b
  3732  0023B8  0E8E               	movlw	142
  3733  0023BA  0100               	movlb	0	; () banked
  3734  0023BC  6F79               	movwf	___ftpack@exp& (0+255),b
  3735  0023BE  C081  F07A         	movff	___awtoft@sign,___ftpack@sign
  3736  0023C2  EC16  F00A         	call	___ftpack	;wreg free
  3737  0023C6  C076  F07E         	movff	?___ftpack,?___awtoft
  3738  0023CA  C077  F07F         	movff	?___ftpack+1,?___awtoft+1
  3739  0023CE  C078  F080         	movff	?___ftpack+2,?___awtoft+2
  3740  0023D2  0012               	return	
  3741  0023D4                     __end_of___awtoft:
  3742                           	opt stack 0
  3743                           tblptru	equ	0xFF8
  3744                           tblptrh	equ	0xFF7
  3745                           tblptrl	equ	0xFF6
  3746                           tablat	equ	0xFF5
  3747                           prodh	equ	0xFF4
  3748                           prodl	equ	0xFF3
  3749                           intcon	equ	0xFF2
  3750                           intcon2	equ	0xFF1
  3751                           postinc0	equ	0xFEE
  3752                           wreg	equ	0xFE8
  3753                           postinc2	equ	0xFDE
  3754                           postdec2	equ	0xFDD
  3755                           fsr2h	equ	0xFDA
  3756                           fsr2l	equ	0xFD9
  3757                           status	equ	0xFD8
  3758                           
  3759 ;; *************** function ___lwtoft *****************
  3760 ;; Defined at:
  3761 ;;		line 28 in file "/opt/microchip/xc8/v1.38/sources/common/lwtoft.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;  c               2   30[BANK0 ] unsigned int 
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;		None
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  3   30[BANK0 ] float 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0, cstack
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3775 ;;      Params:         0       3       0       0       0       0       0       0       0
  3776 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3777 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3778 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3779 ;;Total ram usage:        3 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:    6
  3782 ;; This function calls:
  3783 ;;		___ftpack
  3784 ;; This function is called by:
  3785 ;;		_get_temp
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	text17
  3790  0024AC                     __ptext17:
  3791                           	opt stack 0
  3792  0024AC                     ___lwtoft:
  3793                           	opt stack 23
  3794                           
  3795                           ;incstack = 0
  3796  0024AC  C07E  F076         	movff	___lwtoft@c,___ftpack@arg
  3797  0024B0  C07F  F077         	movff	___lwtoft@c+1,___ftpack@arg+1
  3798  0024B4  0100               	movlb	0	; () banked
  3799  0024B6  6B78               	clrf	(___ftpack@arg+2)& (0+255),b
  3800  0024B8  0E8E               	movlw	142
  3801  0024BA  0100               	movlb	0	; () banked
  3802  0024BC  6F79               	movwf	___ftpack@exp& (0+255),b
  3803  0024BE  0E00               	movlw	0
  3804  0024C0  0100               	movlb	0	; () banked
  3805  0024C2  6F7A               	movwf	___ftpack@sign& (0+255),b
  3806  0024C4  EC16  F00A         	call	___ftpack	;wreg free
  3807  0024C8  C076  F07E         	movff	?___ftpack,?___lwtoft
  3808  0024CC  C077  F07F         	movff	?___ftpack+1,?___lwtoft+1
  3809  0024D0  C078  F080         	movff	?___ftpack+2,?___lwtoft+2
  3810  0024D4  0012               	return	
  3811  0024D6                     __end_of___lwtoft:
  3812                           	opt stack 0
  3813                           tblptru	equ	0xFF8
  3814                           tblptrh	equ	0xFF7
  3815                           tblptrl	equ	0xFF6
  3816                           tablat	equ	0xFF5
  3817                           prodh	equ	0xFF4
  3818                           prodl	equ	0xFF3
  3819                           intcon	equ	0xFF2
  3820                           intcon2	equ	0xFF1
  3821                           postinc0	equ	0xFEE
  3822                           wreg	equ	0xFE8
  3823                           postinc2	equ	0xFDE
  3824                           postdec2	equ	0xFDD
  3825                           fsr2h	equ	0xFDA
  3826                           fsr2l	equ	0xFD9
  3827                           status	equ	0xFD8
  3828                           
  3829 ;; *************** function ___ftneg *****************
  3830 ;; Defined at:
  3831 ;;		line 15 in file "/opt/microchip/xc8/v1.38/sources/common/ftneg.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  f1              3   22[BANK0 ] float 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;		None
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  3   22[BANK0 ] float 
  3838 ;; Registers used:
  3839 ;;		wreg, status,2, status,0
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3845 ;;      Params:         0       3       0       0       0       0       0       0       0
  3846 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3847 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3848 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3849 ;;Total ram usage:        3 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    5
  3852 ;; This function calls:
  3853 ;;		Nothing
  3854 ;; This function is called by:
  3855 ;;		_get_temp
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text18
  3860  00247C                     __ptext18:
  3861                           	opt stack 0
  3862  00247C                     ___ftneg:
  3863                           	opt stack 24
  3864                           
  3865                           ;incstack = 0
  3866  00247C  0100               	movlb	0	; () banked
  3867  00247E  5176               	movf	___ftneg@f1& (0+255),w,b
  3868  002480  0100               	movlb	0	; () banked
  3869  002482  1177               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  3870  002484  0100               	movlb	0	; () banked
  3871  002486  1178               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  3872  002488  B4D8               	btfsc	status,2,c
  3873  00248A  D009               	goto	l831
  3874                           
  3875                           ; BSR set to: 0
  3876  00248C  0E00               	movlw	0
  3877  00248E  0100               	movlb	0	; () banked
  3878  002490  1B76               	xorwf	___ftneg@f1& (0+255),f,b
  3879  002492  0E00               	movlw	0
  3880  002494  0100               	movlb	0	; () banked
  3881  002496  1B77               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  3882  002498  0E80               	movlw	128
  3883  00249A  0100               	movlb	0	; () banked
  3884  00249C  1B78               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  3885  00249E                     l831:
  3886                           
  3887                           ; BSR set to: 0
  3888  00249E  C076  F076         	movff	___ftneg@f1,?___ftneg
  3889  0024A2  C077  F077         	movff	___ftneg@f1+1,?___ftneg+1
  3890  0024A6  C078  F078         	movff	___ftneg@f1+2,?___ftneg+2
  3891                           
  3892                           ; BSR set to: 0
  3893  0024AA  0012               	return		;funcret
  3894  0024AC                     __end_of___ftneg:
  3895                           	opt stack 0
  3896                           tblptru	equ	0xFF8
  3897                           tblptrh	equ	0xFF7
  3898                           tblptrl	equ	0xFF6
  3899                           tablat	equ	0xFF5
  3900                           prodh	equ	0xFF4
  3901                           prodl	equ	0xFF3
  3902                           intcon	equ	0xFF2
  3903                           intcon2	equ	0xFF1
  3904                           postinc0	equ	0xFEE
  3905                           wreg	equ	0xFE8
  3906                           postinc2	equ	0xFDE
  3907                           postdec2	equ	0xFDD
  3908                           fsr2h	equ	0xFDA
  3909                           fsr2l	equ	0xFD9
  3910                           status	equ	0xFD8
  3911                           
  3912 ;; *************** function ___ftdiv *****************
  3913 ;; Defined at:
  3914 ;;		line 54 in file "/opt/microchip/xc8/v1.38/sources/common/ftdiv.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  f1              3   78[BANK0 ] float 
  3917 ;;  f2              3   81[BANK0 ] float 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;  f3              3   88[BANK0 ] float 
  3920 ;;  sign            1   92[BANK0 ] unsigned char 
  3921 ;;  exp             1   91[BANK0 ] unsigned char 
  3922 ;;  cntr            1   87[BANK0 ] unsigned char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  3   78[BANK0 ] float 
  3925 ;; Registers used:
  3926 ;;		wreg, status,2, status,0, cstack
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3932 ;;      Params:         0       6       0       0       0       0       0       0       0
  3933 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3934 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3935 ;;      Totals:         0      15       0       0       0       0       0       0       0
  3936 ;;Total ram usage:       15 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:    6
  3939 ;; This function calls:
  3940 ;;		___ftpack
  3941 ;; This function is called by:
  3942 ;;		_get_temp
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           	psect	text19
  3947  0011C6                     __ptext19:
  3948                           	opt stack 0
  3949  0011C6                     ___ftdiv:
  3950                           	opt stack 23
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;incstack = 0
  3954  0011C6  C0B0  F0B4         	movff	___ftdiv@f1+2,??___ftdiv
  3955  0011CA  0100               	movlb	0	; () banked
  3956  0011CC  6BB5               	clrf	(??___ftdiv+1)& (0+255),b
  3957  0011CE  6BB6               	clrf	(??___ftdiv+2)& (0+255),b
  3958  0011D0  0100               	movlb	0	; () banked
  3959  0011D2  35AF               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3960  0011D4  0100               	movlb	0	; () banked
  3961  0011D6  37B4               	rlcf	??___ftdiv& (0+255),f,b
  3962  0011D8  E301               	bnc	u3361
  3963  0011DA  81B5               	bsf	(??___ftdiv+1)& (0+255),0,b
  3964  0011DC                     u3361:
  3965  0011DC  0100               	movlb	0	; () banked
  3966  0011DE  51B4               	movf	??___ftdiv& (0+255),w,b
  3967  0011E0  0100               	movlb	0	; () banked
  3968  0011E2  6FBB               	movwf	___ftdiv@exp& (0+255),b
  3969  0011E4  0100               	movlb	0	; () banked
  3970  0011E6  51BB               	movf	___ftdiv@exp& (0+255),w,b
  3971  0011E8  A4D8               	btfss	status,2,c
  3972  0011EA  D00A               	goto	l2846
  3973                           
  3974                           ; BSR set to: 0
  3975  0011EC  0E00               	movlw	0
  3976  0011EE  0100               	movlb	0	; () banked
  3977  0011F0  6FAE               	movwf	?___ftdiv& (0+255),b
  3978  0011F2  0E00               	movlw	0
  3979  0011F4  0100               	movlb	0	; () banked
  3980  0011F6  6FAF               	movwf	(?___ftdiv+1)& (0+255),b
  3981  0011F8  0E00               	movlw	0
  3982  0011FA  0100               	movlb	0	; () banked
  3983  0011FC  6FB0               	movwf	(?___ftdiv+2)& (0+255),b
  3984                           
  3985                           ; BSR set to: 0
  3986  0011FE  0012               	return	
  3987  001200                     l2846:
  3988                           
  3989                           ; BSR set to: 0
  3990  001200  C0B3  F0B4         	movff	___ftdiv@f2+2,??___ftdiv
  3991  001204  0100               	movlb	0	; () banked
  3992  001206  6BB5               	clrf	(??___ftdiv+1)& (0+255),b
  3993  001208  6BB6               	clrf	(??___ftdiv+2)& (0+255),b
  3994  00120A  0100               	movlb	0	; () banked
  3995  00120C  35B2               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3996  00120E  0100               	movlb	0	; () banked
  3997  001210  37B4               	rlcf	??___ftdiv& (0+255),f,b
  3998  001212  E301               	bnc	u3381
  3999  001214  81B5               	bsf	(??___ftdiv+1)& (0+255),0,b
  4000  001216                     u3381:
  4001  001216  0100               	movlb	0	; () banked
  4002  001218  51B4               	movf	??___ftdiv& (0+255),w,b
  4003  00121A  0100               	movlb	0	; () banked
  4004  00121C  6FBC               	movwf	___ftdiv@sign& (0+255),b
  4005  00121E  0100               	movlb	0	; () banked
  4006  001220  51BC               	movf	___ftdiv@sign& (0+255),w,b
  4007  001222  A4D8               	btfss	status,2,c
  4008  001224  D00A               	goto	l2852
  4009                           
  4010                           ; BSR set to: 0
  4011  001226  0E00               	movlw	0
  4012  001228  0100               	movlb	0	; () banked
  4013  00122A  6FAE               	movwf	?___ftdiv& (0+255),b
  4014  00122C  0E00               	movlw	0
  4015  00122E  0100               	movlb	0	; () banked
  4016  001230  6FAF               	movwf	(?___ftdiv+1)& (0+255),b
  4017  001232  0E00               	movlw	0
  4018  001234  0100               	movlb	0	; () banked
  4019  001236  6FB0               	movwf	(?___ftdiv+2)& (0+255),b
  4020                           
  4021                           ; BSR set to: 0
  4022  001238  0012               	return	
  4023  00123A                     l2852:
  4024                           
  4025                           ; BSR set to: 0
  4026  00123A  0E00               	movlw	0
  4027  00123C  0100               	movlb	0	; () banked
  4028  00123E  6FB8               	movwf	___ftdiv@f3& (0+255),b
  4029  001240  0E00               	movlw	0
  4030  001242  0100               	movlb	0	; () banked
  4031  001244  6FB9               	movwf	(___ftdiv@f3+1)& (0+255),b
  4032  001246  0E00               	movlw	0
  4033  001248  0100               	movlb	0	; () banked
  4034  00124A  6FBA               	movwf	(___ftdiv@f3+2)& (0+255),b
  4035                           
  4036                           ; BSR set to: 0
  4037  00124C  0100               	movlb	0	; () banked
  4038  00124E  51BC               	movf	___ftdiv@sign& (0+255),w,b
  4039  001250  0F89               	addlw	137
  4040  001252  0100               	movlb	0	; () banked
  4041  001254  5FBB               	subwf	___ftdiv@exp& (0+255),f,b
  4042                           
  4043                           ; BSR set to: 0
  4044  001256  C0B0  F0BC         	movff	___ftdiv@f1+2,___ftdiv@sign
  4045                           
  4046                           ; BSR set to: 0
  4047  00125A  0100               	movlb	0	; () banked
  4048  00125C  51B3               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4049  00125E  0100               	movlb	0	; () banked
  4050  001260  1BBC               	xorwf	___ftdiv@sign& (0+255),f,b
  4051                           
  4052                           ; BSR set to: 0
  4053  001262  0E80               	movlw	128
  4054  001264  0100               	movlb	0	; () banked
  4055  001266  17BC               	andwf	___ftdiv@sign& (0+255),f,b
  4056                           
  4057                           ; BSR set to: 0
  4058  001268  0100               	movlb	0	; () banked
  4059  00126A  8FAF               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  4060                           
  4061                           ; BSR set to: 0
  4062  00126C  0EFF               	movlw	255
  4063  00126E  0100               	movlb	0	; () banked
  4064  001270  17AE               	andwf	___ftdiv@f1& (0+255),f,b
  4065  001272  0EFF               	movlw	255
  4066  001274  0100               	movlb	0	; () banked
  4067  001276  17AF               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  4068  001278  0E00               	movlw	0
  4069  00127A  0100               	movlb	0	; () banked
  4070  00127C  17B0               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  4071                           
  4072                           ; BSR set to: 0
  4073  00127E  0100               	movlb	0	; () banked
  4074  001280  8FB2               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  4075                           
  4076                           ; BSR set to: 0
  4077  001282  0EFF               	movlw	255
  4078  001284  0100               	movlb	0	; () banked
  4079  001286  17B1               	andwf	___ftdiv@f2& (0+255),f,b
  4080  001288  0EFF               	movlw	255
  4081  00128A  0100               	movlb	0	; () banked
  4082  00128C  17B2               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  4083  00128E  0E00               	movlw	0
  4084  001290  0100               	movlb	0	; () banked
  4085  001292  17B3               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  4086                           
  4087                           ; BSR set to: 0
  4088  001294  0E18               	movlw	24
  4089  001296  0100               	movlb	0	; () banked
  4090  001298  6FB7               	movwf	___ftdiv@cntr& (0+255),b
  4091  00129A                     l2872:
  4092                           
  4093                           ; BSR set to: 0
  4094  00129A  0100               	movlb	0	; () banked
  4095  00129C  90D8               	bcf	status,0,c
  4096  00129E  37B8               	rlcf	___ftdiv@f3& (0+255),f,b
  4097  0012A0  37B9               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  4098  0012A2  37BA               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  4099                           
  4100                           ; BSR set to: 0
  4101  0012A4  0100               	movlb	0	; () banked
  4102  0012A6  51B1               	movf	___ftdiv@f2& (0+255),w,b
  4103  0012A8  0100               	movlb	0	; () banked
  4104  0012AA  5DAE               	subwf	___ftdiv@f1& (0+255),w,b
  4105  0012AC  0100               	movlb	0	; () banked
  4106  0012AE  51B2               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4107  0012B0  0100               	movlb	0	; () banked
  4108  0012B2  59AF               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  4109  0012B4  0100               	movlb	0	; () banked
  4110  0012B6  51B3               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4111  0012B8  0100               	movlb	0	; () banked
  4112  0012BA  59B0               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  4113  0012BC  A0D8               	btfss	status,0,c
  4114  0012BE  D00E               	goto	l809
  4115                           
  4116                           ; BSR set to: 0
  4117  0012C0  0100               	movlb	0	; () banked
  4118  0012C2  51B1               	movf	___ftdiv@f2& (0+255),w,b
  4119  0012C4  0100               	movlb	0	; () banked
  4120  0012C6  5FAE               	subwf	___ftdiv@f1& (0+255),f,b
  4121  0012C8  0100               	movlb	0	; () banked
  4122  0012CA  51B2               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4123  0012CC  0100               	movlb	0	; () banked
  4124  0012CE  5BAF               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  4125  0012D0  0100               	movlb	0	; () banked
  4126  0012D2  51B3               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4127  0012D4  0100               	movlb	0	; () banked
  4128  0012D6  5BB0               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  4129                           
  4130                           ; BSR set to: 0
  4131  0012D8  0100               	movlb	0	; () banked
  4132  0012DA  81B8               	bsf	___ftdiv@f3& (0+255),0,b
  4133  0012DC                     l809:
  4134                           
  4135                           ; BSR set to: 0
  4136  0012DC  0100               	movlb	0	; () banked
  4137  0012DE  90D8               	bcf	status,0,c
  4138  0012E0  37AE               	rlcf	___ftdiv@f1& (0+255),f,b
  4139  0012E2  37AF               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  4140  0012E4  37B0               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  4141                           
  4142                           ; BSR set to: 0
  4143  0012E6  0100               	movlb	0	; () banked
  4144  0012E8  2FB7               	decfsz	___ftdiv@cntr& (0+255),f,b
  4145  0012EA  D7D7               	goto	l2872
  4146                           
  4147                           ; BSR set to: 0
  4148                           
  4149                           ; BSR set to: 0
  4150  0012EC  C0B8  F076         	movff	___ftdiv@f3,___ftpack@arg
  4151  0012F0  C0B9  F077         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4152  0012F4  C0BA  F078         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4153  0012F8  C0BB  F079         	movff	___ftdiv@exp,___ftpack@exp
  4154  0012FC  C0BC  F07A         	movff	___ftdiv@sign,___ftpack@sign
  4155  001300  EC16  F00A         	call	___ftpack	;wreg free
  4156  001304  C076  F0AE         	movff	?___ftpack,?___ftdiv
  4157  001308  C077  F0AF         	movff	?___ftpack+1,?___ftdiv+1
  4158  00130C  C078  F0B0         	movff	?___ftpack+2,?___ftdiv+2
  4159  001310  0012               	return	
  4160  001312                     __end_of___ftdiv:
  4161                           	opt stack 0
  4162                           tblptru	equ	0xFF8
  4163                           tblptrh	equ	0xFF7
  4164                           tblptrl	equ	0xFF6
  4165                           tablat	equ	0xFF5
  4166                           prodh	equ	0xFF4
  4167                           prodl	equ	0xFF3
  4168                           intcon	equ	0xFF2
  4169                           intcon2	equ	0xFF1
  4170                           postinc0	equ	0xFEE
  4171                           wreg	equ	0xFE8
  4172                           postinc2	equ	0xFDE
  4173                           postdec2	equ	0xFDD
  4174                           fsr2h	equ	0xFDA
  4175                           fsr2l	equ	0xFD9
  4176                           status	equ	0xFD8
  4177                           
  4178 ;; *************** function ___ftpack *****************
  4179 ;; Defined at:
  4180 ;;		line 62 in file "/opt/microchip/xc8/v1.38/sources/common/float.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  arg             3   22[BANK0 ] unsigned um
  4183 ;;  exp             1   25[BANK0 ] unsigned char 
  4184 ;;  sign            1   26[BANK0 ] unsigned char 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;		None
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  3   22[BANK0 ] float 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4196 ;;      Params:         0       5       0       0       0       0       0       0       0
  4197 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4198 ;;      Temps:          0       3       0       0       0       0       0       0       0
  4199 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4200 ;;Total ram usage:        8 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:    5
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		___awtoft
  4207 ;;		___ftadd
  4208 ;;		___ftdiv
  4209 ;;		___ftmul
  4210 ;;		___lwtoft
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text20
  4215  00142C                     __ptext20:
  4216                           	opt stack 0
  4217  00142C                     ___ftpack:
  4218                           	opt stack 21
  4219                           
  4220                           ;incstack = 0
  4221  00142C  0100               	movlb	0	; () banked
  4222  00142E  5179               	movf	___ftpack@exp& (0+255),w,b
  4223  001430  0100               	movlb	0	; () banked
  4224  001432  B4D8               	btfsc	status,2,c
  4225  001434  D008               	goto	l2446
  4226                           
  4227                           ; BSR set to: 0
  4228  001436  0100               	movlb	0	; () banked
  4229  001438  5176               	movf	___ftpack@arg& (0+255),w,b
  4230  00143A  0100               	movlb	0	; () banked
  4231  00143C  1177               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  4232  00143E  0100               	movlb	0	; () banked
  4233  001440  1178               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  4234  001442  A4D8               	btfss	status,2,c
  4235  001444  D011               	goto	l2452
  4236  001446                     l2446:
  4237                           
  4238                           ; BSR set to: 0
  4239  001446  0E00               	movlw	0
  4240  001448  0100               	movlb	0	; () banked
  4241  00144A  6F76               	movwf	?___ftpack& (0+255),b
  4242  00144C  0E00               	movlw	0
  4243  00144E  0100               	movlb	0	; () banked
  4244  001450  6F77               	movwf	(?___ftpack+1)& (0+255),b
  4245  001452  0E00               	movlw	0
  4246  001454  0100               	movlb	0	; () banked
  4247  001456  6F78               	movwf	(?___ftpack+2)& (0+255),b
  4248                           
  4249                           ; BSR set to: 0
  4250  001458  0012               	return	
  4251  00145A                     l2450:
  4252                           
  4253                           ; BSR set to: 0
  4254  00145A  0100               	movlb	0	; () banked
  4255  00145C  2B79               	incf	___ftpack@exp& (0+255),f,b
  4256  00145E  0100               	movlb	0	; () banked
  4257  001460  90D8               	bcf	status,0,c
  4258  001462  3378               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  4259  001464  3377               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  4260  001466  3376               	rrcf	___ftpack@arg& (0+255),f,b
  4261  001468                     l2452:
  4262                           
  4263                           ; BSR set to: 0
  4264  001468  0E00               	movlw	0
  4265  00146A  0100               	movlb	0	; () banked
  4266  00146C  1576               	andwf	___ftpack@arg& (0+255),w,b
  4267  00146E  0100               	movlb	0	; () banked
  4268  001470  6F7B               	movwf	??___ftpack& (0+255),b
  4269  001472  0E00               	movlw	0
  4270  001474  0100               	movlb	0	; () banked
  4271  001476  1577               	andwf	(___ftpack@arg+1)& (0+255),w,b
  4272  001478  0100               	movlb	0	; () banked
  4273  00147A  6F7C               	movwf	(??___ftpack+1)& (0+255),b
  4274  00147C  0EFE               	movlw	254
  4275  00147E  0100               	movlb	0	; () banked
  4276  001480  1578               	andwf	(___ftpack@arg+2)& (0+255),w,b
  4277  001482  0100               	movlb	0	; () banked
  4278  001484  6F7D               	movwf	(??___ftpack+2)& (0+255),b
  4279  001486  0100               	movlb	0	; () banked
  4280  001488  517B               	movf	??___ftpack& (0+255),w,b
  4281  00148A  0100               	movlb	0	; () banked
  4282  00148C  117C               	iorwf	(??___ftpack+1)& (0+255),w,b
  4283  00148E  0100               	movlb	0	; () banked
  4284  001490  117D               	iorwf	(??___ftpack+2)& (0+255),w,b
  4285  001492  B4D8               	btfsc	status,2,c
  4286  001494  D011               	goto	l2458
  4287  001496  D7E1               	goto	l2450
  4288  001498                     l2454:
  4289                           
  4290                           ; BSR set to: 0
  4291  001498  0100               	movlb	0	; () banked
  4292  00149A  2B79               	incf	___ftpack@exp& (0+255),f,b
  4293                           
  4294                           ; BSR set to: 0
  4295  00149C  0E01               	movlw	1
  4296  00149E  0100               	movlb	0	; () banked
  4297  0014A0  2776               	addwf	___ftpack@arg& (0+255),f,b
  4298  0014A2  0E00               	movlw	0
  4299  0014A4  0100               	movlb	0	; () banked
  4300  0014A6  2377               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  4301  0014A8  0E00               	movlw	0
  4302  0014AA  0100               	movlb	0	; () banked
  4303  0014AC  2378               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  4304  0014AE  0100               	movlb	0	; () banked
  4305  0014B0  90D8               	bcf	status,0,c
  4306  0014B2  3378               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  4307  0014B4  3377               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  4308  0014B6  3376               	rrcf	___ftpack@arg& (0+255),f,b
  4309  0014B8                     l2458:
  4310                           
  4311                           ; BSR set to: 0
  4312  0014B8  0E00               	movlw	0
  4313  0014BA  0100               	movlb	0	; () banked
  4314  0014BC  1576               	andwf	___ftpack@arg& (0+255),w,b
  4315  0014BE  0100               	movlb	0	; () banked
  4316  0014C0  6F7B               	movwf	??___ftpack& (0+255),b
  4317  0014C2  0E00               	movlw	0
  4318  0014C4  0100               	movlb	0	; () banked
  4319  0014C6  1577               	andwf	(___ftpack@arg+1)& (0+255),w,b
  4320  0014C8  0100               	movlb	0	; () banked
  4321  0014CA  6F7C               	movwf	(??___ftpack+1)& (0+255),b
  4322  0014CC  0EFF               	movlw	255
  4323  0014CE  0100               	movlb	0	; () banked
  4324  0014D0  1578               	andwf	(___ftpack@arg+2)& (0+255),w,b
  4325  0014D2  0100               	movlb	0	; () banked
  4326  0014D4  6F7D               	movwf	(??___ftpack+2)& (0+255),b
  4327  0014D6  0100               	movlb	0	; () banked
  4328  0014D8  517B               	movf	??___ftpack& (0+255),w,b
  4329  0014DA  0100               	movlb	0	; () banked
  4330  0014DC  117C               	iorwf	(??___ftpack+1)& (0+255),w,b
  4331  0014DE  0100               	movlb	0	; () banked
  4332  0014E0  117D               	iorwf	(??___ftpack+2)& (0+255),w,b
  4333  0014E2  B4D8               	btfsc	status,2,c
  4334  0014E4  D008               	goto	l2462
  4335  0014E6  D7D8               	goto	l2454
  4336  0014E8                     l2460:
  4337                           
  4338                           ; BSR set to: 0
  4339  0014E8  0100               	movlb	0	; () banked
  4340  0014EA  0779               	decf	___ftpack@exp& (0+255),f,b
  4341  0014EC  0100               	movlb	0	; () banked
  4342  0014EE  90D8               	bcf	status,0,c
  4343  0014F0  3776               	rlcf	___ftpack@arg& (0+255),f,b
  4344  0014F2  3777               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  4345  0014F4  3778               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  4346  0014F6                     l2462:
  4347                           
  4348                           ; BSR set to: 0
  4349  0014F6  0100               	movlb	0	; () banked
  4350  0014F8  BF77               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  4351  0014FA  D004               	goto	l751
  4352                           
  4353                           ; BSR set to: 0
  4354  0014FC  0E02               	movlw	2
  4355  0014FE  0100               	movlb	0	; () banked
  4356  001500  6179               	cpfslt	___ftpack@exp& (0+255),b
  4357  001502  D7F2               	goto	l2460
  4358  001504                     l751:
  4359                           
  4360                           ; BSR set to: 0
  4361  001504  0100               	movlb	0	; () banked
  4362  001506  B179               	btfsc	___ftpack@exp& (0+255),0,b
  4363  001508  D002               	goto	l2468
  4364                           
  4365                           ; BSR set to: 0
  4366  00150A  0100               	movlb	0	; () banked
  4367  00150C  9F77               	bcf	(___ftpack@arg+1)& (0+255),7,b
  4368  00150E                     l2468:
  4369                           
  4370                           ; BSR set to: 0
  4371  00150E  0100               	movlb	0	; () banked
  4372  001510  90D8               	bcf	status,0,c
  4373  001512  3379               	rrcf	___ftpack@exp& (0+255),f,b
  4374  001514  0100               	movlb	0	; () banked
  4375  001516  5179               	movf	___ftpack@exp& (0+255),w,b
  4376  001518  0100               	movlb	0	; () banked
  4377  00151A  1378               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  4378                           
  4379                           ; BSR set to: 0
  4380  00151C  0100               	movlb	0	; () banked
  4381  00151E  517A               	movf	___ftpack@sign& (0+255),w,b
  4382  001520  0100               	movlb	0	; () banked
  4383  001522  B4D8               	btfsc	status,2,c
  4384  001524  D002               	goto	l2474
  4385                           
  4386                           ; BSR set to: 0
  4387  001526  0100               	movlb	0	; () banked
  4388  001528  8F78               	bsf	(___ftpack@arg+2)& (0+255),7,b
  4389  00152A                     l2474:
  4390                           
  4391                           ; BSR set to: 0
  4392  00152A  C076  F076         	movff	___ftpack@arg,?___ftpack
  4393  00152E  C077  F077         	movff	___ftpack@arg+1,?___ftpack+1
  4394  001532  C078  F078         	movff	___ftpack@arg+2,?___ftpack+2
  4395  001536  0012               	return	
  4396  001538                     __end_of___ftpack:
  4397                           	opt stack 0
  4398                           tblptru	equ	0xFF8
  4399                           tblptrh	equ	0xFF7
  4400                           tblptrl	equ	0xFF6
  4401                           tablat	equ	0xFF5
  4402                           prodh	equ	0xFF4
  4403                           prodl	equ	0xFF3
  4404                           intcon	equ	0xFF2
  4405                           intcon2	equ	0xFF1
  4406                           postinc0	equ	0xFEE
  4407                           wreg	equ	0xFE8
  4408                           postinc2	equ	0xFDE
  4409                           postdec2	equ	0xFDD
  4410                           fsr2h	equ	0xFDA
  4411                           fsr2l	equ	0xFD9
  4412                           status	equ	0xFD8
  4413                           
  4414 ;; *************** function _error *****************
  4415 ;; Defined at:
  4416 ;;		line 421 in file "main.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  code            1    wreg     unsigned char 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  code            1   32[BANK0 ] unsigned char 
  4421 ;;  i               2   33[BANK0 ] int 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      void 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4431 ;;      Params:         0       0       0       0       0       0       0       0       0
  4432 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4433 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4434 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4435 ;;Total ram usage:        4 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    7
  4438 ;; This function calls:
  4439 ;;		_num_to_disp
  4440 ;;		_set_LEDs
  4441 ;;		_set_digit
  4442 ;;		_set_key_led_disp_tris
  4443 ;; This function is called by:
  4444 ;;		_main
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448                           	psect	text21
  4449  001944                     __ptext21:
  4450                           	opt stack 0
  4451  001944                     _error:
  4452                           	opt stack 23
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;incstack = 0
  4456                           ;error@code stored from wreg
  4457  001944  0100               	movlb	0	; () banked
  4458  001946  6F80               	movwf	error@code& (0+255),b
  4459                           
  4460                           ;main.c: 424: disp[0] = num_to_disp('E') | 0b10000000;
  4461  001948  0E45               	movlw	69
  4462  00194A  EC74  F010         	call	_num_to_disp
  4463  00194E  0980               	iorlw	128
  4464  001950  0100               	movlb	0	; () banked
  4465  001952  6FD7               	movwf	_disp& (0+255),b
  4466                           
  4467                           ;main.c: 425: disp[1] = num_to_disp(code) | 0b10000000;
  4468  001954  0100               	movlb	0	; () banked
  4469  001956  5180               	movf	error@code& (0+255),w,b
  4470  001958  EC74  F010         	call	_num_to_disp
  4471  00195C  0980               	iorlw	128
  4472  00195E  0100               	movlb	0	; () banked
  4473  001960  6FD8               	movwf	(_disp+1)& (0+255),b
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;main.c: 426: set_key_led_disp_tris(0);
  4477  001962  0E00               	movlw	0
  4478  001964  EC24  F011         	call	_set_key_led_disp_tris
  4479                           
  4480                           ;main.c: 429: LATC1 = 0;
  4481  001968  928B               	bcf	3979,1,c	;volatile
  4482                           
  4483                           ;main.c: 430: LATC2 = 0;
  4484  00196A  948B               	bcf	3979,2,c	;volatile
  4485                           
  4486                           ;main.c: 431: LATC0 = 0;
  4487  00196C  908B               	bcf	3979,0,c	;volatile
  4488                           
  4489                           ;main.c: 432: LATA5 = 0;
  4490  00196E  9A89               	bcf	3977,5,c	;volatile
  4491  001970                     l3022:
  4492                           
  4493                           ;main.c: 435: {
  4494                           ;main.c: 436: LATA3 = 0;
  4495  001970  9689               	bcf	3977,3,c	;volatile
  4496                           
  4497                           ;main.c: 437: LATA4 = 1;
  4498  001972  8889               	bsf	3977,4,c	;volatile
  4499                           
  4500                           ;main.c: 438: LATA2 = 1;
  4501  001974  8489               	bsf	3977,2,c	;volatile
  4502                           
  4503                           ;main.c: 439: set_digit(disp[0] ^ ((blink > 12) * 0b10000000));
  4504  001976  0E0D               	movlw	13
  4505  001978  0100               	movlb	0	; () banked
  4506  00197A  61DB               	cpfslt	_blink& (0+255),b
  4507  00197C  D001               	goto	u3681
  4508  00197E  D004               	goto	u3680
  4509  001980                     u3681:
  4510  001980  0100               	movlb	0	; () banked
  4511  001982  6B7F               	clrf	??_error& (0+255),b
  4512  001984  2B7F               	incf	??_error& (0+255),f,b
  4513  001986  D002               	goto	u3698
  4514  001988                     u3680:
  4515  001988  0100               	movlb	0	; () banked
  4516  00198A  6B7F               	clrf	??_error& (0+255),b
  4517  00198C                     u3698:
  4518  00198C  0E00               	movlw	0
  4519  00198E  B17F               	btfsc	??_error& (0+255),0,b
  4520  001990  0E80               	movlw	128
  4521  001992  6F7F               	movwf	??_error& (0+255),b
  4522  001994  0100               	movlb	0	; () banked
  4523  001996  517F               	movf	??_error& (0+255),w,b
  4524  001998  0100               	movlb	0	; () banked
  4525  00199A  19D7               	xorwf	_disp& (0+255),w,b
  4526  00199C  EC22  F00B         	call	_set_digit
  4527                           
  4528                           ;main.c: 441: i = 100;
  4529  0019A0  0E00               	movlw	0
  4530  0019A2  0100               	movlb	0	; () banked
  4531  0019A4  6F82               	movwf	(error@i+1)& (0+255),b
  4532  0019A6  0E64               	movlw	100
  4533  0019A8  6F81               	movwf	error@i& (0+255),b
  4534  0019AA                     l3032:
  4535                           
  4536                           ; BSR set to: 0
  4537  0019AA  0100               	movlb	0	; () banked
  4538  0019AC  0781               	decf	error@i& (0+255),f,b
  4539  0019AE  A0D8               	btfss	status,0,c
  4540  0019B0  0782               	decf	(error@i+1)& (0+255),f,b
  4541  0019B2  0100               	movlb	0	; () banked
  4542  0019B4  5181               	movf	error@i& (0+255),w,b
  4543  0019B6  0100               	movlb	0	; () banked
  4544  0019B8  1182               	iorwf	(error@i+1)& (0+255),w,b
  4545  0019BA  A4D8               	btfss	status,2,c
  4546  0019BC  D7F6               	goto	l3032
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;main.c: 444: LATA3 = 1;
  4550  0019BE  8689               	bsf	3977,3,c	;volatile
  4551                           
  4552                           ;main.c: 445: LATA4 = 0;
  4553  0019C0  9889               	bcf	3977,4,c	;volatile
  4554                           
  4555                           ;main.c: 446: LATA2 = 1;
  4556  0019C2  8489               	bsf	3977,2,c	;volatile
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;main.c: 447: set_digit(disp[1] ^ ((blink > 12) * 0b10000000));
  4560  0019C4  0E0D               	movlw	13
  4561  0019C6  0100               	movlb	0	; () banked
  4562  0019C8  61DB               	cpfslt	_blink& (0+255),b
  4563  0019CA  D001               	goto	u3711
  4564  0019CC  D004               	goto	u3710
  4565  0019CE                     u3711:
  4566  0019CE  0100               	movlb	0	; () banked
  4567  0019D0  6B7F               	clrf	??_error& (0+255),b
  4568  0019D2  2B7F               	incf	??_error& (0+255),f,b
  4569  0019D4  D002               	goto	u3728
  4570  0019D6                     u3710:
  4571  0019D6  0100               	movlb	0	; () banked
  4572  0019D8  6B7F               	clrf	??_error& (0+255),b
  4573  0019DA                     u3728:
  4574  0019DA  0E00               	movlw	0
  4575  0019DC  B17F               	btfsc	??_error& (0+255),0,b
  4576  0019DE  0E80               	movlw	128
  4577  0019E0  6F7F               	movwf	??_error& (0+255),b
  4578  0019E2  0100               	movlb	0	; () banked
  4579  0019E4  517F               	movf	??_error& (0+255),w,b
  4580  0019E6  0100               	movlb	0	; () banked
  4581  0019E8  19D8               	xorwf	(_disp+1)& (0+255),w,b
  4582  0019EA  EC22  F00B         	call	_set_digit
  4583                           
  4584                           ;main.c: 449: i = 100;
  4585  0019EE  0E00               	movlw	0
  4586  0019F0  0100               	movlb	0	; () banked
  4587  0019F2  6F82               	movwf	(error@i+1)& (0+255),b
  4588  0019F4  0E64               	movlw	100
  4589  0019F6  6F81               	movwf	error@i& (0+255),b
  4590  0019F8                     l3038:
  4591                           
  4592                           ; BSR set to: 0
  4593  0019F8  0100               	movlb	0	; () banked
  4594  0019FA  0781               	decf	error@i& (0+255),f,b
  4595  0019FC  A0D8               	btfss	status,0,c
  4596  0019FE  0782               	decf	(error@i+1)& (0+255),f,b
  4597  001A00  0100               	movlb	0	; () banked
  4598  001A02  5181               	movf	error@i& (0+255),w,b
  4599  001A04  0100               	movlb	0	; () banked
  4600  001A06  1182               	iorwf	(error@i+1)& (0+255),w,b
  4601  001A08  A4D8               	btfss	status,2,c
  4602  001A0A  D7F6               	goto	l3038
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;main.c: 452: LATA3 = 1;
  4606  001A0C  8689               	bsf	3977,3,c	;volatile
  4607                           
  4608                           ;main.c: 453: LATA4 = 1;
  4609  001A0E  8889               	bsf	3977,4,c	;volatile
  4610                           
  4611                           ;main.c: 454: LATA2 = 0;
  4612  001A10  9489               	bcf	3977,2,c	;volatile
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;main.c: 456: set_LEDs(0b100000 | 0b1000000);
  4616  001A12  0E60               	movlw	96
  4617  001A14  EC23  F00C         	call	_set_LEDs
  4618                           
  4619                           ;main.c: 458: i = 1000;
  4620  001A18  0E03               	movlw	3
  4621  001A1A  0100               	movlb	0	; () banked
  4622  001A1C  6F82               	movwf	(error@i+1)& (0+255),b
  4623  001A1E  0EE8               	movlw	232
  4624  001A20  6F81               	movwf	error@i& (0+255),b
  4625  001A22                     l3044:
  4626                           
  4627                           ; BSR set to: 0
  4628  001A22  0100               	movlb	0	; () banked
  4629  001A24  0781               	decf	error@i& (0+255),f,b
  4630  001A26  A0D8               	btfss	status,0,c
  4631  001A28  0782               	decf	(error@i+1)& (0+255),f,b
  4632  001A2A  0100               	movlb	0	; () banked
  4633  001A2C  5181               	movf	error@i& (0+255),w,b
  4634  001A2E  0100               	movlb	0	; () banked
  4635  001A30  1182               	iorwf	(error@i+1)& (0+255),w,b
  4636  001A32  B4D8               	btfsc	status,2,c
  4637  001A34  D79D               	goto	l3022
  4638  001A36  D7F5               	goto	l3044
  4639  001A38                     __end_of_error:
  4640                           	opt stack 0
  4641                           tblptru	equ	0xFF8
  4642                           tblptrh	equ	0xFF7
  4643                           tblptrl	equ	0xFF6
  4644                           tablat	equ	0xFF5
  4645                           prodh	equ	0xFF4
  4646                           prodl	equ	0xFF3
  4647                           intcon	equ	0xFF2
  4648                           intcon2	equ	0xFF1
  4649                           postinc0	equ	0xFEE
  4650                           wreg	equ	0xFE8
  4651                           postinc2	equ	0xFDE
  4652                           postdec2	equ	0xFDD
  4653                           fsr2h	equ	0xFDA
  4654                           fsr2l	equ	0xFD9
  4655                           status	equ	0xFD8
  4656                           
  4657 ;; *************** function _set_digit *****************
  4658 ;; Defined at:
  4659 ;;		line 27 in file "disp.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  dig             1    wreg     unsigned char 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  dig             1   30[BANK0 ] unsigned char 
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4673 ;;      Params:         0       0       0       0       0       0       0       0       0
  4674 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4676 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4677 ;;Total ram usage:        1 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    6
  4680 ;; This function calls:
  4681 ;;		___awdiv
  4682 ;; This function is called by:
  4683 ;;		_error
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text22
  4688  001644                     __ptext22:
  4689                           	opt stack 0
  4690  001644                     _set_digit:
  4691                           	opt stack 23
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;incstack = 0
  4695                           ;set_digit@dig stored from wreg
  4696  001644  0100               	movlb	0	; () banked
  4697  001646  6F7E               	movwf	set_digit@dig& (0+255),b
  4698                           
  4699                           ;disp.c: 48: if (dig & 0b10000000)
  4700  001648  0100               	movlb	0	; () banked
  4701  00164A  AF7E               	btfss	set_digit@dig& (0+255),7,b
  4702  00164C  D003               	goto	l2762
  4703                           
  4704                           ; BSR set to: 0
  4705                           ;disp.c: 49: dig = 0;
  4706  00164E  0E00               	movlw	0
  4707  001650  0100               	movlb	0	; () banked
  4708  001652  6F7E               	movwf	set_digit@dig& (0+255),b
  4709  001654                     l2762:
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;disp.c: 51: LATB2 = (dig / 0b1);
  4713  001654  0100               	movlb	0	; () banked
  4714  001656  A17E               	btfss	set_digit@dig& (0+255),0,b
  4715  001658  D002               	goto	u3060
  4716  00165A  848A               	bsf	3978,2,c	;volatile
  4717  00165C  D001               	goto	l2764
  4718  00165E                     u3060:
  4719  00165E  948A               	bcf	3978,2,c	;volatile
  4720  001660                     l2764:
  4721                           
  4722                           ;disp.c: 52: LATB5 = (dig / 0b10);
  4723  001660  C07E  F076         	movff	set_digit@dig,___awdiv@dividend
  4724  001664  0100               	movlb	0	; () banked
  4725  001666  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4726  001668  0E00               	movlw	0
  4727  00166A  0100               	movlb	0	; () banked
  4728  00166C  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4729  00166E  0E02               	movlw	2
  4730  001670  6F78               	movwf	___awdiv@divisor& (0+255),b
  4731  001672  EC26  F00F         	call	___awdiv	;wreg free
  4732  001676  0100               	movlb	0	; () banked
  4733  001678  3176               	rrcf	?___awdiv& (0+255),w,b
  4734  00167A  0100               	movlb	0	; () banked
  4735  00167C  A0D8               	btfss	status,0,c
  4736  00167E  D002               	goto	u3080
  4737  001680  8A8A               	bsf	3978,5,c	;volatile
  4738  001682  D001               	goto	l2766
  4739  001684                     u3080:
  4740  001684  9A8A               	bcf	3978,5,c	;volatile
  4741  001686                     l2766:
  4742                           
  4743                           ;disp.c: 53: LATB4 = (dig / 0b100);
  4744  001686  C07E  F076         	movff	set_digit@dig,___awdiv@dividend
  4745  00168A  0100               	movlb	0	; () banked
  4746  00168C  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4747  00168E  0E00               	movlw	0
  4748  001690  0100               	movlb	0	; () banked
  4749  001692  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4750  001694  0E04               	movlw	4
  4751  001696  6F78               	movwf	___awdiv@divisor& (0+255),b
  4752  001698  EC26  F00F         	call	___awdiv	;wreg free
  4753  00169C  0100               	movlb	0	; () banked
  4754  00169E  3176               	rrcf	?___awdiv& (0+255),w,b
  4755  0016A0  0100               	movlb	0	; () banked
  4756  0016A2  A0D8               	btfss	status,0,c
  4757  0016A4  D002               	goto	u3100
  4758  0016A6  888A               	bsf	3978,4,c	;volatile
  4759  0016A8  D001               	goto	l2768
  4760  0016AA                     u3100:
  4761  0016AA  988A               	bcf	3978,4,c	;volatile
  4762  0016AC                     l2768:
  4763                           
  4764                           ;disp.c: 54: LATB0 = (dig / 0b1000);
  4765  0016AC  C07E  F076         	movff	set_digit@dig,___awdiv@dividend
  4766  0016B0  0100               	movlb	0	; () banked
  4767  0016B2  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4768  0016B4  0E00               	movlw	0
  4769  0016B6  0100               	movlb	0	; () banked
  4770  0016B8  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4771  0016BA  0E08               	movlw	8
  4772  0016BC  6F78               	movwf	___awdiv@divisor& (0+255),b
  4773  0016BE  EC26  F00F         	call	___awdiv	;wreg free
  4774  0016C2  0100               	movlb	0	; () banked
  4775  0016C4  3176               	rrcf	?___awdiv& (0+255),w,b
  4776  0016C6  0100               	movlb	0	; () banked
  4777  0016C8  A0D8               	btfss	status,0,c
  4778  0016CA  D002               	goto	u3120
  4779  0016CC  808A               	bsf	3978,0,c	;volatile
  4780  0016CE  D001               	goto	l2770
  4781  0016D0                     u3120:
  4782  0016D0  908A               	bcf	3978,0,c	;volatile
  4783  0016D2                     l2770:
  4784                           
  4785                           ;disp.c: 55: LATB4 = (dig / 0b10000);
  4786  0016D2  C07E  F076         	movff	set_digit@dig,___awdiv@dividend
  4787  0016D6  0100               	movlb	0	; () banked
  4788  0016D8  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4789  0016DA  0E00               	movlw	0
  4790  0016DC  0100               	movlb	0	; () banked
  4791  0016DE  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4792  0016E0  0E10               	movlw	16
  4793  0016E2  6F78               	movwf	___awdiv@divisor& (0+255),b
  4794  0016E4  EC26  F00F         	call	___awdiv	;wreg free
  4795  0016E8  0100               	movlb	0	; () banked
  4796  0016EA  3176               	rrcf	?___awdiv& (0+255),w,b
  4797  0016EC  0100               	movlb	0	; () banked
  4798  0016EE  A0D8               	btfss	status,0,c
  4799  0016F0  D002               	goto	u3140
  4800  0016F2  888A               	bsf	3978,4,c	;volatile
  4801  0016F4  D001               	goto	l2772
  4802  0016F6                     u3140:
  4803  0016F6  988A               	bcf	3978,4,c	;volatile
  4804  0016F8                     l2772:
  4805                           
  4806                           ;disp.c: 56: LATB1 = (dig / 0b100000);
  4807  0016F8  C07E  F076         	movff	set_digit@dig,___awdiv@dividend
  4808  0016FC  0100               	movlb	0	; () banked
  4809  0016FE  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4810  001700  0E00               	movlw	0
  4811  001702  0100               	movlb	0	; () banked
  4812  001704  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4813  001706  0E20               	movlw	32
  4814  001708  6F78               	movwf	___awdiv@divisor& (0+255),b
  4815  00170A  EC26  F00F         	call	___awdiv	;wreg free
  4816  00170E  0100               	movlb	0	; () banked
  4817  001710  3176               	rrcf	?___awdiv& (0+255),w,b
  4818  001712  0100               	movlb	0	; () banked
  4819  001714  A0D8               	btfss	status,0,c
  4820  001716  D002               	goto	u3160
  4821  001718  828A               	bsf	3978,1,c	;volatile
  4822  00171A  D001               	goto	l2774
  4823  00171C                     u3160:
  4824  00171C  928A               	bcf	3978,1,c	;volatile
  4825  00171E                     l2774:
  4826                           
  4827                           ;disp.c: 57: LATA6 = (dig / 0b1000000);
  4828  00171E  C07E  F076         	movff	set_digit@dig,___awdiv@dividend
  4829  001722  0100               	movlb	0	; () banked
  4830  001724  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4831  001726  0E00               	movlw	0
  4832  001728  0100               	movlb	0	; () banked
  4833  00172A  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4834  00172C  0E40               	movlw	64
  4835  00172E  6F78               	movwf	___awdiv@divisor& (0+255),b
  4836  001730  EC26  F00F         	call	___awdiv	;wreg free
  4837  001734  0100               	movlb	0	; () banked
  4838  001736  3176               	rrcf	?___awdiv& (0+255),w,b
  4839  001738  0100               	movlb	0	; () banked
  4840  00173A  A0D8               	btfss	status,0,c
  4841  00173C  D002               	goto	u3180
  4842  00173E  8C89               	bsf	3977,6,c	;volatile
  4843  001740  0012               	return	
  4844  001742                     u3180:
  4845  001742  9C89               	bcf	3977,6,c	;volatile
  4846  001744  0012               	return		;funcret
  4847  001746                     __end_of_set_digit:
  4848                           	opt stack 0
  4849                           tblptru	equ	0xFF8
  4850                           tblptrh	equ	0xFF7
  4851                           tblptrl	equ	0xFF6
  4852                           tablat	equ	0xFF5
  4853                           prodh	equ	0xFF4
  4854                           prodl	equ	0xFF3
  4855                           intcon	equ	0xFF2
  4856                           intcon2	equ	0xFF1
  4857                           postinc0	equ	0xFEE
  4858                           wreg	equ	0xFE8
  4859                           postinc2	equ	0xFDE
  4860                           postdec2	equ	0xFDD
  4861                           fsr2h	equ	0xFDA
  4862                           fsr2l	equ	0xFD9
  4863                           status	equ	0xFD8
  4864                           
  4865 ;; *************** function _set_LEDs *****************
  4866 ;; Defined at:
  4867 ;;		line 511 in file "main.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;  mask            1    wreg     unsigned char 
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;  mask            1   30[BANK0 ] unsigned char 
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  1    wreg      void 
  4874 ;; Registers used:
  4875 ;;		wreg, status,2, status,0, cstack
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4881 ;;      Params:         0       0       0       0       0       0       0       0       0
  4882 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4883 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4884 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4885 ;;Total ram usage:        1 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; Hardware stack levels required when called:    6
  4888 ;; This function calls:
  4889 ;;		___awdiv
  4890 ;;		_set_key_led_disp_tris
  4891 ;; This function is called by:
  4892 ;;		_error
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text23
  4897  001846                     __ptext23:
  4898                           	opt stack 0
  4899  001846                     _set_LEDs:
  4900                           	opt stack 23
  4901                           
  4902                           ;incstack = 0
  4903                           ;set_LEDs@mask stored from wreg
  4904  001846  0100               	movlb	0	; () banked
  4905  001848  6F7E               	movwf	set_LEDs@mask& (0+255),b
  4906                           
  4907                           ;main.c: 513: set_key_led_disp_tris(0);
  4908  00184A  0E00               	movlw	0
  4909  00184C  EC24  F011         	call	_set_key_led_disp_tris
  4910                           
  4911                           ;main.c: 514: LATA2 = 0;
  4912  001850  9489               	bcf	3977,2,c	;volatile
  4913                           
  4914                           ;main.c: 517: LATA6 = mask / 0b1;
  4915  001852  0100               	movlb	0	; () banked
  4916  001854  A17E               	btfss	set_LEDs@mask& (0+255),0,b
  4917  001856  D002               	goto	u3200
  4918  001858  8C89               	bsf	3977,6,c	;volatile
  4919  00185A  D001               	goto	l2782
  4920  00185C                     u3200:
  4921  00185C  9C89               	bcf	3977,6,c	;volatile
  4922  00185E                     l2782:
  4923                           
  4924                           ;main.c: 518: LATB1 = mask / 0b10;
  4925  00185E  C07E  F076         	movff	set_LEDs@mask,___awdiv@dividend
  4926  001862  0100               	movlb	0	; () banked
  4927  001864  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4928  001866  0E00               	movlw	0
  4929  001868  0100               	movlb	0	; () banked
  4930  00186A  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4931  00186C  0E02               	movlw	2
  4932  00186E  6F78               	movwf	___awdiv@divisor& (0+255),b
  4933  001870  EC26  F00F         	call	___awdiv	;wreg free
  4934  001874  0100               	movlb	0	; () banked
  4935  001876  3176               	rrcf	?___awdiv& (0+255),w,b
  4936  001878  0100               	movlb	0	; () banked
  4937  00187A  A0D8               	btfss	status,0,c
  4938  00187C  D002               	goto	u3220
  4939  00187E  828A               	bsf	3978,1,c	;volatile
  4940  001880  D001               	goto	l2784
  4941  001882                     u3220:
  4942  001882  928A               	bcf	3978,1,c	;volatile
  4943  001884                     l2784:
  4944                           
  4945                           ;main.c: 519: LATB2 = mask / 0b100;
  4946  001884  C07E  F076         	movff	set_LEDs@mask,___awdiv@dividend
  4947  001888  0100               	movlb	0	; () banked
  4948  00188A  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4949  00188C  0E00               	movlw	0
  4950  00188E  0100               	movlb	0	; () banked
  4951  001890  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4952  001892  0E04               	movlw	4
  4953  001894  6F78               	movwf	___awdiv@divisor& (0+255),b
  4954  001896  EC26  F00F         	call	___awdiv	;wreg free
  4955  00189A  0100               	movlb	0	; () banked
  4956  00189C  3176               	rrcf	?___awdiv& (0+255),w,b
  4957  00189E  0100               	movlb	0	; () banked
  4958  0018A0  A0D8               	btfss	status,0,c
  4959  0018A2  D002               	goto	u3240
  4960  0018A4  848A               	bsf	3978,2,c	;volatile
  4961  0018A6  D001               	goto	l2786
  4962  0018A8                     u3240:
  4963  0018A8  948A               	bcf	3978,2,c	;volatile
  4964  0018AA                     l2786:
  4965                           
  4966                           ;main.c: 520: LATB3 = mask / 0b1000;
  4967  0018AA  C07E  F076         	movff	set_LEDs@mask,___awdiv@dividend
  4968  0018AE  0100               	movlb	0	; () banked
  4969  0018B0  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4970  0018B2  0E00               	movlw	0
  4971  0018B4  0100               	movlb	0	; () banked
  4972  0018B6  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4973  0018B8  0E08               	movlw	8
  4974  0018BA  6F78               	movwf	___awdiv@divisor& (0+255),b
  4975  0018BC  EC26  F00F         	call	___awdiv	;wreg free
  4976  0018C0  0100               	movlb	0	; () banked
  4977  0018C2  3176               	rrcf	?___awdiv& (0+255),w,b
  4978  0018C4  0100               	movlb	0	; () banked
  4979  0018C6  A0D8               	btfss	status,0,c
  4980  0018C8  D002               	goto	u3260
  4981  0018CA  868A               	bsf	3978,3,c	;volatile
  4982  0018CC  D001               	goto	l2788
  4983  0018CE                     u3260:
  4984  0018CE  968A               	bcf	3978,3,c	;volatile
  4985  0018D0                     l2788:
  4986                           
  4987                           ;main.c: 521: LATB4 = mask / 0b10000;
  4988  0018D0  C07E  F076         	movff	set_LEDs@mask,___awdiv@dividend
  4989  0018D4  0100               	movlb	0	; () banked
  4990  0018D6  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  4991  0018D8  0E00               	movlw	0
  4992  0018DA  0100               	movlb	0	; () banked
  4993  0018DC  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  4994  0018DE  0E10               	movlw	16
  4995  0018E0  6F78               	movwf	___awdiv@divisor& (0+255),b
  4996  0018E2  EC26  F00F         	call	___awdiv	;wreg free
  4997  0018E6  0100               	movlb	0	; () banked
  4998  0018E8  3176               	rrcf	?___awdiv& (0+255),w,b
  4999  0018EA  0100               	movlb	0	; () banked
  5000  0018EC  A0D8               	btfss	status,0,c
  5001  0018EE  D002               	goto	u3280
  5002  0018F0  888A               	bsf	3978,4,c	;volatile
  5003  0018F2  D001               	goto	l2790
  5004  0018F4                     u3280:
  5005  0018F4  988A               	bcf	3978,4,c	;volatile
  5006  0018F6                     l2790:
  5007                           
  5008                           ;main.c: 522: LATB5 = mask / 0b100000;
  5009  0018F6  C07E  F076         	movff	set_LEDs@mask,___awdiv@dividend
  5010  0018FA  0100               	movlb	0	; () banked
  5011  0018FC  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  5012  0018FE  0E00               	movlw	0
  5013  001900  0100               	movlb	0	; () banked
  5014  001902  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  5015  001904  0E20               	movlw	32
  5016  001906  6F78               	movwf	___awdiv@divisor& (0+255),b
  5017  001908  EC26  F00F         	call	___awdiv	;wreg free
  5018  00190C  0100               	movlb	0	; () banked
  5019  00190E  3176               	rrcf	?___awdiv& (0+255),w,b
  5020  001910  0100               	movlb	0	; () banked
  5021  001912  A0D8               	btfss	status,0,c
  5022  001914  D002               	goto	u3300
  5023  001916  8A8A               	bsf	3978,5,c	;volatile
  5024  001918  D001               	goto	l2792
  5025  00191A                     u3300:
  5026  00191A  9A8A               	bcf	3978,5,c	;volatile
  5027  00191C                     l2792:
  5028                           
  5029                           ;main.c: 523: LATB0 = mask / 0b1000000;
  5030  00191C  C07E  F076         	movff	set_LEDs@mask,___awdiv@dividend
  5031  001920  0100               	movlb	0	; () banked
  5032  001922  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  5033  001924  0E00               	movlw	0
  5034  001926  0100               	movlb	0	; () banked
  5035  001928  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  5036  00192A  0E40               	movlw	64
  5037  00192C  6F78               	movwf	___awdiv@divisor& (0+255),b
  5038  00192E  EC26  F00F         	call	___awdiv	;wreg free
  5039  001932  0100               	movlb	0	; () banked
  5040  001934  3176               	rrcf	?___awdiv& (0+255),w,b
  5041  001936  0100               	movlb	0	; () banked
  5042  001938  A0D8               	btfss	status,0,c
  5043  00193A  D002               	goto	u3320
  5044  00193C  808A               	bsf	3978,0,c	;volatile
  5045  00193E  0012               	return	
  5046  001940                     u3320:
  5047  001940  908A               	bcf	3978,0,c	;volatile
  5048  001942  0012               	return		;funcret
  5049  001944                     __end_of_set_LEDs:
  5050                           	opt stack 0
  5051                           tblptru	equ	0xFF8
  5052                           tblptrh	equ	0xFF7
  5053                           tblptrl	equ	0xFF6
  5054                           tablat	equ	0xFF5
  5055                           prodh	equ	0xFF4
  5056                           prodl	equ	0xFF3
  5057                           intcon	equ	0xFF2
  5058                           intcon2	equ	0xFF1
  5059                           postinc0	equ	0xFEE
  5060                           wreg	equ	0xFE8
  5061                           postinc2	equ	0xFDE
  5062                           postdec2	equ	0xFDD
  5063                           fsr2h	equ	0xFDA
  5064                           fsr2l	equ	0xFD9
  5065                           status	equ	0xFD8
  5066                           
  5067 ;; *************** function _set_key_led_disp_tris *****************
  5068 ;; Defined at:
  5069 ;;		line 534 in file "main.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  dir             1    wreg     unsigned char 
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;  dir             1   22[BANK0 ] unsigned char 
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  1    wreg      void 
  5076 ;; Registers used:
  5077 ;;		wreg
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5083 ;;      Params:         0       0       0       0       0       0       0       0       0
  5084 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5086 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5087 ;;Total ram usage:        1 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    5
  5090 ;; This function calls:
  5091 ;;		Nothing
  5092 ;; This function is called by:
  5093 ;;		_error
  5094 ;;		_set_LEDs
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           	psect	text24
  5099  002248                     __ptext24:
  5100                           	opt stack 0
  5101  002248                     _set_key_led_disp_tris:
  5102                           	opt stack 24
  5103                           
  5104                           ;incstack = 0
  5105                           ;set_key_led_disp_tris@dir stored from wreg
  5106  002248  0100               	movlb	0	; () banked
  5107  00224A  6F76               	movwf	set_key_led_disp_tris@dir& (0+255),b
  5108                           
  5109                           ;main.c: 538: TRISA6 = dir;
  5110  00224C  0100               	movlb	0	; () banked
  5111  00224E  A176               	btfss	set_key_led_disp_tris@dir& (0+255),0,b
  5112  002250  D002               	goto	u2810
  5113  002252  8C92               	bsf	3986,6,c	;volatile
  5114  002254  D001               	goto	u2825
  5115  002256                     u2810:
  5116  002256  9C92               	bcf	3986,6,c	;volatile
  5117  002258                     u2825:
  5118                           
  5119                           ;main.c: 539: TRISB1 = dir;
  5120  002258  0100               	movlb	0	; () banked
  5121  00225A  A176               	btfss	set_key_led_disp_tris@dir& (0+255),0,b
  5122  00225C  D002               	goto	u2830
  5123  00225E  8293               	bsf	3987,1,c	;volatile
  5124  002260  D001               	goto	u2845
  5125  002262                     u2830:
  5126  002262  9293               	bcf	3987,1,c	;volatile
  5127  002264                     u2845:
  5128                           
  5129                           ;main.c: 540: TRISB2 = dir;
  5130  002264  0100               	movlb	0	; () banked
  5131  002266  A176               	btfss	set_key_led_disp_tris@dir& (0+255),0,b
  5132  002268  D002               	goto	u2850
  5133  00226A  8493               	bsf	3987,2,c	;volatile
  5134  00226C  D001               	goto	u2865
  5135  00226E                     u2850:
  5136  00226E  9493               	bcf	3987,2,c	;volatile
  5137  002270                     u2865:
  5138                           
  5139                           ;main.c: 541: TRISB3 = dir;
  5140  002270  0100               	movlb	0	; () banked
  5141  002272  A176               	btfss	set_key_led_disp_tris@dir& (0+255),0,b
  5142  002274  D002               	goto	u2870
  5143  002276  8693               	bsf	3987,3,c	;volatile
  5144  002278  D001               	goto	u2885
  5145  00227A                     u2870:
  5146  00227A  9693               	bcf	3987,3,c	;volatile
  5147  00227C                     u2885:
  5148                           
  5149                           ;main.c: 542: TRISB4 = dir;
  5150  00227C  0100               	movlb	0	; () banked
  5151  00227E  A176               	btfss	set_key_led_disp_tris@dir& (0+255),0,b
  5152  002280  D002               	goto	u2890
  5153  002282  8893               	bsf	3987,4,c	;volatile
  5154  002284  D001               	goto	u2905
  5155  002286                     u2890:
  5156  002286  9893               	bcf	3987,4,c	;volatile
  5157  002288                     u2905:
  5158                           
  5159                           ;main.c: 543: TRISB5 = dir;
  5160  002288  0100               	movlb	0	; () banked
  5161  00228A  A176               	btfss	set_key_led_disp_tris@dir& (0+255),0,b
  5162  00228C  D002               	goto	u2910
  5163  00228E  8A93               	bsf	3987,5,c	;volatile
  5164  002290  D001               	goto	u2925
  5165  002292                     u2910:
  5166  002292  9A93               	bcf	3987,5,c	;volatile
  5167  002294                     u2925:
  5168                           
  5169                           ;main.c: 544: TRISB0 = dir;
  5170  002294  0100               	movlb	0	; () banked
  5171  002296  A176               	btfss	set_key_led_disp_tris@dir& (0+255),0,b
  5172  002298  D002               	goto	u2930
  5173  00229A  8093               	bsf	3987,0,c	;volatile
  5174  00229C  0012               	return	
  5175  00229E                     u2930:
  5176  00229E  9093               	bcf	3987,0,c	;volatile
  5177  0022A0  0012               	return		;funcret
  5178  0022A2                     __end_of_set_key_led_disp_tris:
  5179                           	opt stack 0
  5180                           tblptru	equ	0xFF8
  5181                           tblptrh	equ	0xFF7
  5182                           tblptrl	equ	0xFF6
  5183                           tablat	equ	0xFF5
  5184                           prodh	equ	0xFF4
  5185                           prodl	equ	0xFF3
  5186                           intcon	equ	0xFF2
  5187                           intcon2	equ	0xFF1
  5188                           postinc0	equ	0xFEE
  5189                           wreg	equ	0xFE8
  5190                           postinc2	equ	0xFDE
  5191                           postdec2	equ	0xFDD
  5192                           fsr2h	equ	0xFDA
  5193                           fsr2l	equ	0xFD9
  5194                           status	equ	0xFD8
  5195                           
  5196 ;; *************** function ___awdiv *****************
  5197 ;; Defined at:
  5198 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/awdiv.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  dividend        2   22[BANK0 ] int 
  5201 ;;  divisor         2   24[BANK0 ] int 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;  quotient        2   28[BANK0 ] int 
  5204 ;;  sign            1   27[BANK0 ] unsigned char 
  5205 ;;  counter         1   26[BANK0 ] unsigned char 
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  2   22[BANK0 ] int 
  5208 ;; Registers used:
  5209 ;;		wreg, status,2, status,0
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5215 ;;      Params:         0       4       0       0       0       0       0       0       0
  5216 ;;      Locals:         0       4       0       0       0       0       0       0       0
  5217 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5218 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5219 ;;Total ram usage:        8 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; Hardware stack levels required when called:    5
  5222 ;; This function calls:
  5223 ;;		Nothing
  5224 ;; This function is called by:
  5225 ;;		_set_LEDs
  5226 ;;		_set_digit
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           	psect	text25
  5231  001E4C                     __ptext25:
  5232                           	opt stack 0
  5233  001E4C                     ___awdiv:
  5234                           	opt stack 23
  5235                           
  5236                           ;incstack = 0
  5237  001E4C  0E00               	movlw	0
  5238  001E4E  0100               	movlb	0	; () banked
  5239  001E50  6F7B               	movwf	___awdiv@sign& (0+255),b
  5240                           
  5241                           ; BSR set to: 0
  5242  001E52  0100               	movlb	0	; () banked
  5243  001E54  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5244  001E56  D008               	goto	l2612
  5245                           
  5246                           ; BSR set to: 0
  5247  001E58  0100               	movlb	0	; () banked
  5248  001E5A  6D78               	negf	___awdiv@divisor& (0+255),b
  5249  001E5C  1F79               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5250  001E5E  B0D8               	btfsc	status,0,c
  5251  001E60  2B79               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5252                           
  5253                           ; BSR set to: 0
  5254  001E62  0E01               	movlw	1
  5255  001E64  0100               	movlb	0	; () banked
  5256  001E66  6F7B               	movwf	___awdiv@sign& (0+255),b
  5257  001E68                     l2612:
  5258                           
  5259                           ; BSR set to: 0
  5260  001E68  0100               	movlb	0	; () banked
  5261  001E6A  AF77               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5262  001E6C  D008               	goto	l2618
  5263                           
  5264                           ; BSR set to: 0
  5265  001E6E  0100               	movlb	0	; () banked
  5266  001E70  6D76               	negf	___awdiv@dividend& (0+255),b
  5267  001E72  1F77               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5268  001E74  B0D8               	btfsc	status,0,c
  5269  001E76  2B77               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5270                           
  5271                           ; BSR set to: 0
  5272  001E78  0E01               	movlw	1
  5273  001E7A  0100               	movlb	0	; () banked
  5274  001E7C  1B7B               	xorwf	___awdiv@sign& (0+255),f,b
  5275  001E7E                     l2618:
  5276                           
  5277                           ; BSR set to: 0
  5278  001E7E  0E00               	movlw	0
  5279  001E80  0100               	movlb	0	; () banked
  5280  001E82  6F7D               	movwf	(___awdiv@quotient+1)& (0+255),b
  5281  001E84  0E00               	movlw	0
  5282  001E86  6F7C               	movwf	___awdiv@quotient& (0+255),b
  5283                           
  5284                           ; BSR set to: 0
  5285  001E88  0100               	movlb	0	; () banked
  5286  001E8A  5178               	movf	___awdiv@divisor& (0+255),w,b
  5287  001E8C  0100               	movlb	0	; () banked
  5288  001E8E  1179               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5289  001E90  B4D8               	btfsc	status,2,c
  5290  001E92  D02C               	goto	l2640
  5291                           
  5292                           ; BSR set to: 0
  5293  001E94  0E01               	movlw	1
  5294  001E96  0100               	movlb	0	; () banked
  5295  001E98  6F7A               	movwf	___awdiv@counter& (0+255),b
  5296  001E9A  D006               	goto	l2626
  5297  001E9C                     l2624:
  5298                           
  5299                           ; BSR set to: 0
  5300  001E9C  0100               	movlb	0	; () banked
  5301  001E9E  90D8               	bcf	status,0,c
  5302  001EA0  3778               	rlcf	___awdiv@divisor& (0+255),f,b
  5303  001EA2  3779               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5304  001EA4  0100               	movlb	0	; () banked
  5305  001EA6  2B7A               	incf	___awdiv@counter& (0+255),f,b
  5306  001EA8                     l2626:
  5307                           
  5308                           ; BSR set to: 0
  5309  001EA8  0100               	movlb	0	; () banked
  5310  001EAA  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5311  001EAC  D7F7               	goto	l2624
  5312  001EAE                     l2628:
  5313                           
  5314                           ; BSR set to: 0
  5315  001EAE  0100               	movlb	0	; () banked
  5316  001EB0  90D8               	bcf	status,0,c
  5317  001EB2  377C               	rlcf	___awdiv@quotient& (0+255),f,b
  5318  001EB4  377D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5319                           
  5320                           ; BSR set to: 0
  5321  001EB6  0100               	movlb	0	; () banked
  5322  001EB8  5178               	movf	___awdiv@divisor& (0+255),w,b
  5323  001EBA  0100               	movlb	0	; () banked
  5324  001EBC  5D76               	subwf	___awdiv@dividend& (0+255),w,b
  5325  001EBE  0100               	movlb	0	; () banked
  5326  001EC0  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5327  001EC2  0100               	movlb	0	; () banked
  5328  001EC4  5977               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5329  001EC6  A0D8               	btfss	status,0,c
  5330  001EC8  D00A               	goto	l2636
  5331                           
  5332                           ; BSR set to: 0
  5333  001ECA  0100               	movlb	0	; () banked
  5334  001ECC  5178               	movf	___awdiv@divisor& (0+255),w,b
  5335  001ECE  0100               	movlb	0	; () banked
  5336  001ED0  5F76               	subwf	___awdiv@dividend& (0+255),f,b
  5337  001ED2  0100               	movlb	0	; () banked
  5338  001ED4  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5339  001ED6  0100               	movlb	0	; () banked
  5340  001ED8  5B77               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5341                           
  5342                           ; BSR set to: 0
  5343  001EDA  0100               	movlb	0	; () banked
  5344  001EDC  817C               	bsf	___awdiv@quotient& (0+255),0,b
  5345  001EDE                     l2636:
  5346                           
  5347                           ; BSR set to: 0
  5348  001EDE  0100               	movlb	0	; () banked
  5349  001EE0  90D8               	bcf	status,0,c
  5350  001EE2  3379               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5351  001EE4  3378               	rrcf	___awdiv@divisor& (0+255),f,b
  5352                           
  5353                           ; BSR set to: 0
  5354  001EE6  0100               	movlb	0	; () banked
  5355  001EE8  2F7A               	decfsz	___awdiv@counter& (0+255),f,b
  5356  001EEA  D7E1               	goto	l2628
  5357  001EEC                     l2640:
  5358                           
  5359                           ; BSR set to: 0
  5360  001EEC  0100               	movlb	0	; () banked
  5361  001EEE  517B               	movf	___awdiv@sign& (0+255),w,b
  5362  001EF0  0100               	movlb	0	; () banked
  5363  001EF2  B4D8               	btfsc	status,2,c
  5364  001EF4  D005               	goto	l2644
  5365                           
  5366                           ; BSR set to: 0
  5367  001EF6  0100               	movlb	0	; () banked
  5368  001EF8  6D7C               	negf	___awdiv@quotient& (0+255),b
  5369  001EFA  1F7D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5370  001EFC  B0D8               	btfsc	status,0,c
  5371  001EFE  2B7D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5372  001F00                     l2644:
  5373                           
  5374                           ; BSR set to: 0
  5375  001F00  C07C  F076         	movff	___awdiv@quotient,?___awdiv
  5376  001F04  C07D  F077         	movff	___awdiv@quotient+1,?___awdiv+1
  5377  001F08  0012               	return	
  5378  001F0A                     __end_of___awdiv:
  5379                           	opt stack 0
  5380                           tblptru	equ	0xFF8
  5381                           tblptrh	equ	0xFF7
  5382                           tblptrl	equ	0xFF6
  5383                           tablat	equ	0xFF5
  5384                           prodh	equ	0xFF4
  5385                           prodl	equ	0xFF3
  5386                           intcon	equ	0xFF2
  5387                           intcon2	equ	0xFF1
  5388                           postinc0	equ	0xFEE
  5389                           wreg	equ	0xFE8
  5390                           postinc2	equ	0xFDE
  5391                           postdec2	equ	0xFDD
  5392                           fsr2h	equ	0xFDA
  5393                           fsr2l	equ	0xFD9
  5394                           status	equ	0xFD8
  5395                           
  5396 ;; *************** function _num_to_disp *****************
  5397 ;; Defined at:
  5398 ;;		line 5 in file "disp.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;  num             1    wreg     unsigned char 
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;  num             1   23[BANK0 ] unsigned char 
  5403 ;;  ret             1   22[BANK0 ] unsigned char 
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  1    wreg      unsigned char 
  5406 ;; Registers used:
  5407 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5413 ;;      Params:         0       0       0       0       0       0       0       0       0
  5414 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5416 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5417 ;;Total ram usage:        2 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; Hardware stack levels required when called:    5
  5420 ;; This function calls:
  5421 ;;		Nothing
  5422 ;; This function is called by:
  5423 ;;		_error
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           	psect	text26
  5428  0020E8                     __ptext26:
  5429                           	opt stack 0
  5430  0020E8                     _num_to_disp:
  5431                           	opt stack 24
  5432                           
  5433                           ; BSR set to: 0
  5434                           ;incstack = 0
  5435                           ;num_to_disp@num stored from wreg
  5436  0020E8  0100               	movlb	0	; () banked
  5437  0020EA  6F77               	movwf	num_to_disp@num& (0+255),b
  5438                           
  5439                           ;disp.c: 7: unsigned char ret;
  5440                           ;disp.c: 8: switch (num)
  5441  0020EC  D013               	goto	l2752
  5442  0020EE                     l2744:
  5443                           
  5444                           ;disp.c: 11: ret = font[num];
  5445  0020EE  0100               	movlb	0	; () banked
  5446  0020F0  5177               	movf	num_to_disp@num& (0+255),w,b
  5447  0020F2  0D01               	mullw	1
  5448  0020F4  0E01               	movlw	low _font
  5449  0020F6  24F3               	addwf	prodl,w,c
  5450  0020F8  6EF6               	movwf	tblptrl,c
  5451  0020FA  0E08               	movlw	high _font
  5452  0020FC  20F4               	addwfc	prodh,w,c
  5453  0020FE  6EF7               	movwf	tblptrh,c
  5454  002100                     	if	0	;There are less than 3 active tblptr bytes
  5455  002100                     	endif
  5456  002100  0008               	tblrd		*
  5457  002102  CFF5 F076          	movff	tablat,num_to_disp@ret
  5458                           
  5459                           ;disp.c: 12: break;
  5460  002106  D02D               	goto	l2754
  5461  002108                     l2746:
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;disp.c: 14: case 'e':
  5465                           ;disp.c: 15: ret = (0b1 | 0 | 0 | 0b1000 | 0b10000 | 0b100000 | 0b1000000);
  5466  002108  0E79               	movlw	121
  5467  00210A  D001               	goto	L4
  5468  00210C                     l2748:
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;disp.c: 18: ret = (0);
  5472  00210C  0E00               	movlw	0
  5473  00210E                     L4:
  5474  00210E  0100               	movlb	0	; () banked
  5475  002110  6F76               	movwf	num_to_disp@ret& (0+255),b
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;disp.c: 20: }
  5479                           
  5480                           ;disp.c: 19: break;
  5481  002112  D027               	goto	l2754
  5482  002114                     l2752:
  5483  002114  0100               	movlb	0	; () banked
  5484  002116  5177               	movf	num_to_disp@num& (0+255),w,b
  5485                           
  5486                           ; Switch size 1, requested type "space"
  5487                           ; Number of cases is 12, Range of values is 0 to 101
  5488                           ; switch strategies available:
  5489                           ; Name         Instructions Cycles
  5490                           ; simple_byte           37    19 (average)
  5491                           ;	Chosen strategy is simple_byte
  5492  002118  0A00               	xorlw	0	; case 0
  5493  00211A  B4D8               	btfsc	status,2,c
  5494  00211C  D7E8               	goto	l2744
  5495  00211E  0A01               	xorlw	1	; case 1
  5496  002120  B4D8               	btfsc	status,2,c
  5497  002122  D7E5               	goto	l2744
  5498  002124  0A03               	xorlw	3	; case 2
  5499  002126  B4D8               	btfsc	status,2,c
  5500  002128  D7E2               	goto	l2744
  5501  00212A  0A01               	xorlw	1	; case 3
  5502  00212C  B4D8               	btfsc	status,2,c
  5503  00212E  D7DF               	goto	l2744
  5504  002130  0A07               	xorlw	7	; case 4
  5505  002132  B4D8               	btfsc	status,2,c
  5506  002134  D7DC               	goto	l2744
  5507  002136  0A01               	xorlw	1	; case 5
  5508  002138  B4D8               	btfsc	status,2,c
  5509  00213A  D7D9               	goto	l2744
  5510  00213C  0A03               	xorlw	3	; case 6
  5511  00213E  B4D8               	btfsc	status,2,c
  5512  002140  D7D6               	goto	l2744
  5513  002142  0A01               	xorlw	1	; case 7
  5514  002144  B4D8               	btfsc	status,2,c
  5515  002146  D7D3               	goto	l2744
  5516  002148  0A0F               	xorlw	15	; case 8
  5517  00214A  B4D8               	btfsc	status,2,c
  5518  00214C  D7D0               	goto	l2744
  5519  00214E  0A01               	xorlw	1	; case 9
  5520  002150  B4D8               	btfsc	status,2,c
  5521  002152  D7CD               	goto	l2744
  5522  002154  0A4C               	xorlw	76	; case 69
  5523  002156  B4D8               	btfsc	status,2,c
  5524  002158  D7D7               	goto	l2746
  5525  00215A  0A20               	xorlw	32	; case 101
  5526  00215C  B4D8               	btfsc	status,2,c
  5527  00215E  D7D4               	goto	l2746
  5528  002160  D7D5               	goto	l2748
  5529  002162                     l2754:
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;disp.c: 21: return ret;
  5533  002162  0100               	movlb	0	; () banked
  5534  002164  5176               	movf	num_to_disp@ret& (0+255),w,b
  5535  002166  0012               	return	
  5536  002168                     __end_of_num_to_disp:
  5537                           	opt stack 0
  5538                           tblptru	equ	0xFF8
  5539                           tblptrh	equ	0xFF7
  5540                           tblptrl	equ	0xFF6
  5541                           tablat	equ	0xFF5
  5542                           prodh	equ	0xFF4
  5543                           prodl	equ	0xFF3
  5544                           intcon	equ	0xFF2
  5545                           intcon2	equ	0xFF1
  5546                           postinc0	equ	0xFEE
  5547                           wreg	equ	0xFE8
  5548                           postinc2	equ	0xFDE
  5549                           postdec2	equ	0xFDD
  5550                           fsr2h	equ	0xFDA
  5551                           fsr2l	equ	0xFD9
  5552                           status	equ	0xFD8
  5553                           
  5554 ;; *************** function _ee_save_state *****************
  5555 ;; Defined at:
  5556 ;;		line 573 in file "main.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;		None
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;		None
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  1    wreg      void 
  5563 ;; Registers used:
  5564 ;;		wreg, status,2, status,0, cstack
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5570 ;;      Params:         0       0       0       0       0       0       0       0       0
  5571 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5572 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5573 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5574 ;;Total ram usage:        0 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; Hardware stack levels required when called:    6
  5577 ;; This function calls:
  5578 ;;		_ee_write_byte
  5579 ;; This function is called by:
  5580 ;;		_main
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584                           	psect	text27
  5585  0022F4                     __ptext27:
  5586                           	opt stack 0
  5587  0022F4                     _ee_save_state:
  5588                           	opt stack 24
  5589                           
  5590                           ;main.c: 575: ee_write_byte(EE_TIME_ADDR, time);
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;incstack = 0
  5594  0022F4  C0E3  F076         	movff	_time,ee_write_byte@data
  5595  0022F8  0E00               	movlw	0
  5596  0022FA  EC9D  F012         	call	_ee_write_byte
  5597                           
  5598                           ;main.c: 576: ee_write_byte(EE_WANT_TEMP_ADDR, temp_want);
  5599  0022FE  C0E7  F076         	movff	_temp_want,ee_write_byte@data
  5600  002302  0E01               	movlw	1
  5601  002304  EC9D  F012         	call	_ee_write_byte
  5602                           
  5603                           ;main.c: 577: ee_write_byte(EE_DAY_TIME_ADDR, day_hour);
  5604  002308  C0DC  F076         	movff	_day_hour,ee_write_byte@data
  5605  00230C  0E02               	movlw	2
  5606  00230E  EC9D  F012         	call	_ee_write_byte
  5607                           
  5608                           ;main.c: 578: ee_write_byte(EE_DAY_TEMP_ADDR, day_temp);
  5609  002312  C0DD  F076         	movff	_day_temp,ee_write_byte@data
  5610  002316  0E03               	movlw	3
  5611  002318  EC9D  F012         	call	_ee_write_byte
  5612                           
  5613                           ;main.c: 579: ee_write_byte(EE_NIGHT_TIME_ADDR, night_hour);
  5614  00231C  C0E0  F076         	movff	_night_hour,ee_write_byte@data
  5615  002320  0E04               	movlw	4
  5616  002322  EC9D  F012         	call	_ee_write_byte
  5617                           
  5618                           ;main.c: 580: ee_write_byte(EE_NIGHT_TEMP_ADDR, night_temp);
  5619  002326  C0E1  F076         	movff	_night_temp,ee_write_byte@data
  5620  00232A  0E05               	movlw	5
  5621  00232C  EC9D  F012         	call	_ee_write_byte
  5622                           
  5623                           ;main.c: 581: ee_write_byte(EE_STATE_ADDR, climate_control | heat_mode << 4);
  5624  002330  0100               	movlb	0	; () banked
  5625  002332  39E9               	swapf	_heat_mode& (0+255),w,b
  5626  002334  0BF0               	andlw	240
  5627  002336  0100               	movlb	0	; () banked
  5628  002338  11E8               	iorwf	_climate_control& (0+255),w,b
  5629  00233A  0100               	movlb	0	; () banked
  5630  00233C  6F76               	movwf	ee_write_byte@data& (0+255),b
  5631  00233E  0E06               	movlw	6
  5632  002340  EC9D  F012         	call	_ee_write_byte
  5633  002344  0012               	return		;funcret
  5634  002346                     __end_of_ee_save_state:
  5635                           	opt stack 0
  5636                           tblptru	equ	0xFF8
  5637                           tblptrh	equ	0xFF7
  5638                           tblptrl	equ	0xFF6
  5639                           tablat	equ	0xFF5
  5640                           prodh	equ	0xFF4
  5641                           prodl	equ	0xFF3
  5642                           intcon	equ	0xFF2
  5643                           intcon2	equ	0xFF1
  5644                           postinc0	equ	0xFEE
  5645                           wreg	equ	0xFE8
  5646                           postinc2	equ	0xFDE
  5647                           postdec2	equ	0xFDD
  5648                           fsr2h	equ	0xFDA
  5649                           fsr2l	equ	0xFD9
  5650                           status	equ	0xFD8
  5651                           
  5652 ;; *************** function _ee_write_byte *****************
  5653 ;; Defined at:
  5654 ;;		line 547 in file "main.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;  addr            1    wreg     unsigned char 
  5657 ;;  data            1   22[BANK0 ] unsigned char 
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;  addr            1   23[BANK0 ] unsigned char 
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  1    wreg      void 
  5662 ;; Registers used:
  5663 ;;		wreg, status,2
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5669 ;;      Params:         0       1       0       0       0       0       0       0       0
  5670 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5671 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5672 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5673 ;;Total ram usage:        2 bytes
  5674 ;; Hardware stack levels used:    1
  5675 ;; Hardware stack levels required when called:    5
  5676 ;; This function calls:
  5677 ;;		Nothing
  5678 ;; This function is called by:
  5679 ;;		_ee_save_state
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           	psect	text28
  5684  00253A                     __ptext28:
  5685                           	opt stack 0
  5686  00253A                     _ee_write_byte:
  5687                           	opt stack 24
  5688                           
  5689                           ;incstack = 0
  5690                           ;ee_write_byte@addr stored from wreg
  5691  00253A  0100               	movlb	0	; () banked
  5692  00253C  6F77               	movwf	ee_write_byte@addr& (0+255),b
  5693                           
  5694                           ;main.c: 550: WREN = 1;
  5695  00253E  84A6               	bsf	4006,2,c	;volatile
  5696                           
  5697                           ;main.c: 551: EEADR = addr;
  5698  002540  C077  FFA9         	movff	ee_write_byte@addr,4009	;volatile
  5699                           
  5700                           ;main.c: 552: EEDATA = data;
  5701  002544  C076  FFA8         	movff	ee_write_byte@data,4008	;volatile
  5702                           
  5703                           ;main.c: 556: GIE = 0;
  5704  002548  9EF2               	bcf	intcon,7,c	;volatile
  5705                           
  5706                           ;main.c: 557: EECON2 = 0x55;
  5707  00254A  0E55               	movlw	85
  5708  00254C  6EA7               	movwf	4007,c	;volatile
  5709                           
  5710                           ;main.c: 558: EECON2 = 0xAA;
  5711  00254E  0EAA               	movlw	170
  5712  002550  6EA7               	movwf	4007,c	;volatile
  5713                           
  5714                           ;main.c: 559: GIE = 1;
  5715  002552  8EF2               	bsf	intcon,7,c	;volatile
  5716                           
  5717                           ;main.c: 561: WR = 1;
  5718  002554  82A6               	bsf	4006,1,c	;volatile
  5719  002556  0012               	return		;funcret
  5720  002558                     __end_of_ee_write_byte:
  5721                           	opt stack 0
  5722                           tblptru	equ	0xFF8
  5723                           tblptrh	equ	0xFF7
  5724                           tblptrl	equ	0xFF6
  5725                           tablat	equ	0xFF5
  5726                           prodh	equ	0xFF4
  5727                           prodl	equ	0xFF3
  5728                           intcon	equ	0xFF2
  5729                           intcon2	equ	0xFF1
  5730                           postinc0	equ	0xFEE
  5731                           wreg	equ	0xFE8
  5732                           postinc2	equ	0xFDE
  5733                           postdec2	equ	0xFDD
  5734                           fsr2h	equ	0xFDA
  5735                           fsr2l	equ	0xFD9
  5736                           status	equ	0xFD8
  5737                           
  5738 ;; *************** function _ee_read_state *****************
  5739 ;; Defined at:
  5740 ;;		line 584 in file "main.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;		None
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;  mode            1   34[BANK0 ] unsigned char 
  5745 ;; Return value:  Size  Location     Type
  5746 ;;                  1    wreg      void 
  5747 ;; Registers used:
  5748 ;;		wreg, status,2, status,0, cstack
  5749 ;; Tracked objects:
  5750 ;;		On entry : 0/0
  5751 ;;		On exit  : 0/0
  5752 ;;		Unchanged: 0/0
  5753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5754 ;;      Params:         0       0       0       0       0       0       0       0       0
  5755 ;;      Locals:         0      11       0       0       0       0       0       0       0
  5756 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5757 ;;      Totals:         0      12       0       0       0       0       0       0       0
  5758 ;;Total ram usage:       12 bytes
  5759 ;; Hardware stack levels used:    1
  5760 ;; Hardware stack levels required when called:    6
  5761 ;; This function calls:
  5762 ;;		_ee_read_byte
  5763 ;; This function is called by:
  5764 ;;		_main
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           	psect	text29
  5769  001538                     __ptext29:
  5770                           	opt stack 0
  5771  001538                     _ee_read_state:
  5772                           	opt stack 24
  5773                           
  5774                           ;main.c: 586: time = ee_read_byte(EE_TIME_ADDR);
  5775                           
  5776                           ;incstack = 0
  5777  001538  0E00               	movlw	0
  5778  00153A  ECDA  F012         	call	_ee_read_byte
  5779  00153E  0100               	movlb	0	; () banked
  5780  001540  6F77               	movwf	??_ee_read_state& (0+255),b
  5781  001542  0100               	movlb	0	; () banked
  5782  001544  5177               	movf	??_ee_read_state& (0+255),w,b
  5783  001546  0100               	movlb	0	; () banked
  5784  001548  6FE3               	movwf	_time& (0+255),b
  5785  00154A  6BE4               	clrf	(_time+1)& (0+255),b
  5786  00154C  6BE5               	clrf	(_time+2)& (0+255),b
  5787  00154E  6BE6               	clrf	(_time+3)& (0+255),b
  5788                           
  5789                           ; BSR set to: 0
  5790                           ;main.c: 587: temp_want = ee_read_byte(EE_WANT_TEMP_ADDR);
  5791  001550  0E01               	movlw	1
  5792  001552  ECDA  F012         	call	_ee_read_byte
  5793  001556  0100               	movlb	0	; () banked
  5794  001558  6FE7               	movwf	_temp_want& (0+255),b
  5795                           
  5796                           ; BSR set to: 0
  5797                           ;main.c: 588: temp_want = temp_want ? temp_want : 20;
  5798  00155A  0100               	movlb	0	; () banked
  5799  00155C  51E7               	movf	_temp_want& (0+255),w,b
  5800  00155E  A4D8               	btfss	status,2,c
  5801  001560  D006               	goto	l417
  5802                           
  5803                           ; BSR set to: 0
  5804  001562  0E00               	movlw	0
  5805  001564  0100               	movlb	0	; () banked
  5806  001566  6F79               	movwf	(_ee_read_state$346+1)& (0+255),b
  5807  001568  0E14               	movlw	20
  5808  00156A  6F78               	movwf	_ee_read_state$346& (0+255),b
  5809  00156C  D004               	goto	l419
  5810  00156E                     l417:
  5811                           
  5812                           ; BSR set to: 0
  5813  00156E  C0E7  F078         	movff	_temp_want,_ee_read_state$346
  5814  001572  0100               	movlb	0	; () banked
  5815  001574  6B79               	clrf	(_ee_read_state$346+1)& (0+255),b
  5816  001576                     l419:
  5817                           
  5818                           ; BSR set to: 0
  5819  001576  C078  F0E7         	movff	_ee_read_state$346,_temp_want
  5820                           
  5821                           ; BSR set to: 0
  5822                           ;main.c: 589: day_hour = ee_read_byte(EE_DAY_TIME_ADDR);
  5823  00157A  0E02               	movlw	2
  5824  00157C  ECDA  F012         	call	_ee_read_byte
  5825  001580  0100               	movlb	0	; () banked
  5826  001582  6FDC               	movwf	_day_hour& (0+255),b
  5827                           
  5828                           ;main.c: 590: day_temp = ee_read_byte(EE_DAY_TEMP_ADDR);
  5829  001584  0E03               	movlw	3
  5830  001586  ECDA  F012         	call	_ee_read_byte
  5831  00158A  0100               	movlb	0	; () banked
  5832  00158C  6FDD               	movwf	_day_temp& (0+255),b
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;main.c: 591: day_temp = day_temp ? day_temp : 20;
  5836  00158E  0100               	movlb	0	; () banked
  5837  001590  51DD               	movf	_day_temp& (0+255),w,b
  5838  001592  A4D8               	btfss	status,2,c
  5839  001594  D006               	goto	l421
  5840                           
  5841                           ; BSR set to: 0
  5842  001596  0E00               	movlw	0
  5843  001598  0100               	movlb	0	; () banked
  5844  00159A  6F7B               	movwf	(_ee_read_state$347+1)& (0+255),b
  5845  00159C  0E14               	movlw	20
  5846  00159E  6F7A               	movwf	_ee_read_state$347& (0+255),b
  5847  0015A0  D004               	goto	l423
  5848  0015A2                     l421:
  5849                           
  5850                           ; BSR set to: 0
  5851  0015A2  C0DD  F07A         	movff	_day_temp,_ee_read_state$347
  5852  0015A6  0100               	movlb	0	; () banked
  5853  0015A8  6B7B               	clrf	(_ee_read_state$347+1)& (0+255),b
  5854  0015AA                     l423:
  5855                           
  5856                           ; BSR set to: 0
  5857  0015AA  C07A  F0DD         	movff	_ee_read_state$347,_day_temp
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;main.c: 592: night_hour = ee_read_byte(EE_NIGHT_TIME_ADDR);
  5861  0015AE  0E04               	movlw	4
  5862  0015B0  ECDA  F012         	call	_ee_read_byte
  5863  0015B4  0100               	movlb	0	; () banked
  5864  0015B6  6FE0               	movwf	_night_hour& (0+255),b
  5865                           
  5866                           ;main.c: 593: night_temp = ee_read_byte(EE_NIGHT_TEMP_ADDR);
  5867  0015B8  0E05               	movlw	5
  5868  0015BA  ECDA  F012         	call	_ee_read_byte
  5869  0015BE  0100               	movlb	0	; () banked
  5870  0015C0  6FE1               	movwf	_night_temp& (0+255),b
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;main.c: 594: night_temp = night_temp ? night_temp : 20;
  5874  0015C2  0100               	movlb	0	; () banked
  5875  0015C4  51E1               	movf	_night_temp& (0+255),w,b
  5876  0015C6  A4D8               	btfss	status,2,c
  5877  0015C8  D006               	goto	l425
  5878                           
  5879                           ; BSR set to: 0
  5880  0015CA  0E00               	movlw	0
  5881  0015CC  0100               	movlb	0	; () banked
  5882  0015CE  6F7D               	movwf	(_ee_read_state$348+1)& (0+255),b
  5883  0015D0  0E14               	movlw	20
  5884  0015D2  6F7C               	movwf	_ee_read_state$348& (0+255),b
  5885  0015D4  D004               	goto	l427
  5886  0015D6                     l425:
  5887                           
  5888                           ; BSR set to: 0
  5889  0015D6  C0E1  F07C         	movff	_night_temp,_ee_read_state$348
  5890  0015DA  0100               	movlb	0	; () banked
  5891  0015DC  6B7D               	clrf	(_ee_read_state$348+1)& (0+255),b
  5892  0015DE                     l427:
  5893                           
  5894                           ; BSR set to: 0
  5895  0015DE  C07C  F0E1         	movff	_ee_read_state$348,_night_temp
  5896                           
  5897                           ; BSR set to: 0
  5898                           ;main.c: 595: unsigned char mode = ee_read_byte(EE_STATE_ADDR);
  5899  0015E2  0E06               	movlw	6
  5900  0015E4  ECDA  F012         	call	_ee_read_byte
  5901  0015E8  0100               	movlb	0	; () banked
  5902  0015EA  6F82               	movwf	ee_read_state@mode& (0+255),b
  5903                           
  5904                           ; BSR set to: 0
  5905                           ;main.c: 596: climate_control = 0x0F & mode;
  5906  0015EC  0100               	movlb	0	; () banked
  5907  0015EE  5182               	movf	ee_read_state@mode& (0+255),w,b
  5908  0015F0  0B0F               	andlw	15
  5909  0015F2  0100               	movlb	0	; () banked
  5910  0015F4  6FE8               	movwf	_climate_control& (0+255),b
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;main.c: 597: climate_control = (climate_control ? climate_control : (_HEAT | _COOL));
  5914  0015F6  0100               	movlb	0	; () banked
  5915  0015F8  51E8               	movf	_climate_control& (0+255),w,b
  5916  0015FA  A4D8               	btfss	status,2,c
  5917  0015FC  D006               	goto	l429
  5918                           
  5919                           ; BSR set to: 0
  5920  0015FE  0E00               	movlw	0
  5921  001600  0100               	movlb	0	; () banked
  5922  001602  6F7F               	movwf	(_ee_read_state$350+1)& (0+255),b
  5923  001604  0E03               	movlw	3
  5924  001606  6F7E               	movwf	_ee_read_state$350& (0+255),b
  5925  001608  D004               	goto	l431
  5926  00160A                     l429:
  5927                           
  5928                           ; BSR set to: 0
  5929  00160A  C0E8  F07E         	movff	_climate_control,_ee_read_state$350
  5930  00160E  0100               	movlb	0	; () banked
  5931  001610  6B7F               	clrf	(_ee_read_state$350+1)& (0+255),b
  5932  001612                     l431:
  5933                           
  5934                           ; BSR set to: 0
  5935  001612  C07E  F0E8         	movff	_ee_read_state$350,_climate_control
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;main.c: 598: heat_mode = 0x0F & (mode >> 4);
  5939  001616  0100               	movlb	0	; () banked
  5940  001618  3982               	swapf	ee_read_state@mode& (0+255),w,b
  5941  00161A  0B0F               	andlw	15
  5942  00161C  0B0F               	andlw	15
  5943  00161E  0100               	movlb	0	; () banked
  5944  001620  6FE9               	movwf	_heat_mode& (0+255),b
  5945                           
  5946                           ; BSR set to: 0
  5947                           ;main.c: 599: heat_mode = (heat_mode != _NONE ? heat_mode : _HEAT_BOTH);
  5948  001622  0100               	movlb	0	; () banked
  5949  001624  51E9               	movf	_heat_mode& (0+255),w,b
  5950  001626  A4D8               	btfss	status,2,c
  5951  001628  D006               	goto	l433
  5952                           
  5953                           ; BSR set to: 0
  5954  00162A  0E00               	movlw	0
  5955  00162C  0100               	movlb	0	; () banked
  5956  00162E  6F81               	movwf	(_ee_read_state$351+1)& (0+255),b
  5957  001630  0E03               	movlw	3
  5958  001632  6F80               	movwf	_ee_read_state$351& (0+255),b
  5959  001634  D004               	goto	l435
  5960  001636                     l433:
  5961                           
  5962                           ; BSR set to: 0
  5963  001636  C0E9  F080         	movff	_heat_mode,_ee_read_state$351
  5964  00163A  0100               	movlb	0	; () banked
  5965  00163C  6B81               	clrf	(_ee_read_state$351+1)& (0+255),b
  5966  00163E                     l435:
  5967                           
  5968                           ; BSR set to: 0
  5969  00163E  C080  F0E9         	movff	_ee_read_state$351,_heat_mode
  5970                           
  5971                           ; BSR set to: 0
  5972  001642  0012               	return		;funcret
  5973  001644                     __end_of_ee_read_state:
  5974                           	opt stack 0
  5975                           tblptru	equ	0xFF8
  5976                           tblptrh	equ	0xFF7
  5977                           tblptrl	equ	0xFF6
  5978                           tablat	equ	0xFF5
  5979                           prodh	equ	0xFF4
  5980                           prodl	equ	0xFF3
  5981                           intcon	equ	0xFF2
  5982                           intcon2	equ	0xFF1
  5983                           postinc0	equ	0xFEE
  5984                           wreg	equ	0xFE8
  5985                           postinc2	equ	0xFDE
  5986                           postdec2	equ	0xFDD
  5987                           fsr2h	equ	0xFDA
  5988                           fsr2l	equ	0xFD9
  5989                           status	equ	0xFD8
  5990                           
  5991 ;; *************** function _ee_read_byte *****************
  5992 ;; Defined at:
  5993 ;;		line 565 in file "main.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  addr            1    wreg     unsigned char 
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;  addr            1   22[BANK0 ] unsigned char 
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  1    wreg      unsigned char 
  6000 ;; Registers used:
  6001 ;;		wreg, status,2
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6007 ;;      Params:         0       0       0       0       0       0       0       0       0
  6008 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6010 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6011 ;;Total ram usage:        1 bytes
  6012 ;; Hardware stack levels used:    1
  6013 ;; Hardware stack levels required when called:    5
  6014 ;; This function calls:
  6015 ;;		Nothing
  6016 ;; This function is called by:
  6017 ;;		_ee_read_state
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           	psect	text30
  6022  0025B4                     __ptext30:
  6023                           	opt stack 0
  6024  0025B4                     _ee_read_byte:
  6025                           	opt stack 24
  6026                           
  6027                           ; BSR set to: 0
  6028                           ;incstack = 0
  6029                           ;ee_read_byte@addr stored from wreg
  6030  0025B4  0100               	movlb	0	; () banked
  6031  0025B6  6F76               	movwf	ee_read_byte@addr& (0+255),b
  6032                           
  6033                           ;main.c: 567: EEADR = addr;
  6034  0025B8  C076  FFA9         	movff	ee_read_byte@addr,4009	;volatile
  6035                           
  6036                           ;main.c: 568: RD = 1;
  6037  0025BC  80A6               	bsf	4006,0,c	;volatile
  6038                           
  6039                           ;main.c: 570: return EEDATA;
  6040  0025BE  50A8               	movf	4008,w,c	;volatile
  6041  0025C0  0012               	return	
  6042  0025C2                     __end_of_ee_read_byte:
  6043                           	opt stack 0
  6044                           tblptru	equ	0xFF8
  6045                           tblptrh	equ	0xFF7
  6046                           tblptrl	equ	0xFF6
  6047                           tablat	equ	0xFF5
  6048                           prodh	equ	0xFF4
  6049                           prodl	equ	0xFF3
  6050                           intcon	equ	0xFF2
  6051                           intcon2	equ	0xFF1
  6052                           postinc0	equ	0xFEE
  6053                           wreg	equ	0xFE8
  6054                           postinc2	equ	0xFDE
  6055                           postdec2	equ	0xFDD
  6056                           fsr2h	equ	0xFDA
  6057                           fsr2l	equ	0xFD9
  6058                           status	equ	0xFD8
  6059                           
  6060 ;; *************** function ___ftge *****************
  6061 ;; Defined at:
  6062 ;;		line 4 in file "/opt/microchip/xc8/v1.38/sources/common/ftge.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  ff1             3   34[BANK0 ] float 
  6065 ;;  ff2             3   37[BANK0 ] float 
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;		None
  6068 ;; Return value:  Size  Location     Type
  6069 ;;		None               void
  6070 ;; Registers used:
  6071 ;;		wreg, status,2, status,0
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6077 ;;      Params:         0       6       0       0       0       0       0       0       0
  6078 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6079 ;;      Temps:          0       3       0       0       0       0       0       0       0
  6080 ;;      Totals:         0       9       0       0       0       0       0       0       0
  6081 ;;Total ram usage:        9 bytes
  6082 ;; Hardware stack levels used:    1
  6083 ;; Hardware stack levels required when called:    5
  6084 ;; This function calls:
  6085 ;;		Nothing
  6086 ;; This function is called by:
  6087 ;;		_main
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           	psect	text31
  6092  001D84                     __ptext31:
  6093                           	opt stack 0
  6094  001D84                     ___ftge:
  6095                           	opt stack 25
  6096                           
  6097                           ;incstack = 0
  6098  001D84  0100               	movlb	0	; () banked
  6099  001D86  AF84               	btfss	(___ftge@ff1+2)& (0+255),7,b
  6100  001D88  D01D               	goto	l3190
  6101                           
  6102                           ; BSR set to: 0
  6103  001D8A  C082  F088         	movff	___ftge@ff1,??___ftge
  6104  001D8E  C083  F089         	movff	___ftge@ff1+1,??___ftge+1
  6105  001D92  C084  F08A         	movff	___ftge@ff1+2,??___ftge+2
  6106  001D96  0100               	movlb	0	; () banked
  6107  001D98  1F88               	comf	??___ftge& (0+255),f,b
  6108  001D9A  1F89               	comf	(??___ftge+1)& (0+255),f,b
  6109  001D9C  1F8A               	comf	(??___ftge+2)& (0+255),f,b
  6110  001D9E  2B88               	incf	??___ftge& (0+255),f,b
  6111  001DA0  0E00               	movlw	0
  6112  001DA2  2389               	addwfc	(??___ftge+1)& (0+255),f,b
  6113  001DA4  238A               	addwfc	(??___ftge+2)& (0+255),f,b
  6114  001DA6  0E00               	movlw	0
  6115  001DA8  0100               	movlb	0	; () banked
  6116  001DAA  2588               	addwf	??___ftge& (0+255),w,b
  6117  001DAC  0100               	movlb	0	; () banked
  6118  001DAE  6F82               	movwf	___ftge@ff1& (0+255),b
  6119  001DB0  0E00               	movlw	0
  6120  001DB2  0100               	movlb	0	; () banked
  6121  001DB4  2189               	addwfc	(??___ftge+1)& (0+255),w,b
  6122  001DB6  0100               	movlb	0	; () banked
  6123  001DB8  6F83               	movwf	(___ftge@ff1+1)& (0+255),b
  6124  001DBA  0E80               	movlw	128
  6125  001DBC  0100               	movlb	0	; () banked
  6126  001DBE  218A               	addwfc	(??___ftge+2)& (0+255),w,b
  6127  001DC0  0100               	movlb	0	; () banked
  6128  001DC2  6F84               	movwf	(___ftge@ff1+2)& (0+255),b
  6129  001DC4                     l3190:
  6130                           
  6131                           ; BSR set to: 0
  6132  001DC4  0100               	movlb	0	; () banked
  6133  001DC6  AF87               	btfss	(___ftge@ff2+2)& (0+255),7,b
  6134  001DC8  D01D               	goto	l3194
  6135                           
  6136                           ; BSR set to: 0
  6137  001DCA  C085  F088         	movff	___ftge@ff2,??___ftge
  6138  001DCE  C086  F089         	movff	___ftge@ff2+1,??___ftge+1
  6139  001DD2  C087  F08A         	movff	___ftge@ff2+2,??___ftge+2
  6140  001DD6  0100               	movlb	0	; () banked
  6141  001DD8  1F88               	comf	??___ftge& (0+255),f,b
  6142  001DDA  1F89               	comf	(??___ftge+1)& (0+255),f,b
  6143  001DDC  1F8A               	comf	(??___ftge+2)& (0+255),f,b
  6144  001DDE  2B88               	incf	??___ftge& (0+255),f,b
  6145  001DE0  0E00               	movlw	0
  6146  001DE2  2389               	addwfc	(??___ftge+1)& (0+255),f,b
  6147  001DE4  238A               	addwfc	(??___ftge+2)& (0+255),f,b
  6148  001DE6  0E00               	movlw	0
  6149  001DE8  0100               	movlb	0	; () banked
  6150  001DEA  2588               	addwf	??___ftge& (0+255),w,b
  6151  001DEC  0100               	movlb	0	; () banked
  6152  001DEE  6F85               	movwf	___ftge@ff2& (0+255),b
  6153  001DF0  0E00               	movlw	0
  6154  001DF2  0100               	movlb	0	; () banked
  6155  001DF4  2189               	addwfc	(??___ftge+1)& (0+255),w,b
  6156  001DF6  0100               	movlb	0	; () banked
  6157  001DF8  6F86               	movwf	(___ftge@ff2+1)& (0+255),b
  6158  001DFA  0E80               	movlw	128
  6159  001DFC  0100               	movlb	0	; () banked
  6160  001DFE  218A               	addwfc	(??___ftge+2)& (0+255),w,b
  6161  001E00  0100               	movlb	0	; () banked
  6162  001E02  6F87               	movwf	(___ftge@ff2+2)& (0+255),b
  6163  001E04                     l3194:
  6164                           
  6165                           ; BSR set to: 0
  6166  001E04  0E00               	movlw	0
  6167  001E06  0100               	movlb	0	; () banked
  6168  001E08  1B82               	xorwf	___ftge@ff1& (0+255),f,b
  6169  001E0A  0E00               	movlw	0
  6170  001E0C  0100               	movlb	0	; () banked
  6171  001E0E  1B83               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  6172  001E10  0E80               	movlw	128
  6173  001E12  0100               	movlb	0	; () banked
  6174  001E14  1B84               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  6175                           
  6176                           ; BSR set to: 0
  6177  001E16  0E00               	movlw	0
  6178  001E18  0100               	movlb	0	; () banked
  6179  001E1A  1B85               	xorwf	___ftge@ff2& (0+255),f,b
  6180  001E1C  0E00               	movlw	0
  6181  001E1E  0100               	movlb	0	; () banked
  6182  001E20  1B86               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  6183  001E22  0E80               	movlw	128
  6184  001E24  0100               	movlb	0	; () banked
  6185  001E26  1B87               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  6186  001E28  0100               	movlb	0	; () banked
  6187  001E2A  5185               	movf	___ftge@ff2& (0+255),w,b
  6188  001E2C  0100               	movlb	0	; () banked
  6189  001E2E  5D82               	subwf	___ftge@ff1& (0+255),w,b
  6190  001E30  0100               	movlb	0	; () banked
  6191  001E32  5186               	movf	(___ftge@ff2+1)& (0+255),w,b
  6192  001E34  0100               	movlb	0	; () banked
  6193  001E36  5983               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  6194  001E38  0100               	movlb	0	; () banked
  6195  001E3A  5187               	movf	(___ftge@ff2+2)& (0+255),w,b
  6196  001E3C  0100               	movlb	0	; () banked
  6197  001E3E  5984               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  6198  001E40  B0D8               	btfsc	status,0,c
  6199  001E42  D002               	goto	l3200
  6200                           
  6201                           ; BSR set to: 0
  6202  001E44  90D8               	bcf	status,0,c
  6203  001E46  0012               	return	
  6204  001E48                     l3200:
  6205                           
  6206                           ; BSR set to: 0
  6207  001E48  80D8               	bsf	status,0,c
  6208                           
  6209                           ; BSR set to: 0
  6210  001E4A  0012               	return	
  6211  001E4C                     __end_of___ftge:
  6212                           	opt stack 0
  6213                           tblptru	equ	0xFF8
  6214                           tblptrh	equ	0xFF7
  6215                           tblptrl	equ	0xFF6
  6216                           tablat	equ	0xFF5
  6217                           prodh	equ	0xFF4
  6218                           prodl	equ	0xFF3
  6219                           intcon	equ	0xFF2
  6220                           intcon2	equ	0xFF1
  6221                           postinc0	equ	0xFEE
  6222                           wreg	equ	0xFE8
  6223                           postinc2	equ	0xFDE
  6224                           postdec2	equ	0xFDD
  6225                           fsr2h	equ	0xFDA
  6226                           fsr2l	equ	0xFD9
  6227                           status	equ	0xFD8
  6228                           
  6229 ;; *************** function ___aldiv *****************
  6230 ;; Defined at:
  6231 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/aldiv.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;  dividend        4   22[BANK0 ] long 
  6234 ;;  divisor         4   26[BANK0 ] long 
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;  quotient        4   32[BANK0 ] long 
  6237 ;;  sign            1   31[BANK0 ] unsigned char 
  6238 ;;  counter         1   30[BANK0 ] unsigned char 
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  4   22[BANK0 ] long 
  6241 ;; Registers used:
  6242 ;;		wreg, status,2, status,0
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6248 ;;      Params:         0       8       0       0       0       0       0       0       0
  6249 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6250 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6251 ;;      Totals:         0      14       0       0       0       0       0       0       0
  6252 ;;Total ram usage:       14 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; Hardware stack levels required when called:    5
  6255 ;; This function calls:
  6256 ;;		Nothing
  6257 ;; This function is called by:
  6258 ;;		_main
  6259 ;; This function uses a non-reentrant model
  6260 ;;
  6261                           
  6262                           	psect	text32
  6263  001312                     __ptext32:
  6264                           	opt stack 0
  6265  001312                     ___aldiv:
  6266                           	opt stack 25
  6267                           
  6268                           ; BSR set to: 0
  6269                           ;incstack = 0
  6270  001312  0E00               	movlw	0
  6271  001314  0100               	movlb	0	; () banked
  6272  001316  6F7F               	movwf	___aldiv@sign& (0+255),b
  6273                           
  6274                           ; BSR set to: 0
  6275  001318  0100               	movlb	0	; () banked
  6276  00131A  AF7D               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6277  00131C  D00C               	goto	l3078
  6278                           
  6279                           ; BSR set to: 0
  6280  00131E  0100               	movlb	0	; () banked
  6281  001320  1F7D               	comf	(___aldiv@divisor+3)& (0+255),f,b
  6282  001322  1F7C               	comf	(___aldiv@divisor+2)& (0+255),f,b
  6283  001324  1F7B               	comf	(___aldiv@divisor+1)& (0+255),f,b
  6284  001326  6D7A               	negf	___aldiv@divisor& (0+255),b
  6285  001328  0E00               	movlw	0
  6286  00132A  237B               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  6287  00132C  237C               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  6288  00132E  237D               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  6289                           
  6290                           ; BSR set to: 0
  6291  001330  0E01               	movlw	1
  6292  001332  0100               	movlb	0	; () banked
  6293  001334  6F7F               	movwf	___aldiv@sign& (0+255),b
  6294  001336                     l3078:
  6295                           
  6296                           ; BSR set to: 0
  6297  001336  0100               	movlb	0	; () banked
  6298  001338  AF79               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  6299  00133A  D00C               	goto	l3084
  6300                           
  6301                           ; BSR set to: 0
  6302  00133C  0100               	movlb	0	; () banked
  6303  00133E  1F79               	comf	(___aldiv@dividend+3)& (0+255),f,b
  6304  001340  1F78               	comf	(___aldiv@dividend+2)& (0+255),f,b
  6305  001342  1F77               	comf	(___aldiv@dividend+1)& (0+255),f,b
  6306  001344  6D76               	negf	___aldiv@dividend& (0+255),b
  6307  001346  0E00               	movlw	0
  6308  001348  2377               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  6309  00134A  2378               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  6310  00134C  2379               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  6311                           
  6312                           ; BSR set to: 0
  6313  00134E  0E01               	movlw	1
  6314  001350  0100               	movlb	0	; () banked
  6315  001352  1B7F               	xorwf	___aldiv@sign& (0+255),f,b
  6316  001354                     l3084:
  6317                           
  6318                           ; BSR set to: 0
  6319  001354  0E00               	movlw	0
  6320  001356  0100               	movlb	0	; () banked
  6321  001358  6F80               	movwf	___aldiv@quotient& (0+255),b
  6322  00135A  0E00               	movlw	0
  6323  00135C  6F81               	movwf	(___aldiv@quotient+1)& (0+255),b
  6324  00135E  0E00               	movlw	0
  6325  001360  6F82               	movwf	(___aldiv@quotient+2)& (0+255),b
  6326  001362  0E00               	movlw	0
  6327  001364  6F83               	movwf	(___aldiv@quotient+3)& (0+255),b
  6328                           
  6329                           ; BSR set to: 0
  6330  001366  0100               	movlb	0	; () banked
  6331  001368  517A               	movf	___aldiv@divisor& (0+255),w,b
  6332  00136A  0100               	movlb	0	; () banked
  6333  00136C  117B               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  6334  00136E  0100               	movlb	0	; () banked
  6335  001370  117C               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  6336  001372  0100               	movlb	0	; () banked
  6337  001374  117D               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  6338  001376  B4D8               	btfsc	status,2,c
  6339  001378  D042               	goto	l3106
  6340                           
  6341                           ; BSR set to: 0
  6342  00137A  0E01               	movlw	1
  6343  00137C  0100               	movlb	0	; () banked
  6344  00137E  6F7E               	movwf	___aldiv@counter& (0+255),b
  6345  001380  D008               	goto	l3092
  6346  001382                     l3090:
  6347                           
  6348                           ; BSR set to: 0
  6349  001382  0100               	movlb	0	; () banked
  6350  001384  90D8               	bcf	status,0,c
  6351  001386  377A               	rlcf	___aldiv@divisor& (0+255),f,b
  6352  001388  377B               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  6353  00138A  377C               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  6354  00138C  377D               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  6355  00138E  0100               	movlb	0	; () banked
  6356  001390  2B7E               	incf	___aldiv@counter& (0+255),f,b
  6357  001392                     l3092:
  6358                           
  6359                           ; BSR set to: 0
  6360  001392  0100               	movlb	0	; () banked
  6361  001394  AF7D               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6362  001396  D7F5               	goto	l3090
  6363  001398                     l3094:
  6364                           
  6365                           ; BSR set to: 0
  6366  001398  0100               	movlb	0	; () banked
  6367  00139A  90D8               	bcf	status,0,c
  6368  00139C  3780               	rlcf	___aldiv@quotient& (0+255),f,b
  6369  00139E  3781               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  6370  0013A0  3782               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  6371  0013A2  3783               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  6372                           
  6373                           ; BSR set to: 0
  6374  0013A4  0100               	movlb	0	; () banked
  6375  0013A6  517A               	movf	___aldiv@divisor& (0+255),w,b
  6376  0013A8  0100               	movlb	0	; () banked
  6377  0013AA  5D76               	subwf	___aldiv@dividend& (0+255),w,b
  6378  0013AC  0100               	movlb	0	; () banked
  6379  0013AE  517B               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6380  0013B0  0100               	movlb	0	; () banked
  6381  0013B2  5977               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  6382  0013B4  0100               	movlb	0	; () banked
  6383  0013B6  517C               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6384  0013B8  0100               	movlb	0	; () banked
  6385  0013BA  5978               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  6386  0013BC  0100               	movlb	0	; () banked
  6387  0013BE  517D               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6388  0013C0  0100               	movlb	0	; () banked
  6389  0013C2  5979               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  6390  0013C4  A0D8               	btfss	status,0,c
  6391  0013C6  D012               	goto	l3102
  6392                           
  6393                           ; BSR set to: 0
  6394  0013C8  0100               	movlb	0	; () banked
  6395  0013CA  517A               	movf	___aldiv@divisor& (0+255),w,b
  6396  0013CC  0100               	movlb	0	; () banked
  6397  0013CE  5F76               	subwf	___aldiv@dividend& (0+255),f,b
  6398  0013D0  0100               	movlb	0	; () banked
  6399  0013D2  517B               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6400  0013D4  0100               	movlb	0	; () banked
  6401  0013D6  5B77               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  6402  0013D8  0100               	movlb	0	; () banked
  6403  0013DA  517C               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6404  0013DC  0100               	movlb	0	; () banked
  6405  0013DE  5B78               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  6406  0013E0  0100               	movlb	0	; () banked
  6407  0013E2  517D               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6408  0013E4  0100               	movlb	0	; () banked
  6409  0013E6  5B79               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  6410                           
  6411                           ; BSR set to: 0
  6412  0013E8  0100               	movlb	0	; () banked
  6413  0013EA  8180               	bsf	___aldiv@quotient& (0+255),0,b
  6414  0013EC                     l3102:
  6415                           
  6416                           ; BSR set to: 0
  6417  0013EC  0100               	movlb	0	; () banked
  6418  0013EE  90D8               	bcf	status,0,c
  6419  0013F0  337D               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  6420  0013F2  337C               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  6421  0013F4  337B               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  6422  0013F6  337A               	rrcf	___aldiv@divisor& (0+255),f,b
  6423                           
  6424                           ; BSR set to: 0
  6425  0013F8  0100               	movlb	0	; () banked
  6426  0013FA  2F7E               	decfsz	___aldiv@counter& (0+255),f,b
  6427  0013FC  D7CD               	goto	l3094
  6428  0013FE                     l3106:
  6429                           
  6430                           ; BSR set to: 0
  6431  0013FE  0100               	movlb	0	; () banked
  6432  001400  517F               	movf	___aldiv@sign& (0+255),w,b
  6433  001402  0100               	movlb	0	; () banked
  6434  001404  B4D8               	btfsc	status,2,c
  6435  001406  D009               	goto	l3110
  6436                           
  6437                           ; BSR set to: 0
  6438  001408  0100               	movlb	0	; () banked
  6439  00140A  1F83               	comf	(___aldiv@quotient+3)& (0+255),f,b
  6440  00140C  1F82               	comf	(___aldiv@quotient+2)& (0+255),f,b
  6441  00140E  1F81               	comf	(___aldiv@quotient+1)& (0+255),f,b
  6442  001410  6D80               	negf	___aldiv@quotient& (0+255),b
  6443  001412  0E00               	movlw	0
  6444  001414  2381               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  6445  001416  2382               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  6446  001418  2383               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  6447  00141A                     l3110:
  6448                           
  6449                           ; BSR set to: 0
  6450  00141A  C080  F076         	movff	___aldiv@quotient,?___aldiv
  6451  00141E  C081  F077         	movff	___aldiv@quotient+1,?___aldiv+1
  6452  001422  C082  F078         	movff	___aldiv@quotient+2,?___aldiv+2
  6453  001426  C083  F079         	movff	___aldiv@quotient+3,?___aldiv+3
  6454  00142A  0012               	return	
  6455  00142C                     __end_of___aldiv:
  6456                           	opt stack 0
  6457                           tblptru	equ	0xFF8
  6458                           tblptrh	equ	0xFF7
  6459                           tblptrl	equ	0xFF6
  6460                           tablat	equ	0xFF5
  6461                           prodh	equ	0xFF4
  6462                           prodl	equ	0xFF3
  6463                           intcon	equ	0xFF2
  6464                           intcon2	equ	0xFF1
  6465                           postinc0	equ	0xFEE
  6466                           wreg	equ	0xFE8
  6467                           postinc2	equ	0xFDE
  6468                           postdec2	equ	0xFDD
  6469                           fsr2h	equ	0xFDA
  6470                           fsr2l	equ	0xFD9
  6471                           status	equ	0xFD8
  6472                           
  6473 ;; *************** function _ISR_low *****************
  6474 ;; Defined at:
  6475 ;;		line 674 in file "main.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;		None
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;  i               1   49[COMRAM] unsigned char 
  6480 ;;  ins             1   48[COMRAM] unsigned char 
  6481 ;;  mask_leds       1   46[COMRAM] unsigned char 
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  1    wreg      void 
  6484 ;; Registers used:
  6485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6491 ;;      Params:         0       0       0       0       0       0       0       0       0
  6492 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6493 ;;      Temps:          0      22       0       0       0       0       0       0       0
  6494 ;;      Totals:        10      22       0       0       0       0       0       0       0
  6495 ;;Total ram usage:       32 bytes
  6496 ;; Hardware stack levels used:    1
  6497 ;; Hardware stack levels required when called:    4
  6498 ;; This function calls:
  6499 ;;		___awmod
  6500 ;;		_buzzer
  6501 ;;		_sample_inputs
  6502 ;;		i1___aldiv
  6503 ;;		i1_set_LEDs
  6504 ;;		i1_set_digit
  6505 ;; This function is called by:
  6506 ;;		Interrupt level 1
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           	psect	intcodelo
  6511  000018                     __pintcodelo:
  6512                           	opt stack 0
  6513  000018                     _ISR_low:
  6514                           	opt stack 21
  6515                           
  6516                           ; BSR set to: 0
  6517                           ;incstack = 0
  6518  000018  803D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6519  00001A  CFD8 F065          	movff	status,??_ISR_low+5
  6520  00001E  CFE8 F066          	movff	wreg,??_ISR_low+6
  6521  000022  CFE0 F067          	movff	bsr,??_ISR_low+7
  6522  000026  CFFA F068          	movff	pclath,??_ISR_low+8
  6523  00002A  CFFB F069          	movff	pclatu,??_ISR_low+9
  6524  00002E  CFE9 F06A          	movff	fsr0l,??_ISR_low+10
  6525  000032  CFEA F06B          	movff	fsr0h,??_ISR_low+11
  6526  000036  CFE1 F06C          	movff	fsr1l,??_ISR_low+12
  6527  00003A  CFE2 F06D          	movff	fsr1h,??_ISR_low+13
  6528  00003E  CFD9 F06E          	movff	fsr2l,??_ISR_low+14
  6529  000042  CFDA F06F          	movff	fsr2h,??_ISR_low+15
  6530  000046  CFF3 F070          	movff	prodl,??_ISR_low+16
  6531  00004A  CFF4 F071          	movff	prodh,??_ISR_low+17
  6532  00004E  CFF6 F072          	movff	tblptrl,??_ISR_low+18
  6533  000052  CFF7 F073          	movff	tblptrh,??_ISR_low+19
  6534  000056  CFF8 F074          	movff	tblptru,??_ISR_low+20
  6535  00005A  CFF5 F075          	movff	tablat,??_ISR_low+21
  6536                           
  6537                           ;main.c: 677: if (TMR0IE && TMR0IF)
  6538  00005E  BAF2               	btfsc	intcon,5,c	;volatile
  6539  000060  A4F2               	btfss	intcon,2,c	;volatile
  6540  000062  D002               	goto	i1l453
  6541                           
  6542                           ;main.c: 678: {
  6543                           ;main.c: 679: TMR0IF = 0;
  6544  000064  94F2               	bcf	intcon,2,c	;volatile
  6545                           
  6546                           ;main.c: 681: return;
  6547  000066  D1B5               	goto	i1l454
  6548  000068                     i1l453:
  6549                           
  6550                           ;main.c: 682: }
  6551                           ;main.c: 683: if (TMR2IE && TMR2IF)
  6552  000068  B29D               	btfsc	3997,1,c	;volatile
  6553  00006A  A29E               	btfss	3998,1,c	;volatile
  6554  00006C  D1AD               	goto	i1l455
  6555                           
  6556                           ;main.c: 684: {
  6557                           ;main.c: 685: static scan_state cur = _KEYS;
  6558                           ;main.c: 686: unsigned char ins = 0;
  6559  00006E  0E00               	movlw	0
  6560  000070  6E31               	movwf	ISR_low@ins,c
  6561                           
  6562                           ;main.c: 687: static unsigned char ins_prev = 0;
  6563                           ;main.c: 688: unsigned char mask_leds;
  6564                           ;main.c: 690: TMR2IF = 0;
  6565  000072  929E               	bcf	3998,1,c	;volatile
  6566                           
  6567                           ;main.c: 692: LATA2 = 1;
  6568  000074  8489               	bsf	3977,2,c	;volatile
  6569                           
  6570                           ;main.c: 693: LATA3 = 1;
  6571  000076  8689               	bsf	3977,3,c	;volatile
  6572                           
  6573                           ;main.c: 694: LATA4 = 1;
  6574  000078  8889               	bsf	3977,4,c	;volatile
  6575                           
  6576                           ;main.c: 696: cur = (cur + 1) % 4;
  6577  00007A  2838               	incf	ISR_low@cur,w,c
  6578  00007C  0B03               	andlw	3
  6579  00007E  6E38               	movwf	ISR_low@cur,c
  6580                           
  6581                           ;main.c: 697: switch (cur)
  6582  000080  D178               	goto	i1l3498
  6583  000082                     i1l461:
  6584                           
  6585                           ;main.c: 701: ins_prev = ins;
  6586  000082  C031  F039         	movff	ISR_low@ins,ISR_low@ins_prev
  6587                           
  6588                           ;main.c: 703: ins = sample_inputs();
  6589  000086  ECB4  F010         	call	_sample_inputs	;wreg free
  6590  00008A  6E31               	movwf	ISR_low@ins,c
  6591                           
  6592                           ;main.c: 705: buzzer(3);
  6593  00008C  0E03               	movlw	3
  6594  00008E  ECC7  F012         	call	_buzzer
  6595                           
  6596                           ;main.c: 706: unsigned char i = 0b10000000;
  6597  000092  0E80               	movlw	128
  6598  000094  6E32               	movwf	ISR_low@i,c
  6599                           
  6600                           ;main.c: 708: {
  6601                           ;main.c: 712: switch (ins & ~ins_prev & i)
  6602                           
  6603                           ;main.c: 707: do
  6604  000096  D02F               	goto	i1l3438
  6605  000098                     i1l464:
  6606                           
  6607                           ; BSR set to: 0
  6608                           ;main.c: 716: timer = 1^timer;
  6609  000098  B437               	btfsc	_timer/(0+8),_timer& (0+7),c
  6610  00009A  D002               	goto	i1u465_20
  6611  00009C  8437               	bsf	_timer/(0+8),_timer& (0+7),c
  6612  00009E  D049               	goto	i1l3440
  6613  0000A0                     i1u465_20:
  6614  0000A0  9437               	bcf	_timer/(0+8),_timer& (0+7),c
  6615                           
  6616                           ;main.c: 717: break;
  6617  0000A2  D047               	goto	i1l3440
  6618  0000A4                     i1l3414:
  6619                           
  6620                           ;main.c: 719: (*cur_number)++;
  6621  0000A4  C03B  FFD9         	movff	_cur_number,fsr2l
  6622  0000A8  C03C  FFDA         	movff	_cur_number+1,fsr2h
  6623  0000AC  2ADF               	incf	indf2,f,c
  6624                           
  6625                           ;main.c: 720: break;
  6626  0000AE  D041               	goto	i1l3440
  6627  0000B0                     i1l3416:
  6628                           
  6629                           ;main.c: 722: (*cur_number)--;
  6630  0000B0  C03B  FFD9         	movff	_cur_number,fsr2l
  6631  0000B4  C03C  FFDA         	movff	_cur_number+1,fsr2h
  6632  0000B8  06DF               	decf	indf2,f,c
  6633                           
  6634                           ;main.c: 723: break;
  6635  0000BA  D03B               	goto	i1l3440
  6636  0000BC                     i1l468:
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;main.c: 725: unit = 1^unit;
  6640  0000BC  B637               	btfsc	_unit/(0+8),_unit& (0+7),c
  6641  0000BE  D002               	goto	i1u467_20
  6642  0000C0  8637               	bsf	_unit/(0+8),_unit& (0+7),c
  6643  0000C2  D037               	goto	i1l3440
  6644  0000C4                     i1u467_20:
  6645  0000C4  9637               	bcf	_unit/(0+8),_unit& (0+7),c
  6646                           
  6647                           ;main.c: 726: break;
  6648  0000C6  D035               	goto	i1l3440
  6649  0000C8                     i1l3418:
  6650                           
  6651                           ;main.c: 728: buzzer(5);
  6652  0000C8  0E05               	movlw	5
  6653  0000CA  ECC7  F012         	call	_buzzer
  6654                           
  6655                           ;main.c: 730: if (state == _OFF)
  6656  0000CE  0100               	movlb	0	; () banked
  6657  0000D0  51E2               	movf	_state& (0+255),w,b
  6658  0000D2  A4D8               	btfss	status,2,c
  6659  0000D4  D008               	goto	i1l3430
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;main.c: 731: {
  6663                           ;main.c: 732: state = _IDLE;
  6664  0000D6  0E02               	movlw	2
  6665  0000D8  0100               	movlb	0	; () banked
  6666  0000DA  6FE2               	movwf	_state& (0+255),b
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;main.c: 733: disp[0] |= 0b10000000;
  6670  0000DC  0100               	movlb	0	; () banked
  6671  0000DE  8FD7               	bsf	_disp& (0+255),7,b
  6672                           
  6673                           ; BSR set to: 0
  6674                           ;main.c: 734: disp[1] |= 0b10000000;
  6675  0000E0  0100               	movlb	0	; () banked
  6676  0000E2  8FD8               	bsf	(_disp+1)& (0+255),7,b
  6677                           
  6678                           ; BSR set to: 0
  6679                           ;main.c: 736: }
  6680                           
  6681                           ;main.c: 735: break;
  6682  0000E4  D026               	goto	i1l3440
  6683  0000E6                     i1l3430:
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;main.c: 737: else
  6687                           ;main.c: 738: {
  6688                           ;main.c: 739: state = _OFF;
  6689  0000E6  0E00               	movlw	0
  6690  0000E8  0100               	movlb	0	; () banked
  6691  0000EA  6FE2               	movwf	_state& (0+255),b
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;main.c: 740: disp[0] &= ~0b10000000;
  6695  0000EC  0100               	movlb	0	; () banked
  6696  0000EE  9FD7               	bcf	_disp& (0+255),7,b
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;main.c: 741: disp[1] &= ~0b10000000;
  6700  0000F0  0100               	movlb	0	; () banked
  6701  0000F2  9FD8               	bcf	(_disp+1)& (0+255),7,b
  6702                           
  6703                           ; BSR set to: 0
  6704                           ;main.c: 747: }
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;main.c: 746: break;
  6708                           
  6709                           ;main.c: 744: case 0b100000:
  6710                           
  6711                           ; BSR set to: 0
  6712                           ;main.c: 742: }
  6713                           ;main.c: 743: break;
  6714  0000F4  D01E               	goto	i1l3440
  6715  0000F6                     i1l3438:
  6716  0000F6  5039               	movf	ISR_low@ins_prev,w,c
  6717  0000F8  0AFF               	xorlw	255
  6718  0000FA  1431               	andwf	ISR_low@ins,w,c
  6719  0000FC  1432               	andwf	ISR_low@i,w,c
  6720  0000FE  0100               	movlb	0	; () banked
  6721  000100  6F60               	movwf	??_ISR_low& (0+255),b
  6722  000102  6B61               	clrf	(??_ISR_low+1)& (0+255),b
  6723                           
  6724                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6725                           ; Switch size 1, requested type "space"
  6726                           ; Number of cases is 1, Range of values is 0 to 0
  6727                           ; switch strategies available:
  6728                           ; Name         Instructions Cycles
  6729                           ; simple_byte            4     3 (average)
  6730                           ;	Chosen strategy is simple_byte
  6731  000104  0100               	movlb	0	; () banked
  6732  000106  5161               	movf	(??_ISR_low+1)& (0+255),w,b
  6733  000108  0A00               	xorlw	0	; case 0
  6734  00010A  A4D8               	btfss	status,2,c
  6735  00010C  D012               	goto	i1l3440
  6736                           
  6737                           ; BSR set to: 0
  6738                           ; Switch size 1, requested type "space"
  6739                           ; Number of cases is 6, Range of values is 1 to 32
  6740                           ; switch strategies available:
  6741                           ; Name         Instructions Cycles
  6742                           ; simple_byte           19    10 (average)
  6743                           ;	Chosen strategy is simple_byte
  6744  00010E  0100               	movlb	0	; () banked
  6745  000110  5160               	movf	??_ISR_low& (0+255),w,b
  6746  000112  0A01               	xorlw	1	; case 1
  6747  000114  B4D8               	btfsc	status,2,c
  6748  000116  D7C0               	goto	i1l464
  6749  000118  0A03               	xorlw	3	; case 2
  6750  00011A  B4D8               	btfsc	status,2,c
  6751  00011C  D7C3               	goto	i1l3414
  6752  00011E  0A06               	xorlw	6	; case 4
  6753  000120  B4D8               	btfsc	status,2,c
  6754  000122  D7C6               	goto	i1l3416
  6755  000124  0A0C               	xorlw	12	; case 8
  6756  000126  B4D8               	btfsc	status,2,c
  6757  000128  D7C9               	goto	i1l468
  6758  00012A  0A18               	xorlw	24	; case 16
  6759  00012C  B4D8               	btfsc	status,2,c
  6760  00012E  D7CC               	goto	i1l3418
  6761  000130  0A30               	xorlw	48	; case 32
  6762  000132                     i1l3440:
  6763                           
  6764                           ;main.c: 748: }
  6765                           ;main.c: 749: while (i = i << 1);
  6766  000132  5032               	movf	ISR_low@i,w,c
  6767  000134  2432               	addwf	ISR_low@i,w,c
  6768  000136  6E32               	movwf	ISR_low@i,c
  6769  000138  5032               	movf	ISR_low@i,w,c
  6770  00013A  B4D8               	btfsc	status,2,c
  6771  00013C  D127               	goto	i1l3500
  6772  00013E  D7DB               	goto	i1l3438
  6773  000140                     i1l3442:
  6774                           
  6775                           ;main.c: 752: if (state == _OFF)
  6776  000140  0100               	movlb	0	; () banked
  6777  000142  51E2               	movf	_state& (0+255),w,b
  6778  000144  A4D8               	btfss	status,2,c
  6779  000146  D002               	goto	i1l476
  6780                           
  6781                           ; BSR set to: 0
  6782                           ;main.c: 753: {
  6783                           ;main.c: 755: mask_leds = 0b10000;
  6784  000148  0E10               	movlw	16
  6785  00014A  D100               	goto	L5
  6786  00014C                     i1l476:
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;main.c: 757: else
  6790                           ;main.c: 758: {
  6791                           ;main.c: 759: mask_leds = (timer_led ? 0b1 : 0) |
  6792                           ;main.c: 760: (timer && (((time / 3600) >= day_hour && (time / 3600) < night_hour) ? 0b1
      +                          0 : 0)) |
  6793                           ;main.c: 761: (timer && (((time / 3600) < day_hour || (time / 3600) >= night_hour) ? 0b1
      +                          00 : 0)) |
  6794                           ;main.c: 762: ((heat_mode != LATC1 && heat_mode != LATC2) ? 0b1000 : 0) |
  6795                           ;main.c: 763: (power_led ? 0b10000 : 0) |
  6796                           ;main.c: 764: (unit ? 0b1000000 : 0b100000);
  6797  00014C  B637               	btfsc	_unit/(0+8),_unit& (0+7),c
  6798  00014E  D004               	goto	i1l3448
  6799                           
  6800                           ; BSR set to: 0
  6801  000150  0E00               	movlw	0
  6802  000152  6E34               	movwf	_ISR_low$365+1,c
  6803  000154  0E20               	movlw	32
  6804  000156  D003               	goto	L6
  6805  000158                     i1l3448:
  6806                           
  6807                           ; BSR set to: 0
  6808  000158  0E00               	movlw	0
  6809  00015A  6E34               	movwf	_ISR_low$365+1,c
  6810  00015C  0E40               	movlw	64
  6811  00015E                     L6:
  6812  00015E  6E33               	movwf	_ISR_low$365,c
  6813                           
  6814                           ; BSR set to: 0
  6815                           
  6816                           ; BSR set to: 0
  6817  000160  B037               	btfsc	_power_led/(0+8),_power_led& (0+7),c
  6818  000162  D004               	goto	i1l3454
  6819                           
  6820                           ; BSR set to: 0
  6821  000164  0E00               	movlw	0
  6822  000166  6E36               	movwf	_ISR_low$366+1,c
  6823  000168  0E00               	movlw	0
  6824  00016A  D003               	goto	L7
  6825  00016C                     i1l3454:
  6826                           
  6827                           ; BSR set to: 0
  6828  00016C  0E00               	movlw	0
  6829  00016E  6E36               	movwf	_ISR_low$366+1,c
  6830  000170  0E10               	movlw	16
  6831  000172                     L7:
  6832  000172  6E35               	movwf	_ISR_low$366,c
  6833                           
  6834                           ; BSR set to: 0
  6835  000174  0E00               	movlw	0
  6836  000176  B28B               	btfsc	3979,1,c	;volatile
  6837  000178  0E01               	movlw	1
  6838  00017A  0100               	movlb	0	; () banked
  6839  00017C  19E9               	xorwf	_heat_mode& (0+255),w,b
  6840  00017E  B4D8               	btfsc	status,2,c
  6841  000180  D007               	goto	i1l3458
  6842                           
  6843                           ; BSR set to: 0
  6844  000182  0E00               	movlw	0
  6845  000184  B48B               	btfsc	3979,2,c	;volatile
  6846  000186  0E01               	movlw	1
  6847  000188  0100               	movlb	0	; () banked
  6848  00018A  19E9               	xorwf	_heat_mode& (0+255),w,b
  6849  00018C  A4D8               	btfss	status,2,c
  6850  00018E  D004               	goto	i1l3460
  6851  000190                     i1l3458:
  6852                           
  6853                           ; BSR set to: 0
  6854  000190  0E00               	movlw	0
  6855  000192  6E2E               	movwf	_ISR_low$367+1,c
  6856  000194  0E00               	movlw	0
  6857  000196  D003               	goto	L8
  6858  000198                     i1l3460:
  6859                           
  6860                           ; BSR set to: 0
  6861  000198  0E00               	movlw	0
  6862  00019A  6E2E               	movwf	_ISR_low$367+1,c
  6863  00019C  0E08               	movlw	8
  6864  00019E                     L8:
  6865  00019E  6E2D               	movwf	_ISR_low$367,c
  6866                           
  6867                           ; BSR set to: 0
  6868  0001A0  0E01               	movlw	1
  6869  0001A2  6E30               	movwf	_ISR_low$368,c
  6870                           
  6871                           ; BSR set to: 0
  6872  0001A4  B237               	btfsc	_timer_led/(0+8),_timer_led& (0+7),c
  6873  0001A6  D0CE               	goto	i1l3488
  6874                           
  6875                           ; BSR set to: 0
  6876  0001A8  A437               	btfss	_timer/(0+8),_timer& (0+7),c
  6877  0001AA  D064               	goto	i1l2424
  6878                           
  6879                           ; BSR set to: 0
  6880  0001AC  C0DC  F060         	movff	_day_hour,??_ISR_low
  6881  0001B0  0100               	movlb	0	; () banked
  6882  0001B2  6B61               	clrf	(??_ISR_low+1)& (0+255),b
  6883  0001B4  6B62               	clrf	(??_ISR_low+2)& (0+255),b
  6884  0001B6  6B63               	clrf	(??_ISR_low+3)& (0+255),b
  6885  0001B8  C0E3  F01F         	movff	_time,i1___aldiv@dividend
  6886  0001BC  C0E4  F020         	movff	_time+1,i1___aldiv@dividend+1
  6887  0001C0  C0E5  F021         	movff	_time+2,i1___aldiv@dividend+2
  6888  0001C4  C0E6  F022         	movff	_time+3,i1___aldiv@dividend+3
  6889  0001C8  0E10               	movlw	16
  6890  0001CA  6E23               	movwf	i1___aldiv@divisor,c
  6891  0001CC  0E0E               	movlw	14
  6892  0001CE  6E24               	movwf	i1___aldiv@divisor+1,c
  6893  0001D0  0E00               	movlw	0
  6894  0001D2  6E25               	movwf	i1___aldiv@divisor+2,c
  6895  0001D4  0E00               	movlw	0
  6896  0001D6  6E26               	movwf	i1___aldiv@divisor+3,c
  6897  0001D8  EC92  F00D         	call	i1___aldiv	;wreg free
  6898  0001DC  0100               	movlb	0	; () banked
  6899  0001DE  5160               	movf	??_ISR_low& (0+255),w,b
  6900  0001E0  5C1F               	subwf	?i1___aldiv,w,c
  6901  0001E2  0100               	movlb	0	; () banked
  6902  0001E4  5161               	movf	(??_ISR_low+1)& (0+255),w,b
  6903  0001E6  5820               	subwfb	?i1___aldiv+1,w,c
  6904  0001E8  0100               	movlb	0	; () banked
  6905  0001EA  5162               	movf	(??_ISR_low+2)& (0+255),w,b
  6906  0001EC  5821               	subwfb	?i1___aldiv+2,w,c
  6907  0001EE  5022               	movf	?i1___aldiv+3,w,c
  6908  0001F0  0A80               	xorlw	128
  6909  0001F2  0100               	movlb	0	; () banked
  6910  0001F4  6F64               	movwf	(??_ISR_low+4)& (0+255),b
  6911  0001F6  0100               	movlb	0	; () banked
  6912  0001F8  5163               	movf	(??_ISR_low+3)& (0+255),w,b
  6913  0001FA  0A80               	xorlw	128
  6914  0001FC  0100               	movlb	0	; () banked
  6915  0001FE  5964               	subwfb	(??_ISR_low+4)& (0+255),w,b
  6916  000200  A0D8               	btfss	status,0,c
  6917  000202  D02C               	goto	i1l3470
  6918                           
  6919                           ; BSR set to: 0
  6920  000204  C0E0  F060         	movff	_night_hour,??_ISR_low
  6921  000208  0100               	movlb	0	; () banked
  6922  00020A  6B61               	clrf	(??_ISR_low+1)& (0+255),b
  6923  00020C  6B62               	clrf	(??_ISR_low+2)& (0+255),b
  6924  00020E  6B63               	clrf	(??_ISR_low+3)& (0+255),b
  6925  000210  C0E3  F01F         	movff	_time,i1___aldiv@dividend
  6926  000214  C0E4  F020         	movff	_time+1,i1___aldiv@dividend+1
  6927  000218  C0E5  F021         	movff	_time+2,i1___aldiv@dividend+2
  6928  00021C  C0E6  F022         	movff	_time+3,i1___aldiv@dividend+3
  6929  000220  0E10               	movlw	16
  6930  000222  6E23               	movwf	i1___aldiv@divisor,c
  6931  000224  0E0E               	movlw	14
  6932  000226  6E24               	movwf	i1___aldiv@divisor+1,c
  6933  000228  0E00               	movlw	0
  6934  00022A  6E25               	movwf	i1___aldiv@divisor+2,c
  6935  00022C  0E00               	movlw	0
  6936  00022E  6E26               	movwf	i1___aldiv@divisor+3,c
  6937  000230  EC92  F00D         	call	i1___aldiv	;wreg free
  6938  000234  0100               	movlb	0	; () banked
  6939  000236  5160               	movf	??_ISR_low& (0+255),w,b
  6940  000238  5C1F               	subwf	?i1___aldiv,w,c
  6941  00023A  0100               	movlb	0	; () banked
  6942  00023C  5161               	movf	(??_ISR_low+1)& (0+255),w,b
  6943  00023E  5820               	subwfb	?i1___aldiv+1,w,c
  6944  000240  0100               	movlb	0	; () banked
  6945  000242  5162               	movf	(??_ISR_low+2)& (0+255),w,b
  6946  000244  5821               	subwfb	?i1___aldiv+2,w,c
  6947  000246  5022               	movf	?i1___aldiv+3,w,c
  6948  000248  0A80               	xorlw	128
  6949  00024A  0100               	movlb	0	; () banked
  6950  00024C  6F64               	movwf	(??_ISR_low+4)& (0+255),b
  6951  00024E  0100               	movlb	0	; () banked
  6952  000250  5163               	movf	(??_ISR_low+3)& (0+255),w,b
  6953  000252  0A80               	xorlw	128
  6954  000254  0100               	movlb	0	; () banked
  6955  000256  5964               	subwfb	(??_ISR_low+4)& (0+255),w,b
  6956  000258  A0D8               	btfss	status,0,c
  6957  00025A  D004               	goto	i1l3472
  6958  00025C                     i1l3470:
  6959                           
  6960                           ; BSR set to: 0
  6961  00025C  0E00               	movlw	0
  6962  00025E  6E34               	movwf	_ISR_low$365+1,c
  6963  000260  0E00               	movlw	0
  6964  000262  D003               	goto	L9
  6965  000264                     i1l3472:
  6966                           
  6967                           ; BSR set to: 0
  6968  000264  0E00               	movlw	0
  6969  000266  6E34               	movwf	_ISR_low$365+1,c
  6970  000268  0E02               	movlw	2
  6971  00026A                     L9:
  6972  00026A  6E33               	movwf	_ISR_low$365,c
  6973                           
  6974                           ; BSR set to: 0
  6975                           
  6976                           ; BSR set to: 0
  6977  00026C  5033               	movf	_ISR_low$365,w,c
  6978  00026E  1034               	iorwf	_ISR_low$365+1,w,c
  6979  000270  A4D8               	btfss	status,2,c
  6980  000272  D068               	goto	i1l3488
  6981  000274                     i1l2424:
  6982                           
  6983                           ; BSR set to: 0
  6984  000274  A437               	btfss	_timer/(0+8),_timer& (0+7),c
  6985  000276  D064               	goto	i1l3486
  6986                           
  6987                           ; BSR set to: 0
  6988  000278  C0DC  F060         	movff	_day_hour,??_ISR_low
  6989  00027C  0100               	movlb	0	; () banked
  6990  00027E  6B61               	clrf	(??_ISR_low+1)& (0+255),b
  6991  000280  6B62               	clrf	(??_ISR_low+2)& (0+255),b
  6992  000282  6B63               	clrf	(??_ISR_low+3)& (0+255),b
  6993  000284  C0E3  F01F         	movff	_time,i1___aldiv@dividend
  6994  000288  C0E4  F020         	movff	_time+1,i1___aldiv@dividend+1
  6995  00028C  C0E5  F021         	movff	_time+2,i1___aldiv@dividend+2
  6996  000290  C0E6  F022         	movff	_time+3,i1___aldiv@dividend+3
  6997  000294  0E10               	movlw	16
  6998  000296  6E23               	movwf	i1___aldiv@divisor,c
  6999  000298  0E0E               	movlw	14
  7000  00029A  6E24               	movwf	i1___aldiv@divisor+1,c
  7001  00029C  0E00               	movlw	0
  7002  00029E  6E25               	movwf	i1___aldiv@divisor+2,c
  7003  0002A0  0E00               	movlw	0
  7004  0002A2  6E26               	movwf	i1___aldiv@divisor+3,c
  7005  0002A4  EC92  F00D         	call	i1___aldiv	;wreg free
  7006  0002A8  0100               	movlb	0	; () banked
  7007  0002AA  5160               	movf	??_ISR_low& (0+255),w,b
  7008  0002AC  5C1F               	subwf	?i1___aldiv,w,c
  7009  0002AE  0100               	movlb	0	; () banked
  7010  0002B0  5161               	movf	(??_ISR_low+1)& (0+255),w,b
  7011  0002B2  5820               	subwfb	?i1___aldiv+1,w,c
  7012  0002B4  0100               	movlb	0	; () banked
  7013  0002B6  5162               	movf	(??_ISR_low+2)& (0+255),w,b
  7014  0002B8  5821               	subwfb	?i1___aldiv+2,w,c
  7015  0002BA  5022               	movf	?i1___aldiv+3,w,c
  7016  0002BC  0A80               	xorlw	128
  7017  0002BE  0100               	movlb	0	; () banked
  7018  0002C0  6F64               	movwf	(??_ISR_low+4)& (0+255),b
  7019  0002C2  0100               	movlb	0	; () banked
  7020  0002C4  5163               	movf	(??_ISR_low+3)& (0+255),w,b
  7021  0002C6  0A80               	xorlw	128
  7022  0002C8  0100               	movlb	0	; () banked
  7023  0002CA  5964               	subwfb	(??_ISR_low+4)& (0+255),w,b
  7024  0002CC  A0D8               	btfss	status,0,c
  7025  0002CE  D030               	goto	i1l3482
  7026                           
  7027                           ; BSR set to: 0
  7028  0002D0  C0E0  F060         	movff	_night_hour,??_ISR_low
  7029  0002D4  0100               	movlb	0	; () banked
  7030  0002D6  6B61               	clrf	(??_ISR_low+1)& (0+255),b
  7031  0002D8  6B62               	clrf	(??_ISR_low+2)& (0+255),b
  7032  0002DA  6B63               	clrf	(??_ISR_low+3)& (0+255),b
  7033  0002DC  C0E3  F01F         	movff	_time,i1___aldiv@dividend
  7034  0002E0  C0E4  F020         	movff	_time+1,i1___aldiv@dividend+1
  7035  0002E4  C0E5  F021         	movff	_time+2,i1___aldiv@dividend+2
  7036  0002E8  C0E6  F022         	movff	_time+3,i1___aldiv@dividend+3
  7037  0002EC  0E10               	movlw	16
  7038  0002EE  6E23               	movwf	i1___aldiv@divisor,c
  7039  0002F0  0E0E               	movlw	14
  7040  0002F2  6E24               	movwf	i1___aldiv@divisor+1,c
  7041  0002F4  0E00               	movlw	0
  7042  0002F6  6E25               	movwf	i1___aldiv@divisor+2,c
  7043  0002F8  0E00               	movlw	0
  7044  0002FA  6E26               	movwf	i1___aldiv@divisor+3,c
  7045  0002FC  EC92  F00D         	call	i1___aldiv	;wreg free
  7046  000300  0100               	movlb	0	; () banked
  7047  000302  5160               	movf	??_ISR_low& (0+255),w,b
  7048  000304  5C1F               	subwf	?i1___aldiv,w,c
  7049  000306  0100               	movlb	0	; () banked
  7050  000308  5161               	movf	(??_ISR_low+1)& (0+255),w,b
  7051  00030A  5820               	subwfb	?i1___aldiv+1,w,c
  7052  00030C  0100               	movlb	0	; () banked
  7053  00030E  5162               	movf	(??_ISR_low+2)& (0+255),w,b
  7054  000310  5821               	subwfb	?i1___aldiv+2,w,c
  7055  000312  5022               	movf	?i1___aldiv+3,w,c
  7056  000314  0A80               	xorlw	128
  7057  000316  0100               	movlb	0	; () banked
  7058  000318  6F64               	movwf	(??_ISR_low+4)& (0+255),b
  7059  00031A  0100               	movlb	0	; () banked
  7060  00031C  5163               	movf	(??_ISR_low+3)& (0+255),w,b
  7061  00031E  0A80               	xorlw	128
  7062  000320  0100               	movlb	0	; () banked
  7063  000322  5964               	subwfb	(??_ISR_low+4)& (0+255),w,b
  7064  000324  B0D8               	btfsc	status,0,c
  7065  000326  D004               	goto	i1l3482
  7066                           
  7067                           ; BSR set to: 0
  7068  000328  0E00               	movlw	0
  7069  00032A  6E36               	movwf	_ISR_low$366+1,c
  7070  00032C  0E00               	movlw	0
  7071  00032E  D003               	goto	L10
  7072  000330                     i1l3482:
  7073                           
  7074                           ; BSR set to: 0
  7075  000330  0E00               	movlw	0
  7076  000332  6E36               	movwf	_ISR_low$366+1,c
  7077  000334  0E04               	movlw	4
  7078  000336                     L10:
  7079  000336  6E35               	movwf	_ISR_low$366,c
  7080                           
  7081                           ; BSR set to: 0
  7082                           
  7083                           ; BSR set to: 0
  7084  000338  5035               	movf	_ISR_low$366,w,c
  7085  00033A  1036               	iorwf	_ISR_low$366+1,w,c
  7086  00033C  A4D8               	btfss	status,2,c
  7087  00033E  D002               	goto	i1l3488
  7088  000340                     i1l3486:
  7089                           
  7090                           ; BSR set to: 0
  7091  000340  0E00               	movlw	0
  7092  000342  6E30               	movwf	_ISR_low$368,c
  7093  000344                     i1l3488:
  7094                           
  7095                           ; BSR set to: 0
  7096  000344  5030               	movf	_ISR_low$368,w,c
  7097  000346  102D               	iorwf	_ISR_low$367,w,c
  7098  000348  1035               	iorwf	_ISR_low$366,w,c
  7099  00034A  1033               	iorwf	_ISR_low$365,w,c
  7100  00034C                     L5:
  7101  00034C  6E2F               	movwf	ISR_low@mask_leds,c
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;main.c: 765: }
  7105                           ;main.c: 766: set_LEDs(mask_leds);
  7106                           
  7107                           ; BSR set to: 0
  7108  00034E  502F               	movf	ISR_low@mask_leds,w,c
  7109  000350  EC5D  F00E         	call	i1_set_LEDs
  7110                           
  7111                           ;main.c: 767: break;
  7112  000354  D01B               	goto	i1l3500
  7113  000356                     i1l494:
  7114                           
  7115                           ;main.c: 769: LATA3 = 0;
  7116  000356  9689               	bcf	3977,3,c	;volatile
  7117                           
  7118                           ;main.c: 770: LATA4 = 1;
  7119  000358  8889               	bsf	3977,4,c	;volatile
  7120                           
  7121                           ;main.c: 771: set_digit(disp[0]);
  7122  00035A  0100               	movlb	0	; () banked
  7123  00035C  51D7               	movf	_disp& (0+255),w,b
  7124  00035E  ECF8  F00D         	call	i1_set_digit
  7125                           
  7126                           ;main.c: 772: break;
  7127  000362  D014               	goto	i1l3500
  7128  000364                     i1l495:
  7129                           
  7130                           ;main.c: 774: LATA3 = 1;
  7131  000364  8689               	bsf	3977,3,c	;volatile
  7132                           
  7133                           ;main.c: 775: LATA4 = 0;
  7134  000366  9889               	bcf	3977,4,c	;volatile
  7135                           
  7136                           ;main.c: 776: set_digit(disp[1]);
  7137  000368  0100               	movlb	0	; () banked
  7138  00036A  51D8               	movf	(_disp+1)& (0+255),w,b
  7139  00036C  ECF8  F00D         	call	i1_set_digit
  7140                           
  7141                           ;main.c: 778: }
  7142                           
  7143                           ;main.c: 777: break;
  7144  000370  D00D               	goto	i1l3500
  7145  000372                     i1l3498:
  7146  000372  5038               	movf	ISR_low@cur,w,c
  7147                           
  7148                           ; Switch size 1, requested type "space"
  7149                           ; Number of cases is 4, Range of values is 0 to 3
  7150                           ; switch strategies available:
  7151                           ; Name         Instructions Cycles
  7152                           ; simple_byte           13     7 (average)
  7153                           ;	Chosen strategy is simple_byte
  7154  000374  0A00               	xorlw	0	; case 0
  7155  000376  B4D8               	btfsc	status,2,c
  7156  000378  D684               	goto	i1l461
  7157  00037A  0A01               	xorlw	1	; case 1
  7158  00037C  B4D8               	btfsc	status,2,c
  7159  00037E  D6E0               	goto	i1l3442
  7160  000380  0A03               	xorlw	3	; case 2
  7161  000382  B4D8               	btfsc	status,2,c
  7162  000384  D7E8               	goto	i1l494
  7163  000386  0A01               	xorlw	1	; case 3
  7164  000388  B4D8               	btfsc	status,2,c
  7165  00038A  D7EC               	goto	i1l495
  7166  00038C                     i1l3500:
  7167                           
  7168                           ;main.c: 781: if (!cur)
  7169  00038C  5038               	movf	ISR_low@cur,w,c
  7170  00038E  A4D8               	btfss	status,2,c
  7171  000390  D020               	goto	i1l454
  7172                           
  7173                           ;main.c: 782: {
  7174                           ;main.c: 786: blink = (blink+1) % (12*2);
  7175  000392  0E01               	movlw	1
  7176  000394  0100               	movlb	0	; () banked
  7177  000396  25DB               	addwf	_blink& (0+255),w,b
  7178  000398  6E1F               	movwf	___awmod@dividend,c
  7179  00039A  6A20               	clrf	___awmod@dividend+1,c
  7180  00039C  0E00               	movlw	0
  7181  00039E  2220               	addwfc	___awmod@dividend+1,f,c
  7182  0003A0  0E00               	movlw	0
  7183  0003A2  6E22               	movwf	___awmod@divisor+1,c
  7184  0003A4  0E18               	movlw	24
  7185  0003A6  6E21               	movwf	___awmod@divisor,c
  7186  0003A8  ECEC  F010         	call	___awmod	;wreg free
  7187  0003AC  501F               	movf	?___awmod,w,c
  7188  0003AE  0100               	movlb	0	; () banked
  7189  0003B0  6FDB               	movwf	_blink& (0+255),b
  7190                           
  7191                           ; BSR set to: 0
  7192                           ;main.c: 791: if (buzz && --buzz)
  7193  0003B2  503A               	movf	_buzz,w,c
  7194  0003B4  B4D8               	btfsc	status,2,c
  7195  0003B6  D006               	goto	i1l497
  7196                           
  7197                           ; BSR set to: 0
  7198  0003B8  0E01               	movlw	1
  7199  0003BA  5E3A               	subwf	_buzz,f,c
  7200  0003BC  B4D8               	btfsc	status,2,c
  7201  0003BE  D002               	goto	i1l497
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;main.c: 792: {
  7205                           ;main.c: 794: LATA5 = 1;
  7206  0003C0  8A89               	bsf	3977,5,c	;volatile
  7207                           
  7208                           ;main.c: 795: }
  7209  0003C2  D007               	goto	i1l454
  7210  0003C4                     i1l497:
  7211                           
  7212                           ; BSR set to: 0
  7213                           ;main.c: 797: else
  7214                           ;main.c: 798: {
  7215                           ;main.c: 799: LATA5 = 0;
  7216  0003C4  9A89               	bcf	3977,5,c	;volatile
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;main.c: 800: }
  7220                           ;main.c: 801: }
  7221                           ;main.c: 803: return;
  7222                           
  7223                           ; BSR set to: 0
  7224  0003C6  D005               	goto	i1l454
  7225  0003C8                     i1l455:
  7226                           
  7227                           ;main.c: 804: }
  7228                           ;main.c: 805: if (EEIE && EEIF)
  7229  0003C8  B8A0               	btfsc	4000,4,c	;volatile
  7230  0003CA  A8A1               	btfss	4001,4,c	;volatile
  7231  0003CC  D002               	goto	i1l454
  7232                           
  7233                           ;main.c: 806: {
  7234                           ;main.c: 807: EEIF = 0;
  7235  0003CE  98A1               	bcf	4001,4,c	;volatile
  7236                           
  7237                           ;main.c: 809: WREN = 0;
  7238  0003D0  94A6               	bcf	4006,2,c	;volatile
  7239  0003D2                     i1l454:
  7240  0003D2  C075  FFF5         	movff	??_ISR_low+21,tablat
  7241  0003D6  C074  FFF8         	movff	??_ISR_low+20,tblptru
  7242  0003DA  C073  FFF7         	movff	??_ISR_low+19,tblptrh
  7243  0003DE  C072  FFF6         	movff	??_ISR_low+18,tblptrl
  7244  0003E2  C071  FFF4         	movff	??_ISR_low+17,prodh
  7245  0003E6  C070  FFF3         	movff	??_ISR_low+16,prodl
  7246  0003EA  C06F  FFDA         	movff	??_ISR_low+15,fsr2h
  7247  0003EE  C06E  FFD9         	movff	??_ISR_low+14,fsr2l
  7248  0003F2  C06D  FFE2         	movff	??_ISR_low+13,fsr1h
  7249  0003F6  C06C  FFE1         	movff	??_ISR_low+12,fsr1l
  7250  0003FA  C06B  FFEA         	movff	??_ISR_low+11,fsr0h
  7251  0003FE  C06A  FFE9         	movff	??_ISR_low+10,fsr0l
  7252  000402  C069  FFFB         	movff	??_ISR_low+9,pclatu
  7253  000406  C068  FFFA         	movff	??_ISR_low+8,pclath
  7254  00040A  C067  FFE0         	movff	??_ISR_low+7,bsr
  7255  00040E  C066  FFE8         	movff	??_ISR_low+6,wreg
  7256  000412  C065  FFD8         	movff	??_ISR_low+5,status
  7257  000416  903D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7258  000418  0010               	retfie	
  7259  00041A                     __end_of_ISR_low:
  7260                           	opt stack 0
  7261                           pclatu	equ	0xFFB
  7262                           pclath	equ	0xFFA
  7263                           tblptru	equ	0xFF8
  7264                           tblptrh	equ	0xFF7
  7265                           tblptrl	equ	0xFF6
  7266                           tablat	equ	0xFF5
  7267                           prodh	equ	0xFF4
  7268                           prodl	equ	0xFF3
  7269                           intcon	equ	0xFF2
  7270                           intcon2	equ	0xFF1
  7271                           postinc0	equ	0xFEE
  7272                           fsr0h	equ	0xFEA
  7273                           fsr0l	equ	0xFE9
  7274                           wreg	equ	0xFE8
  7275                           fsr1h	equ	0xFE2
  7276                           fsr1l	equ	0xFE1
  7277                           bsr	equ	0xFE0
  7278                           indf2	equ	0xFDF
  7279                           postinc2	equ	0xFDE
  7280                           postdec2	equ	0xFDD
  7281                           fsr2h	equ	0xFDA
  7282                           fsr2l	equ	0xFD9
  7283                           status	equ	0xFD8
  7284                           
  7285 ;; *************** function i1_set_digit *****************
  7286 ;; Defined at:
  7287 ;;		line 27 in file "disp.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;  dig             1    wreg     unsigned char 
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;  dig             1   38[COMRAM] unsigned char 
  7292 ;; Return value:  Size  Location     Type
  7293 ;;                  1    wreg      void 
  7294 ;; Registers used:
  7295 ;;		wreg, status,2, status,0, cstack
  7296 ;; Tracked objects:
  7297 ;;		On entry : 0/0
  7298 ;;		On exit  : 0/0
  7299 ;;		Unchanged: 0/0
  7300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7301 ;;      Params:         0       0       0       0       0       0       0       0       0
  7302 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7303 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7304 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7305 ;;Total ram usage:        1 bytes
  7306 ;; Hardware stack levels used:    1
  7307 ;; Hardware stack levels required when called:    3
  7308 ;; This function calls:
  7309 ;;		i1___awdiv
  7310 ;; This function is called by:
  7311 ;;		_ISR_low
  7312 ;; This function uses a non-reentrant model
  7313 ;;
  7314                           
  7315                           	psect	text34
  7316  001BF0                     __ptext34:
  7317                           	opt stack 0
  7318  001BF0                     i1_set_digit:
  7319                           	opt stack 21
  7320                           
  7321                           ;incstack = 0
  7322                           ;i1set_digit@dig stored from wreg
  7323  001BF0  6E27               	movwf	i1set_digit@dig,c
  7324                           
  7325                           ;disp.c: 48: if (dig & 0b10000000)
  7326  001BF2  AE27               	btfss	i1set_digit@dig,7,c
  7327  001BF4  D002               	goto	i1l3242
  7328                           
  7329                           ;disp.c: 49: dig = 0;
  7330  001BF6  0E00               	movlw	0
  7331  001BF8  6E27               	movwf	i1set_digit@dig,c
  7332  001BFA                     i1l3242:
  7333                           
  7334                           ;disp.c: 51: LATB2 = (dig / 0b1);
  7335  001BFA  A027               	btfss	i1set_digit@dig,0,c
  7336  001BFC  D002               	goto	i1u419_20
  7337  001BFE  848A               	bsf	3978,2,c	;volatile
  7338  001C00  D001               	goto	i1l3244
  7339  001C02                     i1u419_20:
  7340  001C02  948A               	bcf	3978,2,c	;volatile
  7341  001C04                     i1l3244:
  7342                           
  7343                           ;disp.c: 52: LATB5 = (dig / 0b10);
  7344  001C04  C027  F01F         	movff	i1set_digit@dig,i1___awdiv@dividend
  7345  001C08  6A20               	clrf	i1___awdiv@dividend+1,c
  7346  001C0A  0E00               	movlw	0
  7347  001C0C  6E22               	movwf	i1___awdiv@divisor+1,c
  7348  001C0E  0E02               	movlw	2
  7349  001C10  6E21               	movwf	i1___awdiv@divisor,c
  7350  001C12  EC32  F010         	call	i1___awdiv	;wreg free
  7351  001C16  301F               	rrcf	?i1___awdiv,w,c
  7352  001C18  A0D8               	btfss	status,0,c
  7353  001C1A  D002               	goto	i1u421_20
  7354  001C1C  8A8A               	bsf	3978,5,c	;volatile
  7355  001C1E  D001               	goto	i1l3246
  7356  001C20                     i1u421_20:
  7357  001C20  9A8A               	bcf	3978,5,c	;volatile
  7358  001C22                     i1l3246:
  7359                           
  7360                           ;disp.c: 53: LATB4 = (dig / 0b100);
  7361  001C22  C027  F01F         	movff	i1set_digit@dig,i1___awdiv@dividend
  7362  001C26  6A20               	clrf	i1___awdiv@dividend+1,c
  7363  001C28  0E00               	movlw	0
  7364  001C2A  6E22               	movwf	i1___awdiv@divisor+1,c
  7365  001C2C  0E04               	movlw	4
  7366  001C2E  6E21               	movwf	i1___awdiv@divisor,c
  7367  001C30  EC32  F010         	call	i1___awdiv	;wreg free
  7368  001C34  301F               	rrcf	?i1___awdiv,w,c
  7369  001C36  A0D8               	btfss	status,0,c
  7370  001C38  D002               	goto	i1u423_20
  7371  001C3A  888A               	bsf	3978,4,c	;volatile
  7372  001C3C  D001               	goto	i1l3248
  7373  001C3E                     i1u423_20:
  7374  001C3E  988A               	bcf	3978,4,c	;volatile
  7375  001C40                     i1l3248:
  7376                           
  7377                           ;disp.c: 54: LATB0 = (dig / 0b1000);
  7378  001C40  C027  F01F         	movff	i1set_digit@dig,i1___awdiv@dividend
  7379  001C44  6A20               	clrf	i1___awdiv@dividend+1,c
  7380  001C46  0E00               	movlw	0
  7381  001C48  6E22               	movwf	i1___awdiv@divisor+1,c
  7382  001C4A  0E08               	movlw	8
  7383  001C4C  6E21               	movwf	i1___awdiv@divisor,c
  7384  001C4E  EC32  F010         	call	i1___awdiv	;wreg free
  7385  001C52  301F               	rrcf	?i1___awdiv,w,c
  7386  001C54  A0D8               	btfss	status,0,c
  7387  001C56  D002               	goto	i1u425_20
  7388  001C58  808A               	bsf	3978,0,c	;volatile
  7389  001C5A  D001               	goto	i1l3250
  7390  001C5C                     i1u425_20:
  7391  001C5C  908A               	bcf	3978,0,c	;volatile
  7392  001C5E                     i1l3250:
  7393                           
  7394                           ;disp.c: 55: LATB4 = (dig / 0b10000);
  7395  001C5E  C027  F01F         	movff	i1set_digit@dig,i1___awdiv@dividend
  7396  001C62  6A20               	clrf	i1___awdiv@dividend+1,c
  7397  001C64  0E00               	movlw	0
  7398  001C66  6E22               	movwf	i1___awdiv@divisor+1,c
  7399  001C68  0E10               	movlw	16
  7400  001C6A  6E21               	movwf	i1___awdiv@divisor,c
  7401  001C6C  EC32  F010         	call	i1___awdiv	;wreg free
  7402  001C70  301F               	rrcf	?i1___awdiv,w,c
  7403  001C72  A0D8               	btfss	status,0,c
  7404  001C74  D002               	goto	i1u427_20
  7405  001C76  888A               	bsf	3978,4,c	;volatile
  7406  001C78  D001               	goto	i1l3252
  7407  001C7A                     i1u427_20:
  7408  001C7A  988A               	bcf	3978,4,c	;volatile
  7409  001C7C                     i1l3252:
  7410                           
  7411                           ;disp.c: 56: LATB1 = (dig / 0b100000);
  7412  001C7C  C027  F01F         	movff	i1set_digit@dig,i1___awdiv@dividend
  7413  001C80  6A20               	clrf	i1___awdiv@dividend+1,c
  7414  001C82  0E00               	movlw	0
  7415  001C84  6E22               	movwf	i1___awdiv@divisor+1,c
  7416  001C86  0E20               	movlw	32
  7417  001C88  6E21               	movwf	i1___awdiv@divisor,c
  7418  001C8A  EC32  F010         	call	i1___awdiv	;wreg free
  7419  001C8E  301F               	rrcf	?i1___awdiv,w,c
  7420  001C90  A0D8               	btfss	status,0,c
  7421  001C92  D002               	goto	i1u429_20
  7422  001C94  828A               	bsf	3978,1,c	;volatile
  7423  001C96  D001               	goto	i1l3254
  7424  001C98                     i1u429_20:
  7425  001C98  928A               	bcf	3978,1,c	;volatile
  7426  001C9A                     i1l3254:
  7427                           
  7428                           ;disp.c: 57: LATA6 = (dig / 0b1000000);
  7429  001C9A  C027  F01F         	movff	i1set_digit@dig,i1___awdiv@dividend
  7430  001C9E  6A20               	clrf	i1___awdiv@dividend+1,c
  7431  001CA0  0E00               	movlw	0
  7432  001CA2  6E22               	movwf	i1___awdiv@divisor+1,c
  7433  001CA4  0E40               	movlw	64
  7434  001CA6  6E21               	movwf	i1___awdiv@divisor,c
  7435  001CA8  EC32  F010         	call	i1___awdiv	;wreg free
  7436  001CAC  301F               	rrcf	?i1___awdiv,w,c
  7437  001CAE  A0D8               	btfss	status,0,c
  7438  001CB0  D002               	goto	i1u431_20
  7439  001CB2  8C89               	bsf	3977,6,c	;volatile
  7440  001CB4  0012               	return	
  7441  001CB6                     i1u431_20:
  7442  001CB6  9C89               	bcf	3977,6,c	;volatile
  7443  001CB8  0012               	return		;funcret
  7444  001CBA                     __end_ofi1_set_digit:
  7445                           	opt stack 0
  7446                           pclatu	equ	0xFFB
  7447                           pclath	equ	0xFFA
  7448                           tblptru	equ	0xFF8
  7449                           tblptrh	equ	0xFF7
  7450                           tblptrl	equ	0xFF6
  7451                           tablat	equ	0xFF5
  7452                           prodh	equ	0xFF4
  7453                           prodl	equ	0xFF3
  7454                           intcon	equ	0xFF2
  7455                           intcon2	equ	0xFF1
  7456                           postinc0	equ	0xFEE
  7457                           fsr0h	equ	0xFEA
  7458                           fsr0l	equ	0xFE9
  7459                           wreg	equ	0xFE8
  7460                           fsr1h	equ	0xFE2
  7461                           fsr1l	equ	0xFE1
  7462                           bsr	equ	0xFE0
  7463                           indf2	equ	0xFDF
  7464                           postinc2	equ	0xFDE
  7465                           postdec2	equ	0xFDD
  7466                           fsr2h	equ	0xFDA
  7467                           fsr2l	equ	0xFD9
  7468                           status	equ	0xFD8
  7469                           
  7470 ;; *************** function i1_set_LEDs *****************
  7471 ;; Defined at:
  7472 ;;		line 511 in file "main.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;  mask            1    wreg     unsigned char 
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;  mask            1   38[COMRAM] unsigned char 
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  1    wreg      void 
  7479 ;; Registers used:
  7480 ;;		wreg, status,2, status,0, cstack
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7486 ;;      Params:         0       0       0       0       0       0       0       0       0
  7487 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7488 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7489 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7490 ;;Total ram usage:        1 bytes
  7491 ;; Hardware stack levels used:    1
  7492 ;; Hardware stack levels required when called:    3
  7493 ;; This function calls:
  7494 ;;		i1___awdiv
  7495 ;;		i1_set_key_led_disp_tris
  7496 ;; This function is called by:
  7497 ;;		_ISR_low
  7498 ;; This function uses a non-reentrant model
  7499 ;;
  7500                           
  7501                           	psect	text35
  7502  001CBA                     __ptext35:
  7503                           	opt stack 0
  7504  001CBA                     i1_set_LEDs:
  7505                           	opt stack 21
  7506                           
  7507                           ;incstack = 0
  7508                           ;i1set_LEDs@mask stored from wreg
  7509  001CBA  6E27               	movwf	i1set_LEDs@mask,c
  7510                           
  7511                           ;main.c: 513: set_key_led_disp_tris(0);
  7512  001CBC  0E00               	movlw	0
  7513  001CBE  ECA3  F011         	call	i1_set_key_led_disp_tris
  7514                           
  7515                           ;main.c: 514: LATA2 = 0;
  7516  001CC2  9489               	bcf	3977,2,c	;volatile
  7517                           
  7518                           ;main.c: 517: LATA6 = mask / 0b1;
  7519  001CC4  A027               	btfss	i1set_LEDs@mask,0,c
  7520  001CC6  D002               	goto	i1u404_20
  7521  001CC8  8C89               	bsf	3977,6,c	;volatile
  7522  001CCA  D001               	goto	i1l3210
  7523  001CCC                     i1u404_20:
  7524  001CCC  9C89               	bcf	3977,6,c	;volatile
  7525  001CCE                     i1l3210:
  7526                           
  7527                           ;main.c: 518: LATB1 = mask / 0b10;
  7528  001CCE  C027  F01F         	movff	i1set_LEDs@mask,i1___awdiv@dividend
  7529  001CD2  6A20               	clrf	i1___awdiv@dividend+1,c
  7530  001CD4  0E00               	movlw	0
  7531  001CD6  6E22               	movwf	i1___awdiv@divisor+1,c
  7532  001CD8  0E02               	movlw	2
  7533  001CDA  6E21               	movwf	i1___awdiv@divisor,c
  7534  001CDC  EC32  F010         	call	i1___awdiv	;wreg free
  7535  001CE0  301F               	rrcf	?i1___awdiv,w,c
  7536  001CE2  A0D8               	btfss	status,0,c
  7537  001CE4  D002               	goto	i1u406_20
  7538  001CE6  828A               	bsf	3978,1,c	;volatile
  7539  001CE8  D001               	goto	i1l3212
  7540  001CEA                     i1u406_20:
  7541  001CEA  928A               	bcf	3978,1,c	;volatile
  7542  001CEC                     i1l3212:
  7543                           
  7544                           ;main.c: 519: LATB2 = mask / 0b100;
  7545  001CEC  C027  F01F         	movff	i1set_LEDs@mask,i1___awdiv@dividend
  7546  001CF0  6A20               	clrf	i1___awdiv@dividend+1,c
  7547  001CF2  0E00               	movlw	0
  7548  001CF4  6E22               	movwf	i1___awdiv@divisor+1,c
  7549  001CF6  0E04               	movlw	4
  7550  001CF8  6E21               	movwf	i1___awdiv@divisor,c
  7551  001CFA  EC32  F010         	call	i1___awdiv	;wreg free
  7552  001CFE  301F               	rrcf	?i1___awdiv,w,c
  7553  001D00  A0D8               	btfss	status,0,c
  7554  001D02  D002               	goto	i1u408_20
  7555  001D04  848A               	bsf	3978,2,c	;volatile
  7556  001D06  D001               	goto	i1l3214
  7557  001D08                     i1u408_20:
  7558  001D08  948A               	bcf	3978,2,c	;volatile
  7559  001D0A                     i1l3214:
  7560                           
  7561                           ;main.c: 520: LATB3 = mask / 0b1000;
  7562  001D0A  C027  F01F         	movff	i1set_LEDs@mask,i1___awdiv@dividend
  7563  001D0E  6A20               	clrf	i1___awdiv@dividend+1,c
  7564  001D10  0E00               	movlw	0
  7565  001D12  6E22               	movwf	i1___awdiv@divisor+1,c
  7566  001D14  0E08               	movlw	8
  7567  001D16  6E21               	movwf	i1___awdiv@divisor,c
  7568  001D18  EC32  F010         	call	i1___awdiv	;wreg free
  7569  001D1C  301F               	rrcf	?i1___awdiv,w,c
  7570  001D1E  A0D8               	btfss	status,0,c
  7571  001D20  D002               	goto	i1u410_20
  7572  001D22  868A               	bsf	3978,3,c	;volatile
  7573  001D24  D001               	goto	i1l3216
  7574  001D26                     i1u410_20:
  7575  001D26  968A               	bcf	3978,3,c	;volatile
  7576  001D28                     i1l3216:
  7577                           
  7578                           ;main.c: 521: LATB4 = mask / 0b10000;
  7579  001D28  C027  F01F         	movff	i1set_LEDs@mask,i1___awdiv@dividend
  7580  001D2C  6A20               	clrf	i1___awdiv@dividend+1,c
  7581  001D2E  0E00               	movlw	0
  7582  001D30  6E22               	movwf	i1___awdiv@divisor+1,c
  7583  001D32  0E10               	movlw	16
  7584  001D34  6E21               	movwf	i1___awdiv@divisor,c
  7585  001D36  EC32  F010         	call	i1___awdiv	;wreg free
  7586  001D3A  301F               	rrcf	?i1___awdiv,w,c
  7587  001D3C  A0D8               	btfss	status,0,c
  7588  001D3E  D002               	goto	i1u412_20
  7589  001D40  888A               	bsf	3978,4,c	;volatile
  7590  001D42  D001               	goto	i1l3218
  7591  001D44                     i1u412_20:
  7592  001D44  988A               	bcf	3978,4,c	;volatile
  7593  001D46                     i1l3218:
  7594                           
  7595                           ;main.c: 522: LATB5 = mask / 0b100000;
  7596  001D46  C027  F01F         	movff	i1set_LEDs@mask,i1___awdiv@dividend
  7597  001D4A  6A20               	clrf	i1___awdiv@dividend+1,c
  7598  001D4C  0E00               	movlw	0
  7599  001D4E  6E22               	movwf	i1___awdiv@divisor+1,c
  7600  001D50  0E20               	movlw	32
  7601  001D52  6E21               	movwf	i1___awdiv@divisor,c
  7602  001D54  EC32  F010         	call	i1___awdiv	;wreg free
  7603  001D58  301F               	rrcf	?i1___awdiv,w,c
  7604  001D5A  A0D8               	btfss	status,0,c
  7605  001D5C  D002               	goto	i1u414_20
  7606  001D5E  8A8A               	bsf	3978,5,c	;volatile
  7607  001D60  D001               	goto	i1l3220
  7608  001D62                     i1u414_20:
  7609  001D62  9A8A               	bcf	3978,5,c	;volatile
  7610  001D64                     i1l3220:
  7611                           
  7612                           ;main.c: 523: LATB0 = mask / 0b1000000;
  7613  001D64  C027  F01F         	movff	i1set_LEDs@mask,i1___awdiv@dividend
  7614  001D68  6A20               	clrf	i1___awdiv@dividend+1,c
  7615  001D6A  0E00               	movlw	0
  7616  001D6C  6E22               	movwf	i1___awdiv@divisor+1,c
  7617  001D6E  0E40               	movlw	64
  7618  001D70  6E21               	movwf	i1___awdiv@divisor,c
  7619  001D72  EC32  F010         	call	i1___awdiv	;wreg free
  7620  001D76  301F               	rrcf	?i1___awdiv,w,c
  7621  001D78  A0D8               	btfss	status,0,c
  7622  001D7A  D002               	goto	i1u416_20
  7623  001D7C  808A               	bsf	3978,0,c	;volatile
  7624  001D7E  0012               	return	
  7625  001D80                     i1u416_20:
  7626  001D80  908A               	bcf	3978,0,c	;volatile
  7627  001D82  0012               	return		;funcret
  7628  001D84                     __end_ofi1_set_LEDs:
  7629                           	opt stack 0
  7630                           pclatu	equ	0xFFB
  7631                           pclath	equ	0xFFA
  7632                           tblptru	equ	0xFF8
  7633                           tblptrh	equ	0xFF7
  7634                           tblptrl	equ	0xFF6
  7635                           tablat	equ	0xFF5
  7636                           prodh	equ	0xFF4
  7637                           prodl	equ	0xFF3
  7638                           intcon	equ	0xFF2
  7639                           intcon2	equ	0xFF1
  7640                           postinc0	equ	0xFEE
  7641                           fsr0h	equ	0xFEA
  7642                           fsr0l	equ	0xFE9
  7643                           wreg	equ	0xFE8
  7644                           fsr1h	equ	0xFE2
  7645                           fsr1l	equ	0xFE1
  7646                           bsr	equ	0xFE0
  7647                           indf2	equ	0xFDF
  7648                           postinc2	equ	0xFDE
  7649                           postdec2	equ	0xFDD
  7650                           fsr2h	equ	0xFDA
  7651                           fsr2l	equ	0xFD9
  7652                           status	equ	0xFD8
  7653                           
  7654 ;; *************** function i1___awdiv *****************
  7655 ;; Defined at:
  7656 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/awdiv.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  dividend        2   30[COMRAM] int 
  7659 ;;  divisor         2   32[COMRAM] int 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  __awdiv         2   36[COMRAM] int 
  7662 ;;  __awdiv         1   35[COMRAM] unsigned char 
  7663 ;;  __awdiv         1   34[COMRAM] unsigned char 
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  2   30[COMRAM] int 
  7666 ;; Registers used:
  7667 ;;		wreg, status,2, status,0
  7668 ;; Tracked objects:
  7669 ;;		On entry : 0/0
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7673 ;;      Params:         4       0       0       0       0       0       0       0       0
  7674 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7675 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7676 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7677 ;;Total ram usage:        8 bytes
  7678 ;; Hardware stack levels used:    1
  7679 ;; Hardware stack levels required when called:    2
  7680 ;; This function calls:
  7681 ;;		Nothing
  7682 ;; This function is called by:
  7683 ;;		i1_set_LEDs
  7684 ;;		i1_set_digit
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           	psect	text36
  7689  002064                     __ptext36:
  7690                           	opt stack 0
  7691  002064                     i1___awdiv:
  7692                           	opt stack 21
  7693                           
  7694                           ;incstack = 0
  7695  002064  0E00               	movlw	0
  7696  002066  6E24               	movwf	i1___awdiv@sign,c
  7697  002068  AE22               	btfss	i1___awdiv@divisor+1,7,c
  7698  00206A  D006               	goto	i1l2904
  7699  00206C  6C21               	negf	i1___awdiv@divisor,c
  7700  00206E  1E22               	comf	i1___awdiv@divisor+1,f,c
  7701  002070  B0D8               	btfsc	status,0,c
  7702  002072  2A22               	incf	i1___awdiv@divisor+1,f,c
  7703  002074  0E01               	movlw	1
  7704  002076  6E24               	movwf	i1___awdiv@sign,c
  7705  002078                     i1l2904:
  7706  002078  AE20               	btfss	i1___awdiv@dividend+1,7,c
  7707  00207A  D006               	goto	i1l2910
  7708  00207C  6C1F               	negf	i1___awdiv@dividend,c
  7709  00207E  1E20               	comf	i1___awdiv@dividend+1,f,c
  7710  002080  B0D8               	btfsc	status,0,c
  7711  002082  2A20               	incf	i1___awdiv@dividend+1,f,c
  7712  002084  0E01               	movlw	1
  7713  002086  1A24               	xorwf	i1___awdiv@sign,f,c
  7714  002088                     i1l2910:
  7715  002088  0E00               	movlw	0
  7716  00208A  6E26               	movwf	i1___awdiv@quotient+1,c
  7717  00208C  0E00               	movlw	0
  7718  00208E  6E25               	movwf	i1___awdiv@quotient,c
  7719  002090  5021               	movf	i1___awdiv@divisor,w,c
  7720  002092  1022               	iorwf	i1___awdiv@divisor+1,w,c
  7721  002094  B4D8               	btfsc	status,2,c
  7722  002096  D01C               	goto	i1l2932
  7723  002098  0E01               	movlw	1
  7724  00209A  6E23               	movwf	i1___awdiv@counter,c
  7725  00209C  D004               	goto	i1l2918
  7726  00209E                     i1l2916:
  7727  00209E  90D8               	bcf	status,0,c
  7728  0020A0  3621               	rlcf	i1___awdiv@divisor,f,c
  7729  0020A2  3622               	rlcf	i1___awdiv@divisor+1,f,c
  7730  0020A4  2A23               	incf	i1___awdiv@counter,f,c
  7731  0020A6                     i1l2918:
  7732  0020A6  AE22               	btfss	i1___awdiv@divisor+1,7,c
  7733  0020A8  D7FA               	goto	i1l2916
  7734  0020AA                     i1l2920:
  7735  0020AA  90D8               	bcf	status,0,c
  7736  0020AC  3625               	rlcf	i1___awdiv@quotient,f,c
  7737  0020AE  3626               	rlcf	i1___awdiv@quotient+1,f,c
  7738  0020B0  5021               	movf	i1___awdiv@divisor,w,c
  7739  0020B2  5C1F               	subwf	i1___awdiv@dividend,w,c
  7740  0020B4  5022               	movf	i1___awdiv@divisor+1,w,c
  7741  0020B6  5820               	subwfb	i1___awdiv@dividend+1,w,c
  7742  0020B8  A0D8               	btfss	status,0,c
  7743  0020BA  D005               	goto	i1l2928
  7744  0020BC  5021               	movf	i1___awdiv@divisor,w,c
  7745  0020BE  5E1F               	subwf	i1___awdiv@dividend,f,c
  7746  0020C0  5022               	movf	i1___awdiv@divisor+1,w,c
  7747  0020C2  5A20               	subwfb	i1___awdiv@dividend+1,f,c
  7748  0020C4  8025               	bsf	i1___awdiv@quotient,0,c
  7749  0020C6                     i1l2928:
  7750  0020C6  90D8               	bcf	status,0,c
  7751  0020C8  3222               	rrcf	i1___awdiv@divisor+1,f,c
  7752  0020CA  3221               	rrcf	i1___awdiv@divisor,f,c
  7753  0020CC  2E23               	decfsz	i1___awdiv@counter,f,c
  7754  0020CE  D7ED               	goto	i1l2920
  7755  0020D0                     i1l2932:
  7756  0020D0  5024               	movf	i1___awdiv@sign,w,c
  7757  0020D2  B4D8               	btfsc	status,2,c
  7758  0020D4  D004               	goto	i1l2936
  7759  0020D6  6C25               	negf	i1___awdiv@quotient,c
  7760  0020D8  1E26               	comf	i1___awdiv@quotient+1,f,c
  7761  0020DA  B0D8               	btfsc	status,0,c
  7762  0020DC  2A26               	incf	i1___awdiv@quotient+1,f,c
  7763  0020DE                     i1l2936:
  7764  0020DE  C025  F01F         	movff	i1___awdiv@quotient,?i1___awdiv
  7765  0020E2  C026  F020         	movff	i1___awdiv@quotient+1,?i1___awdiv+1
  7766  0020E6  0012               	return	
  7767  0020E8                     __end_ofi1___awdiv:
  7768                           	opt stack 0
  7769                           pclatu	equ	0xFFB
  7770                           pclath	equ	0xFFA
  7771                           tblptru	equ	0xFF8
  7772                           tblptrh	equ	0xFF7
  7773                           tblptrl	equ	0xFF6
  7774                           tablat	equ	0xFF5
  7775                           prodh	equ	0xFF4
  7776                           prodl	equ	0xFF3
  7777                           intcon	equ	0xFF2
  7778                           intcon2	equ	0xFF1
  7779                           postinc0	equ	0xFEE
  7780                           fsr0h	equ	0xFEA
  7781                           fsr0l	equ	0xFE9
  7782                           wreg	equ	0xFE8
  7783                           fsr1h	equ	0xFE2
  7784                           fsr1l	equ	0xFE1
  7785                           bsr	equ	0xFE0
  7786                           indf2	equ	0xFDF
  7787                           postinc2	equ	0xFDE
  7788                           postdec2	equ	0xFDD
  7789                           fsr2h	equ	0xFDA
  7790                           fsr2l	equ	0xFD9
  7791                           status	equ	0xFD8
  7792                           
  7793 ;; *************** function i1___aldiv *****************
  7794 ;; Defined at:
  7795 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/aldiv.c"
  7796 ;; Parameters:    Size  Location     Type
  7797 ;;  dividend        4   30[COMRAM] long 
  7798 ;;  divisor         4   34[COMRAM] long 
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;  __aldiv         4   40[COMRAM] long 
  7801 ;;  __aldiv         1   39[COMRAM] unsigned char 
  7802 ;;  __aldiv         1   38[COMRAM] unsigned char 
  7803 ;; Return value:  Size  Location     Type
  7804 ;;                  4   30[COMRAM] long 
  7805 ;; Registers used:
  7806 ;;		wreg, status,2, status,0
  7807 ;; Tracked objects:
  7808 ;;		On entry : 0/0
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7812 ;;      Params:         8       0       0       0       0       0       0       0       0
  7813 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7814 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7815 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7816 ;;Total ram usage:       14 bytes
  7817 ;; Hardware stack levels used:    1
  7818 ;; Hardware stack levels required when called:    2
  7819 ;; This function calls:
  7820 ;;		Nothing
  7821 ;; This function is called by:
  7822 ;;		_ISR_low
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           	psect	text37
  7827  001B24                     __ptext37:
  7828                           	opt stack 0
  7829  001B24                     i1___aldiv:
  7830                           	opt stack 22
  7831                           
  7832                           ;incstack = 0
  7833  001B24  0E00               	movlw	0
  7834  001B26  6E28               	movwf	i1___aldiv@sign,c
  7835  001B28  AE26               	btfss	i1___aldiv@divisor+3,7,c
  7836  001B2A  D00A               	goto	i1l3264
  7837  001B2C  1E26               	comf	i1___aldiv@divisor+3,f,c
  7838  001B2E  1E25               	comf	i1___aldiv@divisor+2,f,c
  7839  001B30  1E24               	comf	i1___aldiv@divisor+1,f,c
  7840  001B32  6C23               	negf	i1___aldiv@divisor,c
  7841  001B34  0E00               	movlw	0
  7842  001B36  2224               	addwfc	i1___aldiv@divisor+1,f,c
  7843  001B38  2225               	addwfc	i1___aldiv@divisor+2,f,c
  7844  001B3A  2226               	addwfc	i1___aldiv@divisor+3,f,c
  7845  001B3C  0E01               	movlw	1
  7846  001B3E  6E28               	movwf	i1___aldiv@sign,c
  7847  001B40                     i1l3264:
  7848  001B40  AE22               	btfss	i1___aldiv@dividend+3,7,c
  7849  001B42  D00A               	goto	i1l3270
  7850  001B44  1E22               	comf	i1___aldiv@dividend+3,f,c
  7851  001B46  1E21               	comf	i1___aldiv@dividend+2,f,c
  7852  001B48  1E20               	comf	i1___aldiv@dividend+1,f,c
  7853  001B4A  6C1F               	negf	i1___aldiv@dividend,c
  7854  001B4C  0E00               	movlw	0
  7855  001B4E  2220               	addwfc	i1___aldiv@dividend+1,f,c
  7856  001B50  2221               	addwfc	i1___aldiv@dividend+2,f,c
  7857  001B52  2222               	addwfc	i1___aldiv@dividend+3,f,c
  7858  001B54  0E01               	movlw	1
  7859  001B56  1A28               	xorwf	i1___aldiv@sign,f,c
  7860  001B58                     i1l3270:
  7861  001B58  0E00               	movlw	0
  7862  001B5A  6E29               	movwf	i1___aldiv@quotient,c
  7863  001B5C  0E00               	movlw	0
  7864  001B5E  6E2A               	movwf	i1___aldiv@quotient+1,c
  7865  001B60  0E00               	movlw	0
  7866  001B62  6E2B               	movwf	i1___aldiv@quotient+2,c
  7867  001B64  0E00               	movlw	0
  7868  001B66  6E2C               	movwf	i1___aldiv@quotient+3,c
  7869  001B68  5023               	movf	i1___aldiv@divisor,w,c
  7870  001B6A  1024               	iorwf	i1___aldiv@divisor+1,w,c
  7871  001B6C  1025               	iorwf	i1___aldiv@divisor+2,w,c
  7872  001B6E  1026               	iorwf	i1___aldiv@divisor+3,w,c
  7873  001B70  B4D8               	btfsc	status,2,c
  7874  001B72  D02A               	goto	i1l3292
  7875  001B74  0E01               	movlw	1
  7876  001B76  6E27               	movwf	i1___aldiv@counter,c
  7877  001B78  D006               	goto	i1l3278
  7878  001B7A                     i1l3276:
  7879  001B7A  90D8               	bcf	status,0,c
  7880  001B7C  3623               	rlcf	i1___aldiv@divisor,f,c
  7881  001B7E  3624               	rlcf	i1___aldiv@divisor+1,f,c
  7882  001B80  3625               	rlcf	i1___aldiv@divisor+2,f,c
  7883  001B82  3626               	rlcf	i1___aldiv@divisor+3,f,c
  7884  001B84  2A27               	incf	i1___aldiv@counter,f,c
  7885  001B86                     i1l3278:
  7886  001B86  AE26               	btfss	i1___aldiv@divisor+3,7,c
  7887  001B88  D7F8               	goto	i1l3276
  7888  001B8A                     i1l3280:
  7889  001B8A  90D8               	bcf	status,0,c
  7890  001B8C  3629               	rlcf	i1___aldiv@quotient,f,c
  7891  001B8E  362A               	rlcf	i1___aldiv@quotient+1,f,c
  7892  001B90  362B               	rlcf	i1___aldiv@quotient+2,f,c
  7893  001B92  362C               	rlcf	i1___aldiv@quotient+3,f,c
  7894  001B94  5023               	movf	i1___aldiv@divisor,w,c
  7895  001B96  5C1F               	subwf	i1___aldiv@dividend,w,c
  7896  001B98  5024               	movf	i1___aldiv@divisor+1,w,c
  7897  001B9A  5820               	subwfb	i1___aldiv@dividend+1,w,c
  7898  001B9C  5025               	movf	i1___aldiv@divisor+2,w,c
  7899  001B9E  5821               	subwfb	i1___aldiv@dividend+2,w,c
  7900  001BA0  5026               	movf	i1___aldiv@divisor+3,w,c
  7901  001BA2  5822               	subwfb	i1___aldiv@dividend+3,w,c
  7902  001BA4  A0D8               	btfss	status,0,c
  7903  001BA6  D009               	goto	i1l3288
  7904  001BA8  5023               	movf	i1___aldiv@divisor,w,c
  7905  001BAA  5E1F               	subwf	i1___aldiv@dividend,f,c
  7906  001BAC  5024               	movf	i1___aldiv@divisor+1,w,c
  7907  001BAE  5A20               	subwfb	i1___aldiv@dividend+1,f,c
  7908  001BB0  5025               	movf	i1___aldiv@divisor+2,w,c
  7909  001BB2  5A21               	subwfb	i1___aldiv@dividend+2,f,c
  7910  001BB4  5026               	movf	i1___aldiv@divisor+3,w,c
  7911  001BB6  5A22               	subwfb	i1___aldiv@dividend+3,f,c
  7912  001BB8  8029               	bsf	i1___aldiv@quotient,0,c
  7913  001BBA                     i1l3288:
  7914  001BBA  90D8               	bcf	status,0,c
  7915  001BBC  3226               	rrcf	i1___aldiv@divisor+3,f,c
  7916  001BBE  3225               	rrcf	i1___aldiv@divisor+2,f,c
  7917  001BC0  3224               	rrcf	i1___aldiv@divisor+1,f,c
  7918  001BC2  3223               	rrcf	i1___aldiv@divisor,f,c
  7919  001BC4  2E27               	decfsz	i1___aldiv@counter,f,c
  7920  001BC6  D7E1               	goto	i1l3280
  7921  001BC8                     i1l3292:
  7922  001BC8  5028               	movf	i1___aldiv@sign,w,c
  7923  001BCA  B4D8               	btfsc	status,2,c
  7924  001BCC  D008               	goto	i1l3296
  7925  001BCE  1E2C               	comf	i1___aldiv@quotient+3,f,c
  7926  001BD0  1E2B               	comf	i1___aldiv@quotient+2,f,c
  7927  001BD2  1E2A               	comf	i1___aldiv@quotient+1,f,c
  7928  001BD4  6C29               	negf	i1___aldiv@quotient,c
  7929  001BD6  0E00               	movlw	0
  7930  001BD8  222A               	addwfc	i1___aldiv@quotient+1,f,c
  7931  001BDA  222B               	addwfc	i1___aldiv@quotient+2,f,c
  7932  001BDC  222C               	addwfc	i1___aldiv@quotient+3,f,c
  7933  001BDE                     i1l3296:
  7934  001BDE  C029  F01F         	movff	i1___aldiv@quotient,?i1___aldiv
  7935  001BE2  C02A  F020         	movff	i1___aldiv@quotient+1,?i1___aldiv+1
  7936  001BE6  C02B  F021         	movff	i1___aldiv@quotient+2,?i1___aldiv+2
  7937  001BEA  C02C  F022         	movff	i1___aldiv@quotient+3,?i1___aldiv+3
  7938  001BEE  0012               	return	
  7939  001BF0                     __end_ofi1___aldiv:
  7940                           	opt stack 0
  7941                           pclatu	equ	0xFFB
  7942                           pclath	equ	0xFFA
  7943                           tblptru	equ	0xFF8
  7944                           tblptrh	equ	0xFF7
  7945                           tblptrl	equ	0xFF6
  7946                           tablat	equ	0xFF5
  7947                           prodh	equ	0xFF4
  7948                           prodl	equ	0xFF3
  7949                           intcon	equ	0xFF2
  7950                           intcon2	equ	0xFF1
  7951                           postinc0	equ	0xFEE
  7952                           fsr0h	equ	0xFEA
  7953                           fsr0l	equ	0xFE9
  7954                           wreg	equ	0xFE8
  7955                           fsr1h	equ	0xFE2
  7956                           fsr1l	equ	0xFE1
  7957                           bsr	equ	0xFE0
  7958                           indf2	equ	0xFDF
  7959                           postinc2	equ	0xFDE
  7960                           postdec2	equ	0xFDD
  7961                           fsr2h	equ	0xFDA
  7962                           fsr2l	equ	0xFD9
  7963                           status	equ	0xFD8
  7964                           
  7965 ;; *************** function _sample_inputs *****************
  7966 ;; Defined at:
  7967 ;;		line 490 in file "main.c"
  7968 ;; Parameters:    Size  Location     Type
  7969 ;;		None
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;  ret             1   31[COMRAM] unsigned char 
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  1    wreg      unsigned char 
  7974 ;; Registers used:
  7975 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7981 ;;      Params:         0       0       0       0       0       0       0       0       0
  7982 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7983 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7984 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7985 ;;Total ram usage:        1 bytes
  7986 ;; Hardware stack levels used:    1
  7987 ;; Hardware stack levels required when called:    3
  7988 ;; This function calls:
  7989 ;;		i1_set_key_led_disp_tris
  7990 ;; This function is called by:
  7991 ;;		_ISR_low
  7992 ;; This function uses a non-reentrant model
  7993 ;;
  7994                           
  7995                           	psect	text38
  7996  002168                     __ptext38:
  7997                           	opt stack 0
  7998  002168                     _sample_inputs:
  7999                           	opt stack 21
  8000                           
  8001                           ;main.c: 493: set_key_led_disp_tris(1);
  8002                           
  8003                           ;incstack = 0
  8004  002168  0E01               	movlw	1
  8005  00216A  ECA3  F011         	call	i1_set_key_led_disp_tris
  8006                           
  8007                           ;main.c: 494: unsigned char ret = 0;
  8008  00216E  0E00               	movlw	0
  8009  002170  6E20               	movwf	sample_inputs@ret,c
  8010                           
  8011                           ;main.c: 500: ret |= PORTBbits.RB0 * 0b1;
  8012  002172  A081               	btfss	3969,0,c	;volatile
  8013  002174  D002               	goto	i1u375_20
  8014  002176  0E01               	movlw	1
  8015  002178  D001               	goto	i1u375_26
  8016  00217A                     i1u375_20:
  8017  00217A  0E00               	movlw	0
  8018  00217C                     i1u375_26:
  8019  00217C  0D01               	mullw	1
  8020  00217E  50F3               	movf	prodl,w,c
  8021  002180  1220               	iorwf	sample_inputs@ret,f,c
  8022                           
  8023                           ;main.c: 501: ret |= PORTBbits.RB1 * 0b10;
  8024  002182  A281               	btfss	3969,1,c	;volatile
  8025  002184  D002               	goto	i1u376_20
  8026  002186  0E01               	movlw	1
  8027  002188  D001               	goto	i1u376_26
  8028  00218A                     i1u376_20:
  8029  00218A  0E00               	movlw	0
  8030  00218C                     i1u376_26:
  8031  00218C  0D02               	mullw	2
  8032  00218E  50F3               	movf	prodl,w,c
  8033  002190  1220               	iorwf	sample_inputs@ret,f,c
  8034                           
  8035                           ;main.c: 502: ret |= PORTBbits.RB2 * 0b100;
  8036  002192  A481               	btfss	3969,2,c	;volatile
  8037  002194  D002               	goto	i1u377_20
  8038  002196  0E01               	movlw	1
  8039  002198  D001               	goto	i1u377_26
  8040  00219A                     i1u377_20:
  8041  00219A  0E00               	movlw	0
  8042  00219C                     i1u377_26:
  8043  00219C  0D04               	mullw	4
  8044  00219E  50F3               	movf	prodl,w,c
  8045  0021A0  1220               	iorwf	sample_inputs@ret,f,c
  8046                           
  8047                           ;main.c: 503: ret |= PORTBbits.RB3 * 0b1000;
  8048  0021A2  A681               	btfss	3969,3,c	;volatile
  8049  0021A4  D002               	goto	i1u378_20
  8050  0021A6  0E01               	movlw	1
  8051  0021A8  D001               	goto	i1u378_26
  8052  0021AA                     i1u378_20:
  8053  0021AA  0E00               	movlw	0
  8054  0021AC                     i1u378_26:
  8055  0021AC  0D08               	mullw	8
  8056  0021AE  50F3               	movf	prodl,w,c
  8057  0021B0  1220               	iorwf	sample_inputs@ret,f,c
  8058                           
  8059                           ;main.c: 504: ret |= PORTBbits.RB4 * 0b10000;
  8060  0021B2  A881               	btfss	3969,4,c	;volatile
  8061  0021B4  D002               	goto	i1u379_20
  8062  0021B6  0E01               	movlw	1
  8063  0021B8  D001               	goto	i1u379_26
  8064  0021BA                     i1u379_20:
  8065  0021BA  0E00               	movlw	0
  8066  0021BC                     i1u379_26:
  8067  0021BC  0D10               	mullw	16
  8068  0021BE  50F3               	movf	prodl,w,c
  8069  0021C0  1220               	iorwf	sample_inputs@ret,f,c
  8070                           
  8071                           ;main.c: 505: ret |= PORTBbits.RB5 * 0b100000;
  8072  0021C2  AA81               	btfss	3969,5,c	;volatile
  8073  0021C4  D002               	goto	i1u380_20
  8074  0021C6  0E01               	movlw	1
  8075  0021C8  D001               	goto	i1u380_26
  8076  0021CA                     i1u380_20:
  8077  0021CA  0E00               	movlw	0
  8078  0021CC                     i1u380_26:
  8079  0021CC  0D20               	mullw	32
  8080  0021CE  50F3               	movf	prodl,w,c
  8081  0021D0  1220               	iorwf	sample_inputs@ret,f,c
  8082                           
  8083                           ;main.c: 508: return ~ret;
  8084  0021D2  5020               	movf	sample_inputs@ret,w,c
  8085  0021D4  0AFF               	xorlw	255
  8086  0021D6  0012               	return	
  8087  0021D8                     __end_of_sample_inputs:
  8088                           	opt stack 0
  8089                           pclatu	equ	0xFFB
  8090                           pclath	equ	0xFFA
  8091                           tblptru	equ	0xFF8
  8092                           tblptrh	equ	0xFF7
  8093                           tblptrl	equ	0xFF6
  8094                           tablat	equ	0xFF5
  8095                           prodh	equ	0xFF4
  8096                           prodl	equ	0xFF3
  8097                           intcon	equ	0xFF2
  8098                           intcon2	equ	0xFF1
  8099                           postinc0	equ	0xFEE
  8100                           fsr0h	equ	0xFEA
  8101                           fsr0l	equ	0xFE9
  8102                           wreg	equ	0xFE8
  8103                           fsr1h	equ	0xFE2
  8104                           fsr1l	equ	0xFE1
  8105                           bsr	equ	0xFE0
  8106                           indf2	equ	0xFDF
  8107                           postinc2	equ	0xFDE
  8108                           postdec2	equ	0xFDD
  8109                           fsr2h	equ	0xFDA
  8110                           fsr2l	equ	0xFD9
  8111                           status	equ	0xFD8
  8112                           
  8113 ;; *************** function i1_set_key_led_disp_tris *****************
  8114 ;; Defined at:
  8115 ;;		line 534 in file "main.c"
  8116 ;; Parameters:    Size  Location     Type
  8117 ;;  dir             1    wreg     unsigned char 
  8118 ;; Auto vars:     Size  Location     Type
  8119 ;;  dir             1   30[COMRAM] unsigned char 
  8120 ;; Return value:  Size  Location     Type
  8121 ;;                  1    wreg      void 
  8122 ;; Registers used:
  8123 ;;		wreg
  8124 ;; Tracked objects:
  8125 ;;		On entry : 0/0
  8126 ;;		On exit  : 0/0
  8127 ;;		Unchanged: 0/0
  8128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8129 ;;      Params:         0       0       0       0       0       0       0       0       0
  8130 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8131 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8132 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8133 ;;Total ram usage:        1 bytes
  8134 ;; Hardware stack levels used:    1
  8135 ;; Hardware stack levels required when called:    2
  8136 ;; This function calls:
  8137 ;;		Nothing
  8138 ;; This function is called by:
  8139 ;;		_sample_inputs
  8140 ;;		i1_set_LEDs
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           	psect	text39
  8145  002346                     __ptext39:
  8146                           	opt stack 0
  8147  002346                     i1_set_key_led_disp_tris:
  8148                           	opt stack 21
  8149                           
  8150                           ;incstack = 0
  8151                           ;i1set_key_led_disp_tris@dir stored from wreg
  8152  002346  6E1F               	movwf	i1set_key_led_disp_tris@dir,c
  8153                           
  8154                           ;main.c: 538: TRISA6 = dir;
  8155  002348  A01F               	btfss	i1set_key_led_disp_tris@dir,0,c
  8156  00234A  D002               	goto	i1u342_20
  8157  00234C  8C92               	bsf	3986,6,c	;volatile
  8158  00234E  D001               	goto	i1u343_25
  8159  002350                     i1u342_20:
  8160  002350  9C92               	bcf	3986,6,c	;volatile
  8161  002352                     i1u343_25:
  8162                           
  8163                           ;main.c: 539: TRISB1 = dir;
  8164  002352  A01F               	btfss	i1set_key_led_disp_tris@dir,0,c
  8165  002354  D002               	goto	i1u344_20
  8166  002356  8293               	bsf	3987,1,c	;volatile
  8167  002358  D001               	goto	i1u345_25
  8168  00235A                     i1u344_20:
  8169  00235A  9293               	bcf	3987,1,c	;volatile
  8170  00235C                     i1u345_25:
  8171                           
  8172                           ;main.c: 540: TRISB2 = dir;
  8173  00235C  A01F               	btfss	i1set_key_led_disp_tris@dir,0,c
  8174  00235E  D002               	goto	i1u346_20
  8175  002360  8493               	bsf	3987,2,c	;volatile
  8176  002362  D001               	goto	i1u347_25
  8177  002364                     i1u346_20:
  8178  002364  9493               	bcf	3987,2,c	;volatile
  8179  002366                     i1u347_25:
  8180                           
  8181                           ;main.c: 541: TRISB3 = dir;
  8182  002366  A01F               	btfss	i1set_key_led_disp_tris@dir,0,c
  8183  002368  D002               	goto	i1u348_20
  8184  00236A  8693               	bsf	3987,3,c	;volatile
  8185  00236C  D001               	goto	i1u349_25
  8186  00236E                     i1u348_20:
  8187  00236E  9693               	bcf	3987,3,c	;volatile
  8188  002370                     i1u349_25:
  8189                           
  8190                           ;main.c: 542: TRISB4 = dir;
  8191  002370  A01F               	btfss	i1set_key_led_disp_tris@dir,0,c
  8192  002372  D002               	goto	i1u350_20
  8193  002374  8893               	bsf	3987,4,c	;volatile
  8194  002376  D001               	goto	i1u351_25
  8195  002378                     i1u350_20:
  8196  002378  9893               	bcf	3987,4,c	;volatile
  8197  00237A                     i1u351_25:
  8198                           
  8199                           ;main.c: 543: TRISB5 = dir;
  8200  00237A  A01F               	btfss	i1set_key_led_disp_tris@dir,0,c
  8201  00237C  D002               	goto	i1u352_20
  8202  00237E  8A93               	bsf	3987,5,c	;volatile
  8203  002380  D001               	goto	i1u353_25
  8204  002382                     i1u352_20:
  8205  002382  9A93               	bcf	3987,5,c	;volatile
  8206  002384                     i1u353_25:
  8207                           
  8208                           ;main.c: 544: TRISB0 = dir;
  8209  002384  A01F               	btfss	i1set_key_led_disp_tris@dir,0,c
  8210  002386  D002               	goto	i1u354_20
  8211  002388  8093               	bsf	3987,0,c	;volatile
  8212  00238A  0012               	return	
  8213  00238C                     i1u354_20:
  8214  00238C  9093               	bcf	3987,0,c	;volatile
  8215  00238E  0012               	return		;funcret
  8216  002390                     __end_ofi1_set_key_led_disp_tris:
  8217                           	opt stack 0
  8218                           pclatu	equ	0xFFB
  8219                           pclath	equ	0xFFA
  8220                           tblptru	equ	0xFF8
  8221                           tblptrh	equ	0xFF7
  8222                           tblptrl	equ	0xFF6
  8223                           tablat	equ	0xFF5
  8224                           prodh	equ	0xFF4
  8225                           prodl	equ	0xFF3
  8226                           intcon	equ	0xFF2
  8227                           intcon2	equ	0xFF1
  8228                           postinc0	equ	0xFEE
  8229                           fsr0h	equ	0xFEA
  8230                           fsr0l	equ	0xFE9
  8231                           wreg	equ	0xFE8
  8232                           fsr1h	equ	0xFE2
  8233                           fsr1l	equ	0xFE1
  8234                           bsr	equ	0xFE0
  8235                           indf2	equ	0xFDF
  8236                           postinc2	equ	0xFDE
  8237                           postdec2	equ	0xFDD
  8238                           fsr2h	equ	0xFDA
  8239                           fsr2l	equ	0xFD9
  8240                           status	equ	0xFD8
  8241                           
  8242 ;; *************** function _buzzer *****************
  8243 ;; Defined at:
  8244 ;;		line 526 in file "main.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;  duration        1    wreg     unsigned char 
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;  duration        1   30[COMRAM] unsigned char 
  8249 ;; Return value:  Size  Location     Type
  8250 ;;                  1    wreg      void 
  8251 ;; Registers used:
  8252 ;;		wreg, status,2
  8253 ;; Tracked objects:
  8254 ;;		On entry : 0/0
  8255 ;;		On exit  : 0/0
  8256 ;;		Unchanged: 0/0
  8257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8258 ;;      Params:         0       0       0       0       0       0       0       0       0
  8259 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8261 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8262 ;;Total ram usage:        1 bytes
  8263 ;; Hardware stack levels used:    1
  8264 ;; Hardware stack levels required when called:    2
  8265 ;; This function calls:
  8266 ;;		Nothing
  8267 ;; This function is called by:
  8268 ;;		_ISR_low
  8269 ;; This function uses a non-reentrant model
  8270 ;;
  8271                           
  8272                           	psect	text40
  8273  00258E                     __ptext40:
  8274                           	opt stack 0
  8275  00258E                     _buzzer:
  8276                           	opt stack 22
  8277                           
  8278                           ;incstack = 0
  8279                           ;buzzer@duration stored from wreg
  8280  00258E  6E1F               	movwf	buzzer@duration,c
  8281                           
  8282                           ;main.c: 529: buzz = duration;
  8283  002590  C01F  F03A         	movff	buzzer@duration,_buzz
  8284                           
  8285                           ;main.c: 531: LATA5 = buzz > 0 ? 1 : 0;
  8286  002594  503A               	movf	_buzz,w,c
  8287  002596  B4D8               	btfsc	status,2,c
  8288  002598  D002               	goto	i1u381_20
  8289  00259A  8A89               	bsf	3977,5,c	;volatile
  8290  00259C  0012               	return	
  8291  00259E                     i1u381_20:
  8292  00259E  9A89               	bcf	3977,5,c	;volatile
  8293  0025A0  0012               	return		;funcret
  8294  0025A2                     __end_of_buzzer:
  8295                           	opt stack 0
  8296                           pclatu	equ	0xFFB
  8297                           pclath	equ	0xFFA
  8298                           tblptru	equ	0xFF8
  8299                           tblptrh	equ	0xFF7
  8300                           tblptrl	equ	0xFF6
  8301                           tablat	equ	0xFF5
  8302                           prodh	equ	0xFF4
  8303                           prodl	equ	0xFF3
  8304                           intcon	equ	0xFF2
  8305                           intcon2	equ	0xFF1
  8306                           postinc0	equ	0xFEE
  8307                           fsr0h	equ	0xFEA
  8308                           fsr0l	equ	0xFE9
  8309                           wreg	equ	0xFE8
  8310                           fsr1h	equ	0xFE2
  8311                           fsr1l	equ	0xFE1
  8312                           bsr	equ	0xFE0
  8313                           indf2	equ	0xFDF
  8314                           postinc2	equ	0xFDE
  8315                           postdec2	equ	0xFDD
  8316                           fsr2h	equ	0xFDA
  8317                           fsr2l	equ	0xFD9
  8318                           status	equ	0xFD8
  8319                           
  8320 ;; *************** function ___awmod *****************
  8321 ;; Defined at:
  8322 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/awmod.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;  dividend        2   30[COMRAM] int 
  8325 ;;  divisor         2   32[COMRAM] int 
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;  sign            1   35[COMRAM] unsigned char 
  8328 ;;  counter         1   34[COMRAM] unsigned char 
  8329 ;; Return value:  Size  Location     Type
  8330 ;;                  2   30[COMRAM] int 
  8331 ;; Registers used:
  8332 ;;		wreg, status,2, status,0
  8333 ;; Tracked objects:
  8334 ;;		On entry : 0/0
  8335 ;;		On exit  : 0/0
  8336 ;;		Unchanged: 0/0
  8337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8338 ;;      Params:         4       0       0       0       0       0       0       0       0
  8339 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8340 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8341 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8342 ;;Total ram usage:        6 bytes
  8343 ;; Hardware stack levels used:    1
  8344 ;; Hardware stack levels required when called:    2
  8345 ;; This function calls:
  8346 ;;		Nothing
  8347 ;; This function is called by:
  8348 ;;		_ISR_low
  8349 ;; This function uses a non-reentrant model
  8350 ;;
  8351                           
  8352                           	psect	text41
  8353  0021D8                     __ptext41:
  8354                           	opt stack 0
  8355  0021D8                     ___awmod:
  8356                           	opt stack 22
  8357                           
  8358                           ;incstack = 0
  8359  0021D8  0E00               	movlw	0
  8360  0021DA  6E24               	movwf	___awmod@sign,c
  8361  0021DC  AE20               	btfss	___awmod@dividend+1,7,c
  8362  0021DE  D006               	goto	i1l3158
  8363  0021E0  6C1F               	negf	___awmod@dividend,c
  8364  0021E2  1E20               	comf	___awmod@dividend+1,f,c
  8365  0021E4  B0D8               	btfsc	status,0,c
  8366  0021E6  2A20               	incf	___awmod@dividend+1,f,c
  8367  0021E8  0E01               	movlw	1
  8368  0021EA  6E24               	movwf	___awmod@sign,c
  8369  0021EC                     i1l3158:
  8370  0021EC  AE22               	btfss	___awmod@divisor+1,7,c
  8371  0021EE  D004               	goto	i1l3162
  8372  0021F0  6C21               	negf	___awmod@divisor,c
  8373  0021F2  1E22               	comf	___awmod@divisor+1,f,c
  8374  0021F4  B0D8               	btfsc	status,0,c
  8375  0021F6  2A22               	incf	___awmod@divisor+1,f,c
  8376  0021F8                     i1l3162:
  8377  0021F8  5021               	movf	___awmod@divisor,w,c
  8378  0021FA  1022               	iorwf	___awmod@divisor+1,w,c
  8379  0021FC  B4D8               	btfsc	status,2,c
  8380  0021FE  D018               	goto	i1l3178
  8381  002200  0E01               	movlw	1
  8382  002202  6E23               	movwf	___awmod@counter,c
  8383  002204  D004               	goto	i1l3168
  8384  002206                     i1l3166:
  8385  002206  90D8               	bcf	status,0,c
  8386  002208  3621               	rlcf	___awmod@divisor,f,c
  8387  00220A  3622               	rlcf	___awmod@divisor+1,f,c
  8388  00220C  2A23               	incf	___awmod@counter,f,c
  8389  00220E                     i1l3168:
  8390  00220E  AE22               	btfss	___awmod@divisor+1,7,c
  8391  002210  D7FA               	goto	i1l3166
  8392  002212                     i1l3170:
  8393  002212  5021               	movf	___awmod@divisor,w,c
  8394  002214  5C1F               	subwf	___awmod@dividend,w,c
  8395  002216  5022               	movf	___awmod@divisor+1,w,c
  8396  002218  5820               	subwfb	___awmod@dividend+1,w,c
  8397  00221A  A0D8               	btfss	status,0,c
  8398  00221C  D004               	goto	i1l3174
  8399  00221E  5021               	movf	___awmod@divisor,w,c
  8400  002220  5E1F               	subwf	___awmod@dividend,f,c
  8401  002222  5022               	movf	___awmod@divisor+1,w,c
  8402  002224  5A20               	subwfb	___awmod@dividend+1,f,c
  8403  002226                     i1l3174:
  8404  002226  90D8               	bcf	status,0,c
  8405  002228  3222               	rrcf	___awmod@divisor+1,f,c
  8406  00222A  3221               	rrcf	___awmod@divisor,f,c
  8407  00222C  2E23               	decfsz	___awmod@counter,f,c
  8408  00222E  D7F1               	goto	i1l3170
  8409  002230                     i1l3178:
  8410  002230  5024               	movf	___awmod@sign,w,c
  8411  002232  B4D8               	btfsc	status,2,c
  8412  002234  D004               	goto	i1l3182
  8413  002236  6C1F               	negf	___awmod@dividend,c
  8414  002238  1E20               	comf	___awmod@dividend+1,f,c
  8415  00223A  B0D8               	btfsc	status,0,c
  8416  00223C  2A20               	incf	___awmod@dividend+1,f,c
  8417  00223E                     i1l3182:
  8418  00223E  C01F  F01F         	movff	___awmod@dividend,?___awmod
  8419  002242  C020  F020         	movff	___awmod@dividend+1,?___awmod+1
  8420  002246  0012               	return	
  8421  002248                     __end_of___awmod:
  8422                           	opt stack 0
  8423                           pclatu	equ	0xFFB
  8424                           pclath	equ	0xFFA
  8425                           tblptru	equ	0xFF8
  8426                           tblptrh	equ	0xFF7
  8427                           tblptrl	equ	0xFF6
  8428                           tablat	equ	0xFF5
  8429                           prodh	equ	0xFF4
  8430                           prodl	equ	0xFF3
  8431                           intcon	equ	0xFF2
  8432                           intcon2	equ	0xFF1
  8433                           postinc0	equ	0xFEE
  8434                           fsr0h	equ	0xFEA
  8435                           fsr0l	equ	0xFE9
  8436                           wreg	equ	0xFE8
  8437                           fsr1h	equ	0xFE2
  8438                           fsr1l	equ	0xFE1
  8439                           bsr	equ	0xFE0
  8440                           indf2	equ	0xFDF
  8441                           postinc2	equ	0xFDE
  8442                           postdec2	equ	0xFDD
  8443                           fsr2h	equ	0xFDA
  8444                           fsr2l	equ	0xFD9
  8445                           status	equ	0xFD8
  8446                           
  8447 ;; *************** function _ISR_high *****************
  8448 ;; Defined at:
  8449 ;;		line 625 in file "main.c"
  8450 ;; Parameters:    Size  Location     Type
  8451 ;;		None
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;  tmp             2   28[COMRAM] unsigned short 
  8454 ;; Return value:  Size  Location     Type
  8455 ;;                  1    wreg      void 
  8456 ;; Registers used:
  8457 ;;		wreg, status,2, status,0, cstack
  8458 ;; Tracked objects:
  8459 ;;		On entry : 0/0
  8460 ;;		On exit  : 0/0
  8461 ;;		Unchanged: 0/0
  8462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8463 ;;      Params:         0       0       0       0       0       0       0       0       0
  8464 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8465 ;;      Temps:         18       0       0       0       0       0       0       0       0
  8466 ;;      Totals:        20       0       0       0       0       0       0       0       0
  8467 ;;Total ram usage:       20 bytes
  8468 ;; Hardware stack levels used:    1
  8469 ;; Hardware stack levels required when called:    1
  8470 ;; This function calls:
  8471 ;;		___almod
  8472 ;;		i2_ee_write_byte
  8473 ;; This function is called by:
  8474 ;;		Interrupt level 2
  8475 ;; This function uses a non-reentrant model
  8476 ;;
  8477                           
  8478                           	psect	intcode
  8479  000008                     __pintcode:
  8480                           	opt stack 0
  8481  000008                     _ISR_high:
  8482                           	opt stack 21
  8483                           
  8484                           ;incstack = 0
  8485  000008  823D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8486  00000A  CFFA F00F          	movff	pclath,??_ISR_high+4
  8487  00000E  CFFB F010          	movff	pclatu,??_ISR_high+5
  8488  000012  EDA3  F00B         	call	int_func,f	;refresh shadow registers
  8489                           pclatu	equ	0xFFB
  8490                           pclath	equ	0xFFA
  8491                           tblptru	equ	0xFF8
  8492                           tblptrh	equ	0xFF7
  8493                           tblptrl	equ	0xFF6
  8494                           tablat	equ	0xFF5
  8495                           prodh	equ	0xFF4
  8496                           prodl	equ	0xFF3
  8497                           intcon	equ	0xFF2
  8498                           intcon2	equ	0xFF1
  8499                           postinc0	equ	0xFEE
  8500                           fsr0h	equ	0xFEA
  8501                           fsr0l	equ	0xFE9
  8502                           wreg	equ	0xFE8
  8503                           fsr1h	equ	0xFE2
  8504                           fsr1l	equ	0xFE1
  8505                           bsr	equ	0xFE0
  8506                           indf2	equ	0xFDF
  8507                           postinc2	equ	0xFDE
  8508                           postdec2	equ	0xFDD
  8509                           fsr2h	equ	0xFDA
  8510                           fsr2l	equ	0xFD9
  8511                           status	equ	0xFD8
  8512                           
  8513                           	psect	intcode_body
  8514  001746                     __pintcode_body:
  8515                           	opt stack 21
  8516  001746                     int_func:
  8517                           	opt stack 21
  8518  001746  0006               	pop		; remove dummy address from shadow register refresh
  8519  001748  CFE9 F011          	movff	fsr0l,??_ISR_high+6
  8520  00174C  CFEA F012          	movff	fsr0h,??_ISR_high+7
  8521  001750  CFE1 F013          	movff	fsr1l,??_ISR_high+8
  8522  001754  CFE2 F014          	movff	fsr1h,??_ISR_high+9
  8523  001758  CFD9 F015          	movff	fsr2l,??_ISR_high+10
  8524  00175C  CFDA F016          	movff	fsr2h,??_ISR_high+11
  8525  001760  CFF3 F017          	movff	prodl,??_ISR_high+12
  8526  001764  CFF4 F018          	movff	prodh,??_ISR_high+13
  8527  001768  CFF6 F019          	movff	tblptrl,??_ISR_high+14
  8528  00176C  CFF7 F01A          	movff	tblptrh,??_ISR_high+15
  8529  001770  CFF8 F01B          	movff	tblptru,??_ISR_high+16
  8530  001774  CFF5 F01C          	movff	tablat,??_ISR_high+17
  8531                           
  8532                           ;main.c: 627: if (TMR1IE && TMR1IF)
  8533  001778  B09D               	btfsc	3997,0,c	;volatile
  8534  00177A  A09E               	btfss	3998,0,c	;volatile
  8535  00177C  D044               	goto	i2l448
  8536                           
  8537                           ;main.c: 628: {
  8538                           ;main.c: 635: unsigned short tmp = (8000000UL / 32UL);
  8539  00177E  0ED0               	movlw	208
  8540  001780  6E1E               	movwf	ISR_high@tmp+1,c
  8541  001782  0E90               	movlw	144
  8542  001784  6E1D               	movwf	ISR_high@tmp,c
  8543                           
  8544                           ;main.c: 636: TMR1 += 0xFFFFU - tmp;
  8545  001786  0EFF               	movlw	255
  8546  001788  6E0B               	movwf	??_ISR_high& (0+255),c
  8547  00178A  0EFF               	movlw	255
  8548  00178C  6E0C               	movwf	(??_ISR_high+1)& (0+255),c
  8549  00178E  C01D  F00D         	movff	ISR_high@tmp,??_ISR_high+2
  8550  001792  C01E  F00E         	movff	ISR_high@tmp+1,??_ISR_high+3
  8551  001796  1E0D               	comf	??_ISR_high+2,f,c
  8552  001798  1E0E               	comf	??_ISR_high+3,f,c
  8553  00179A  4A0D               	infsnz	??_ISR_high+2,f,c
  8554  00179C  2A0E               	incf	??_ISR_high+3,f,c
  8555  00179E  500B               	movf	??_ISR_high,w,c
  8556  0017A0  260D               	addwf	??_ISR_high+2,f,c
  8557  0017A2  500C               	movf	??_ISR_high+1,w,c
  8558  0017A4  220E               	addwfc	??_ISR_high+3,f,c
  8559  0017A6  500D               	movf	??_ISR_high+2,w,c
  8560  0017A8  26CE               	addwf	4046,f,c	;volatile
  8561  0017AA  500E               	movf	??_ISR_high+3,w,c
  8562  0017AC  22CF               	addwfc	4047,f,c	;volatile
  8563                           
  8564                           ;main.c: 638: TMR1IF = 0;
  8565  0017AE  909E               	bcf	3998,0,c	;volatile
  8566                           
  8567                           ;main.c: 640: time = (long) (time + 1) % (3600L * 24L);
  8568  0017B0  0E01               	movlw	1
  8569  0017B2  0100               	movlb	0	; () banked
  8570  0017B4  25E3               	addwf	_time& (0+255),w,b
  8571  0017B6  6E01               	movwf	___almod@dividend,c
  8572  0017B8  0E00               	movlw	0
  8573  0017BA  0100               	movlb	0	; () banked
  8574  0017BC  21E4               	addwfc	(_time+1)& (0+255),w,b
  8575  0017BE  6E02               	movwf	___almod@dividend+1,c
  8576  0017C0  0E00               	movlw	0
  8577  0017C2  0100               	movlb	0	; () banked
  8578  0017C4  21E5               	addwfc	(_time+2)& (0+255),w,b
  8579  0017C6  6E03               	movwf	___almod@dividend+2,c
  8580  0017C8  0E00               	movlw	0
  8581  0017CA  0100               	movlb	0	; () banked
  8582  0017CC  21E6               	addwfc	(_time+3)& (0+255),w,b
  8583  0017CE  6E04               	movwf	___almod@dividend+3,c
  8584  0017D0  0E80               	movlw	128
  8585  0017D2  6E05               	movwf	___almod@divisor,c
  8586  0017D4  0E51               	movlw	81
  8587  0017D6  6E06               	movwf	___almod@divisor+1,c
  8588  0017D8  0E01               	movlw	1
  8589  0017DA  6E07               	movwf	___almod@divisor+2,c
  8590  0017DC  0E00               	movlw	0
  8591  0017DE  6E08               	movwf	___almod@divisor+3,c
  8592  0017E0  ECDC  F00F         	call	___almod	;wreg free
  8593  0017E4  C001  F0E3         	movff	?___almod,_time
  8594  0017E8  C002  F0E4         	movff	?___almod+1,_time+1
  8595  0017EC  C003  F0E5         	movff	?___almod+2,_time+2
  8596  0017F0  C004  F0E6         	movff	?___almod+3,_time+3
  8597                           
  8598                           ;main.c: 642: fan_timeout--;
  8599  0017F4  0100               	movlb	0	; () banked
  8600  0017F6  07DE               	decf	_fan_timeout& (0+255),f,b
  8601                           
  8602                           ; BSR set to: 0
  8603                           ;main.c: 644: ee_write_byte(time, EE_TIME_ADDR);
  8604  0017F8  0E00               	movlw	0
  8605  0017FA  6E01               	movwf	i2ee_write_byte@data,c
  8606  0017FC  0100               	movlb	0	; () banked
  8607  0017FE  51E3               	movf	_time& (0+255),w,b
  8608  001800  ECAC  F012         	call	i2_ee_write_byte
  8609                           
  8610                           ;main.c: 646: return;
  8611  001804  D002               	goto	i2l449
  8612  001806                     i2l448:
  8613                           
  8614                           ;main.c: 647: }
  8615                           ;main.c: 648: if (CCP1IE && CCP1IF)
  8616  001806  A49D               	btfss	3997,2,c	;volatile
  8617                           
  8618                           ;main.c: 649: {
  8619                           ;main.c: 669: return;
  8620  001808  D000               	goto	i2l449
  8621  00180A                     i2l449:
  8622  00180A  C01C  FFF5         	movff	??_ISR_high+17,tablat
  8623  00180E  C01B  FFF8         	movff	??_ISR_high+16,tblptru
  8624  001812  C01A  FFF7         	movff	??_ISR_high+15,tblptrh
  8625  001816  C019  FFF6         	movff	??_ISR_high+14,tblptrl
  8626  00181A  C018  FFF4         	movff	??_ISR_high+13,prodh
  8627  00181E  C017  FFF3         	movff	??_ISR_high+12,prodl
  8628  001822  C016  FFDA         	movff	??_ISR_high+11,fsr2h
  8629  001826  C015  FFD9         	movff	??_ISR_high+10,fsr2l
  8630  00182A  C014  FFE2         	movff	??_ISR_high+9,fsr1h
  8631  00182E  C013  FFE1         	movff	??_ISR_high+8,fsr1l
  8632  001832  C012  FFEA         	movff	??_ISR_high+7,fsr0h
  8633  001836  C011  FFE9         	movff	??_ISR_high+6,fsr0l
  8634  00183A  C010  FFFB         	movff	??_ISR_high+5,pclatu
  8635  00183E  C00F  FFFA         	movff	??_ISR_high+4,pclath
  8636  001842  923D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8637  001844  0011               	retfie		f
  8638  001846                     __end_of_ISR_high:
  8639                           	opt stack 0
  8640                           pclatu	equ	0xFFB
  8641                           pclath	equ	0xFFA
  8642                           tblptru	equ	0xFF8
  8643                           tblptrh	equ	0xFF7
  8644                           tblptrl	equ	0xFF6
  8645                           tablat	equ	0xFF5
  8646                           prodh	equ	0xFF4
  8647                           prodl	equ	0xFF3
  8648                           intcon	equ	0xFF2
  8649                           intcon2	equ	0xFF1
  8650                           postinc0	equ	0xFEE
  8651                           fsr0h	equ	0xFEA
  8652                           fsr0l	equ	0xFE9
  8653                           wreg	equ	0xFE8
  8654                           fsr1h	equ	0xFE2
  8655                           fsr1l	equ	0xFE1
  8656                           bsr	equ	0xFE0
  8657                           indf2	equ	0xFDF
  8658                           postinc2	equ	0xFDE
  8659                           postdec2	equ	0xFDD
  8660                           fsr2h	equ	0xFDA
  8661                           fsr2l	equ	0xFD9
  8662                           status	equ	0xFD8
  8663                           
  8664 ;; *************** function i2_ee_write_byte *****************
  8665 ;; Defined at:
  8666 ;;		line 547 in file "main.c"
  8667 ;; Parameters:    Size  Location     Type
  8668 ;;  addr            1    wreg     unsigned char 
  8669 ;;  data            1    0[COMRAM] unsigned char 
  8670 ;; Auto vars:     Size  Location     Type
  8671 ;;  addr            1    1[COMRAM] unsigned char 
  8672 ;; Return value:  Size  Location     Type
  8673 ;;                  1    wreg      void 
  8674 ;; Registers used:
  8675 ;;		wreg, status,2
  8676 ;; Tracked objects:
  8677 ;;		On entry : 0/0
  8678 ;;		On exit  : 0/0
  8679 ;;		Unchanged: 0/0
  8680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8681 ;;      Params:         1       0       0       0       0       0       0       0       0
  8682 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8683 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8684 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8685 ;;Total ram usage:        2 bytes
  8686 ;; Hardware stack levels used:    1
  8687 ;; This function calls:
  8688 ;;		Nothing
  8689 ;; This function is called by:
  8690 ;;		_ISR_high
  8691 ;; This function uses a non-reentrant model
  8692 ;;
  8693                           
  8694                           	psect	text43
  8695  002558                     __ptext43:
  8696                           	opt stack 0
  8697  002558                     i2_ee_write_byte:
  8698                           	opt stack 21
  8699                           
  8700                           ;incstack = 0
  8701                           ;i2ee_write_byte@addr stored from wreg
  8702  002558  6E02               	movwf	i2ee_write_byte@addr,c
  8703                           
  8704                           ;main.c: 550: WREN = 1;
  8705  00255A  84A6               	bsf	4006,2,c	;volatile
  8706                           
  8707                           ;main.c: 551: EEADR = addr;
  8708  00255C  C002  FFA9         	movff	i2ee_write_byte@addr,4009	;volatile
  8709                           
  8710                           ;main.c: 552: EEDATA = data;
  8711  002560  C001  FFA8         	movff	i2ee_write_byte@data,4008	;volatile
  8712                           
  8713                           ;main.c: 556: GIE = 0;
  8714  002564  9EF2               	bcf	intcon,7,c	;volatile
  8715                           
  8716                           ;main.c: 557: EECON2 = 0x55;
  8717  002566  0E55               	movlw	85
  8718  002568  6EA7               	movwf	4007,c	;volatile
  8719                           
  8720                           ;main.c: 558: EECON2 = 0xAA;
  8721  00256A  0EAA               	movlw	170
  8722  00256C  6EA7               	movwf	4007,c	;volatile
  8723                           
  8724                           ;main.c: 559: GIE = 1;
  8725  00256E  8EF2               	bsf	intcon,7,c	;volatile
  8726                           
  8727                           ;main.c: 561: WR = 1;
  8728  002570  82A6               	bsf	4006,1,c	;volatile
  8729  002572  0012               	return		;funcret
  8730  002574                     __end_ofi2_ee_write_byte:
  8731                           	opt stack 0
  8732                           pclatu	equ	0xFFB
  8733                           pclath	equ	0xFFA
  8734                           tblptru	equ	0xFF8
  8735                           tblptrh	equ	0xFF7
  8736                           tblptrl	equ	0xFF6
  8737                           tablat	equ	0xFF5
  8738                           prodh	equ	0xFF4
  8739                           prodl	equ	0xFF3
  8740                           intcon	equ	0xFF2
  8741                           intcon2	equ	0xFF1
  8742                           postinc0	equ	0xFEE
  8743                           fsr0h	equ	0xFEA
  8744                           fsr0l	equ	0xFE9
  8745                           wreg	equ	0xFE8
  8746                           fsr1h	equ	0xFE2
  8747                           fsr1l	equ	0xFE1
  8748                           bsr	equ	0xFE0
  8749                           indf2	equ	0xFDF
  8750                           postinc2	equ	0xFDE
  8751                           postdec2	equ	0xFDD
  8752                           fsr2h	equ	0xFDA
  8753                           fsr2l	equ	0xFD9
  8754                           status	equ	0xFD8
  8755                           
  8756 ;; *************** function ___almod *****************
  8757 ;; Defined at:
  8758 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/almod.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;  dividend        4    0[COMRAM] long 
  8761 ;;  divisor         4    4[COMRAM] long 
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;  sign            1    9[COMRAM] unsigned char 
  8764 ;;  counter         1    8[COMRAM] unsigned char 
  8765 ;; Return value:  Size  Location     Type
  8766 ;;                  4    0[COMRAM] long 
  8767 ;; Registers used:
  8768 ;;		wreg, status,2, status,0
  8769 ;; Tracked objects:
  8770 ;;		On entry : 0/0
  8771 ;;		On exit  : 0/0
  8772 ;;		Unchanged: 0/0
  8773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8774 ;;      Params:         8       0       0       0       0       0       0       0       0
  8775 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8776 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8777 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8778 ;;Total ram usage:       10 bytes
  8779 ;; Hardware stack levels used:    1
  8780 ;; This function calls:
  8781 ;;		Nothing
  8782 ;; This function is called by:
  8783 ;;		_ISR_high
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           	psect	text44
  8788  001FB8                     __ptext44:
  8789                           	opt stack 0
  8790  001FB8                     ___almod:
  8791                           	opt stack 21
  8792                           
  8793                           ;incstack = 0
  8794  001FB8  0E00               	movlw	0
  8795  001FBA  6E0A               	movwf	___almod@sign,c
  8796  001FBC  AE04               	btfss	___almod@dividend+3,7,c
  8797  001FBE  D00A               	goto	i2l3122
  8798  001FC0  1E04               	comf	___almod@dividend+3,f,c
  8799  001FC2  1E03               	comf	___almod@dividend+2,f,c
  8800  001FC4  1E02               	comf	___almod@dividend+1,f,c
  8801  001FC6  6C01               	negf	___almod@dividend,c
  8802  001FC8  0E00               	movlw	0
  8803  001FCA  2202               	addwfc	___almod@dividend+1,f,c
  8804  001FCC  2203               	addwfc	___almod@dividend+2,f,c
  8805  001FCE  2204               	addwfc	___almod@dividend+3,f,c
  8806  001FD0  0E01               	movlw	1
  8807  001FD2  6E0A               	movwf	___almod@sign,c
  8808  001FD4                     i2l3122:
  8809  001FD4  AE08               	btfss	___almod@divisor+3,7,c
  8810  001FD6  D008               	goto	i2l3126
  8811  001FD8  1E08               	comf	___almod@divisor+3,f,c
  8812  001FDA  1E07               	comf	___almod@divisor+2,f,c
  8813  001FDC  1E06               	comf	___almod@divisor+1,f,c
  8814  001FDE  6C05               	negf	___almod@divisor,c
  8815  001FE0  0E00               	movlw	0
  8816  001FE2  2206               	addwfc	___almod@divisor+1,f,c
  8817  001FE4  2207               	addwfc	___almod@divisor+2,f,c
  8818  001FE6  2208               	addwfc	___almod@divisor+3,f,c
  8819  001FE8                     i2l3126:
  8820  001FE8  5005               	movf	___almod@divisor,w,c
  8821  001FEA  1006               	iorwf	___almod@divisor+1,w,c
  8822  001FEC  1007               	iorwf	___almod@divisor+2,w,c
  8823  001FEE  1008               	iorwf	___almod@divisor+3,w,c
  8824  001FF0  B4D8               	btfsc	status,2,c
  8825  001FF2  D024               	goto	i2l3142
  8826  001FF4  0E01               	movlw	1
  8827  001FF6  6E09               	movwf	___almod@counter,c
  8828  001FF8  D006               	goto	i2l3132
  8829  001FFA                     i2l3130:
  8830  001FFA  90D8               	bcf	status,0,c
  8831  001FFC  3605               	rlcf	___almod@divisor,f,c
  8832  001FFE  3606               	rlcf	___almod@divisor+1,f,c
  8833  002000  3607               	rlcf	___almod@divisor+2,f,c
  8834  002002  3608               	rlcf	___almod@divisor+3,f,c
  8835  002004  2A09               	incf	___almod@counter,f,c
  8836  002006                     i2l3132:
  8837  002006  AE08               	btfss	___almod@divisor+3,7,c
  8838  002008  D7F8               	goto	i2l3130
  8839  00200A                     i2l3134:
  8840  00200A  5005               	movf	___almod@divisor,w,c
  8841  00200C  5C01               	subwf	___almod@dividend,w,c
  8842  00200E  5006               	movf	___almod@divisor+1,w,c
  8843  002010  5802               	subwfb	___almod@dividend+1,w,c
  8844  002012  5007               	movf	___almod@divisor+2,w,c
  8845  002014  5803               	subwfb	___almod@dividend+2,w,c
  8846  002016  5008               	movf	___almod@divisor+3,w,c
  8847  002018  5804               	subwfb	___almod@dividend+3,w,c
  8848  00201A  A0D8               	btfss	status,0,c
  8849  00201C  D008               	goto	i2l3138
  8850  00201E  5005               	movf	___almod@divisor,w,c
  8851  002020  5E01               	subwf	___almod@dividend,f,c
  8852  002022  5006               	movf	___almod@divisor+1,w,c
  8853  002024  5A02               	subwfb	___almod@dividend+1,f,c
  8854  002026  5007               	movf	___almod@divisor+2,w,c
  8855  002028  5A03               	subwfb	___almod@dividend+2,f,c
  8856  00202A  5008               	movf	___almod@divisor+3,w,c
  8857  00202C  5A04               	subwfb	___almod@dividend+3,f,c
  8858  00202E                     i2l3138:
  8859  00202E  90D8               	bcf	status,0,c
  8860  002030  3208               	rrcf	___almod@divisor+3,f,c
  8861  002032  3207               	rrcf	___almod@divisor+2,f,c
  8862  002034  3206               	rrcf	___almod@divisor+1,f,c
  8863  002036  3205               	rrcf	___almod@divisor,f,c
  8864  002038  2E09               	decfsz	___almod@counter,f,c
  8865  00203A  D7E7               	goto	i2l3134
  8866  00203C                     i2l3142:
  8867  00203C  500A               	movf	___almod@sign,w,c
  8868  00203E  B4D8               	btfsc	status,2,c
  8869  002040  D008               	goto	i2l3146
  8870  002042  1E04               	comf	___almod@dividend+3,f,c
  8871  002044  1E03               	comf	___almod@dividend+2,f,c
  8872  002046  1E02               	comf	___almod@dividend+1,f,c
  8873  002048  6C01               	negf	___almod@dividend,c
  8874  00204A  0E00               	movlw	0
  8875  00204C  2202               	addwfc	___almod@dividend+1,f,c
  8876  00204E  2203               	addwfc	___almod@dividend+2,f,c
  8877  002050  2204               	addwfc	___almod@dividend+3,f,c
  8878  002052                     i2l3146:
  8879  002052  C001  F001         	movff	___almod@dividend,?___almod
  8880  002056  C002  F002         	movff	___almod@dividend+1,?___almod+1
  8881  00205A  C003  F003         	movff	___almod@dividend+2,?___almod+2
  8882  00205E  C004  F004         	movff	___almod@dividend+3,?___almod+3
  8883  002062  0012               	return	
  8884  002064                     __end_of___almod:
  8885                           	opt stack 0
  8886                           pclatu	equ	0xFFB
  8887                           pclath	equ	0xFFA
  8888                           tblptru	equ	0xFF8
  8889                           tblptrh	equ	0xFF7
  8890                           tblptrl	equ	0xFF6
  8891                           tablat	equ	0xFF5
  8892                           prodh	equ	0xFF4
  8893                           prodl	equ	0xFF3
  8894                           intcon	equ	0xFF2
  8895                           intcon2	equ	0xFF1
  8896                           postinc0	equ	0xFEE
  8897                           fsr0h	equ	0xFEA
  8898                           fsr0l	equ	0xFE9
  8899                           wreg	equ	0xFE8
  8900                           fsr1h	equ	0xFE2
  8901                           fsr1l	equ	0xFE1
  8902                           bsr	equ	0xFE0
  8903                           indf2	equ	0xFDF
  8904                           postinc2	equ	0xFDE
  8905                           postdec2	equ	0xFDD
  8906                           fsr2h	equ	0xFDA
  8907                           fsr2l	equ	0xFD9
  8908                           status	equ	0xFD8
  8909                           pclatu	equ	0xFFB
  8910                           pclath	equ	0xFFA
  8911                           tblptru	equ	0xFF8
  8912                           tblptrh	equ	0xFF7
  8913                           tblptrl	equ	0xFF6
  8914                           tablat	equ	0xFF5
  8915                           prodh	equ	0xFF4
  8916                           prodl	equ	0xFF3
  8917                           intcon	equ	0xFF2
  8918                           intcon2	equ	0xFF1
  8919                           postinc0	equ	0xFEE
  8920                           fsr0h	equ	0xFEA
  8921                           fsr0l	equ	0xFE9
  8922                           wreg	equ	0xFE8
  8923                           fsr1h	equ	0xFE2
  8924                           fsr1l	equ	0xFE1
  8925                           bsr	equ	0xFE0
  8926                           indf2	equ	0xFDF
  8927                           postinc2	equ	0xFDE
  8928                           postdec2	equ	0xFDD
  8929                           fsr2h	equ	0xFDA
  8930                           fsr2l	equ	0xFD9
  8931                           status	equ	0xFD8
  8932                           
  8933                           	psect	rparam
  8934  0000                     pclatu	equ	0xFFB
  8935                           pclath	equ	0xFFA
  8936                           tblptru	equ	0xFF8
  8937                           tblptrh	equ	0xFF7
  8938                           tblptrl	equ	0xFF6
  8939                           tablat	equ	0xFF5
  8940                           prodh	equ	0xFF4
  8941                           prodl	equ	0xFF3
  8942                           intcon	equ	0xFF2
  8943                           intcon2	equ	0xFF1
  8944                           postinc0	equ	0xFEE
  8945                           fsr0h	equ	0xFEA
  8946                           fsr0l	equ	0xFE9
  8947                           wreg	equ	0xFE8
  8948                           fsr1h	equ	0xFE2
  8949                           fsr1l	equ	0xFE1
  8950                           bsr	equ	0xFE0
  8951                           indf2	equ	0xFDF
  8952                           postinc2	equ	0xFDE
  8953                           postdec2	equ	0xFDD
  8954                           fsr2h	equ	0xFDA
  8955                           fsr2l	equ	0xFD9
  8956                           status	equ	0xFD8
  8957                           
  8958                           	psect	temp
  8959  00003D                     btemp:
  8960                           	opt stack 0
  8961  00003D                     	ds	1
  8962  0000                     int$flags	set	btemp
  8963                           pclatu	equ	0xFFB
  8964                           pclath	equ	0xFFA
  8965                           tblptru	equ	0xFF8
  8966                           tblptrh	equ	0xFF7
  8967                           tblptrl	equ	0xFF6
  8968                           tablat	equ	0xFF5
  8969                           prodh	equ	0xFF4
  8970                           prodl	equ	0xFF3
  8971                           intcon	equ	0xFF2
  8972                           intcon2	equ	0xFF1
  8973                           postinc0	equ	0xFEE
  8974                           fsr0h	equ	0xFEA
  8975                           fsr0l	equ	0xFE9
  8976                           wreg	equ	0xFE8
  8977                           fsr1h	equ	0xFE2
  8978                           fsr1l	equ	0xFE1
  8979                           bsr	equ	0xFE0
  8980                           indf2	equ	0xFDF
  8981                           postinc2	equ	0xFDE
  8982                           postdec2	equ	0xFDD
  8983                           fsr2h	equ	0xFDA
  8984                           fsr2l	equ	0xFD9
  8985                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    37
    Data        4
    BSS         18
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      60
    BANK0           160    116     138
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    cur_number	PTR unsigned char  size(2) Largest target is 1
		 -> temp_want(BANK0[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_low in COMRAM

    _ISR_low->i1___aldiv
    i1_set_digit->i1___awdiv
    i1_set_LEDs->i1___awdiv
    _sample_inputs->i1_set_key_led_disp_tris

Critical Paths under _ISR_high in COMRAM

    _ISR_high->___almod

Critical Paths under _main in BANK0

    _main->_get_temp
    _setup->_setup_timer1
    _get_temp->___ftdiv
    _log->_eval_poly
    _eval_poly->___ftmul
    ___ftmul->___ftadd
    ___ftadd->___awtoft
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    ___ftdiv->_log
    _error->_set_LEDs
    _error->_set_digit
    _set_digit->___awdiv
    _set_LEDs->___awdiv
    _ee_save_state->_ee_write_byte
    _ee_read_state->_ee_read_byte
    ___ftge->___awtoft

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   41202
                                            111 BANK0      5     5      0
                            ___aldiv
                           ___awtoft
                             ___ftge
                      _ee_read_state
                      _ee_save_state
                              _error
                           _get_temp
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      23
                       _setup_eeprom
                           _setup_io
                        _setup_therm
                       _setup_timer0
                       _setup_timer1
                       _setup_timer2
                     _setup_watchdog
 ---------------------------------------------------------------------------------
 (2) _setup_watchdog                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_timer2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_timer1                                         4     4      0      23
                                             22 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _setup_timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_therm                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_io                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_eeprom                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            18    15      3   31451
                                             93 BANK0     18    15      3
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                           ___lwtoft
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  5     2      3   18785
                                             73 BANK0      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     352
                                             22 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           12     5      7    8113
                                             61 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     415
                                             22 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    3535
                                             46 BANK0     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    3793
                                             34 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2648
                                             30 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2195
                                             30 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                             22 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2875
                                             78 BANK0     15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2109
                                             22 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _error                                                4     4      0    4471
                                             31 BANK0      4     4      0
                        _num_to_disp
                           _set_LEDs
                          _set_digit
              _set_key_led_disp_tris
 ---------------------------------------------------------------------------------
 (2) _set_digit                                            1     1      0    2013
                                             30 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _set_LEDs                                             1     1      0    2144
                                             30 BANK0      1     1      0
                            ___awdiv
              _set_key_led_disp_tris
 ---------------------------------------------------------------------------------
 (2) _set_key_led_disp_tris                                1     1      0     154
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1836
                                             22 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _num_to_disp                                          2     2      0      69
                                             22 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ee_save_state                                        0     0      0     530
                      _ee_write_byte
 ---------------------------------------------------------------------------------
 (2) _ee_write_byte                                        2     1      1     530
                                             22 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _ee_read_state                                       12    12      0     187
                                             23 BANK0     12    12      0
                       _ee_read_byte
 ---------------------------------------------------------------------------------
 (2) _ee_read_byte                                         1     1      0      22
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6    1032
                                             34 BANK0      9     3      6
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     860
                                             22 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_low                                             72    72      0    4574
                                             44 COMRAM    10    10      0
                                              0 BANK0     22    22      0
                            ___awmod
                             _buzzer
                      _sample_inputs
                          i1___aldiv
                         i1_set_LEDs
                        i1_set_digit
 ---------------------------------------------------------------------------------
 (7) i1_set_digit                                          1     1      0    1101
                                             38 COMRAM     1     1      0
                          i1___awdiv
 ---------------------------------------------------------------------------------
 (7) i1_set_LEDs                                           1     1      0    1232
                                             38 COMRAM     1     1      0
                          i1___awdiv
            i1_set_key_led_disp_tris
 ---------------------------------------------------------------------------------
 (8) i1___awdiv                                            8     4      4     924
                                             30 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) i1___aldiv                                           14     6      8     508
                                             30 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (7) _sample_inputs                                        1     1      0     183
                                             31 COMRAM     1     1      0
            i1_set_key_led_disp_tris
 ---------------------------------------------------------------------------------
 (8) i1_set_key_led_disp_tris                              1     1      0     154
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _buzzer                                               1     1      0      22
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     424
                                             30 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_high                                            20    20      0     517
                                             10 COMRAM    20    20      0
                            ___almod
                    i2_ee_write_byte
 ---------------------------------------------------------------------------------
 (10) i2_ee_write_byte                                     2     1      1      70
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (10) ___almod                                            10     2      8     424
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
   ___awtoft
     ___ftpack
   ___ftge
     ___awtoft (ARG)
       ___ftpack
   _ee_read_state
     _ee_read_byte
   _ee_save_state
     _ee_write_byte
   _error
     _num_to_disp
     _set_LEDs
       ___awdiv
       _set_key_led_disp_tris
     _set_digit
       ___awdiv
     _set_key_led_disp_tris
   _get_temp
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _log (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _frexp
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _frexp (ARG)
     ___ftneg
     ___lwtoft
       ___ftpack
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___wmul
       _frexp
   _setup
     _setup_eeprom
     _setup_io
     _setup_therm
     _setup_timer0
     _setup_timer1
     _setup_timer2
     _setup_watchdog

 _ISR_low (ROOT)
   ___awmod
   _buzzer
   _sample_inputs
     i1_set_key_led_disp_tris
   i1___aldiv
   i1_set_LEDs
     i1___awdiv
     i1_set_key_led_disp_tris
   i1_set_digit
     i1___awdiv

 _ISR_high (ROOT)
   ___almod
   i2_ee_write_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     74      8A       5       86.2%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     36      3C       1       63.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C6      20        0.0%
DATA                 0      0      C6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Nov 10 08:16:43 2016

                              _GO 007E11                                _RD 007D30  
                              _WR 007D31                      ___awdiv@sign 007B  
                              bsr 000FE0               ___wmul@multiplicand 0078  
                    ___ftadd@exp1 008D                      ___ftadd@exp2 008C  
                    ___ftadd@sign 008B                               l311 0830  
                             l421 15A2                               l341 0AFA  
                             l431 1612                               l423 15AA  
                             l335 0AB8                               l336 0AC4  
                             l433 1636                               l425 15D6  
                             l417 156E                               l435 163E  
                             l427 15DE                               l419 1576  
                             l339 0AC8                               l429 160A  
                             l389 0D68                               l751 1504  
                             l831 249E                               l809 12DC  
                             l780 0BC8                               l774 0B66  
                             l778 0BA0                               l789 0C9E  
                             l798 0CC8                               _GIE 007F97  
                             _PR2 000FCB                               _PSA 007EAB  
                             _log 1076                      ___awmod@sign 0024  
                             wreg 000FE8              __end_of_ee_read_byte 25C2  
                    __CFG_LVP$OFF 000000                    i1___aldiv@sign 0028  
                    ___ftdiv@cntr 00B7                      ___ftdiv@sign 00BC  
                    __CFG_WDT$OFF 000000                              l3110 141A  
                            l3102 13EC                              l3022 1970  
                            l3200 1E48                              l3032 19AA  
                            l3106 13FE                              l3044 1A22  
                            l3038 19F8                              l2520 0C2E  
                            l2504 0BBE                              l3090 1382  
                            l2450 145A                              l2522 0C3C  
                            l2514 0C00                              l3322 098C  
                            l3092 1392                              l3084 1354  
                            l2612 1E68                              l2460 14E8  
                            l2452 1468                              l2540 0CF2  
                            l2532 0C84                              l2524 0C4A  
                            l3340 0A4C                              l3308 0876  
                            l3094 1398                              l3078 1336  
                            l3190 1DC4                              l2462 14F6  
                            l2454 1498                              l2446 1446  
                            l2550 0D40                              l2534 0C92  
                            l2526 0C56                              l3318 097E  
                            l2624 1E9C                              l2640 1EEC  
                            l2560 0F52                              l2800 109A  
                            l3360 0AD8                              l3328 09D0  
                            l3194 1E04                              l2626 1EA8  
                            l2618 1E7E                              l2474 152A  
                            l2458 14B8                              l3362 0AEE  
                            l2644 1F00                              l2636 1EDE  
                            l2628 1EAE                              l2468 150E  
                            l2492 0B74                              l2580 0FDA  
                            l3356 0ACC                              l2590 1018  
                            l2566 0F8C                              l2806 10C8  
                            l3358 0AD0                              l2744 20EE  
                            l2752 2114                              l2656 23AC  
                            l2584 0FF8                              l2746 2108  
                            l2754 2162                              l2770 16D2  
                            l2762 1654                              l2498 0BAE  
                            l2594 1036                              l2682 1A82  
                            l2748 210C                              l2772 16F8  
                            l2764 1660                              l2852 123A  
                            l2684 1B0A                              l2668 1F3E  
                            l2790 18F6                              l2782 185E  
                            l2774 171E                              l2766 1686  
                            l2846 1200                              l2792 191C  
                            l2784 1884                              l2768 16AC  
                            l2872 129A                              l2786 18AA  
                            l2788 18D0                              ?_log 00A9  
                            _ADIE 007CEE                              _ADIF 007CF6  
                            _ADIP 007CFE                              _ADON 007E10  
                            _CHS0 007E12                              _CHS1 007E13  
                            _CHS2 007E14                              _CHS3 007E15  
                            _CFGS 007D36                              _EEIE 007D04  
                            _EEIF 007D0C                              _EEIP 007D14  
                            _GIEH 007F97                              _GIEL 007F96  
                            _T0IE 007F95                              _T0IF 007F92  
                            _T0CS 007EAD                              _T0IP 007F8A  
                            _FREE 007D34                              u3100 16AA  
                            u3030 1F70                              u3200 185C  
                            u3120 16D0                              u3300 191A  
                            u3220 1882                              u3140 16F6  
                            u3060 165E                              u3038 1F74  
                            u3320 1940                              u3240 18A8  
                            u3160 171C                              u3080 1684  
                            u3260 18CE                              u3180 1742  
                   __CFG_DEBUG$ON 000000                              u2541 0B14  
                            u2551 0B32                              u3280 18F4  
                            _IPEN 007E87                              u3361 11DC  
                            u2810 2256                              u3381 1216  
                            u2910 2292                              u2830 2262  
                            u3710 19D6                              u3711 19CE  
                            u2751 0F2E                              u2905 2288  
                            u2825 2258                              u2930 229E  
                            u2850 226E                              u2771 0F68  
                            u2925 2294                              u2845 2264  
                            u2870 227A                              u3728 19DA  
                            u3680 1988                              u2865 2270  
                            u3681 1980                              u2890 2286  
                            u2885 227C                              u3698 198C  
                            _SCS0 007E98                              _SCS1 007E99  
                            _TMR0 000FD6                              _TMR1 000FCE  
                            _TMR2 000FCC                              _WREN 007D32  
                 __end_of_ISR_low 041A                        i1_set_LEDs 1CBA  
                            _disp 00D7                              _main 0828  
                            _font 0801                      ___ftpack@arg 0076  
                            _buzz 003A                      ___ftpack@exp 0079  
                            _time 00E3                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            _unit 01BB                              btemp 003D  
                            log@x 00A9                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 041A         ??i1_set_key_led_disp_tris 001F  
                   __CFG_MCLRE$ON 000000                      ___ftmul@cntr 009B  
                    ___param_bank 000010                      ___ftmul@sign 009C  
           __end_of_ee_read_state 1644                             ??_log 00AC  
           _set_key_led_disp_tris 2248                   __end_of___aldiv 142C  
                 __end_of___almod 2064                             _ADCS0 007E00  
                           _ADCS1 007E01                             _ADCS2 007E02  
                           ?_main 0001                    i1___awdiv@sign 0024  
                    get_temp@temp 00C0                             _ACQT0 007E03  
                           _ACQT1 007E04                             _ACQT2 007E05  
                 __end_of___awdiv 1F0A                             _ADRES 000FC3  
                           _EEADR 000FA9                   __end_of___ftadd 0D66  
                 __end_of___awmod 2248                   __end_of___ftdiv 1312  
                           _EEPGD 007D37                   __end_of___ftneg 24AC  
                 __end_of___ftmul 1076                   ___awdiv@divisor 0078  
                           _LATB0 007C50                             _LATA2 007C4A  
                           _LATB1 007C51                             _LATA3 007C4B  
                           _LATC0 007C58                             _LATB2 007C52  
                           _LATA4 007C4C                             _LATC1 007C59  
                           _LATB3 007C53                             _LATA5 007C4D  
                           _LATC2 007C5A                             _LATB4 007C54  
                           _LATA6 007C4E                             _LATB5 007C55  
                           _T0PS0 007EA8                             _T0PS1 007EA9  
                           _T0PS2 007EAA                             _IRCF0 007E9C  
                           _IRCF1 007E9D                             _IRCF2 007E9E  
                           _PCFG0 007E08                             _PCFG1 007E09  
                           _PCFG2 007E0A                             _PCFG3 007E0B  
                           _T1RUN 007E6E                             i1l461 0082  
                           i1l453 0068                             i1l454 03D2  
                           i1l455 03C8                             i1l464 0098  
                           i1l476 014C                             i1l468 00BC  
                           i1l494 0356                             i1l495 0364  
                           i1l497 03C4                             i2l448 1806  
                           i2l449 180A                   ___awdiv@counter 007A  
                 i2_ee_write_byte 2558                             _WRERR 007D33  
                   __CFG_PWRT$OFF 000000                             _nRBPU 007F8F  
                __end_of_ISR_high 1846                     ___awtoft@sign 0081  
                           _blink 00DB                             _frexp 1F0A  
                           _errno 00D9                             _error 1944  
                   ___ftpack@sign 007A                             _timer 01BA  
                           _setup 244C                             _state 00E2  
           __end_of_ee_save_state 2346                    __pbitbssCOMRAM 01B8  
                           tablat 000FF5                       i1_set_digit 1BF0  
                           status 000FD8                __size_ofi1___aldiv 00CC  
              __size_ofi1___awdiv 0084                   __initialization 22A2  
                     log@exponent 00AC                      __end_of_main 0AFE  
                    __end_of_font 080B             __end_of_sample_inputs 21D8  
                          ??_main 00CF                     __activetblptr 000002  
                       ??_ISR_low 0060                            _CCP1IE 007CEA  
                          _CCP1IF 007CF2                            _CCP1IP 007CFA  
                 _climate_control 00E8                            ?_frexp 0076  
                          ?_error 0001                    buzzer@duration 001F  
                          _EEDATA 000FA8                            _EECON2 000FA7  
                          _T08BIT 007EAE                  ___awdiv@dividend 0076  
                          ?_setup 0001                  __end_of___awtoft 23D4  
                __end_of___ftpack 1538                            _T1RD16 007E6F  
                          i1l3210 1CCE                            i1l3220 1D64  
                          i1l3212 1CEC                            i1l3214 1D0A  
                          i1l3216 1D28                            i1l2424 0274  
                          i1l3170 2212                            i1l3162 21F8  
                          i1l3218 1D46                            i1l3250 1C5E  
                          i1l3242 1BFA                            i1l3252 1C7C  
                          i1l3244 1C04                            i1l3500 038C  
                          i1l3182 223E                            i1l3174 2226  
                          i1l3166 2206                            i1l3158 21EC  
                          i1l3270 1B58                            i1l3254 1C9A  
                          i1l3246 1C22                            i1l3430 00E6  
                          i1l3414 00A4                            i1l3168 220E  
                          i1l3280 1B8A                            i1l3264 1B40  
                          i1l3248 1C40                            i1l3416 00B0  
                          i1l3440 0132                            i1l3178 2230  
                          i1l3442 0140                            i1l3418 00C8  
                          i1l3276 1B7A                            i1l3292 1BC8  
                          i1l3460 0198                            i1l3278 1B86  
                          i1l2910 2088                            i1l3470 025C  
                          i1l3454 016C                            i1l3438 00F6  
                          i1l3296 1BDE                            i1l3288 1BBA  
                          i1l2920 20AA                            i1l2904 2078  
                          i1l3472 0264                            i1l3448 0158  
                          i1l3482 0330                            i1l3458 0190  
                          i1l2916 209E                            i1l2932 20D0  
                          i1l2918 20A6                            i1l3486 0340  
                          i1l2936 20DE                            i1l2928 20C6  
                          i1l3488 0344                            i2l3130 1FFA  
                          i2l3122 1FD4                            i1l3498 0372  
                          i2l3132 2006                            i2l3134 200A  
                          i2l3142 203C                            i2l3126 1FE8  
                          i2l3146 2052                            i2l3138 202E  
                          _INTSRC 007CDF                  __end_of___lwtoft 24D6  
                     ?i1_set_LEDs 0001                            _TMR0IE 007F95  
                          _TMR0IF 007F92                            _TMR1IE 007CE8  
                          _TMR1IF 007CF0                            _TMR1CS 007E69  
                          _TMR2IE 007CE9                            _TMR2IF 007CF1  
                          _TMR3IF 007D09                            _TMR1IP 007CF8  
                          _TMR2IP 007CF9                            _TMR0ON 007EAF  
                          _TMR3IP 007D11                            _TMR1ON 007E68  
                          _TMR2ON 007E52                            _TMR3ON 007D88  
                          _TRISA0 007C90                            _TRISB0 007C98  
                          _TRISA2 007C92                            _TRISB1 007C99  
                          _TRISA3 007C93                            _TRISC0 007CA0  
                          _TRISB2 007C9A                            _TRISA4 007C94  
                          _TRISC1 007CA1                            _TRISB3 007C9B  
                          _TRISA5 007C95                            _TRISC2 007CA2  
                          _TRISB4 007C9C                            _TRISA6 007C96  
                          _TRISB5 007C9D                            _SWDTEN 007E88  
           __end_of_ee_write_byte 2558                  __end_of_get_temp 0F18  
                          ___ftge 1D84                         ??___aldiv 007E  
          ?_set_key_led_disp_tris 0001                         ??___almod 0009  
                          ___wmul 2416                         ??___awdiv 007A  
                       ??___ftadd 0088                         ??___awmod 0023  
                       ??___ftdiv 00B4                         ??___ftneg 0079  
         __end_ofi2_ee_write_byte 2574                         ??___ftmul 0094  
                          _buzzer 258E                            clear_0 22D8  
                ___awdiv@quotient 007C                   ___awmod@divisor 0021  
                 ___awmod@counter 0023                  __end_of_set_LEDs 1944  
           __size_of_ee_read_byte 000E                 __end_ofi1___aldiv 1BF0  
           ___ftmul@f3_as_product 0098                 __end_ofi1___awdiv 20E8  
                          error@i 0081                      __pdataCOMRAM 003B  
                    ?_num_to_disp 0001                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                __end_of_setup_io 258E                            tblptru 000FF8  
                ??_setup_watchdog 0076                      ?_setup_therm 0001  
                __end_oflog@coeff 0826                        __accesstop 0060  
         __end_of__initialization 22E6                   __CFG_PBADEN$OFF 000000  
                      ___ftadd@f1 0082                        ___ftadd@f2 0085  
                      ___ftge@ff1 0082                        ___ftge@ff2 0085  
                    eval_poly@res 00A6                     ___rparam_used 000001  
                      ___ftdiv@f1 00AE                        ___ftdiv@f2 00B1  
                      ___ftdiv@f3 00B8                        ___ftneg@f1 0076  
                      ___awtoft@c 007E                        ___ftmul@f1 008E  
                      ___ftmul@f2 0091                    __pcstackCOMRAM 0001  
                    _ee_read_byte 25B4                      __pidataBANK0 25CA  
                       ?_ISR_high 0001                     __end_of_frexp 1FB8  
                   __end_of_error 1A38                     __end_of_setup 247C  
                      ___lwtoft@c 007E               __size_ofi1_set_LEDs 00CA  
                         ??_frexp 007B                           ??_error 007F  
               i1___aldiv@divisor 0023                           ??_setup 007A  
               i1___aldiv@counter 0027                        __pbssBANK0 00D4  
              __size_of_eval_poly 00EC                           ?___ftge 0082  
                         ?___wmul 0076                        ??_ISR_high 000B  
                ?i2_ee_write_byte 0001                           ?_buzzer 0001  
                       ?___awtoft 007E                         ?___ftpack 0076  
              __size_of_set_digit 0102                           _T1CKPS0 007E6C  
                         _T1CKPS1 007E6D                           _T2CKPS0 007E50  
                         _T2CKPS1 007E51                         ?___lwtoft 007E  
              i1___awdiv@dividend 001F          set_key_led_disp_tris@dir 0076  
                         _ISR_low 0018                         ?_get_temp 00BD  
                    ?i1_set_digit 0001                         ?_set_LEDs 0001  
                         __Hparam 0000                           __Lparam 0000  
              i1___awdiv@quotient 0025                        _cur_number 003B  
                         ___aldiv 1312                         ?_setup_io 0001  
                         ___almod 1FB8                   __size_of___ftge 00C8  
                         ___awdiv 1E4C                           ___ftadd 0AFE  
                         ___awmod 21D8                           ___ftdiv 11C6  
                         ___ftneg 247C                   __size_of___wmul 0036  
                         ___ftmul 0F18                       ISR_high@tmp 001D  
                    __psmallconst 0800                           __pcinit 22A2  
                      ??___awtoft 0081                        ??___ftpack 007B  
               __end_of_eval_poly 1B24        i1set_key_led_disp_tris@dir 001F  
                 __size_of_buzzer 0014                           __ramtop 0800  
                         __ptext0 0828                           __ptext1 244C  
                         __ptext2 25C2                           __ptext3 24FE  
                         __ptext4 23D4                           __ptext5 251C  
                         __ptext6 24D6                           __ptext7 2574  
                         __ptext8 25A2                           __ptext9 0D66  
                      ??___lwtoft 0081                        _night_hour 00E0  
                    __size_of_log 0150                        _night_temp 00E1  
                ___awmod@dividend 001F                  ___aldiv@dividend 0076  
            __size_of_num_to_disp 0080                        ??_get_temp 00C0  
                  __pintcode_body 1746              end_of_initialization 22E6  
          __size_of_ee_read_state 010C          ?i1_set_key_led_disp_tris 0001  
                    ??i1_set_LEDs 0027                 __end_of_set_digit 1746  
                   __Lmediumconst 0000                           int_func 1746  
            __size_of_setup_therm 0028                        ??_set_LEDs 007E  
         ??_set_key_led_disp_tris 0076                      _get_temp$980 00C3  
                    _get_temp$981 00C6                  ___aldiv@quotient 0080  
                         postdec2 000FDD                        ??_setup_io 0076  
                         postinc0 000FEE                           postinc2 000FDE  
          __size_of_ee_save_state 0052                         _PORTBbits 000F81  
                   ?_setup_eeprom 0001                __end_ofi1_set_LEDs 1D84  
                   ?_setup_timer0 0001                     ?_setup_timer1 0001  
                   ?_setup_timer2 0001                         i1___aldiv 1B24  
                       i1___awdiv 2064            __size_of_sample_inputs 0070  
                     ___ftdiv@exp 00BB               i2ee_write_byte@addr 0002  
             i2ee_write_byte@data 0001                get_temp@resistance 00CC  
                     ___ftmul@exp 0097                   setup_timer1@tmp 0078  
                  __end_of___ftge 1E4C                     _ee_read_state 1538  
                  __end_of___wmul 244C                     __pidataCOMRAM 25C8  
               __size_of_ISR_high 183E                    ??_setup_eeprom 0076  
                  __end_of_buzzer 25A2                    ??_setup_timer0 0076  
                  ??_setup_timer1 0076                    ??_setup_timer2 0076  
             start_initialization 22A2                        eval_poly@d 00A0  
                      eval_poly@n 00A2                        eval_poly@x 009D  
 __end_ofi1_set_key_led_disp_tris 2390                        ?i1___aldiv 001F  
                     __end_of_log 11C6                        ?i1___awdiv 001F  
          __size_of_ee_write_byte 001E                     _ee_save_state 22F4  
                      frexp@value 0076              __size_ofi1_set_digit 00CA  
                        ??___ftge 0088                          ??___wmul 007A  
                  ?_ee_read_state 0001                       __pdataBANK0 00E8  
                __CFG_LPT1OSC$OFF 000000                i1___aldiv@dividend 001F  
                        ??_buzzer 001F                     _sample_inputs 2168  
                    set_LEDs@mask 007E                 __size_of___awtoft 0044  
               __size_of___ftpack 010C                       __pbssCOMRAM 0038  
               __size_of___lwtoft 002A                     __pcstackBANK0 0060  
                        ?_ISR_low 0001                  ISR_low@mask_leds 002F  
                  ?_ee_save_state 0001                 __size_of_get_temp 01B2  
              i1___aldiv@quotient 0029                         __pnvBANK0 00E3  
                     _fan_timeout 00DE                 __size_of_set_LEDs 00FE  
                       __pintcode 0008           __size_of_setup_watchdog 0006  
                        ?___aldiv 0076                     _ee_write_byte 253A  
                        ?___almod 0001                          ?___awdiv 0076  
                        ?___ftadd 0082                          ?___awmod 001F  
                        ?___ftdiv 00AE                          ?___ftneg 0076  
                        ?___ftmul 008E                         _heat_mode 00E9  
                  ?_sample_inputs 0001                          ISR_low@i 0032  
               i1___awdiv@divisor 0021                       __pintcodelo 0018  
               __size_of_setup_io 001A                 i1___awdiv@counter 0023  
                ___almod@dividend 0001                       __smallconst 0800  
               _ee_read_state$350 007E                 _ee_read_state$351 0080  
               _ee_read_state$346 0078                 _ee_read_state$347 007A  
               _ee_read_state$348 007C                    i1set_LEDs@mask 0027  
                       _eval_poly 1A38          __size_ofi2_ee_write_byte 001C  
                 get_temp@voltage 00C9                       ??i1___aldiv 0027  
                     ??i1___awdiv 0023                    __size_of_frexp 00AE  
                  __size_of_error 00F4                    __size_of_setup 0030  
                      ISR_low@cur 0038                        ISR_low@ins 0031  
                 ___aldiv@divisor 007A                          _T2OUTPS0 007E53  
                        _T2OUTPS1 007E54                          _T2OUTPS2 007E55  
                        _T2OUTPS3 007E56                   ___aldiv@counter 007E  
                  ___wmul@product 007A              __end_of_setup_eeprom 25B4  
               ee_read_state@mode 0082                          i1u410_20 1D26  
                        i1u412_20 1D44                          i1u404_20 1CCC  
                        i1u421_20 1C20                          i1u350_20 2378  
                        i1u342_20 2350                          i1u414_20 1D62  
                        i1u406_20 1CEA                          i1u431_20 1CB6  
                        i1u423_20 1C3E                          i1u351_25 237A  
                        i1u343_25 2352                          i1u352_20 2382  
                        i1u344_20 235A                          i1u416_20 1D80  
                        i1u408_20 1D08                          i1u425_20 1C5C  
                        i1u353_25 2384                          i1u345_25 235C  
                        i1u354_20 238C                          i1u346_20 2364  
                        i1u427_20 1C7A                          i1u419_20 1C02  
                        i1u347_25 2366                          i1u348_20 236E  
                        i1u380_20 21CA                          i1u380_26 21CC  
                        i1u381_20 259E                          i1u429_20 1C98  
                        i1u349_25 2370                          i1u375_20 217A  
                        i1u375_26 217C                          i1u376_20 218A  
                        i1u376_26 218C                          i1u377_20 219A  
                        i1u465_20 00A0              __end_of_setup_timer0 253A  
            __end_of_setup_timer1 2416              __end_of_setup_timer2 251C  
                        i1u377_26 219C                          i1u378_20 21AA  
                        i1u378_26 21AC                          i1u379_20 21BA  
                        i1u467_20 00C4                          i1u379_26 21BC  
                       _set_digit 1644                   ??_ee_read_state 0077  
  __size_of_set_key_led_disp_tris 005A                    ?_ee_write_byte 0076  
   __end_of_set_key_led_disp_tris 22A2                  __CFG_WDTPS$32768 000000  
                       _temp_want 00E7                          _ISR_high 0008  
__size_ofi1_set_key_led_disp_tris 004A                         _timer_led 01B9  
                       _power_led 01B8                 ___wmul@multiplier 0076  
                      ?_eval_poly 009D                     ??_num_to_disp 0076  
                 ??_ee_save_state 0078                  __size_of_ISR_low 0402  
                   ??_setup_therm 0076                         frexp@eptr 0079  
                        __Hrparam 0000                        ?_set_digit 0001  
                       error@code 0080                          __Lrparam 0000  
                   ?_ee_read_byte 0001                   ??_sample_inputs 0020  
                ee_read_byte@addr 0076                  __size_of___aldiv 011A  
                __size_of___almod 00AC                  __size_of___awdiv 00BE  
                __size_of___ftadd 0268                  __size_of___awmod 0070  
                __size_of___ftdiv 014C                  __size_of___ftneg 0030  
                __size_of___ftmul 015E                          ___awtoft 2390  
                        ___ftpack 142C             __CFG_FOSC$INTOSCIO_EC 000000  
                        ___lwtoft 24AC                   ISR_low@ins_prev 0039  
               ee_write_byte@addr 0077                 ee_write_byte@data 0076  
                        _day_hour 00DC                          _day_temp 00DD  
                    set_digit@dig 007E                          __ptext10 1076  
                        __ptext11 1F0A                          __ptext20 142C  
                        __ptext12 1A38                          __ptext21 1944  
                        __ptext13 2416                          __ptext30 25B4  
                        __ptext22 1644                          __ptext14 0F18  
                        __ptext31 1D84                          __ptext23 1846  
                        __ptext15 0AFE                          __ptext40 258E  
                        __ptext32 1312                          __ptext24 2248  
                        __ptext16 2390                          __ptext41 21D8  
                        __ptext25 1E4C                          __ptext17 24AC  
                        __ptext34 1BF0                          __ptext26 20E8  
                        __ptext18 247C                          __ptext43 2558  
                        __ptext35 1CBA                          __ptext27 22F4  
                        __ptext19 11C6                          __ptext44 1FB8  
                        __ptext36 2064                          __ptext28 253A  
                        __ptext37 1B24                          __ptext29 1538  
                        __ptext38 2168                          __ptext39 2346  
                        _heat_cur 00DF                          _get_temp 0D66  
                 ___almod@divisor 0005                   ___almod@counter 0009  
               ??i2_ee_write_byte 0002               __end_of_num_to_disp 2168  
                   __size_of_main 02D6                          _set_LEDs 1846  
                 ??_ee_write_byte 0077                    ??_ee_read_byte 0076  
             __end_of_setup_therm 24FE                          _temp_cur 00D4  
                  _setup_watchdog 25C2                          _setup_io 2574  
                        int$flags 003D                          log@coeff 080B  
                     ??_eval_poly 00A4                    i1set_digit@dig 0027  
           __size_of_setup_eeprom 0012                          intlevel1 0000  
                        intlevel2 0000                     ??i1_set_digit 0027  
           __size_of_setup_timer0 001E             __size_of_setup_timer1 0042  
           __size_of_setup_timer2 001E                       _ISR_low$365 0033  
                     _ISR_low$366 0035                       _ISR_low$367 002D  
                     _ISR_low$368 0030            __end_of_setup_watchdog 25C8  
                     ??_set_digit 007E           i1_set_key_led_disp_tris 2346  
                    _setup_eeprom 25A2                       _num_to_disp 20E8  
                    ___aldiv@sign 007F                      _setup_timer0 251C  
                    _setup_timer1 23D4                      _setup_timer2 24FE  
                  num_to_disp@ret 0076                    num_to_disp@num 0077  
                    ___almod@sign 000A                       _setup_therm 24D6  
                sample_inputs@ret 0020                   ?_setup_watchdog 0001  
             __end_ofi1_set_digit 1CBA  
